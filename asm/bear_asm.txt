Resident data ends at 4644, program starts at 4644, file ends at 1aaac

Starting analysis pass at address 4643

End of analysis pass, low address = 4644, high address = 114b8

[Start of code]

Main routine R0001, 0 locals

       CALL_VS         R0002 -> Gef
       QUIT            

Routine R0002, 0 locals

       CALL_VN         R0486 (#0016,#0049)
       RTRUE           

Routine R0003, 0 locals

       RTRUE           

Routine R0004, 1 local

       LOADB           L00,#00 -> -(SP)
       PULL            Gef
       JE              Gef,#61,#65,#69 [TRUE] L0001
       JE              Gef,#6f,#75,#41 [TRUE] L0001
       JE              Gef,#45,#49,#4f [TRUE] L0001
       JE              Gef,#55 [FALSE] L0002
L0001: RTRUE           
L0002: RFALSE          

Routine R0005, 1 local

       STORE           Gef,L00
       JE              Gef,#07 [FALSE] L0001
       PRINT           "north"
       JUMP            L0013
L0001: JE              Gef,#08 [FALSE] L0002
       PRINT           "south"
       JUMP            L0013
L0002: JE              Gef,#09 [FALSE] L0003
       PRINT           "east"
       JUMP            L0013
L0003: JE              Gef,#0a [FALSE] L0004
       PRINT           "west"
       JUMP            L0013
L0004: JE              Gef,#0b [FALSE] L0005
       PRINT           "northeast"
       JUMP            L0013
L0005: JE              Gef,#0d [FALSE] L0006
       PRINT           "northwest"
       JUMP            L0013
L0006: JE              Gef,#0c [FALSE] L0007
       PRINT           "southeast"
       JUMP            L0013
L0007: JE              Gef,#0e [FALSE] L0008
       PRINT           "southwest"
       JUMP            L0013
L0008: JE              Gef,#0f [FALSE] L0009
       PRINT           "up"
       JUMP            L0013
L0009: JE              Gef,#10 [FALSE] L0010
       PRINT           "down"
       JUMP            L0013
L0010: JE              Gef,#11 [FALSE] L0011
       PRINT           "in"
       JUMP            L0013
L0011: JE              Gef,#12 [FALSE] L0012
       PRINT           "out"
       JUMP            L0013
L0012: CALL_VS         R0113 (#09,L00) -> -(SP)
       RET_POPPED      
L0013: RTRUE           

Routine R0006, 2 locals

       JZ              L00 [FALSE] L0001
       PRINT           "zero"
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       PRINT           "minus "
       SUB             #00,L00 -> L00
L0002: JL              L00,#03e8 [TRUE] L0003
       DIV             L00,#03e8 -> -(SP)
       CALL_2N         R0006 ((SP)+)
       PRINT           " thousand"
       MOD             L00,#03e8 -> L00
       STORE           L01,#01
L0003: JL              L00,#64 [TRUE] L0005
       JE              L01,#01 [FALSE] L0004
       PRINT           ", "
L0004: DIV             L00,#64 -> -(SP)
       CALL_2N         R0006 ((SP)+)
       PRINT           " hundred"
       MOD             L00,#64 -> L00
       STORE           L01,#01
L0005: JZ              L00 [TRUE] RFALSE
       JE              L01,#01 [FALSE] L0006
       PRINT           " and "
L0006: STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0007
       PRINT           "one"
       JUMP            L0034
L0007: JE              Gef,#02 [FALSE] L0008
       PRINT           "two"
       JUMP            L0034
L0008: JE              Gef,#03 [FALSE] L0009
       PRINT           "three"
       JUMP            L0034
L0009: JE              Gef,#04 [FALSE] L0010
       PRINT           "four"
       JUMP            L0034
L0010: JE              Gef,#05 [FALSE] L0011
       PRINT           "five"
       JUMP            L0034
L0011: JE              Gef,#06 [FALSE] L0012
       PRINT           "six"
       JUMP            L0034
L0012: JE              Gef,#07 [FALSE] L0013
       PRINT           "seven"
       JUMP            L0034
L0013: JE              Gef,#08 [FALSE] L0014
       PRINT           "eight"
       JUMP            L0034
L0014: JE              Gef,#09 [FALSE] L0015
       PRINT           "nine"
       JUMP            L0034
L0015: JE              Gef,#0a [FALSE] L0016
       PRINT           "ten"
       JUMP            L0034
L0016: JE              Gef,#0b [FALSE] L0017
       PRINT           "eleven"
       JUMP            L0034
L0017: JE              Gef,#0c [FALSE] L0018
       PRINT           "twelve"
       JUMP            L0034
L0018: JE              Gef,#0d [FALSE] L0019
       PRINT           "thirteen"
       JUMP            L0034
L0019: JE              Gef,#0e [FALSE] L0020
       PRINT           "fourteen"
       JUMP            L0034
L0020: JE              Gef,#0f [FALSE] L0021
       PRINT           "fifteen"
       JUMP            L0034
L0021: JE              Gef,#10 [FALSE] L0022
       PRINT           "sixteen"
       JUMP            L0034
L0022: JE              Gef,#11 [FALSE] L0023
       PRINT           "seventeen"
       JUMP            L0034
L0023: JE              Gef,#12 [FALSE] L0024
       PRINT           "eighteen"
       JUMP            L0034
L0024: JE              Gef,#13 [FALSE] L0025
       PRINT           "nineteen"
       JUMP            L0034
L0025: JL              Gef,#14 [TRUE] L0034
       JG              Gef,#63 [TRUE] L0034
       DIV             L00,#0a -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0026
       PRINT           "twenty"
       JUMP            L0033
L0026: JE              Gef,#03 [FALSE] L0027
       PRINT           "thirty"
       JUMP            L0033
L0027: JE              Gef,#04 [FALSE] L0028
       PRINT           "forty"
       JUMP            L0033
L0028: JE              Gef,#05 [FALSE] L0029
       PRINT           "fifty"
       JUMP            L0033
L0029: JE              Gef,#06 [FALSE] L0030
       PRINT           "sixty"
       JUMP            L0033
L0030: JE              Gef,#07 [FALSE] L0031
       PRINT           "seventy"
       JUMP            L0033
L0031: JE              Gef,#08 [FALSE] L0032
       PRINT           "eighty"
       JUMP            L0033
L0032: JE              Gef,#09 [FALSE] L0033
       PRINT           "ninety"
L0033: MOD             L00,#0a -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       PRINT           "-"
       MOD             L00,#0a -> -(SP)
       CALL_2N         R0006 ((SP)+)
L0034: RTRUE           

Routine R0007, 3 locals

       MOD             L00,#0c -> L02
       JZ              L02 [FALSE] L0001
       STORE           L02,#0c
L0001: JL              L02,#0a [FALSE] L0002
       PRINT           " "
L0002: PRINT_NUM       L02
       PRINT           ":"
       DIV             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       MOD             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       DIV             L00,#0c -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       PRINT           " pm"
       JUMP            L0004
L0003: PRINT           " am"
L0004: RTRUE           

Routine R0008, 1 local

       JE              L00,"l" [FALSE] L0001
       PRINT           "look"
       RTRUE           
L0001: JE              L00,"z" [FALSE] L0002
       PRINT           "wait"
       RTRUE           
L0002: JE              L00,"x" [FALSE] L0003
       PRINT           "examine"
       RTRUE           
L0003: JE              L00,"i","inv","inventory" [FALSE] L0004
       PRINT           "inventory"
       RTRUE           
L0004: RFALSE          

Routine R0009, 1 local

       JE              L00,G12 [FALSE] L0001
       PRINT           "you"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "those"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "her"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "him"
       RTRUE           
L0004: PRINT           "that"
       RTRUE           

Routine R0010, 1 local

       JE              L00,G12 [FALSE] L0001
       PRINT           "yourself"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "them"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "her"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "him"
       RTRUE           
L0004: PRINT           "it"
       RTRUE           

Routine R0011, 1 local

       TEST_ATTR       L00,#1e [TRUE] L0001
       JE              L00,G12 [FALSE] L0002
L0001: PRINT           "are"
       JUMP            L0003
L0002: PRINT           "is"
L0003: RTRUE           

Routine R0012, 1 local

       JE              L00,G12 [FALSE] L0001
       PRINT           "You"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "Those"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "She"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "He"
       RTRUE           
L0004: PRINT           "That"
       RTRUE           

Routine R0013, 1 local

       JE              L00,G12 [FALSE] L0001
       PRINT           "You're"
       RTRUE           
L0001: TEST_ATTR       L00,#1e [FALSE] L0002
       PRINT           "They're"
       RTRUE           
L0002: TEST_ATTR       L00,#00 [FALSE] L0004
       TEST_ATTR       L00,#1c [FALSE] L0003
       PRINT           "She's"
       RTRUE           
L0003: TEST_ATTR       L00,#1d [TRUE] L0004
       PRINT           "He's"
       RTRUE           
L0004: PRINT           "That's"
       RTRUE           

Routine R0014, 2 locals

       JE              Ge9,#1008 [FALSE] L0001
       PRINT           "
>"
       RTRUE           
L0001: JE              Ge9,#1007 [FALSE] L0066
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S043
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "Nothing to do!"
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT           " You have died "
       JUMP            L0065
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT           " You have won "
       JUMP            L0065
L0005: JE              Gef,#05 [FALSE] L0008
       PRINT_PADDR     S044
       JZ              #0000 [FALSE] L0006
       PRINT_PADDR     S045
L0006: JE              G13,#02 [FALSE] L0007
       JZ              #0000 [FALSE] L0007
       PRINT_PADDR     S046
L0007: PRINT_RET       " or QUIT?"
L0008: JE              Gef,#06 [FALSE] L0009
       PRINT_PADDR     S047
       NEW_LINE        
       RTRUE           
L0009: JE              Gef,#07 [FALSE] L0010
       PRINT_PADDR     S048
       NEW_LINE        
       RTRUE           
L0010: JE              Gef,#08 [FALSE] L0011
       PRINT_PADDR     S049
       NEW_LINE        
       RTRUE           
L0011: JE              Gef,#09 [FALSE] L0012
       PRINT_RET       "
It is now pitch dark in here!"
L0012: JE              Gef,#0a [FALSE] L0013
       PRINT_RET       "I beg your pardon?"
L0013: JE              Gef,#0b [FALSE] L0014
       PRINT_PADDR     S050
       NEW_LINE        
       RTRUE           
L0014: JE              Gef,#0c [FALSE] L0015
       PRINT_PADDR     S051
       NEW_LINE        
       RTRUE           
L0015: JE              Gef,#0d [FALSE] L0016
       PRINT_RET       "[Previous turn undone.]"
L0016: JE              Gef,#0e [FALSE] L0017
       PRINT_RET       "Sorry, that can't be corrected."
L0017: JE              Gef,#0f [FALSE] L0018
       PRINT_RET       "Think nothing of it."
L0018: JE              Gef,#10 [FALSE] L0019
       PRINT_PADDR     S052
       NEW_LINE        
       RTRUE           
L0019: JE              Gef,#11 [FALSE] L0020
       PRINT_PADDR     S053
       NEW_LINE        
       RTRUE           
L0020: JE              Gef,#12 [FALSE] L0021
       PRINT           "yourself"
       JUMP            L0065
L0021: JE              Gef,#13 [FALSE] L0022
       PRINT_RET       "As good-looking as ever."
L0022: JE              Gef,#14 [FALSE] L0023
       PRINT_PADDR     S054
       NEW_LINE        
       RTRUE           
L0023: JE              Gef,#15 [FALSE] L0024
       PRINT_RET       "You can hardly repeat that."
L0024: JE              Gef,#16 [FALSE] L0025
       PRINT_RET       "You can't begin with a comma."
L0025: JE              Gef,#17 [FALSE] L0026
       PRINT_PADDR     S055
       NEW_LINE        
       RTRUE           
L0026: JE              Gef,#18 [FALSE] L0027
       PRINT           "You can't talk to "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0027: JE              Gef,#19 [FALSE] L0028
       PRINT_PADDR     S056
       NEW_LINE        
       RTRUE           
L0028: JE              Gef,#1a [FALSE] L0029
       PRINT           "(first taking "
       CALL_2N         R0104 (G41)
       PRINT_RET       ")"
L0029: JE              Gef,#1b [FALSE] L0030
       PRINT_PADDR     S057
       NEW_LINE        
       RTRUE           
L0030: JE              Gef,#1c [FALSE] L0031
       PRINT_PADDR     S058
       JUMP            L0065
L0031: JE              Gef,#1d [FALSE] L0032
       PRINT_RET       "I didn't understand that number."
L0032: JE              Gef,#1e [FALSE] L0033
       PRINT_RET       "You can't see any such thing."
L0033: JE              Gef,#1f [FALSE] L0034
       PRINT_PADDR     S059
       NEW_LINE        
       RTRUE           
L0034: JE              Gef,#20 [FALSE] L0035
       PRINT_RET       "You aren't holding that!"
L0035: JE              Gef,#21 [FALSE] L0036
       PRINT_PADDR     S060
       NEW_LINE        
       RTRUE           
L0036: JE              Gef,#22 [FALSE] L0037
       PRINT_PADDR     S061
       NEW_LINE        
       RTRUE           
L0037: JE              Gef,#23 [FALSE] L0038
       PRINT           "I'm not sure what ""
       PRINT_ADDR      G66
       PRINT_RET       "" refers to."
L0038: JE              Gef,#24 [FALSE] L0039
       PRINT_PADDR     S062
       NEW_LINE        
       RTRUE           
L0039: JE              Gef,#25 [FALSE] L0040
       PRINT_PADDR     S063
       NEW_LINE        
       RTRUE           
L0040: JE              Gef,#26 [FALSE] L0041
       PRINT_RET       "That's not a verb I recognise."
L0041: JE              Gef,#27 [FALSE] L0042
       PRINT_PADDR     S064
       NEW_LINE        
       RTRUE           
L0042: JE              Gef,#28 [FALSE] L0043
       PRINT           "You can't see ""
       PRINT_ADDR      G66
       PRINT           "" ("
       CALL_2N         R0104 (G67)
       PRINT_RET       ") at the moment."
L0043: JE              Gef,#29 [FALSE] L0044
       PRINT_PADDR     S065
       NEW_LINE        
       RTRUE           
L0044: JE              Gef,#2a [FALSE] L0049
       JZ              L01 [FALSE] L0045
       PRINT           "None"
       JUMP            L0046
L0045: PRINT           "Only "
       CALL_2N         R0107 (L01)
L0046: PRINT           " of those "
       JE              L01,#01 [FALSE] L0047
       PRINT           "is"
       JUMP            L0048
L0047: PRINT           "are"
L0048: PRINT_RET       " available."
L0049: JE              Gef,#2b [FALSE] L0050
       PRINT_RET       "Nothing to do!"
L0050: JE              Gef,#2c [FALSE] L0051
       PRINT_RET       "There are none at all available!"
L0051: JE              Gef,#2d [FALSE] L0052
       PRINT           "Who do you mean, "
       JUMP            L0065
L0052: JE              Gef,#2e [FALSE] L0053
       PRINT           "Which do you mean, "
       JUMP            L0065
L0053: JE              Gef,#2f [FALSE] L0054
       PRINT_PADDR     S066
       NEW_LINE        
       RTRUE           
L0054: JE              Gef,#30 [FALSE] L0056
       PRINT           "Whom do you want"
       JE              G35,G12 [TRUE] L0055
       PRINT           " "
       CALL_2N         R0104 (G35)
L0055: PRINT           " to "
       CALL_1N         R0036
       PRINT           "?
"
       JUMP            L0065
L0056: JE              Gef,#31 [FALSE] L0058
       PRINT           "What do you want"
       JE              G35,G12 [TRUE] L0057
       PRINT           " "
       CALL_2N         R0104 (G35)
L0057: PRINT           " to "
       CALL_1N         R0036
       PRINT           "?
"
       JUMP            L0065
L0058: JE              Gef,#32 [FALSE] L0062
       PRINT           "Your score has just gone "
       JG              L01,#00 [FALSE] L0059
       PRINT           "up"
       JUMP            L0060
L0059: SUB             #00,L01 -> L01
       PRINT           "down"
L0060: PRINT           " by "
       CALL_2N         R0107 (L01)
       PRINT           " point"
       JG              L01,#01 [FALSE] L0061
       PRINT           "s"
L0061: JUMP            L0065
L0062: JE              Gef,#33 [FALSE] L0063
       PRINT_PADDR     S067
       NEW_LINE        
       RTRUE           
L0063: JE              Gef,#34 [FALSE] L0064
       PRINT           "
Type a number from 1 to "
       PRINT_NUM       L01
       PRINT_RET       ", 0 to redisplay or press ENTER."
L0064: JE              Gef,#35 [FALSE] L0065
       PRINT_RET       "
[Please press SPACE.]"
L0065: RTRUE           
L0066: JE              Ge9,#1006 [FALSE] L0089
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0067
       PRINT           " (providing light)"
       JUMP            L0088
L0067: JE              Gef,#02 [FALSE] L0068
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " closed)"
       JUMP            L0088
L0068: JE              Gef,#03 [FALSE] L0069
       PRINT           " (closed and providing light)"
       JUMP            L0088
L0069: JE              Gef,#04 [FALSE] L0070
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " empty)"
       JUMP            L0088
L0070: JE              Gef,#05 [FALSE] L0071
       PRINT           " (empty and providing light)"
       JUMP            L0088
L0071: JE              Gef,#06 [FALSE] L0072
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " closed and empty)"
       JUMP            L0088
L0072: JE              Gef,#07 [FALSE] L0073
       PRINT_PADDR     S068
       JUMP            L0088
L0073: JE              Gef,#08 [FALSE] L0074
       PRINT           " (providing light and being worn"
       JUMP            L0088
L0074: JE              Gef,#09 [FALSE] L0075
       PRINT           " (providing light"
       JUMP            L0088
L0075: JE              Gef,#0a [FALSE] L0076
       PRINT           " (being worn"
       JUMP            L0088
L0076: JE              Gef,#0b [FALSE] L0077
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " "
       JUMP            L0088
L0077: JE              Gef,#0c [FALSE] L0078
       PRINT           "open"
       JUMP            L0088
L0078: JE              Gef,#0d [FALSE] L0079
       PRINT           "open but empty"
       JUMP            L0088
L0079: JE              Gef,#0e [FALSE] L0080
       PRINT           "closed"
       JUMP            L0088
L0080: JE              Gef,#0f [FALSE] L0081
       PRINT           "closed and locked"
       JUMP            L0088
L0081: JE              Gef,#10 [FALSE] L0082
       PRINT           " and empty"
       JUMP            L0088
L0082: JE              Gef,#11 [FALSE] L0083
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " empty)"
       JUMP            L0088
L0083: JE              Gef,#12 [FALSE] L0084
       PRINT           " containing "
       JUMP            L0088
L0084: JE              Gef,#13 [FALSE] L0085
       PRINT           " (on "
       JUMP            L0088
L0085: JE              Gef,#14 [FALSE] L0086
       PRINT           ", on top of "
       JUMP            L0088
L0086: JE              Gef,#15 [FALSE] L0087
       PRINT           " (in "
       JUMP            L0088
L0087: JE              Gef,#16 [FALSE] L0088
       PRINT           ", inside "
L0088: RTRUE           
L0089: JE              Ge9,#00 [FALSE] L0094
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0090
       PRINT           "At the moment, "
       JUMP            L0093
L0090: JE              Gef,#02 [FALSE] L0091
       PRINT           "means "
       JUMP            L0093
L0091: JE              Gef,#03 [FALSE] L0092
       PRINT           "is unset"
       JUMP            L0093
L0092: JE              Gef,#04 [FALSE] L0093
       PRINT_PADDR     S069
       NEW_LINE        
       RTRUE           
L0093: RTRUE           
L0094: JE              Ge9,#1003 [FALSE] L0097
       CALL_2N         R0105 (L01)
       TEST_ATTR       L01,#1e [FALSE] L0095
       PRINT           " have"
       JUMP            L0096
L0095: PRINT           " has"
L0096: PRINT_RET       " better things to do."
L0097: JE              Ge9,#01 [FALSE] L0100
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0098
       PRINT           "Please answer yes or no."
       JUMP            L0099
L0098: JE              Gef,#02 [FALSE] L0099
       PRINT           "Are you sure you want to quit? "
L0099: RTRUE           
L0100: JE              Ge9,#02 [FALSE] L0103
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0101
       PRINT_PADDR     S070
       JUMP            L0102
L0101: JE              Gef,#02 [FALSE] L0102
       PRINT_RET       "Failed."
L0102: RTRUE           
L0103: JE              Ge9,#03 [FALSE] L0106
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0104
       PRINT_RET       "Restore failed."
L0104: JE              Gef,#02 [FALSE] L0105
       PRINT_RET       "Ok."
L0105: RTRUE           
L0106: JE              Ge9,#04 [FALSE] L0109
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0107
       PRINT_RET       "Save failed."
L0107: JE              Gef,#02 [FALSE] L0108
       PRINT_RET       "Ok."
L0108: RTRUE           
L0109: JE              Ge9,#05 [FALSE] L0112
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0110
       PRINT_PADDR     S071
       NEW_LINE        
       RTRUE           
L0110: JE              Gef,#02 [FALSE] L0111
       PRINT_PADDR     S072
       NEW_LINE        
       RTRUE           
L0111: RTRUE           
L0112: JE              Ge9,#06 [FALSE] L0116
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0113
       PRINT_RET       "Transcripting is already on."
L0113: JE              Gef,#02 [FALSE] L0114
       PRINT_RET       "Start of a transcript of"
L0114: JE              Gef,#03 [FALSE] L0115
       PRINT_PADDR     S073
       NEW_LINE        
       RTRUE           
L0115: RTRUE           
L0116: JE              Ge9,#07 [FALSE] L0120
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0117
       PRINT_RET       "Transcripting is already off."
L0117: JE              Gef,#02 [FALSE] L0118
       PRINT_RET       "
End of transcript."
L0118: JE              Gef,#03 [FALSE] L0119
       PRINT_PADDR     S074
       NEW_LINE        
       RTRUE           
L0119: RTRUE           
L0120: JE              Ge9,#08 [FALSE] L0121
       PRINT_RET       "Score notification on."
L0121: JE              Ge9,#09 [FALSE] L0122
       PRINT_RET       "Score notification off."
L0122: JE              Ge9,#0a [FALSE] L0123
       PRINT           "You have visited: "
       RTRUE           
L0123: JE              Ge9,#0b [FALSE] L0134
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0124
       PRINT_RET       "Objects you have handled:
"
L0124: JE              Gef,#02 [FALSE] L0125
       PRINT_RET       "None."
L0125: JE              Gef,#03 [FALSE] L0126
       PRINT           "   (worn)"
       JUMP            L0133
L0126: JE              Gef,#04 [FALSE] L0127
       PRINT           "   (held)"
       JUMP            L0133
L0127: JE              Gef,#05 [FALSE] L0128
       PRINT           "   (given away)"
       JUMP            L0133
L0128: JE              Gef,#06 [FALSE] L0129
       PRINT           "   (in "
       CALL_2N         R0106 (L01)
       PRINT           ")"
       JUMP            L0133
L0129: JE              Gef,#07 [FALSE] L0130
       PRINT           "   (in "
       CALL_2N         R0104 (L01)
       PRINT           ")"
       JUMP            L0133
L0130: JE              Gef,#08 [FALSE] L0131
       PRINT           "   (inside "
       CALL_2N         R0104 (L01)
       PRINT           ")"
       JUMP            L0133
L0131: JE              Gef,#09 [FALSE] L0132
       PRINT           "   (on "
       CALL_2N         R0104 (L01)
       PRINT           ")"
       JUMP            L0133
L0132: JE              Gef,#0a [FALSE] L0133
       PRINT           "   (lost)"
L0133: RTRUE           
L0134: JE              Ge9,#0c [FALSE] L0138
       JZ              G13 [TRUE] L0135
       PRINT           "In that game you scored "
       JUMP            L0136
L0135: PRINT           "You have so far scored "
L0136: PRINT_NUM       G0d
       PRINT           " out of a possible "
       PRINT_NUM       #0021
       PRINT           ", in "
       PRINT_NUM       G08
       PRINT           " turn"
       JG              G08,#01 [FALSE] L0137
       PRINT           "s"
L0137: RTRUE           
L0138: JE              Ge9,#0d [FALSE] L0145
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0141
       JZ              G13 [TRUE] L0139
       PRINT           "The score was "
       JUMP            L0140
L0139: PRINT           "The score is "
L0140: PRINT_RET       "made up as follows:
"
L0141: JE              Gef,#02 [FALSE] L0142
       PRINT_RET       "finding sundry items"
L0142: JE              Gef,#03 [FALSE] L0143
       PRINT_RET       "visiting various places"
L0143: JE              Gef,#04 [FALSE] L0144
       PRINT           "total (out of "
       PRINT_NUM       #0021
       PRINT_RET       ")"
L0144: RTRUE           
L0145: JE              Ge9,#0e [FALSE] L0148
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0146
       PRINT_RET       "You are carrying nothing."
L0146: JE              Gef,#02 [FALSE] L0147
       PRINT           "You are carrying"
L0147: RTRUE           
L0148: JE              Ge9,#0f [FALSE] L0172
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0149
       PRINT_RET       "Taken."
L0149: JE              Gef,#02 [FALSE] L0150
       PRINT_RET       "You are always self-possessed."
L0150: JE              Gef,#03 [FALSE] L0151
       PRINT           "I don't suppose "
       CALL_2N         R0104 (L01)
       PRINT_RET       " would care for that."
L0151: JE              Gef,#04 [FALSE] L0154
       PRINT           "You'd have to get "
       TEST_ATTR       L01,#14 [FALSE] L0152
       PRINT           "off "
       JUMP            L0153
L0152: PRINT           "out of "
L0153: CALL_2N         R0104 (L01)
       PRINT_RET       " first."
L0154: JE              Gef,#05 [FALSE] L0155
       PRINT           "You already have "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0155: JE              Gef,#06 [FALSE] L0158
       TEST_ATTR       G2b,#1e [FALSE] L0156
       PRINT           "Those seem "
       JUMP            L0157
L0156: PRINT           "That seems "
L0157: PRINT           "to belong to "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0158: JE              Gef,#07 [FALSE] L0161
       TEST_ATTR       G2b,#1e [FALSE] L0159
       PRINT           "Those seem "
       JUMP            L0160
L0159: PRINT           "That seems "
L0160: PRINT           "to be a part of "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0161: JE              Gef,#08 [FALSE] L0162
       CALL_2N         R0012 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       "n't available."
L0162: JE              Gef,#09 [FALSE] L0163
       CALL_2N         R0105 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       "n't open."
L0163: JE              Gef,#0a [FALSE] L0166
       TEST_ATTR       L01,#1e [FALSE] L0164
       PRINT           "They're "
       JUMP            L0165
L0164: PRINT           "That's "
L0165: PRINT_RET       "hardly portable."
L0166: JE              Gef,#0b [FALSE] L0169
       TEST_ATTR       L01,#1e [FALSE] L0167
       PRINT           "They're "
       JUMP            L0168
L0167: PRINT           "That's "
L0168: PRINT_RET       "fixed in place."
L0169: JE              Gef,#0c [FALSE] L0170
       PRINT_PADDR     S075
       NEW_LINE        
       RTRUE           
L0170: JE              Gef,#0d [FALSE] L0171
       PRINT           "(putting "
       CALL_2N         R0104 (L01)
       PRINT           " into "
       CALL_2N         R0104 (#0041)
       PRINT_RET       " to make room)"
L0171: RTRUE           
L0172: JE              Ge9,#10 [FALSE] L0179
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0175
       TEST_ATTR       L01,#1e [FALSE] L0173
       CALL_2N         R0105 (L01)
       PRINT           " are "
       JUMP            L0174
L0173: CALL_2N         R0105 (L01)
       PRINT           " is "
L0174: PRINT_RET       "already here."
L0175: JE              Gef,#02 [FALSE] L0176
       PRINT           "You haven't got "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0176: JE              Gef,#03 [FALSE] L0177
       PRINT           "(first taking "
       CALL_2N         R0104 (L01)
       PRINT_RET       " off)"
L0177: JE              Gef,#04 [FALSE] L0178
       PRINT_RET       "Dropped."
L0178: RTRUE           
L0179: JE              Ge9,#11 [FALSE] L0187
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0182
       TEST_ATTR       L01,#1e [FALSE] L0180
       PRINT           "They are"
       JUMP            L0181
L0180: PRINT           "It is "
L0181: PRINT_RET       " unfortunately closed."
L0182: JE              Gef,#02 [FALSE] L0185
       TEST_ATTR       L01,#1e [FALSE] L0183
       PRINT           "But they aren't"
       JUMP            L0184
L0183: PRINT           "But it isn't"
L0184: PRINT_RET       " there now."
L0185: JE              Gef,#03 [FALSE] L0186
       PRINT_RET       "Removed."
L0186: RTRUE           
L0187: JE              Ge9,#12 [FALSE] L0196
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0188
       PRINT           "You need to be holding "
       CALL_2N         R0104 (L01)
       PRINT           " before you can put "
       CALL_2N         R0010 (L01)
       PRINT_RET       " on top of something else."
L0188: JE              Gef,#02 [FALSE] L0189
       PRINT_PADDR     S076
       NEW_LINE        
       RTRUE           
L0189: JE              Gef,#03 [FALSE] L0190
       PRINT           "Putting things on "
       CALL_2N         R0104 (L01)
       PRINT_RET       " would achieve nothing."
L0190: JE              Gef,#04 [FALSE] L0191
       PRINT_RET       "You lack the dexterity."
L0191: JE              Gef,#05 [FALSE] L0192
       PRINT           "(first taking "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off)
"
L0192: JE              Gef,#06 [FALSE] L0193
       PRINT           "There is no more room on "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0193: JE              Gef,#07 [FALSE] L0194
       PRINT_RET       "Done."
L0194: JE              Gef,#08 [FALSE] L0195
       PRINT           "You put "
       CALL_2N         R0104 (L01)
       PRINT           " on "
       CALL_2N         R0104 (G2c)
       PRINT_RET       "."
L0195: RTRUE           
L0196: JE              Ge9,#13 [FALSE] L0206
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0197
       PRINT           "You need to be holding "
       CALL_2N         R0104 (L01)
       PRINT           " before you can put "
       CALL_2N         R0010 (L01)
       PRINT_RET       " into something else."
L0197: JE              Gef,#02 [FALSE] L0198
       CALL_2N         R0012 (L01)
       PRINT_RET       " can't contain things."
L0198: JE              Gef,#03 [FALSE] L0199
       CALL_2N         R0105 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0199: JE              Gef,#04 [FALSE] L0200
       PRINT           "You'll need to take "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off first."
L0200: JE              Gef,#05 [FALSE] L0201
       PRINT_PADDR     S077
       NEW_LINE        
       RTRUE           
L0201: JE              Gef,#06 [FALSE] L0202
       PRINT           "(first taking "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off)
"
L0202: JE              Gef,#07 [FALSE] L0203
       PRINT           "There is no more room in "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0203: JE              Gef,#08 [FALSE] L0204
       PRINT_RET       "Done."
L0204: JE              Gef,#09 [FALSE] L0205
       PRINT           "You put "
       CALL_2N         R0104 (L01)
       PRINT           " into "
       CALL_2N         R0104 (G2c)
       PRINT_RET       "."
L0205: RTRUE           
L0206: JE              Ge9,#14 [FALSE] L0210
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0207
       CALL_2N         R0105 (L01)
       PRINT_RET       " can't contain things."
L0207: JE              Gef,#02 [FALSE] L0208
       CALL_2N         R0105 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0208: JE              Gef,#03 [FALSE] L0209
       CALL_2N         R0105 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " empty already."
L0209: RTRUE           
L0210: JE              Ge9,#15 [FALSE] L0216
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0211
       PRINT           "You aren't holding "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0211: JE              Gef,#02 [FALSE] L0212
       PRINT           "You juggle "
       CALL_2N         R0104 (L01)
       PRINT_PADDR     S078
       NEW_LINE        
       RTRUE           
L0212: JE              Gef,#03 [FALSE] L0215
       CALL_2N         R0105 (L01)
       TEST_ATTR       L01,#1e [FALSE] L0213
       PRINT           " don't"
       JUMP            L0214
L0213: PRINT           " doesn't"
L0214: PRINT_RET       " seem interested."
L0215: RTRUE           
L0216: JE              Ge9,#16 [FALSE] L0219
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0217
       PRINT           "You aren't holding "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0217: JE              Gef,#02 [FALSE] L0218
       CALL_2N         R0105 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " unimpressed."
L0218: RTRUE           
L0219: JE              Ge9,#17 [FALSE] L0237
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0222
       PRINT           "But you're already "
       TEST_ATTR       L01,#14 [FALSE] L0220
       PRINT           "on "
       JUMP            L0221
L0220: PRINT           "in "
L0221: CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0222: JE              Gef,#02 [FALSE] L0225
       TEST_ATTR       L01,#1e [FALSE] L0223
       PRINT           "They're"
       JUMP            L0224
L0223: PRINT           "That's"
L0224: PRINT_RET       " not something you can enter."
L0225: JE              Gef,#03 [FALSE] L0226
       PRINT           "You can't get into the closed "
       CALL_2N         R0106 (L01)
       PRINT_RET       "."
L0226: JE              Gef,#04 [FALSE] L0227
       PRINT_PADDR     S079
       NEW_LINE        
       RTRUE           
L0227: JE              Gef,#05 [FALSE] L0230
       PRINT           "You get "
       TEST_ATTR       L01,#14 [FALSE] L0228
       PRINT           "onto "
       JUMP            L0229
L0228: PRINT           "into "
L0229: CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0230: JE              Gef,#06 [FALSE] L0233
       PRINT           "(getting "
       TEST_ATTR       L01,#14 [FALSE] L0231
       PRINT           "off "
       JUMP            L0232
L0231: PRINT           "out of "
L0232: CALL_2N         R0104 (L01)
       PRINT_RET       ")"
L0233: JE              Gef,#07 [FALSE] L0236
       TEST_ATTR       L01,#14 [FALSE] L0234
       PRINT           "(getting onto "
       CALL_2N         R0104 (L01)
       PRINT_RET       ")
"
L0234: TEST_ATTR       L01,#04 [FALSE] L0235
       PRINT           "(getting into "
       CALL_2N         R0104 (L01)
       PRINT_RET       ")
"
L0235: PRINT           "(entering "
       CALL_2N         R0104 (L01)
       PRINT_RET       ")
"
L0236: RTRUE           
L0237: JE              Ge9,#18 [FALSE] L0238
       PRINT           "But you aren't on "
       CALL_2N         R0104 (L01)
       PRINT_RET       " at the moment."
L0238: JE              Ge9,#19 [FALSE] L0244
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0239
       PRINT_PADDR     S080
       NEW_LINE        
       RTRUE           
L0239: JE              Gef,#02 [FALSE] L0240
       PRINT           "You can't get out of the closed "
       CALL_2N         R0106 (L01)
       PRINT_RET       "."
L0240: JE              Gef,#03 [FALSE] L0243
       PRINT           "You get "
       TEST_ATTR       L01,#14 [FALSE] L0241
       PRINT           "off "
       JUMP            L0242
L0241: PRINT           "out of "
L0242: CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0243: RTRUE           
L0244: JE              Ge9,#1a [FALSE] L0245
       PRINT_PADDR     S081
       NEW_LINE        
       RTRUE           
L0245: JE              Ge9,#1b [FALSE] L0255
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0248
       PRINT           "You'll have to get "
       TEST_ATTR       L01,#14 [FALSE] L0246
       PRINT           "off "
       JUMP            L0247
L0246: PRINT           "out of "
L0247: CALL_2N         R0104 (L01)
       PRINT_RET       " first."
L0248: JE              Gef,#02 [FALSE] L0249
       PRINT_RET       "You can't go that way."
L0249: JE              Gef,#03 [FALSE] L0250
       PRINT           "You are unable to climb "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0250: JE              Gef,#04 [FALSE] L0251
       PRINT           "You are unable to descend by "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0251: JE              Gef,#05 [FALSE] L0252
       PRINT           "You can't, since "
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " in the way."
L0252: JE              Gef,#06 [FALSE] L0254
       PRINT           "You can't, since "
       CALL_2N         R0104 (L01)
       TEST_ATTR       L01,#1e [FALSE] L0253
       PRINT_RET       " lead nowhere."
L0253: PRINT_RET       " leads nowhere."
L0254: RTRUE           
L0255: JE              Ge9,#1c [FALSE] L0256
       PRINT_PADDR     S082
       NEW_LINE        
       RTRUE           
L0256: JE              Ge9,#1d [FALSE] L0257
       PRINT_PADDR     S083
       NEW_LINE        
       RTRUE           
L0257: JE              Ge9,#1e [FALSE] L0258
       PRINT_PADDR     S084
       NEW_LINE        
       RTRUE           
L0258: JE              Ge9,#1f [FALSE] L0272
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0259
       PRINT           " (on "
       CALL_2N         R0104 (L01)
       PRINT           ")"
       JUMP            L0271
L0259: JE              Gef,#02 [FALSE] L0260
       PRINT           " (in "
       CALL_2N         R0104 (L01)
       PRINT           ")"
       JUMP            L0271
L0260: JE              Gef,#03 [FALSE] L0261
       PRINT           " (as "
       PRINT_OBJ       L01
       PRINT           ")"
       JUMP            L0271
L0261: JE              Gef,#04 [FALSE] L0263
       PRINT           "
On "
       CALL_2N         R0104 (L01)
       ADD             #0008,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0262
L0262: CALL_VN         R0130 ((SP)+,(SP)+)
       PRINT_RET       "."
L0263: JE              L01,G00 [TRUE] L0266
       TEST_ATTR       L01,#14 [FALSE] L0264
       PRINT           "
On "
       JUMP            L0265
L0264: PRINT           "
In "
L0265: CALL_2N         R0104 (L01)
       PRINT           " you"
       JUMP            L0267
L0266: PRINT           "
You"
L0267: PRINT           " can "
       JE              L00,#05 [FALSE] L0268
       PRINT           "also "
L0268: PRINT           "see "
       ADD             #0008,#0200 -> -(SP)
       ADD             (SP)+,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0269
L0269: CALL_VN         R0130 ((SP)+,(SP)+)
       JE              L01,G00 [TRUE] L0270
       PRINT_RET       "."
L0270: PRINT_RET       " here."
L0271: RTRUE           
L0272: JE              Ge9,#20 [FALSE] L0277
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0273
       PRINT_PADDR     S085
       NEW_LINE        
       RTRUE           
L0273: JE              Gef,#02 [FALSE] L0274
       PRINT           "You see nothing special about "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0274: JE              Gef,#03 [FALSE] L0276
       CALL_2N         R0105 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT           " currently switched "
       TEST_ATTR       L01,#0d [FALSE] L0275
       PRINT_RET       "on."
L0275: PRINT_RET       "off."
L0276: RTRUE           
L0277: JE              Ge9,#21 [FALSE] L0280
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0278
       PRINT_RET       "But it's dark."
L0278: JE              Gef,#02 [FALSE] L0279
       PRINT_RET       "You find nothing of interest."
L0279: RTRUE           
L0280: JE              Ge9,#22 [FALSE] L0290
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0281
       PRINT_RET       "But it's dark."
L0281: JE              Gef,#02 [FALSE] L0282
       PRINT           "There is nothing on "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0282: JE              Gef,#03 [FALSE] L0284
       PRINT           "On "
       CALL_2N         R0104 (L01)
       ADD             #0040,#0008 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0283
L0283: CALL_VN         R0130 ((SP)+,(SP)+)
       PRINT_RET       "."
L0284: JE              Gef,#04 [FALSE] L0285
       PRINT_RET       "You find nothing of interest."
L0285: JE              Gef,#05 [FALSE] L0286
       PRINT           "You can't see inside, since "
       CALL_2N         R0104 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0286: JE              Gef,#06 [FALSE] L0287
       CALL_2N         R0105 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " empty."
L0287: JE              Gef,#07 [FALSE] L0289
       PRINT           "In "
       CALL_2N         R0104 (L01)
       ADD             #0040,#0008 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0288
L0288: CALL_VN         R0130 ((SP)+,(SP)+)
       PRINT_RET       "."
L0289: RTRUE           
L0290: JE              Ge9,#23 [FALSE] L0299
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0293
       TEST_ATTR       L01,#1e [FALSE] L0291
       PRINT           "They don't "
       JUMP            L0292
L0291: PRINT           "That doesn't "
L0292: PRINT_PADDR     S086
       NEW_LINE        
       RTRUE           
L0293: JE              Gef,#02 [FALSE] L0294
       CALL_2N         R0013 (L01)
       PRINT_RET       " unlocked at the moment."
L0294: JE              Gef,#03 [FALSE] L0297
       TEST_ATTR       L01,#1e [FALSE] L0295
       PRINT           "Those don't "
       JUMP            L0296
L0295: PRINT           "That doesn't "
L0296: PRINT_RET       "seem to fit the lock."
L0297: JE              Gef,#04 [FALSE] L0298
       PRINT           "You unlock "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0298: RTRUE           
L0299: JE              Ge9,#24 [FALSE] L0309
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0302
       TEST_ATTR       L01,#1e [FALSE] L0300
       PRINT           "They don't "
       JUMP            L0301
L0300: PRINT           "That doesn't "
L0301: PRINT_PADDR     S087
       NEW_LINE        
       RTRUE           
L0302: JE              Gef,#02 [FALSE] L0303
       CALL_2N         R0013 (L01)
       PRINT_RET       " locked at the moment."
L0303: JE              Gef,#03 [FALSE] L0304
       PRINT           "First you'll have to close "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0304: JE              Gef,#04 [FALSE] L0307
       TEST_ATTR       L01,#1e [FALSE] L0305
       PRINT           "Those don't "
       JUMP            L0306
L0305: PRINT           "That doesn't "
L0306: PRINT_RET       "seem to fit the lock."
L0307: JE              Gef,#05 [FALSE] L0308
       PRINT           "You lock "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0308: RTRUE           
L0309: JE              Ge9,#25 [FALSE] L0313
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0310
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can switch."
L0310: JE              Gef,#02 [FALSE] L0311
       CALL_2N         R0013 (L01)
       PRINT_RET       " already on."
L0311: JE              Gef,#03 [FALSE] L0312
       PRINT           "You switch "
       CALL_2N         R0104 (L01)
       PRINT_RET       " on."
L0312: RTRUE           
L0313: JE              Ge9,#26 [FALSE] L0317
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0314
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can switch."
L0314: JE              Gef,#02 [FALSE] L0315
       CALL_2N         R0013 (L01)
       PRINT_RET       " already off."
L0315: JE              Gef,#03 [FALSE] L0316
       PRINT           "You switch "
       CALL_2N         R0104 (L01)
       PRINT_RET       " off."
L0316: RTRUE           
L0317: JE              Ge9,#27 [FALSE] L0327
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0318
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can open."
L0318: JE              Gef,#02 [FALSE] L0321
       TEST_ATTR       L01,#1e [FALSE] L0319
       PRINT           "They seem "
       JUMP            L0320
L0319: PRINT           "It seems "
L0320: PRINT_RET       "to be locked."
L0321: JE              Gef,#03 [FALSE] L0322
       CALL_2N         R0013 (L01)
       PRINT_RET       " already open."
L0322: JE              Gef,#04 [FALSE] L0325
       PRINT           "You open "
       CALL_2N         R0104 (L01)
       PRINT           ", revealing "
       ADD             #0008,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       GET_CHILD       L01 -> -(SP) [FALSE] L0323
L0323: CALL_VS         R0130 ((SP)+,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0324
       PRINT_RET       "nothing."
L0324: PRINT_RET       "."
L0325: JE              Gef,#05 [FALSE] L0326
       PRINT           "You open "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0326: RTRUE           
L0327: JE              Ge9,#28 [FALSE] L0331
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0328
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can close."
L0328: JE              Gef,#02 [FALSE] L0329
       CALL_2N         R0013 (L01)
       PRINT_RET       " already closed."
L0329: JE              Gef,#03 [FALSE] L0330
       PRINT           "You close "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0330: RTRUE           
L0331: JE              Ge9,#29 [FALSE] L0334
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0332
       PRINT           "You're not wearing "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0332: JE              Gef,#02 [FALSE] L0333
       PRINT           "You take off "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0333: RTRUE           
L0334: JE              Ge9,#2a [FALSE] L0339
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0335
       PRINT           "You can't wear "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0335: JE              Gef,#02 [FALSE] L0336
       PRINT           "You're not holding "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0336: JE              Gef,#03 [FALSE] L0337
       PRINT           "You're already wearing "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0337: JE              Gef,#04 [FALSE] L0338
       PRINT           "You put on "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0338: RTRUE           
L0339: JE              Ge9,#2b [FALSE] L0342
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0340
       CALL_2N         R0013 (L01)
       PRINT_RET       " plainly inedible."
L0340: JE              Gef,#02 [FALSE] L0341
       PRINT           "You eat "
       CALL_2N         R0104 (L01)
       PRINT_RET       ". Not bad."
L0341: RTRUE           
L0342: JE              Ge9,#2c,#2d [FALSE] L0343
       PRINT_RET       "That was a rhetorical question."
L0343: JE              Ge9,#2e [FALSE] L0344
       PRINT_PADDR     S088
       NEW_LINE        
       RTRUE           
L0344: JE              Ge9,#2f [FALSE] L0345
       PRINT_PADDR     S089
       NEW_LINE        
       RTRUE           
L0345: JE              Ge9,#30 [FALSE] L0346
       PRINT_PADDR     S090
       NEW_LINE        
       RTRUE           
L0346: JE              Ge9,#31 [FALSE] L0347
       PRINT_RET       "That seems unnecessary."
L0347: JE              Ge9,#32 [FALSE] L0348
       PRINT_RET       "Keep your mind on the game."
L0348: JE              Ge9,#33 [FALSE] L0349
       PRINT_RET       "What a good idea."
L0349: JE              Ge9,#34 [FALSE] L0350
       PRINT_RET       "You smell nothing unexpected."
L0350: JE              Ge9,#35 [FALSE] L0351
       PRINT_RET       "You hear nothing unexpected."
L0351: JE              Ge9,#36 [FALSE] L0352
       PRINT_RET       "You taste nothing unexpected."
L0352: JE              Ge9,#37 [FALSE] L0356
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0353
       PRINT_RET       "Keep your hands to yourself!"
L0353: JE              Gef,#02 [FALSE] L0354
       PRINT_RET       "You feel nothing unexpected."
L0354: JE              Gef,#03 [FALSE] L0355
       PRINT_RET       "If you think that'll help."
L0355: RTRUE           
L0356: JE              Ge9,#38 [FALSE] L0357
       PRINT_PADDR     S091
       NEW_LINE        
       RTRUE           
L0357: JE              Ge9,#39 [FALSE] L0358
       PRINT           "Cutting "
       CALL_2N         R0009 (L01)
       PRINT_RET       " up would achieve little."
L0358: JE              Ge9,#3a [FALSE] L0359
       PRINT_PADDR     S092
       NEW_LINE        
       RTRUE           
L0359: JE              Ge9,#3b,#3c [FALSE] L0360
       PRINT_PADDR     S093
       NEW_LINE        
       RTRUE           
L0360: JE              Ge9,#3d [FALSE] L0361
       PRINT_PADDR     S094
       NEW_LINE        
       RTRUE           
L0361: JE              Ge9,#3e [FALSE] L0362
       PRINT_PADDR     S095
       NEW_LINE        
       RTRUE           
L0362: JE              Ge9,#3f [FALSE] L0363
       PRINT_RET       "Oh, don't apologise."
L0363: JE              Ge9,#40 [FALSE] L0364
       PRINT_PADDR     S096
       NEW_LINE        
       RTRUE           
L0364: JE              Ge9,#41 [FALSE] L0365
       PRINT_RET       "Quite."
L0365: JE              Ge9,#42 [FALSE] L0366
       PRINT_PADDR     S097
       NEW_LINE        
       RTRUE           
L0366: JE              Ge9,#43 [FALSE] L0367
       PRINT_PADDR     S098
       NEW_LINE        
       RTRUE           
L0367: JE              Ge9,#44 [FALSE] L0368
       PRINT_PADDR     S099
       NEW_LINE        
       RTRUE           
L0368: JE              Ge9,#45 [FALSE] L0369
       PRINT           "You can't usefully blow "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0369: JE              Ge9,#46 [FALSE] L0370
       PRINT_RET       "You achieve nothing by this."
L0370: JE              Ge9,#47 [FALSE] L0371
       PRINT           "No, you can't set "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0371: JE              Ge9,#48 [FALSE] L0372
       PRINT           "No, you can't set "
       CALL_2N         R0009 (L01)
       PRINT_RET       " to anything."
L0372: JE              Ge9,#49 [FALSE] L0373
       PRINT_RET       "You wave, feeling foolish."
L0373: JE              Ge9,#4a [FALSE] L0376
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0374
       PRINT           "But you aren't holding "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0374: JE              Gef,#02 [FALSE] L0375
       PRINT           "You look ridiculous waving "
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0375: RTRUE           
L0376: JE              Ge9,#4b,#4c,#4d [FALSE] L0383
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0379
       TEST_ATTR       L01,#1e [FALSE] L0377
       PRINT           "Those are "
       JUMP            L0378
L0377: PRINT           "It is "
L0378: PRINT_RET       "fixed in place."
L0379: JE              Gef,#02 [FALSE] L0380
       PRINT_RET       "You are unable to."
L0380: JE              Gef,#03 [FALSE] L0381
       PRINT_RET       "Nothing obvious happens."
L0381: JE              Gef,#04 [FALSE] L0382
       PRINT_PADDR     S100
       NEW_LINE        
       RTRUE           
L0382: RTRUE           
L0383: JE              Ge9,#4e [FALSE] L0387
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0384
       PRINT_PADDR     S101
       NEW_LINE        
       RTRUE           
L0384: JE              Gef,#02 [FALSE] L0385
       PRINT_RET       "That's not a direction."
L0385: JE              Gef,#03 [FALSE] L0386
       PRINT_RET       "Not that way you can't."
L0386: RTRUE           
L0387: JE              Ge9,#4f [FALSE] L0390
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0388
       PRINT_RET       "Keep your hands to yourself."
L0388: JE              Gef,#02 [FALSE] L0389
       PRINT_RET       "You achieve nothing by this."
L0389: RTRUE           
L0390: JE              Ge9,#50 [FALSE] L0393
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0391
       PRINT_RET       "Futile."
L0391: JE              Gef,#02 [FALSE] L0392
       PRINT_PADDR     S102
       NEW_LINE        
       RTRUE           
L0392: RTRUE           
L0393: JE              Ge9,#51 [FALSE] L0396
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0394
       PRINT_RET       "You talk to yourself a while."
L0394: JE              Gef,#02 [FALSE] L0395
       PRINT_RET       "This provokes no reaction."
L0395: RTRUE           
L0396: JE              Ge9,#52,#53 [FALSE] L0397
       PRINT_RET       "There is no reply."
L0397: JE              Ge9,#54 [FALSE] L0398
       PRINT_RET       "Nothing is on sale."
L0398: JE              Ge9,#55 [FALSE] L0399
       PRINT_RET       "Your singing is abominable."
L0399: JE              Ge9,#56 [FALSE] L0400
       PRINT_PADDR     S103
       NEW_LINE        
       RTRUE           
L0400: JE              Ge9,#57 [FALSE] L0401
       PRINT_RET       "Time passes."
L0401: JE              Ge9,#58 [FALSE] L0402
       PRINT_PADDR     S104
       NEW_LINE        
       RTRUE           
L0402: JE              Ge9,#59 [FALSE] L0403
       PRINT_PADDR     S105
       CALL_2N         R0104 (L01)
       PRINT_RET       "."
L0403: RTRUE           

Routine R0015, 0 locals

       CALL_VS         R0244 (#1007,#11) -> -(SP)
       RET_POPPED      

Routine R0016, 0 locals

       CALL_VS         R0244 (#1007,#12) -> -(SP)
       RET_POPPED      

Routine R0017, 0 locals

       CALL_VS         R0244 (#1007,#13) -> -(SP)
       RET_POPPED      

Routine R0018, 1 local

       JE              L00,#0f [FALSE] L0001
       STORE           G52,#01
       STORE           G53,#0f
       RTRUE           
L0001: LOADB           L00,#00 -> -(SP)
       AND             (SP)+,#0f -> G52
       ADD             L00,#01 -> -(SP)
       LOADW           (SP)+,#00 -> G53
       RTRUE           

Routine R0019, 2 locals

       STORE           L01,#00
L0001: JL              L01,#20 [FALSE] L0002
       STOREW          #2428,L01,#0f
       STOREW          #23a8,L01,#01
       STOREW          #23e8,L01,#0f
       INC             L01
       JUMP            L0001
L0002: LOADB           L00,#01 -> -(SP)
       LOADB           L00,#00 -> -(SP)
       MUL             #0100,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> G4f
       AND             G4f,#0400 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PUSH            #00
       JUMP            L0004
L0003: PUSH            #01
L0004: PULL            G50
       AND             G4f,#03ff -> G4f
       DEC             L00
       STORE           G4b,#00
       STORE           L01,#00
L0005: ADD             L00,#03 -> L00
       LOADB           L00,#00 -> -(SP)
       JE              (SP)+,#0f [FALSE] L0006
       JUMP            L0008
L0006: STOREW          #2428,L01,L00
       CALL_2N         R0018 (L00)
       JE              G52,#02 [TRUE] L0007
       INC             G4b
L0007: STOREW          #23a8,L01,G52
       STOREW          #23e8,L01,G53
       INC             L01
       JUMP            L0005
L0008: ADD             L00,#01 -> -(SP)
       RET_POPPED      

Routine R0020, 2 locals

       LOADB           L00,#01 -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       STOREB          L00,(SP)+,#00
       TOKENISE        L00,L01
       RTRUE           

Routine R0021, 1 local

       CALL_2N         R0023 (L00)
       RFALSE          

Routine R0022, 8 locals

       CALL_1N         R0092
L0001: STORE           L03,#00
L0002: JL              L03,#40 [FALSE] L0003
       LOADB           L00,L03 -> -(SP)
       STOREB          #27d5,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: STOREB          L00,#00,#78
       STOREB          L01,#00,#40
       CALL_2N         R0244 (#1008)
       CALL_1N         R0412
       STORE           Gef,#00
       STORE           Gec,L00
       STOREB          Gec,#01,#00
       CALL_1N         R0479
       READ            Gec,L01 -> Gef
       LOADB           L01,#01 -> L02
       JZ              L02 [FALSE] L0004
       CALL_VN         R0244 (#1007,#0a)
       JUMP            L0001
L0004: LOADW           L01,#01 -> L04
       JE              L04,"oops","o","oops" [FALSE] L0005
       JUMP            L0016
L0005: JE              L04,"undo","undo","undo" [FALSE] L0012
       LOADB           #2661,#01 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0012
       JE              G08,#01 [FALSE] L0006
       CALL_VN         R0244 (#1007,#0b)
       JUMP            L0001
L0006: JZ              G05 [FALSE] L0007
       CALL_VN         R0244 (#1007,#06)
       JUMP            L0001
L0007: JE              G05,#01 [FALSE] L0008
       JUMP            L0010
L0008: JE              G06,#01 [FALSE] L0009
       CALL_VN         R0244 (#1007,#0c)
       JUMP            L0001
L0009: RESTORE_UNDO    -> L03
       JZ              L03 [FALSE] L0011
L0010: CALL_VN         R0244 (#1007,#07)
L0011: JUMP            L0001
L0012: SAVE_UNDO       -> L03
       STORE           G06,#00
       STORE           G05,#02
       JE              L03,#ffff [FALSE] L0013
       STORE           G05,#00
L0013: JZ              L03 [FALSE] L0014
       STORE           G05,#01
L0014: JE              L03,#02 [FALSE] L0015
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0106 (G00)
       PRINT           "
"
       SET_TEXT_STYLE  ROMAN
       CALL_VN         R0244 (#1007,#0d)
       STORE           G06,#01
       JUMP            L0001
L0015: RET             L02
L0016: JZ              G7a [FALSE] L0017
       CALL_VN         R0244 (#1007,#0e)
       JUMP            L0001
L0017: JE              L02,#01 [FALSE] L0018
       CALL_VN         R0244 (#1007,#0f)
       JUMP            L0001
L0018: JG              L02,#02 [FALSE] L0019
       CALL_VN         R0244 (#1007,#10)
       JUMP            L0001
L0019: STORE           L03,#00
L0020: JG              L03,#78 [TRUE] L0021
       LOADB           L00,L03 -> -(SP)
       STOREB          #26a2,L03,(SP)+
       INC             L03
       JUMP            L0020
L0021: LOADB           L01,#09 -> L06
       LOADB           L01,#08 -> L07
       STORE           L03,#00
L0022: JL              L03,#40 [FALSE] L0023
       LOADB           #27d5,L03 -> -(SP)
       STOREB          L00,L03,(SP)+
       INC             L03
       JUMP            L0022
L0023: CALL_VN         R0020 (L00,L01)
       MUL             #04,G7a -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           L01,(SP)+ -> L04
       MUL             #04,G7a -> -(SP)
       LOADB           L01,(SP)+ -> L05
       STORE           L03,#00
L0024: JL              L03,L05 [FALSE] L0025
       ADD             L03,L04 -> -(SP)
       STOREB          L00,(SP)+,#20
       INC             L03
       JUMP            L0024
L0025: JL              L05,L07 [FALSE] L0028
       STORE           L03,#78
L0026: ADD             L04,L07 -> -(SP)
       JL              L03,(SP)+ [TRUE] L0027
       SUB             L03,L07 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       LOADB           L00,(SP)+ -> -(SP)
       STOREB          L00,L03,(SP)+
       DEC             L03
       JUMP            L0026
L0027: SUB             L07,L05 -> -(SP)
       LOADB           L00,#01 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       STOREB          L00,#01,(SP)+
L0028: STORE           L03,#00
L0029: JL              L03,L07 [FALSE] L0030
       ADD             L03,L06 -> -(SP)
       LOADB           #26a2,(SP)+ -> -(SP)
       ADD             L03,L04 -> -(SP)
       STOREB          L00,(SP)+,(SP)+
       INC             L03
       JUMP            L0029
L0030: CALL_VN         R0020 (L00,L01)
       LOADB           L01,#01 -> L02
       RET             L02

Routine R0023, 11 locals

       JE              G3f,#01 [FALSE] L0003
       STORE           L05,#00
L0001: JL              L05,#08 [FALSE] L0002
       LOADW           #2308,L05 -> -(SP)
       STOREW          L00,L05,(SP)+
       INC             L05
       JUMP            L0001
L0002: STORE           G3f,#00
       RTRUE           
L0003: JE              G7c,#01 [FALSE] L0004
       STORE           G7c,#00
       CALL_VN         R0020 (#25e8,#2661)
       JUMP            L0005
L0004: CALL_VN         R0022 (#25e8,#2661)
L0005: STORE           G34,#01
       LOADB           #2661,#01 -> G76
       STORE           G75,#01
       CALL_1N         R0003
       CALL_VN         R0020 (#25e8,#2661)
       CALL_1N         R0438
       LOADB           #2661,#01 -> G76
       STORE           L07,#00
       STORE           G78,#01
       STORE           G35,G12
       CALL_2S         R0024 (G12) -> G36
       STORE           G79,#00
L0006: STORE           G6b,#00
       STORE           G4f,#ffff
L0007: STORE           G75,G78
       CALL_1S         R0057 -> G77
       JE              G77,#ffff [FALSE] L0008
       STORE           G43,#01
       JUMP            L0077
L0008: JE              G77,"g","again" [FALSE] L0009
       STORE           G77,"again"
L0009: JE              G77,"again" [FALSE] L0014
       JE              G35,G12 [TRUE] L0010
       CALL_VN         R0244 (#1007,#14)
       JUMP            L0004
L0010: LOADB           #275c,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0011
       CALL_VN         R0244 (#1007,#15)
       JUMP            L0004
L0011: STORE           L05,#00
L0012: JL              L05,#78 [FALSE] L0013
       LOADB           #275c,L05 -> -(SP)
       STOREB          #25e8,L05,(SP)+
       INC             L05
       JUMP            L0012
L0013: JUMP            L0005
L0014: JE              G77,"again" [TRUE] L0016
       STORE           L05,#00
L0015: JL              L05,#78 [FALSE] L0016
       LOADB           #25e8,L05 -> -(SP)
       STOREB          #275c,L05,(SP)+
       INC             L05
       JUMP            L0015
L0016: JZ              G79 [FALSE] L0021
       CALL_VS         R0086 (G35,#1c) -> L05
       JL              L05,#00 [FALSE] L0017
       STORE           G79,G78
       SUB             #00,L05 -> L05
L0017: JE              L05,#01 [FALSE] L0018
       STOREW          L00,#00,G28
       STOREW          L00,#01,G2b
       STOREW          L00,#02,G2c
       RTRUE           
L0018: JZ              L05 [TRUE] L0019
       STORE           G77,L05
       DEC             G75
       DEC             G78
       JUMP            L0020
L0019: STORE           G75,G78
       CALL_1S         R0056 -> G77
L0020: JUMP            L0022
L0021: STORE           G79,#00
L0022: JZ              G77 [TRUE] L0023
       LOADB           G77,#06 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0036
L0023: STORE           G75,G78
       STORE           G5b,#00
       STORE           G54,#00
       CALL_VS         R0030 (#06,#00,#00) -> L09
       JE              L09,#2710 [FALSE] L0024
       JUMP            L0005
L0024: JZ              L09 [TRUE] L0025
       STOREW          L00,#00,#1b
       STOREW          L00,#01,#01
       STOREW          L00,#02,L09
       JUMP            L0104
L0025: JE              G35,G12 [FALSE] L0029
       STORE           L06,#02
L0026: JG              L06,G76 [TRUE] L0028
       CALL_1S         R0056 -> L05
       JE              L05,"comma," [FALSE] L0027
       JUMP            L0030
L0027: INC             L06
       JUMP            L0026
L0028: CALL_2S         R0441 (G77) -> G77
       JZ              G77 [TRUE] L0029
       JUMP            L0036
L0029: STORE           G43,#0c
       JUMP            L0077
L0030: SUB             G75,#01 -> L06
       JE              L06,#01 [FALSE] L0031
       CALL_VN         R0244 (#1007,#16)
       JUMP            L0004
L0031: STORE           G75,#01
       STORE           G56,#01
       STORE           G6a,#01
       CALL_VS         R0030 (G12,G36,#06) -> L09
       STORE           G6a,#00
       JE              L09,#2710 [FALSE] L0032
       JUMP            L0005
L0032: JZ              L09 [FALSE] L0033
       CALL_VN         R0244 (#1007,#17)
       JUMP            L0004
L0033: TEST_ATTR       L09,#00 [TRUE] L0034
       TEST_ATTR       L09,#16 [TRUE] L0034
       CALL_VN         R0244 (#1007,#18,L09)
       JUMP            L0004
L0034: JE              G75,L06 [TRUE] L0035
       CALL_VN         R0244 (#1007,#19)
       JUMP            L0004
L0035: CALL_2N         R0072 (L09)
       ADD             L06,#01 -> G78
       STORE           G35,L09
       CALL_2S         R0024 (L09) -> G36
       JUMP            L0007
L0036: LOADB           G77,#06 -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> G37
       JE              G37,#01 [FALSE] L0037
       JE              G35,G12 [TRUE] L0037
       STORE           G43,#0c
       STORE           G37,#00
       JUMP            L0077
L0037: LOADB           G77,#07 -> -(SP)
       SUB             #ff,(SP)+ -> L05
       LOADW           #00,#07 -> -(SP)
       LOADW           (SP)+,L05 -> L01
       LOADB           L01,#00 -> -(SP)
       SUB             (SP)+,#01 -> L03
       STORE           G66,#ffff
       STORE           G67,#ffff
       STORE           G43,#01
       STORE           G44,#01
       ADD             L01,#01 -> L04
       STORE           L02,#00
L0038: JG              L02,L03 [TRUE] L0077
       STORE           L05,#00
L0039: JL              L05,#20 [FALSE] L0040
       STOREW          #2428,L05,#0f
       STOREW          #23a8,L05,#01
       STOREW          #23e8,L05,#0f
       INC             L05
       JUMP            L0039
L0040: CALL_2S         R0019 (L04) -> L04
       STORE           G41,#00
       STORE           G4c,#00
       STORE           G47,#00
       STORE           G48,#00
       STORE           G3a,#00
       STORE           G3b,#00
       STOREW          #2288,#00,#00
       STORE           G5a,#00
       STORE           G42,#01
       ADD             G78,#01 -> G75
       STORE           G51,#ffff
       STORE           G5b,#00
       STORE           L05,#00
       STORE           L0a,#00
       STORE           G45,#00
L0041: LOADW           #2428,G45 -> -(SP)
       JE              (SP)+,#0f [TRUE] L0051
       STORE           G6b,#00
       LOADW           #23a8,G45 -> -(SP)
       JE              (SP)+,#02 [TRUE] L0042
       INC             L05
L0042: LOADW           #23a8,G45 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0050
       LOADW           #23e8,G45 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0043
       STORE           L0a,#01
L0043: LOADW           #23e8,G45 -> -(SP)
       JE              (SP)+,#04,#05 [FALSE] L0050
       JE              L05,#01 [FALSE] L0050
       INC             G45
       LOADW           #23a8,G45 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0049
L0044: LOADW           #23a8,G45 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0045
       INC             G45
       JUMP            L0044
L0045: LOADW           #23a8,G45 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0049
       LOADW           #23e8,G45 -> -(SP)
       JZ              (SP)+ [FALSE] L0049
L0046: JG              G75,G76 [TRUE] L0049
       SUB             G45,#01 -> -(SP)
       LOADW           #23e8,(SP)+ -> -(SP)
       CALL_1S         R0056 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0048
       CALL_VS         R0030 (G36,G35,#00) -> L09
       JE              L09,#2710 [FALSE] L0047
       JUMP            L0005
L0047: JL              L09,#02 [TRUE] L0048
       STORE           G51,L09
L0048: JUMP            L0046
L0049: JUMP            L0051
L0050: INC             G45
       JUMP            L0041
L0051: STORE           G64,#00
       JZ              L0a [TRUE] L0052
       JE              G4b,#01 [FALSE] L0052
       JE              G4f,#0f [FALSE] L0052
       STORE           G64,#01
L0052: STORE           G41,#00
       STORE           G4c,#00
       STORE           G47,#00
       STORE           G48,#00
       STORE           G3a,#00
       STORE           G3b,#00
       STOREW          #2288,#00,#00
       STORE           G42,#01
       ADD             G78,#01 -> G75
       STORE           G45,#01
L0053: STOREW          #2328,G45,#ffff
       STORE           G6b,#00
       SUB             G45,#01 -> -(SP)
       LOADW           #2428,(SP)+ -> L08
       LOADW           #2428,G45 -> G56
       JE              L08,#0f [TRUE] L0056
       STORE           G6a,#00
       SUB             G45,#01 -> -(SP)
       CALL_VS         R0029 (L00,(SP)+) -> L09
       STORE           G6a,#00
       JE              L09,#2710 [FALSE] L0054
       JUMP            L0005
L0054: JZ              L09 [FALSE] L0055
       JUMP            L0073
L0055: JUMP            L0072
L0056: JG              G75,G76 [TRUE] L0061
       CALL_1S         R0056 -> L09
       JE              L09,"then","then","then" [TRUE] L0057
       JE              L09,"comma," [FALSE] L0058
L0057: STORE           G7c,#01
       SUB             G75,#01 -> G7d
       JUMP            L0061
L0058: STORE           L0a,#00
L0059: JL              L0a,#20 [FALSE] L0060
       LOADW           #2328,L0a -> -(SP)
       STOREW          #2368,L0a,(SP)+
       INC             L0a
       JUMP            L0059
L0060: STORE           G46,G45
       STORE           G42,#02
       JUMP            L0073
L0061: JL              G47,#01 [TRUE] L0062
       LOADW           L00,#02 -> -(SP)
       JZ              (SP)+ [FALSE] L0062
       LOADW           L00,#03 -> -(SP)
       CALL_2S         R0032 ((SP)+) -> L09
       JZ              L09 [TRUE] L0062
       STORE           G42,L09
       JUMP            L0073
L0062: JL              G47,#02 [TRUE] L0063
       LOADW           L00,#03 -> -(SP)
       JZ              (SP)+ [FALSE] L0063
       LOADW           L00,#02 -> -(SP)
       CALL_2S         R0032 ((SP)+) -> L09
       JZ              L09 [TRUE] L0063
       STORE           G42,L09
       JUMP            L0073
L0063: JE              G64,#02 [FALSE] L0064
       LOADW           L00,#02 -> -(SP)
       JE              (SP)+,G35 [FALSE] L0064
       STORE           G43,#11
       JUMP            L0077
L0064: STORE           G7a,#00
       JZ              G4c [TRUE] L0065
       PRINT           "("
       CALL_2N         R0036 (G4c)
       PRINT           ")
"
L0065: STOREW          L00,#00,G4f
       STOREW          L00,#01,G47
       JZ              G50 [TRUE] L0066
       JE              G47,#02 [FALSE] L0066
       LOADW           L00,#02 -> L05
       LOADW           L00,#03 -> -(SP)
       STOREW          L00,#02,(SP)+
       STOREW          L00,#03,L05
       JE              G48,#02 [FALSE] L0066
       STORE           L05,G49
       STORE           G49,G4a
       STORE           G4a,L05
L0066: JG              G47,#00 [FALSE] L0067
       LOADW           L00,#02 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0067
       LOADW           L00,#02 -> -(SP)
       CALL_2N         R0072 ((SP)+)
L0067: JZ              G41 [TRUE] L0070
       JE              G35,G12 [FALSE] L0070
       STORE           G3f,#01
       STORE           L05,#00
L0068: JL              L05,#08 [FALSE] L0069
       LOADW           L00,L05 -> -(SP)
       STOREW          #2308,L05,(SP)+
       INC             L05
       JUMP            L0068
L0069: STOREW          L00,#00,#0f
       STOREW          L00,#01,#01
       STOREW          L00,#02,G41
       CALL_VN         R0244 (#1007,#1a,G41)
L0070: JE              G7c,#01 [FALSE] L0071
       STORE           G75,G7d
       JUMP            L0104
L0071: RTRUE           
L0072: INC             G45
       JUMP            L0053
L0073: JG              G42,G43 [FALSE] L0074
       STORE           G43,G42
L0074: JE              G42,#12 [TRUE] L0075
       JG              G42,G44 [FALSE] L0075
       STORE           G44,G42
L0075: JE              G64,#02 [FALSE] L0076
       JE              G42,#11 [FALSE] L0076
       JUMP            L0077
L0076: INC             L02
       JUMP            L0038
L0077: STORE           G42,G43
       JE              G35,G12 [TRUE] L0080
       JG              G79,#00 [FALSE] L0078
       STORE           G78,G79
       JUMP            L0006
L0078: STORE           G75,G78
       CALL_1S         R0056 -> G3a
       JE              G3a,"comma," [FALSE] L0079
       CALL_1S         R0056 -> G3a
       INC             G78
L0079: CALL_2S         R0060 (G78) -> G3b
       STOREW          L00,#00,#1009
       STOREW          L00,#01,#02
       STOREW          L00,#02,#01
       STORE           G49,G3a
       STOREW          L00,#03,G35
       STORE           G3d,G78
       SUB             G76,G3d -> -(SP)
       ADD             (SP)+,#01 -> G3e
       RTRUE           
L0080: CALL_2S         R0443 (G42) -> -(SP)
       JZ              (SP)+ [TRUE] L0081
       JUMP            L0004
L0081: STORE           G66,G68
       STORE           G67,G69
       JE              G42,#01 [FALSE] L0082
       CALL_VN         R0244 (#1007,#1b)
       STORE           G7a,#01
L0082: JE              G42,#02 [FALSE] L0085
       CALL_VN         R0244 (#1007,#1c)
       STORE           L0a,#00
L0083: JL              L0a,#20 [FALSE] L0084
       LOADW           #2368,L0a -> -(SP)
       STOREW          #2328,L0a,(SP)+
       INC             L0a
       JUMP            L0083
L0084: STORE           G45,G46
       CALL_2N         R0036 (#00)
       PRINT           ".
"
L0085: JE              G42,#03 [FALSE] L0086
       CALL_VN         R0244 (#1007,#1d)
L0086: JE              G42,#04 [FALSE] L0087
       CALL_VN         R0244 (#1007,#1e)
       STORE           G7a,G7b
L0087: JE              G42,#05 [FALSE] L0088
       CALL_VN         R0244 (#1007,#1f)
L0088: JE              G42,#06 [FALSE] L0089
       CALL_VN         R0244 (#1007,#20)
       STORE           G7a,G7b
L0089: JE              G42,#07 [FALSE] L0090
       CALL_VN         R0244 (#1007,#21)
L0090: JE              G42,#08 [FALSE] L0091
       CALL_VN         R0244 (#1007,#22)
L0091: JE              G42,#09 [FALSE] L0092
       CALL_VN         R0244 (#1007,#23)
L0092: JE              G42,#0a [FALSE] L0093
       CALL_VN         R0244 (#1007,#24)
L0093: JE              G42,#0b [FALSE] L0094
       CALL_VN         R0244 (#1007,#25)
L0094: JE              G42,#0c [FALSE] L0095
       CALL_VN         R0244 (#1007,#26)
L0095: JE              G42,#0d [FALSE] L0096
       CALL_VN         R0244 (#1007,#27)
L0096: JE              G42,#0e [FALSE] L0098
       JE              G67,#ffff [FALSE] L0097
       CALL_VN         R0244 (#1007,#23)
       JUMP            L0098
L0097: CALL_VN         R0244 (#1007,#28)
L0098: JE              G42,#0f [FALSE] L0099
       CALL_VN         R0244 (#1007,#29)
L0099: JE              G42,#10 [FALSE] L0100
       CALL_VN         R0244 (#1007,#2a,G59)
L0100: JE              G42,#11 [FALSE] L0102
       JE              G58,#64 [FALSE] L0101
       CALL_VN         R0244 (#1007,#2b)
       JUMP            L0102
L0101: CALL_VN         R0244 (#1007,#2c)
L0102: JE              G42,#12 [FALSE] L0103
       STORE           G6d,#03
       CALL_1S         G6c -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0103
       STORE           G43,G44
       JUMP            L0077
L0103: JUMP            L0004
L0104: JG              G75,G76 [TRUE] RTRUE
       CALL_1S         R0056 -> L05
       JE              L05,"then","then","then" [TRUE] L0105
       JE              L05,"comma," [FALSE] L0112
L0105: JG              G75,G76 [FALSE] L0106
       STORE           G7c,#00
       RTRUE           
L0106: CALL_2S         R0058 (G78) -> L05
       CALL_2S         R0058 (G75) -> L06
L0107: JL              L05,L06 [FALSE] L0108
       STOREB          L05,#00,#20
       INC             L05
       JUMP            L0107
L0108: CALL_1S         R0056 -> L05
       JE              L05,"again","g","again" [FALSE] L0111
       SUB             G75,#02 -> -(SP)
       CALL_2S         R0058 ((SP)+) -> -(SP)
       SUB             (SP)+,#25e8 -> L05
       JG              G75,G76 [FALSE] L0109
       STORE           L06,#77
       JUMP            L0110
L0109: CALL_2S         R0058 (G75) -> -(SP)
       SUB             (SP)+,#25e8 -> L06
L0110: JL              L05,L06 [FALSE] L0111
       STOREB          #275c,L05,#20
       INC             L05
       JUMP            L0110
L0111: CALL_VN         R0020 (#25e8,#2661)
       STORE           G7c,#01
       RTRUE           
L0112: STORE           G43,#02
       JUMP            L0077

Routine R0024, 2 locals

       GET_PARENT      L00 -> L01
L0001: GET_PARENT      L01 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       TEST_ATTR       L01,#17 [TRUE] L0002
       TEST_ATTR       L01,#14 [TRUE] L0002
       TEST_ATTR       L01,#04 [FALSE] L0003
       TEST_ATTR       L01,#0e [FALSE] L0003
L0002: GET_PARENT      L01 -> L01
       JUMP            L0001
L0003: JE              L00,G12 [FALSE] L0004
       JE              G00,#13 [FALSE] L0004
       RET             #13
L0004: RET             L01

Routine R0025, 0 locals

       STORE           G5b,#00
       STORE           G5c,#00
       STORE           G5d,#00
       STORE           G5e,#00
       STORE           G61,#00
       STORE           G5f,#00
       STORE           G60,#0fff
       STORE           G62,#00
       RTRUE           

Routine R0026, 7 locals

       CALL_1N         R0025
       JG              G75,G76 [FALSE] L0001
       RFALSE          
L0001: STORE           L03,#01
L0002: JZ              L03 [TRUE] L0019
       CALL_1S         R0057 -> L01
       STORE           L03,#00
       STORE           L02,#01
       JUMP            L0004
L0003: ADD             L02,#04 -> L02
L0004: LOADW           #2847,#00 -> -(SP)
       JG              L02,(SP)+ [TRUE] L0011
       LOADW           #2847,L02 -> -(SP)
       JE              L01,(SP)+ [FALSE] L0010
       STORE           L03,#01
       ADD             L02,#02 -> -(SP)
       LOADW           #2847,(SP)+ -> L05
       JE              L05,#0101 [TRUE] L0005
       STORE           G5b,#01
L0005: STORE           G61,#01
       ADD             L02,#01 -> -(SP)
       LOADW           #2847,(SP)+ -> -(SP)
       AND             G60,(SP)+ -> G60
       JE              L05,#0100 [FALSE] L0008
       ADD             L02,#03 -> -(SP)
       LOADW           #2847,(SP)+ -> L04
       STORE           Gef,L04
       JE              Gef,#00 [FALSE] L0006
       OR              G5c,#02 -> G5c
       JUMP            L0008
L0006: JE              Gef,#01 [FALSE] L0007
       OR              G5c,#04 -> G5c
       JUMP            L0008
L0007: CALL_2S         R0069 (L04) -> G5f
       JE              G5f,#ffff [FALSE] L0008
       STORE           G5f,#15
L0008: JE              L05,#09 [FALSE] L0009
       OR              G5c,#10 -> G5c
L0009: JE              L05,#fff7 [FALSE] L0010
       OR              G5c,#20 -> G5c
L0010: JUMP            L0003
L0011: JE              L01,"another","other","other" [FALSE] L0012
       STORE           G5b,#01
       STORE           L03,#01
       OR              G5c,#01 -> G5c
L0012: JE              L01,"all","each","every" [TRUE] L0013
       JE              L01,"everythin","both" [FALSE] L0015
L0013: STORE           G5b,#01
       STORE           L03,#01
       STORE           G5d,#64
       JE              G64,#01 [FALSE] L0014
       STORE           G64,#02
L0014: OR              G5c,#08 -> G5c
L0015: JZ              G63 [TRUE] L0017
       JZ              L00 [TRUE] L0017
       CALL_2S         R0108 (L01) -> L06
       JE              L06,#01 [FALSE] L0016
       STORE           G5b,#01
       STORE           L03,#01
L0016: JG              L06,#01 [FALSE] L0017
       STORE           G5e,#01
       STORE           G5b,#01
       STORE           L03,#01
       STORE           G5d,L06
       SUB             G75,#01 -> G62
       OR              G5c,#08 -> G5c
L0017: JE              L03,#01 [FALSE] L0018
       CALL_1S         R0057 -> -(SP)
       PULL            Gef
       JE              Gef,"of","of","of" [TRUE] L0018
       JE              Gef,"of" [TRUE] L0018
       DEC             G75
L0018: JUMP            L0002
L0019: DEC             G75
       JG              G5d,#00 [FALSE] L0020
       JZ              L00 [FALSE] L0020
       RET             #07
L0020: RFALSE          

Routine R0027, 1 local

       TEST_ATTR       L00,#00 [TRUE] RTRUE
       TEST_ATTR       L00,#16 [FALSE] RFALSE
       JE              G4f,#53,#52,#51 [TRUE] RTRUE
       JE              G4f,#5a [TRUE] RTRUE
       RFALSE          

Routine R0028, 2 locals

       LOADW           #23e8,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0001
       RET             L00
L0001: LOADW           #2428,L01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       RET             #ffff
L0002: LOADW           #23e8,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       RET             L00
L0003: INC             L01
       LOADW           #2428,L01 -> -(SP)
       JE              (SP)+,#0f [TRUE] L0004
       LOADW           #2428,L01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0004: RET             #ffff

Routine R0029, 13 locals

       LOADW           #2428,L01 -> L02
       CALL_2N         R0018 (L02)
       STORE           G54,#00
       STORE           G34,#01
       STORE           Gef,G52
       JE              Gef,#01 [FALSE] L0020
       STORE           Gef,G53
       JE              Gef,#07 [FALSE] L0004
       CALL_2S         R0060 (G75) -> L03
       CALL_1S         R0056 -> G3a
       JE              L03,#fc18 [FALSE] L0001
       STORE           L03,G3a
L0001: STORE           G3b,L03
       JZ              G48 [FALSE] L0002
       STORE           G49,L03
       JUMP            L0003
L0002: STORE           G4a,L03
L0003: INC             G48
       STORE           L09,#01
       JUMP            L0077
L0004: JE              Gef,#08 [FALSE] L0008
       PUSH            G75
       INC             G75
       CALL_2S         R0060 ((SP)+) -> L03
       JE              L03,#fc18 [FALSE] L0005
       STORE           G42,#03
       RFALSE          
L0005: PUSH            G48
       INC             G48
       JZ              (SP)+ [FALSE] L0006
       STORE           G49,L03
       JUMP            L0007
L0006: STORE           G4a,L03
L0007: STORE           L09,#01
       JUMP            L0077
L0008: JE              Gef,#06 [FALSE] L0011
       JE              G4f,#52,#53,#5a [TRUE] L0009
       JE              G4f,#51 [FALSE] L0010
L0009: STORE           G6a,#01
L0010: JUMP            L0019
L0011: JE              Gef,#09 [FALSE] L0019
       STORE           G3d,G75
       ADD             L01,#01 -> -(SP)
       LOADW           #23a8,(SP)+ -> -(SP)
       JE              (SP)+,#02 [TRUE] L0012
       ADD             L01,#01 -> -(SP)
       LOADW           #2428,(SP)+ -> -(SP)
       JE              (SP)+,#0f [TRUE] L0012
       CALL_2N         R0113 (#0d)
L0012: CALL_1S         R0057 -> L04
       JE              L04,#ffff [TRUE] L0013
       ADD             L01,#01 -> -(SP)
       CALL_VS         R0028 (L04,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0012
L0013: DEC             G75
       SUB             G75,G3d -> G3e
       JZ              G3e [FALSE] L0014
       RTRUE           
L0014: JE              G4f,#53,#52,#51 [FALSE] L0018
       STORE           L04,G75
       STORE           G75,G3d
       CALL_1S         R0056 -> G3c
       JE              G3c,"the" [FALSE] L0015
       JG              G3e,#01 [FALSE] L0015
       CALL_1S         R0056 -> G3c
L0015: STORE           G75,L04
       PUSH            G48
       INC             G48
       JZ              (SP)+ [FALSE] L0016
       STORE           G49,G3c
       JUMP            L0017
L0016: STORE           G4a,G3c
L0017: STORE           L09,#01
       JUMP            L0077
L0018: RTRUE           
L0019: JUMP            L0039
L0020: JE              Gef,#02 [FALSE] L0027
       LOADB           L02,#00 -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       RTRUE           
L0021: JG              G75,G76 [FALSE] L0024
       JZ              G4c [FALSE] L0022
       JL              G47,G4b [FALSE] L0022
       STORE           G4c,G45
       STORE           G4d,L02
       CALL_2S         R0063 (G53) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2328,G45,(SP)+
L0022: JZ              G4c [FALSE] L0023
       RFALSE          
L0023: CALL_2S         R0063 (G53) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2328,G45,(SP)+
       RTRUE           
L0024: CALL_1S         R0056 -> L04
       CALL_2S         R0063 (L04) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       STOREW          #2328,G45,(SP)+
       JE              L04,G53 [FALSE] L0025
       RTRUE           
L0025: CALL_VS         R0028 (L04,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0026
       RTRUE           
L0026: RFALSE          
L0027: JE              Gef,#06 [FALSE] L0034
       CALL_1S         G53 -> L03
       JL              L03,#ff38 [FALSE] L0028
       ADD             L03,#0100 -> G53
       JUMP            L0039
L0028: JL              L03,#00 [TRUE] RFALSE
       JZ              L03 [FALSE] L0029
       DEC             G4b
       RTRUE           
L0029: JE              L03,#01 [FALSE] L0032
       JZ              G48 [FALSE] L0030
       STORE           G49,G3c
       JUMP            L0031
L0030: STORE           G4a,G3c
L0031: INC             G48
L0032: JE              L03,#2710 [FALSE] L0033
       RET             L03
L0033: STORE           L09,L03
       JUMP            L0077
L0034: JE              Gef,#05 [FALSE] L0037
       STORE           G6b,G53
       STORE           G6d,#01
       CALL_1S         G6b -> L03
       JE              L03,#01 [FALSE] L0035
       STORE           G53,#02
       JUMP            L0036
L0035: STORE           G53,#00
L0036: JUMP            L0039
L0037: JE              Gef,#04 [FALSE] L0038
       ADD             #01,G53 -> G54
       STORE           G53,#00
       JUMP            L0039
L0038: JE              Gef,#03 [FALSE] L0039
       STORE           G54,G53
       STORE           G53,#00
L0039: STORE           L02,G53
       STORE           L0c,#00
       JE              L02,#02,#03,#04 [TRUE] L0040
       JE              L02,#05 [FALSE] L0041
L0040: STORE           L0c,#01
L0041: STORE           L0b,#00
       STORE           L08,#01
       STORE           G4e,#00
L0042: CALL_1S         R0056 -> L04
       DEC             G75
       STORE           G66,#ffff
       STORE           G67,#ffff
       CALL_2S         R0069 (L04) -> L03
       JZ              L03 [TRUE] L0047
       STORE           G66,L04
       STORE           G67,L03
       JE              L03,#ffff [FALSE] L0047
       STORE           L03,#01
       JUMP            L0044
L0043: ADD             L03,#04 -> L03
L0044: JG              L03,#2847 [TRUE] L0046
       LOADW           #2847,L03 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0045
       JUMP            L0047
L0045: JUMP            L0043
L0046: STORE           G68,G66
       STORE           G69,G67
       STORE           G42,#09
       RFALSE          
L0047: JE              L04,"me","myself","self" [FALSE] L0048
       STORE           G66,L04
       STORE           G67,G12
L0048: STORE           G63,#01
       STORE           L0a,G75
L0049: CALL_2S         R0026 (L0c) -> L03
       JZ              L03 [TRUE] L0050
       STORE           G42,L03
       RFALSE          
L0050: STORE           G7a,G75
       JE              L02,#01 [TRUE] L0065
       LOADW           #2288,#00 -> L05
       CALL_VS         R0030 (G36,G35,L02) -> L03
       JE              L03,#2710 [FALSE] L0051
       RET             L03
L0051: JZ              L03 [FALSE] L0053
       JZ              G61 [TRUE] L0052
       CALL_1N         R0025
       STORE           G75,L0a
       JUMP            L0050
L0052: CALL_1S         R0037 -> G42
       JUMP            L0080
L0053: JE              L03,#01 [FALSE] L0059
       JZ              L0b [FALSE] L0054
       STORE           L0b,#01
       JUMP            L0058
L0054: LOADW           #2288,#00 -> L07
       STOREW          #2288,#00,L05
       ADD             L05,#01 -> L06
L0055: JG              L06,L07 [TRUE] L0058
       JZ              L08 [TRUE] L0056
       LOADW           #2288,L06 -> -(SP)
       CALL_2N         R0038 ((SP)+)
       JUMP            L0057
L0056: LOADW           #2288,L06 -> -(SP)
       CALL_2N         R0039 ((SP)+)
L0057: INC             L06
       JUMP            L0055
L0058: JUMP            L0064
L0059: JZ              G73 [FALSE] L0060
       JZ              G61 [TRUE] L0060
       CALL_1N         R0025
       STORE           G75,L0a
       JUMP            L0050
L0060: JE              L02,#06 [FALSE] L0061
       CALL_2S         R0027 (L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0061
       STORE           G42,#0b
       JUMP            L0080
L0061: JZ              L0b [FALSE] L0062
       STORE           L09,L03
       JUMP            L0064
L0062: JZ              L08 [TRUE] L0063
       CALL_2N         R0038 (L03)
       JUMP            L0064
L0063: CALL_2N         R0039 (L03)
L0064: JUMP            L0071
L0065: CALL_VS         R0030 (G35,G36,L02) -> L03
       JE              L03,#2710 [FALSE] L0066
       RET             L03
L0066: JZ              L03 [FALSE] L0068
       JZ              G61 [TRUE] L0067
       CALL_1N         R0025
       STORE           G75,L0a
       JUMP            L0050
L0067: CALL_1S         R0037 -> G42
       RET             L03
L0068: GET_PARENT      L03 -> L04
       JE              L04,G35 [TRUE] L0070
       JE              G3f,#01 [FALSE] L0069
       STORE           G7b,G7a
       STORE           G42,#06
       JUMP            L0080
L0069: STORE           G41,L03
L0070: STORE           L09,L03
L0071: ADD             G7a,G73 -> G75
       CALL_1S         R0056 -> L04
       JE              L04,"and","and","and" [TRUE] L0072
       JE              L04,"but","except","but" [TRUE] L0072
       JE              L04,"comma," [FALSE] L0076
L0072: JZ              L0c [FALSE] L0073
       STORE           G42,#07
       JUMP            L0080
L0073: JE              L04,"but","except","but" [FALSE] L0074
       SUB             #01,L08 -> L08
L0074: JZ              L0b [FALSE] L0075
       STOREW          #2288,#00,#01
       STOREW          #2288,#01,L09
       STORE           L0b,#01
L0075: STORE           G4e,#01
       STORE           G4c,#00
       JUMP            L0042
L0076: DEC             G75
L0077: JZ              L0b [TRUE] L0078
       STORE           L09,#00
       STORE           G5a,L02
       JUMP            L0079
L0078: JE              G5b,#01 [FALSE] L0079
       AND             G5c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0079
       JL              G5d,#64 [FALSE] L0079
       JG              G5d,#01 [FALSE] L0079
       STORE           G59,#01
       STORE           G58,G5d
       STORE           G42,#10
       JUMP            L0080
L0079: ADD             G47,#02 -> -(SP)
       STOREW          L00,(SP)+,L09
       INC             G47
       STOREW          #2328,G45,L09
       RTRUE           
L0080: JZ              G63 [TRUE] L0081
       JE              G5e,#01 [FALSE] L0081
       STORE           G63,#00
       STORE           G75,L0a
       JUMP            L0049
L0081: RFALSE          

Routine R0030, 10 locals

       STORE           G73,#00
       STORE           G71,#00
       STORE           G74,G75
       STORE           G70,#00
       CALL_VN         R0043 (L00,L01,L02)
       ADD             G74,G73 -> G75
       JZ              G71 [FALSE] L0001
       INC             G75
       RFALSE          
L0001: JG              G74,G76 [TRUE] L0003
       JE              G71,#01 [FALSE] L0002
       LOADW           #2468,#00 -> L04
       RET             L04
L0002: JG              G75,G76 [TRUE] L0003
       CALL_1S         R0056 -> L04
       DEC             G75
       JE              L04,"and","and","and" [TRUE] L0003
       JE              L04,"comma,","then","then" [TRUE] L0003
       JE              L04,"then","but","except" [TRUE] L0003
       JE              L04,"but" [TRUE] L0003
       JE              G56,#0f [TRUE] RFALSE
L0003: STORE           G72,#00
       JE              G71,#01 [FALSE] L0004
       LOADW           #2468,#00 -> L04
L0004: JG              G71,#01 [FALSE] L0005
       CALL_2S         R0031 (L02) -> L04
       JE              L04,#ffff [TRUE] RFALSE
       JE              L04,#01 [TRUE] RTRUE
L0005: JZ              L04 [TRUE] L0008
       JZ              G4e [TRUE] L0006
       RET             L04
L0006: JZ              G4c [FALSE] L0007
       STORE           G4c,G45
L0007: STOREW          #2328,G45,L04
       RET             L04
L0008: JG              G74,G76 [FALSE] L0009
       JUMP            L0035
L0009: JE              L02,#06 [FALSE] L0010
       CALL_VN         R0244 (#1007,#2d)
       JUMP            L0011
L0010: CALL_VN         R0244 (#1007,#2e)
L0011: STORE           L05,G72
       STORE           L09,#00
       STORE           L04,#01
L0012: JG              L04,G72 [TRUE] L0019
L0013: LOADW           #24e8,L09 -> -(SP)
       JE              (SP)+,L04 [TRUE] L0014
       SUB             #00,L04 -> -(SP)
       LOADW           #24e8,L09 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0014
       INC             L09
       JUMP            L0013
L0014: LOADW           #2468,L09 -> L06
       LOADW           #24e8,L09 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0015
       CALL_2N         R0104 (L06)
       JUMP            L0016
L0015: CALL_2N         R0103 (L06)
L0016: SUB             L05,#01 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0017
       PRINT           ", "
L0017: SUB             L05,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0018
       PRINT_PADDR     S034
L0018: INC             L04
       JUMP            L0012
L0019: PRINT           "?
"
L0020: STORE           L04,#02
L0021: JL              L04,#78 [FALSE] L0022
       STOREB          #26a2,L04,#20
       INC             L04
       JUMP            L0021
L0022: CALL_VS         R0022 (#26a2,#271b) -> L08
       LOADW           #271b,#01 -> L03
       JE              L03,"all","each","every" [TRUE] L0023
       JE              L03,"everythin","both" [FALSE] L0028
L0023: JE              L02,#02,#03,#04 [TRUE] L0024
       JE              L02,#05 [FALSE] L0027
L0024: LOADW           #2288,#00 -> L07
       STORE           L04,#00
L0025: JL              L04,G71 [FALSE] L0026
       ADD             L07,L04 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0026
       LOADW           #2468,L04 -> L06
       ADD             L04,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       STOREW          #2288,(SP)+,L06
       INC             L04
       JUMP            L0025
L0026: ADD             L04,L07 -> -(SP)
       STOREW          #2288,#00,(SP)+
       RTRUE           
L0027: CALL_VN         R0244 (#1007,#2f)
       JUMP            L0020
L0028: JZ              L03 [TRUE] L0029
       LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0029
       JE              L03,"long","short","normal" [TRUE] L0029
       JE              L03,"brief","full","verbose" [TRUE] L0029
       CALL_VN         R0065 (#25e8,#26a2)
       RET             #2710
L0029: CALL_2S         R0058 (G74) -> -(SP)
       SUB             (SP)+,#25e8 -> L06
       LOADB           #26a2,#01 -> -(SP)
       ADD             (SP)+,#01 -> L07
       LOADB           #25e8,#00 -> -(SP)
       ADD             #25e8,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L05
L0030: ADD             #25e8,L06 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       JL              L05,(SP)+ [TRUE] L0031
       SUB             L05,L07 -> -(SP)
       LOADB           #00,(SP)+ -> -(SP)
       STOREB          L05,#00,(SP)+
       DEC             L05
       JUMP            L0030
L0031: STORE           L04,#00
L0032: JL              L04,L07 [FALSE] L0033
       ADD             #02,L04 -> -(SP)
       LOADB           #26a2,(SP)+ -> -(SP)
       ADD             L06,L04 -> -(SP)
       STOREB          #25e8,(SP)+,(SP)+
       INC             L04
       JUMP            L0032
L0033: ADD             L06,L07 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       STOREB          #25e8,(SP)+,#20
       LOADB           #25e8,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       STOREB          #25e8,#01,(SP)+
       LOADB           #25e8,#00 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       LOADB           #25e8,#01 -> -(SP)
       JL              (SP)+,(SP)+ [TRUE] L0034
       LOADB           #25e8,#00 -> -(SP)
       STOREB          #25e8,#01,(SP)+
L0034: RET             #2710
L0035: JE              L02,#06 [FALSE] L0036
       CALL_VN         R0244 (#1007,#30)
       JUMP            L0037
L0036: CALL_VN         R0244 (#1007,#31)
L0037: STORE           L04,#02
L0038: JL              L04,#78 [FALSE] L0039
       STOREB          #26a2,L04,#20
       INC             L04
       JUMP            L0038
L0039: CALL_VS         R0022 (#26a2,#271b) -> L08
       LOADW           #271b,#01 -> L03
       JZ              L03 [TRUE] L0040
       LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0040
       CALL_VN         R0065 (#25e8,#26a2)
       RET             #2710
L0040: JZ              G4c [TRUE] L0054
       STORE           L05,G4c
L0041: JL              L05,G45 [FALSE] L0054
       LOADW           #2328,L05 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0042
       JUMP            L0053
L0042: LOADB           #25e8,#01 -> -(SP)
       ADD             #02,(SP)+ -> L04
       STORE           Gef,#25e8
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       PUSH            L04
       INC             L04
       STOREB          #25e8,(SP)+,#20
       JL              G30,#05 [TRUE] L0043
       PRINT_PADDR     S106
       LOADW           #2328,L05 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "]
"
L0043: STOREW          #271b,#01,#00
       LOADW           #2328,L05 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0049
       LOADW           #2328,L05 -> -(SP)
       JL              (SP)+,#2710 [FALSE] L0049
       LOADW           #2328,L05 -> -(SP)
       CALL_2N         R0072 ((SP)+)
       STORE           L06,#01
       JUMP            L0045
L0044: ADD             L06,#03 -> L06
L0045: LOADW           #282d,#00 -> -(SP)
       JG              L06,(SP)+ [TRUE] L0048
       ADD             L06,#02 -> -(SP)
       LOADW           #282d,(SP)+ -> -(SP)
       LOADW           #2328,L05 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0047
       LOADW           #282d,L06 -> -(SP)
       STOREW          #271b,#01,(SP)+
       JL              G30,#05 [TRUE] L0046
       PRINT           "[Using pronoun '"
       LOADW           #271b,#01 -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "']
"
L0046: JUMP            L0048
L0047: JUMP            L0044
L0048: JUMP            L0050
L0049: LOADW           #2328,L05 -> -(SP)
       SUB             (SP)+,#2710 -> -(SP)
       CALL_2S         R0064 ((SP)+) -> -(SP)
       STOREW          #271b,#01,(SP)+
       JL              G30,#05 [TRUE] L0050
       PRINT           "[Using preposition '"
       LOADW           #271b,#01 -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "']
"
L0050: LOADW           #271b,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0053
       ADD             #25e8,L04 -> L06
       OUTPUT_STREAM   REDIRECT_ENABLE,L06
       LOADW           #271b,#01 -> -(SP)
       PRINT_ADDR      (SP)+
       OUTPUT_STREAM   #fffd
       LOADW           L06,#00 -> L06
       STORE           L07,L04
L0051: ADD             L04,L06 -> -(SP)
       JL              L07,(SP)+ [FALSE] L0052
       ADD             L07,#02 -> -(SP)
       LOADB           #25e8,(SP)+ -> -(SP)
       STOREB          #25e8,L07,(SP)+
       INC             L07
       JUMP            L0051
L0052: ADD             L04,L06 -> L04
       SUB             L04,#02 -> -(SP)
       STOREB          #25e8,#01,(SP)+
L0053: INC             L05
       JUMP            L0041
L0054: LOADB           #25e8,#01 -> -(SP)
       ADD             #02,(SP)+ -> L04
       STORE           Gef,#25e8
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       PUSH            L04
       INC             L04
       STOREB          #25e8,(SP)+,#20
       STORE           L05,#00
       JUMP            L0056
L0055: INC             L04
       INC             L05
L0056: LOADB           #26a2,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0058
       ADD             L05,#02 -> -(SP)
       LOADB           #26a2,(SP)+ -> -(SP)
       STOREB          #25e8,L04,(SP)+
       STORE           Gef,#25e8
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
       LOADB           #25e8,#01 -> -(SP)
       JE              (SP)+,#78 [FALSE] L0057
       JUMP            L0058
L0057: JUMP            L0055
L0058: JL              L04,#78 [FALSE] L0059
       STOREB          #25e8,L04,#20
       INC             L04
       JUMP            L0058
L0059: RET             #2710

Routine R0031, 10 locals

       SUB             G71,#01 -> L02
       STORE           L04,#00
       LOADW           #2468,#00 -> L05
       STORE           L01,#00
L0001: JG              L01,L02 [TRUE] L0012
       LOADW           #2468,L01 -> L06
       STOREW          #2568,L01,L04
       STORE           L07,L06
L0002: GET_PARENT      L07 -> L07
       JE              L07,G36,G35,#00 [FALSE] L0002
       JE              L00,#01 [FALSE] L0003
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G35 [FALSE] L0003
       INC             L04
       STORE           L05,L06
L0003: JE              L00,#02 [FALSE] L0004
       JE              L07,G36 [FALSE] L0004
       JE              L06,G35 [TRUE] L0004
       TEST_ATTR       L06,#03 [TRUE] L0004
       TEST_ATTR       L06,#11 [TRUE] L0004
       INC             L04
       STORE           L05,L06
L0004: JE              L00,#03 [FALSE] L0005
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G35 [FALSE] L0005
       INC             L04
       STORE           L05,L06
L0005: JE              L00,#04,#05 [FALSE] L0010
       JE              G51,#ffff [FALSE] L0008
       JE              L00,#04 [FALSE] L0006
       INC             L04
       STORE           L05,L06
L0006: JE              L00,#05 [FALSE] L0007
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G35 [TRUE] L0007
       INC             L04
       STORE           L05,L06
L0007: JUMP            L0010
L0008: JE              L00,#04 [FALSE] L0009
       JE              L06,G51 [TRUE] L0009
       INC             L04
       STORE           L05,L06
L0009: JE              L00,#05 [FALSE] L0010
       JIN             L06,G51 [FALSE] L0010
       INC             L04
       STORE           L05,L06
L0010: JE              L00,#06 [FALSE] L0011
       CALL_2S         R0027 (L06) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0011
       INC             L04
       STORE           L05,L06
L0011: LOADW           #2568,L01 -> -(SP)
       SUB             L04,(SP)+ -> -(SP)
       MUL             #03e8,(SP)+ -> -(SP)
       STOREW          #2568,L01,(SP)+
       INC             L01
       JUMP            L0001
L0012: JE              L04,#01 [FALSE] L0013
       RET             L05
L0013: JE              L00,#06 [FALSE] L0014
       JZ              L04 [FALSE] L0014
       LOADW           #2468,#00 -> -(SP)
       RET_POPPED      
L0014: JZ              G5b [FALSE] L0015
       STORE           G5c,#00
L0015: CALL_1N         R0033
       JZ              G71 [FALSE] L0016
       RET             #ffff
L0016: JE              G5b,#01 [FALSE] L0028
       AND             G5c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       JE              L00,#02,#03,#04 [TRUE] L0017
       JE              L00,#05 [TRUE] L0017
       STORE           G42,#07
       RET             #ffff
L0017: STORE           L01,#00
       LOADW           #2288,#00 -> L09
       CALL_1S         R0034 -> L02
       JUMP            L0019
L0018: CALL_1S         R0034 -> L02
L0019: JE              L02,#ffff [TRUE] L0026
       JL              L01,G5d [FALSE] L0026
       ADD             L01,L09 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0026
       STORE           L08,#00
       TEST_ATTR       L02,#03 [TRUE] L0020
       TEST_ATTR       L02,#1a [TRUE] L0020
       STORE           L08,#01
L0020: JE              L00,#03,#04 [FALSE] L0021
       GET_PARENT      L02 -> -(SP)
       JE              (SP)+,G35 [TRUE] L0021
       STORE           L08,#00
L0021: CALL_VS         R0445 (L02,L08) -> L03
       JE              L03,#01 [FALSE] L0022
       STORE           L08,#01
       JUMP            L0023
L0022: JE              L03,#02 [FALSE] L0023
       STORE           L08,#00
L0023: JE              L08,#01 [FALSE] L0024
       INC             L01
       ADD             L01,L09 -> -(SP)
       STOREW          #2288,(SP)+,L02
       JUMP            L0025
L0024: STORE           L01,L01
L0025: JUMP            L0018
L0026: JL              L01,G5d [FALSE] L0027
       JL              G5d,#64 [FALSE] L0027
       STORE           G42,#10
       STORE           G58,G5d
       LOADW           #2288,#00 -> G59
       RET             #ffff
L0027: ADD             L01,L09 -> -(SP)
       STOREW          #2288,#00,(SP)+
       STORE           G5a,L00
       RTRUE           
L0028: STORE           L01,#00
L0029: JL              L01,G71 [FALSE] L0030
       STOREW          #24e8,L01,#00
       INC             L01
       JUMP            L0029
L0030: STORE           L06,#01
       STORE           L01,#00
L0031: JL              L01,G71 [FALSE] L0036
       LOADW           #24e8,L01 -> -(SP)
       JZ              (SP)+ [FALSE] L0035
       PUSH            L06
       INC             L06
       STOREW          #24e8,L01,(SP)+
       STORE           L08,#00
       ADD             L01,#01 -> L02
L0032: JL              L02,G71 [FALSE] L0034
       LOADW           #24e8,L02 -> -(SP)
       JZ              (SP)+ [FALSE] L0033
       LOADW           #2468,L02 -> -(SP)
       LOADW           #2468,L01 -> -(SP)
       CALL_VS         R0035 ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0033
       STORE           L08,#01
       LOADW           #24e8,L01 -> -(SP)
       STOREW          #24e8,L02,(SP)+
L0033: INC             L02
       JUMP            L0032
L0034: JE              L08,#01 [FALSE] L0035
       SUB             #01,L06 -> -(SP)
       STOREW          #24e8,L01,(SP)+
L0035: INC             L01
       JUMP            L0031
L0036: DEC             L06
       STORE           G72,L06
       JG              L06,#01 [FALSE] L0042
       JZ              G5b [FALSE] L0042
       STORE           L02,#00
       STORE           L04,#00
       STORE           L01,#00
L0037: JL              L01,G71 [FALSE] L0040
       LOADW           #2468,L01 -> -(SP)
       CALL_VS         R0445 ((SP)+,#02) -> L03
       JE              L03,L02 [FALSE] L0038
       INC             L04
L0038: JG              L03,L02 [FALSE] L0039
       STORE           L02,L03
       STORE           L04,#01
       LOADW           #2468,L01 -> L05
L0039: INC             L01
       JUMP            L0037
L0040: JE              L04,#01 [FALSE] L0041
       RET             L05
L0041: RFALSE          
L0042: JE              L06,#01 [FALSE] L0043
       STORE           G4e,#01
L0043: CALL_1S         R0034 -> -(SP)
       RET_POPPED      

Routine R0032, 3 locals

       JE              G5a,#04,#05 [FALSE] L0006
       STORE           L01,#01
       STORE           L02,#00
L0001: LOADW           #2288,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0005
       JE              G5a,#04 [FALSE] L0002
       LOADW           #2288,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
L0002: JE              G5a,#05 [FALSE] L0004
       LOADW           #2288,L01 -> -(SP)
       JIN             (SP)+,L00 [FALSE] L0004
L0003: INC             L02
       LOADW           #2288,L01 -> -(SP)
       STOREW          #2288,L02,(SP)+
L0004: INC             L01
       JUMP            L0001
L0005: STOREW          #2288,#00,L02
L0006: JE              G5a,#02 [FALSE] L0014
       JE              G4f,#0f [FALSE] L0014
       STORE           L01,#01
       STORE           L02,#00
L0007: LOADW           #2288,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0009
       GET_PARENT      G35 -> -(SP)
       LOADW           #2288,L01 -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0008
       INC             L02
L0008: INC             L01
       JUMP            L0007
L0009: JE              G64,#02 [TRUE] L0010
       JG              L02,#00 [FALSE] L0014
L0010: STORE           L01,#01
       STORE           L02,#00
L0011: LOADW           #2288,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0013
       GET_PARENT      G35 -> -(SP)
       LOADW           #2288,L01 -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0012
       INC             L02
       LOADW           #2288,L01 -> -(SP)
       STOREW          #2288,L02,(SP)+
L0012: INC             L01
       JUMP            L0011
L0013: STOREW          #2288,#00,L02
L0014: LOADW           #2288,#00 -> L01
       JZ              L01 [FALSE] L0015
       RET             #11
L0015: RFALSE          

Routine R0033, 8 locals

       AND             G5c,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L05,#2d -> L05
L0001: AND             G5c,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       ADD             L05,#2d -> L05
L0002: AND             G5c,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       ADD             L05,#2d -> L05
L0003: AND             G5c,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       ADD             L05,#2d -> L05
L0004: JZ              G5f [TRUE] L0005
       ADD             L05,#2d -> L05
L0005: STORE           L06,#1e
       STORE           L07,#14
       JE              G4f,#0f,#11 [FALSE] L0006
       STORE           L06,#14
       STORE           L07,#1e
L0006: STORE           L03,#00
L0007: JL              L03,G71 [FALSE] L0020
       LOADW           #2468,L03 -> L02
       GET_PARENT      L02 -> L00
       STORE           L01,#00
       AND             G5c,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JE              L00,G35 [FALSE] L0008
       ADD             L01,#2d -> L01
L0008: AND             G5c,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       JE              L00,G36 [FALSE] L0009
       ADD             L01,#2d -> L01
L0009: AND             G5c,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       TEST_ATTR       L02,#09 [FALSE] L0010
       ADD             L01,#2d -> L01
L0010: AND             G5c,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       TEST_ATTR       L02,#09 [TRUE] L0011
       ADD             L01,#2d -> L01
L0011: JZ              G5f [TRUE] L0012
       JE              L00,G5f [FALSE] L0012
       ADD             L01,#2d -> L01
L0012: JL              L01,L05 [FALSE] L0013
       STOREW          #2468,L03,#ffff
       JUMP            L0019
L0013: STORE           L01,#00
       TEST_ATTR       L02,#03 [TRUE] L0014
       STORE           L01,#32
L0014: JE              L00,G35 [FALSE] L0015
       ADD             L01,L06 -> L01
       JUMP            L0017
L0015: JE              L00,G36 [FALSE] L0016
       ADD             L01,L07 -> L01
       JUMP            L0017
L0016: JZ              L01 [FALSE] L0017
       JE              L00,#06 [TRUE] L0017
       ADD             L01,#0a -> L01
L0017: CALL_VS         R0445 (L02,#02) -> -(SP)
       ADD             L01,(SP)+ -> L01
       MUL             #02,L01 -> L01
       CALL_2S         R0062 (L02) -> -(SP)
       LOADW           #2815,(SP)+ -> -(SP)
       AND             G60,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       INC             L01
L0018: LOADW           #2568,L03 -> -(SP)
       ADD             (SP)+,L01 -> -(SP)
       STOREW          #2568,L03,(SP)+
L0019: INC             L03
       JUMP            L0007
L0020: STORE           L03,#00
L0021: JL              L03,G71 [FALSE] L0027
L0022: LOADW           #2468,L03 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0026
       SUB             G71,#01 -> -(SP)
       JE              L03,(SP)+ [FALSE] L0023
       DEC             G71
       JUMP            L0026
L0023: STORE           L04,L03
L0024: JL              L04,G71 [FALSE] L0025
       ADD             L04,#01 -> -(SP)
       LOADW           #2468,(SP)+ -> -(SP)
       STOREW          #2468,L04,(SP)+
       INC             L04
       JUMP            L0024
L0025: DEC             G71
       JUMP            L0022
L0026: INC             L03
       JUMP            L0021
L0027: RTRUE           

Routine R0034, 4 locals

       STORE           L00,#00
       STORE           L02,#ffff
       STORE           L03,#00
L0001: JL              L03,G71 [FALSE] L0003
       LOADW           #2468,L03 -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       LOADW           #2568,L03 -> L01
       JG              L01,L02 [FALSE] L0002
       STORE           L02,L01
       STORE           L00,L03
L0002: INC             L03
       JUMP            L0001
L0003: JL              L02,#00 [FALSE] L0004
       RET             #ffff
L0004: LOADW           #2468,L00 -> L03
       STOREW          #2468,L00,#ffff
       RET             L03

Routine R0035, 9 locals

       JE              L00,L01 [TRUE] RTRUE
       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       GET_PARENT      L00 -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       GET_PARENT      L01 -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       GET_PROP        L00,#30 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       GET_PROP        L01,#30 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: GET_PROP        L01,#30 -> -(SP)
       GET_PROP        L00,#30 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] RFALSE
       STORE           G31,#1004
       STORE           G32,L00
       STORE           G33,L01
       STORE           L07,G75
       CALL_VS         R0086 (L00,#30) -> L06
       STORE           G75,L07
       JE              L06,#ffff [TRUE] RTRUE
       JE              L06,#fffe [TRUE] RFALSE
L0002: GET_PROP_ADDR   L00,#01 -> L02
       GET_PROP_ADDR   L00,#01 -> Gef
       JZ              Gef [TRUE] L0003
       GET_PROP_LEN    Gef -> Gef
L0003: PUSH            Gef
       DIV             (SP)+,#02 -> L04
       GET_PROP_ADDR   L01,#01 -> L03
       GET_PROP_ADDR   L01,#01 -> Gef
       JZ              Gef [TRUE] L0004
       GET_PROP_LEN    Gef -> Gef
L0004: PUSH            Gef
       DIV             (SP)+,#02 -> L05
       STORE           L06,#00
L0005: JL              L06,L04 [FALSE] L0009
       STORE           L08,#00
       STORE           L07,#00
L0006: JL              L07,L05 [FALSE] L0008
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0007
       STORE           L08,#01
L0007: INC             L07
       JUMP            L0006
L0008: JZ              L08 [TRUE] RFALSE
       INC             L06
       JUMP            L0005
L0009: STORE           L07,#00
L0010: JL              L07,L05 [FALSE] L0014
       STORE           L08,#00
       STORE           L06,#00
L0011: JL              L06,L04 [FALSE] L0013
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0012
       STORE           L08,#01
L0012: INC             L06
       JUMP            L0011
L0013: JZ              L08 [TRUE] RFALSE
       INC             L07
       JUMP            L0010
L0014: RTRUE           

Routine R0036, 4 locals

       JZ              L00 [FALSE] L0002
       STORE           L01,G77
       CALL_2S         R0008 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0442 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_ADDR      L01
L0001: INC             L00
       STORE           L03,#01
L0002: STORE           L02,L00
L0003: JL              L02,G45 [FALSE] L0011
       LOADW           #2328,L02 -> L01
       JE              L01,#ffff [FALSE] L0004
       JUMP            L0010
L0004: JZ              L03 [TRUE] L0005
       PRINT_CHAR      ' '
L0005: JZ              L01 [FALSE] L0006
       PRINT_PADDR     S032
       JUMP            L0009
L0006: JE              L01,#01 [FALSE] L0007
       PRINT_PADDR     S033
       JUMP            L0009
L0007: JL              L01,#2710 [TRUE] L0008
       SUB             L01,#2710 -> -(SP)
       CALL_2S         R0064 ((SP)+) -> -(SP)
       PRINT_ADDR      (SP)+
       JUMP            L0009
L0008: CALL_2N         R0104 (L01)
L0009: STORE           L03,#01
L0010: INC             L02
       JUMP            L0003
L0011: RTRUE           

Routine R0037, 3 locals

       STORE           G7b,G7a
       JZ              G6b [TRUE] L0001
       STORE           G6c,G6b
       RET             #12
L0001: DEC             G75
       CALL_1S         R0056 -> L01
       STORE           L02,#04
       JE              L01,G66 [FALSE] L0002
       STORE           G68,G66
       STORE           G69,G67
       STORE           L02,#0e
L0002: STORE           L00,G35
L0003: GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PARENT      L00 -> L00
       JUMP            L0003
L0004: TEST_ATTR       L00,#18 [FALSE] L0005
       SUB             G75,#01 -> -(SP)
       CALL_VS         R0052 (L00,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
       STORE           L02,#0d
L0005: JG              G42,L02 [FALSE] L0006
       RET             G42
L0006: RET             L02

Routine R0038, 3 locals

       LOADW           #2288,#00 -> L01
       JE              L01,#3f [FALSE] L0001
       STORE           G39,#01
       RTRUE           
L0001: STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0003
       LOADW           #2288,L02 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L02
       JUMP            L0002
L0003: INC             L01
       STOREW          #2288,L01,L00
       STOREW          #2288,#00,L01
       RTRUE           

Routine R0039, 5 locals

       LOADW           #2288,#00 -> L01
       STORE           L04,#00
       STORE           L02,#01
L0001: JG              L02,L01 [TRUE] L0005
       LOADW           #2288,L02 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0004
       STORE           L03,L02
L0002: JG              L03,L01 [TRUE] L0003
       ADD             L03,#01 -> -(SP)
       LOADW           #2288,(SP)+ -> -(SP)
       STOREW          #2288,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: DEC             L01
       PUSH            L01
       STOREW          #2288,#00,(SP)+
       RET             L04
L0004: INC             L02
       JUMP            L0001
L0005: STORE           L04,#09
       RET             L04

Routine R0040, 4 locals

L0001: LOADW           #2288,#00 -> L01
       STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0004
       LOADW           #2288,L02 -> L03
       TEST_ATTR       L03,L00 [TRUE] L0003
       CALL_2N         R0039 (L03)
       JUMP            L0001
L0003: INC             L02
       JUMP            L0002
L0004: RTRUE           

Routine R0041, 1 local

       JG              G54,#00 [FALSE] L0001
       JL              G54,#31 [FALSE] L0001
       SUB             G54,#01 -> -(SP)
       TEST_ATTR       L00,(SP)+ [TRUE] RTRUE
       RFALSE          
L0001: STORE           G2b,L00
       CALL_1S         G54 -> -(SP)
       RET_POPPED      

Routine R0042, 5 locals

       MUL             L00,#02 -> -(SP)
       SUB             (SP)+,#01 -> L03
       MUL             L02,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       PUSH            L04
       INC             L04
       LOADW           L01,(SP)+ -> -(SP)
       PUSH            L03
       INC             L03
       STOREW          #2661,(SP)+,(SP)+
       LOADW           L01,L04 -> -(SP)
       STOREW          #2661,L03,(SP)+
       RTRUE           

Routine R0043, 4 locals

       STORE           L03,#00
       JZ              G6b [TRUE] L0001
       STORE           G6d,#02
       CALL_1S         G6b -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JE              G35,L00,L01 [FALSE] L0002
       CALL_2S         R0440 (G35) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: JE              L02,#05 [FALSE] L0004
       JE              G51,#ffff [TRUE] L0004
       CALL_2S         R0044 (G51) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VN         R0047 (G51,#00,L02)
L0003: JUMP            L0009
L0004: JZ              L00 [TRUE] L0006
       TEST_ATTR       L00,#14 [TRUE] L0005
       TEST_ATTR       L00,#04 [FALSE] L0006
L0005: CALL_VN         R0048 (L00,L00,L02)
L0006: CALL_VN         R0047 (L00,L01,L02)
       JZ              L01 [TRUE] L0008
       TEST_ATTR       L01,#14 [TRUE] L0007
       TEST_ATTR       L01,#04 [FALSE] L0008
L0007: CALL_VN         R0048 (L01,L01,L02)
L0008: CALL_VN         R0047 (L01,#00,L02)
L0009: JE              #13,L00,L01 [FALSE] L0011
       CALL_VN         R0048 (G35,G35,L02)
       GET_PARENT      G35 -> -(SP)
       PULL            Gef
       TEST_ATTR       Gef,#14 [TRUE] L0010
       TEST_ATTR       Gef,#04 [FALSE] L0011
L0010: GET_PARENT      G35 -> -(SP)
       GET_PARENT      G35 -> -(SP)
       CALL_VN         R0048 ((SP)+,(SP)+,L02)
L0011: RTRUE           

Routine R0044, 1 local

       TEST_ATTR       L00,#14 [TRUE] RTRUE
       TEST_ATTR       L00,#17 [TRUE] RTRUE
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] RTRUE
L0001: RFALSE          

Routine R0045, 1 local

       JE              G6a,#00,#01 [TRUE] L0001
       CALL_2N         R0046 (L00)
       RTRUE           
L0001: STORE           G75,G74
       CALL_2N         R0051 (L00)
       STORE           G70,#01
       RTRUE           

Routine R0046, 3 locals

       STORE           L01,G6a
       STORE           L02,G32
       STORE           Gef,G6a
       JE              Gef,#03 [FALSE] L0003
       GET_PROP        L00,#1a -> -(SP)
       JE              (SP)+,#00,#ffff [FALSE] L0001
       RTRUE           
L0001: JZ              G32 [FALSE] L0002
       CALL_VS         R0086 (L00,#1a) -> G32
L0002: JUMP            L0011
L0003: JE              Gef,#04 [FALSE] L0006
       GET_PROP        L00,#1b -> -(SP)
       JE              (SP)+,#00,#ffff [FALSE] L0004
       RTRUE           
L0004: JZ              G32 [FALSE] L0005
       CALL_VS         R0086 (L00,#1b) -> G32
L0005: JUMP            L0011
L0006: JE              Gef,#02 [FALSE] L0008
       GET_PROP_ADDR   L00,#2c -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       RTRUE           
L0007: CALL_VN         R0084 (L00,#2c)
       JUMP            L0011
L0008: JE              Gef,#06 [FALSE] L0010
       JE              L00,G32 [FALSE] L0009
       STORE           G33,#01
L0009: JUMP            L0011
L0010: JE              Gef,#05 [FALSE] L0011
       CALL_2N         G32 (L00)
       STORE           G32,L02
L0011: STORE           G6a,L01
       RTRUE           

Routine R0047, 3 locals

       JZ              L00 [TRUE] RTRUE
       JZ              G5b [FALSE] L0001
       JE              L00,G36 [FALSE] L0001
       JZ              G6a [FALSE] L0001
       JE              L02,#06 [TRUE] L0001
       CALL_2N         R0047 (#06)
L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: PULL            L00
       JZ              L00 [TRUE] L0004
L0003: CALL_VN         R0048 (L00,L01,L02)
       GET_SIBLING     L00 -> L00 [TRUE] L0003
L0004: RTRUE           

Routine R0048, 6 locals

       JE              L02,#04 [FALSE] L0001
       JE              L00,G51 [FALSE] L0001
       JUMP            L0006
L0001: JE              G6a,#00,#01 [TRUE] L0002
       CALL_2N         R0046 (L00)
       JUMP            L0006
L0002: JG              G74,G76 [TRUE] L0004
       STORE           G75,G74
       CALL_1S         R0055 -> L03
       JE              L03,#01 [FALSE] L0003
       JE              G12,L00 [FALSE] L0003
       CALL_VN         R0050 (L00,#01)
L0003: JL              L03,#02 [TRUE] L0004
       JL              L03,#80 [FALSE] L0004
       LOADW           #282d,L03 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0004
       CALL_VN         R0050 (L00,#01)
L0004: STORE           G75,G74
       CALL_2S         R0051 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0006
       JG              G62,#00 [FALSE] L0006
       JE              G74,G62 [TRUE] L0006
       STORE           G75,G62
       CALL_2S         R0051 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0005
       STORE           G74,G62
       CALL_1N         R0025
L0005: STORE           G75,G74
L0006: GET_CHILD       L00 -> -(SP) [FALSE] L0007
L0007: JZ              (SP)+ [TRUE] L0008
       JE              L00,L01 [TRUE] L0008
       CALL_2S         R0044 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0008
       CALL_VN         R0047 (L00,L01,L02)
L0008: GET_PROP_ADDR   L00,#18 -> L04
       JZ              L04 [TRUE] L0012
       LOADW           L04,#00 -> -(SP)
       CALL_VS         R0110 ((SP)+,G03) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0009
       ADD             #02,L02 -> G6e
       CALL_VN         R0086 (L00,#18)
       STORE           G6e,#00
       JUMP            L0012
L0009: GET_PROP_ADDR   L00,#18 -> Gef
       JZ              Gef [TRUE] L0010
       GET_PROP_LEN    Gef -> Gef
L0010: STORE           L05,Gef
       STORE           L03,#00
L0011: MUL             #02,L03 -> -(SP)
       JL              (SP)+,L05 [FALSE] L0012
       LOADW           L04,L03 -> -(SP)
       CALL_VN         R0048 ((SP)+,#00,L02)
       INC             L03
       JUMP            L0011
L0012: RTRUE           

Routine R0049, 1 local

       JL              G6e,#02 [TRUE] L0001
       SUB             G6e,#02 -> -(SP)
       CALL_VN         R0048 (L00,#00,(SP)+)
L0001: JE              G6e,#01 [FALSE] L0002
       CALL_2S         R0097 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       STORE           G6f,#01
L0002: RTRUE           

Routine R0050, 3 locals

       JZ              G54 [TRUE] L0001
       CALL_2S         R0041 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       RTRUE           
L0001: JL              L01,G73 [TRUE] RTRUE
       JG              L01,G73 [FALSE] L0002
       STORE           G73,L01
       STORE           G71,#00
       JUMP            L0004
L0002: MUL             #02,G71 -> -(SP)
       JL              (SP)+,#80 [FALSE] RTRUE
       STORE           L02,#00
L0003: JL              L02,G71 [FALSE] L0004
       LOADW           #2468,L02 -> -(SP)
       JE              (SP)+,L00 [TRUE] RTRUE
       INC             L02
       JUMP            L0003
L0004: PUSH            G71
       INC             G71
       STOREW          #2468,(SP)+,L00
       RTRUE           

Routine R0051, 5 locals

       STORE           G65,#00
       JG              G75,G76 [FALSE] L0002
       JZ              G5b [TRUE] L0001
       STORE           G65,#70
L0001: CALL_VN         R0050 (L00,#00)
       RTRUE           
L0002: GET_PROP        L00,#30 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           G31,#ffff
       STORE           L04,G75
       CALL_VS         R0086 (L00,#30) -> L02
       JG              L02,#00 [FALSE] L0008
       ADD             L04,L02 -> G75
L0003: JE              G31,#1005 [FALSE] L0004
       OR              G65,#04 -> G65
L0004: AND             G65,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JZ              G63 [FALSE] L0005
       STORE           L02,#00
       JUMP            L0007
L0005: JZ              G5b [FALSE] L0006
       STORE           G5b,#01
       STORE           G5c,#00
       STORE           G5d,#00
L0006: OR              G5c,#08 -> G5c
       JZ              G5d [FALSE] L0007
       STORE           G5d,#64
L0007: CALL_VN         R0050 (L00,L02)
       RET             L02
L0008: JZ              L02 [FALSE] L0009
       JUMP            L0014
L0009: STORE           G31,#ffff
       CALL_1S         R0055 -> L03
       JE              L03,#01 [FALSE] L0010
       JE              G12,L00 [FALSE] L0010
       STORE           L02,#01
       JUMP            L0003
L0010: JL              L03,#02 [TRUE] L0011
       JL              L03,#80 [FALSE] L0011
       LOADW           #282d,L03 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0011
       STORE           L02,#01
       JUMP            L0003
L0011: DEC             G75
       STORE           L04,G75
       CALL_2S         R0446 (L00) -> L01
       JL              L01,#00 [FALSE] L0012
       INC             G75
L0012: JG              L01,#00 [FALSE] L0013
       STORE           L02,L01
       JUMP            L0003
L0013: JZ              L01 [TRUE] L0014
       SUB             G75,#01 -> -(SP)
       CALL_VS         R0052 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0016
L0014: JZ              G5b [TRUE] L0015
       STORE           L02,#00
       STORE           G31,#ffff
       JUMP            L0003
L0015: RFALSE          
L0016: JL              L01,#00 [FALSE] L0019
       STORE           L01,#01
       LOADB           L03,#06 -> -(SP)
       AND             (SP)+,#74 -> G65
       CALL_1S         R0056 -> L03
L0017: SUB             G75,#01 -> -(SP)
       CALL_VS         R0052 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       INC             L01
       JZ              L03 [TRUE] L0018
       LOADB           L03,#06 -> -(SP)
       AND             (SP)+,#74 -> -(SP)
       OR              G65,(SP)+ -> G65
L0018: CALL_1S         R0056 -> L03
       JUMP            L0017
L0019: STORE           L02,L01
       JUMP            L0003

Routine R0052, 6 locals

       JZ              L00 [TRUE] RFALSE
       STORE           L03,G75
       STORE           G75,L01
       CALL_1S         R0057 -> L02
       STORE           G75,L03
       JL              G34,#0100 [TRUE] L0002
       CALL_VS         G34 (L00,L02) -> L03
       JL              L03,#00 [TRUE] L0001
       RET             L03
L0001: SUB             #00,L03 -> L05
       JUMP            L0003
L0002: STORE           L05,G34
L0003: CALL_VS         R0488 (L00,L05) -> L03
       CALL_VS         R0489 (L00,L05) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0004: JG              L05,L04 [TRUE] L0005
       LOADW           L03,L05 -> -(SP)
       JE              L02,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0004
L0005: RFALSE          

Routine R0053, 6 locals

       CALL_VS         R0488 (L01,L02) -> L03
       CALL_VS         R0489 (L01,L02) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0001: JG              L05,L04 [TRUE] L0002
       LOADW           L03,L05 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0001
L0002: RFALSE          

Routine R0054, 3 locals

       STORE           L02,#00
L0001: JL              L02,L01 [FALSE] L0002
       LOADB           L00,L02 -> -(SP)
       ADD             #02,L02 -> -(SP)
       STOREB          #26a2,(SP)+,(SP)+
       INC             L02
       JUMP            L0001
L0002: STOREB          #26a2,#01,L01
       CALL_VN         R0020 (#26a2,#271b)
       LOADW           #271b,#01 -> -(SP)
       RET_POPPED      

Routine R0055, 3 locals

       CALL_1S         R0056 -> L00
       JZ              L00 [TRUE] RFALSE
       JE              L00,"me","myself","self" [FALSE] L0001
       RTRUE           
L0001: LOADW           #282d,#00 -> L02
       STORE           L01,#01
       JUMP            L0003
L0002: ADD             L01,#03 -> L01
L0003: JG              L01,L02 [TRUE] L0005
       LOADW           #282d,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0004
       ADD             L01,#02 -> -(SP)
       RET_POPPED      
L0004: JUMP            L0002
L0005: LOADB           L00,#06 -> -(SP)
       AND             (SP)+,#80 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       RET             L00

Routine R0056, 3 locals

       LOADB           #2661,#01 -> -(SP)
       JG              G75,(SP)+ [FALSE] L0001
       INC             G75
       RFALSE          
L0001: MUL             G75,#02 -> -(SP)
       SUB             (SP)+,#01 -> L00
       INC             G75
       LOADW           #2661,L00 -> L01
       JZ              L01 [FALSE] L0003
       MUL             G75,#04 -> -(SP)
       SUB             (SP)+,#03 -> L02
       LOADB           #2661,L02 -> -(SP)
       LOADB           #25e8,(SP)+ -> L00
       JE              L00,#2c [FALSE] L0002
       STORE           L01,"comma,"
L0002: JE              L00,#2e [FALSE] L0003
       STORE           L01,"then"
L0003: RET             L01

Routine R0057, 0 locals

       LOADB           #2661,#01 -> -(SP)
       JG              G75,(SP)+ [FALSE] L0001
       INC             G75
       RET             #ffff
L0001: CALL_1S         R0056 -> -(SP)
       RET_POPPED      

Routine R0058, 1 local

       MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           #2661,(SP)+ -> -(SP)
       ADD             #25e8,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0059, 1 local

       MUL             L00,#04 -> -(SP)
       LOADB           #2661,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0060, 10 locals

       STORE           L01,G75
       STORE           G75,L00
       CALL_1S         R0056 -> L02
       STORE           G75,L01
       CALL_2S         R0108 (L02) -> L02
       JL              L02,#01 [TRUE] L0001
       RET             L02
L0001: MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> L01
       LOADB           #2661,L01 -> L02
       ADD             L02,#25e8 -> L04
       SUB             L01,#01 -> -(SP)
       LOADB           #2661,(SP)+ -> L05
       CALL_VS         R0444 (L04,L05) -> L07
       JZ              L07 [TRUE] L0002
       RET             L07
L0002: JL              L05,#04 [TRUE] L0003
       STORE           L06,#03e8
L0003: JE              L05,#03 [FALSE] L0004
       STORE           L06,#64
L0004: JE              L05,#02 [FALSE] L0005
       STORE           L06,#0a
L0005: JE              L05,#01 [FALSE] L0006
       STORE           L06,#01
L0006: STORE           L07,#00
       STORE           L03,#00
       SUB             L05,#01 -> L05
       STORE           L03,#00
L0007: JG              L03,L05 [TRUE] L0019
       LOADB           L04,L03 -> L09
       JE              L09,#30 [FALSE] L0008
       STORE           L08,#00
       JUMP            L0018
L0008: JE              L09,#31 [FALSE] L0009
       STORE           L08,#01
       JUMP            L0018
L0009: JE              L09,#32 [FALSE] L0010
       STORE           L08,#02
       JUMP            L0018
L0010: JE              L09,#33 [FALSE] L0011
       STORE           L08,#03
       JUMP            L0018
L0011: JE              L09,#34 [FALSE] L0012
       STORE           L08,#04
       JUMP            L0018
L0012: JE              L09,#35 [FALSE] L0013
       STORE           L08,#05
       JUMP            L0018
L0013: JE              L09,#36 [FALSE] L0014
       STORE           L08,#06
       JUMP            L0018
L0014: JE              L09,#37 [FALSE] L0015
       STORE           L08,#07
       JUMP            L0018
L0015: JE              L09,#38 [FALSE] L0016
       STORE           L08,#08
       JUMP            L0018
L0016: JE              L09,#39 [FALSE] L0017
       STORE           L08,#09
       JUMP            L0018
L0017: RET             #fc18
L0018: MUL             L06,L08 -> -(SP)
       ADD             L07,(SP)+ -> L07
       DIV             L06,#0a -> L06
       INC             L03
       JUMP            L0007
L0019: JG              L05,#03 [FALSE] L0020
       STORE           L07,#2710
L0020: RET             L07

Routine R0061, 1 local

       TEST_ATTR       L00,#1c [FALSE] RTRUE
       RFALSE          

Routine R0062, 3 locals

       TEST_ATTR       L00,#00 [TRUE] L0001
       STORE           L01,#06
L0001: TEST_ATTR       L00,#1b [FALSE] L0002
       STORE           L02,#1b
L0002: TEST_ATTR       L00,#1c [FALSE] L0003
       STORE           L02,#1c
L0003: TEST_ATTR       L00,#1d [FALSE] L0004
       STORE           L02,#1d
L0004: JZ              L02 [FALSE] L0006
       JZ              L01 [FALSE] L0005
       STORE           L02,#1b
       JUMP            L0006
L0005: STORE           L02,#1d
L0006: JE              L02,#1c [FALSE] L0007
       ADD             L01,#01 -> L01
L0007: JE              L02,#1d [FALSE] L0008
       ADD             L01,#02 -> L01
L0008: TEST_ATTR       L00,#1e [FALSE] L0009
       ADD             L01,#03 -> L01
L0009: RET             L01

Routine R0063, 1 local

       LOADW           #00,#04 -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       SUB             L00,(SP)+ -> -(SP)
       DIV             (SP)+,#09 -> -(SP)
       RET_POPPED      

Routine R0064, 1 local

       MUL             #09,L00 -> -(SP)
       LOADW           #00,#04 -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0065, 4 locals

       LOADB           L00,#00 -> L03
       STORE           L02,#01
L0001: JG              L02,L03 [TRUE] L0002
       LOADB           L01,L02 -> -(SP)
       STOREB          L00,L02,(SP)+
       INC             L02
       JUMP            L0001
L0002: RTRUE           

Routine R0066, 3 locals

       LOADB           #25e8,#01 -> L02
       LOADB           #25e8,#00 -> -(SP)
       JG              L02,(SP)+ [FALSE] L0001
       LOADB           #25e8,#00 -> L02
L0001: ADD             L02,#02 -> L02
L0002: JG              L02,L00 [FALSE] L0003
       SUB             L02,#01 -> -(SP)
       LOADB           #25e8,(SP)+ -> -(SP)
       STOREB          #25e8,L02,(SP)+
       DEC             L02
       JUMP            L0002
L0003: STOREB          #25e8,L00,L01
       LOADB           #25e8,#00 -> -(SP)
       LOADB           #25e8,#01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0004
       STORE           Gef,#25e8
       STORE           Gee,#01
       LOADB           Gef,Gee -> Ged
       INC             Ged
       STOREB          Gef,Gee,Ged
L0004: RTRUE           

Routine R0067, 4 locals
    Action routine for:
        "nouns"

       CALL_VN         R0244 (#00,#01)
       LOADW           #282d,#00 -> -(SP)
       DIV             (SP)+,#03 -> L02
       JE              G12,#14 [TRUE] L0001
       INC             L02
L0001: JZ              L02 [FALSE] L0002
       CALL_VS         R0244 (#00,#04) -> -(SP)
       RET_POPPED      
L0002: STORE           L00,#01
       STORE           L03,#00
       JUMP            L0004
L0003: ADD             L00,#03 -> L00
L0004: LOADW           #282d,#00 -> -(SP)
       JG              L00,(SP)+ [TRUE] L0009
       PRINT           """
       LOADW           #282d,L00 -> -(SP)
       PRINT_ADDR      (SP)+
       PRINT           "" "
       ADD             L00,#02 -> -(SP)
       LOADW           #282d,(SP)+ -> L01
       JE              L01,#ffff [FALSE] L0005
       CALL_VN         R0244 (#00,#03)
       JUMP            L0006
L0005: CALL_VN         R0244 (#00,#02)
       CALL_2N         R0104 (L01)
L0006: INC             L03
       SUB             L02,#01 -> -(SP)
       JL              L03,(SP)+ [FALSE] L0007
       PRINT           ", "
L0007: SUB             L02,#01 -> -(SP)
       JE              L03,(SP)+ [FALSE] L0008
       PRINT_PADDR     S040
L0008: JUMP            L0003
L0009: JE              G12,#14 [TRUE] L0010
       PRINT           """
       PRINT_ADDR      "me"
       PRINT           "" "
       CALL_VN         R0244 (#00,#02)
       STORE           L02,G12
       STORE           G12,#14
       CALL_2N         R0104 (L02)
       STORE           G12,L02
L0010: PRINT_RET       "."

Routine R0068, 3 locals

       STORE           L02,#01
       JUMP            L0002
L0001: ADD             L02,#03 -> L02
L0002: LOADW           #282d,#00 -> -(SP)
       JG              L02,(SP)+ [TRUE] L0004
       LOADW           #282d,L02 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       ADD             L02,#02 -> -(SP)
       STOREW          #282d,(SP)+,L01
       RTRUE           
L0003: JUMP            L0001
L0004: CALL_2N         R0113 (#0e)
       RTRUE           

Routine R0069, 2 locals

       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#03 -> L01
L0002: LOADW           #282d,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0004
       LOADW           #282d,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       ADD             L01,#02 -> -(SP)
       LOADW           #282d,(SP)+ -> -(SP)
       RET_POPPED      
L0003: JUMP            L0001
L0004: RFALSE          

Routine R0070, 1 local

       CALL_2N         R0072 (L00)
       RTRUE           

Routine R0071, 0 locals

       JE              G7f,G82 [TRUE] L0001
       CALL_VN         R0068 ("it",G7f)
L0001: JE              G80,G83 [TRUE] L0002
       CALL_VN         R0068 ("him",G80)
L0002: JE              G81,G84 [TRUE] L0003
       CALL_VN         R0068 ("her",G81)
L0003: STORE           G82,G7f
       STORE           G83,G80
       STORE           G84,G81
       RTRUE           

Routine R0072, 3 locals

       JE              L00,G12 [FALSE] L0001
       RTRUE           
L0001: CALL_1N         R0071
       CALL_2S         R0062 (L00) -> -(SP)
       LOADW           #2815,(SP)+ -> L02
       STORE           L01,#01
       JUMP            L0003
L0002: ADD             L01,#03 -> L01
L0003: LOADW           #282d,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0005
       ADD             L01,#01 -> -(SP)
       LOADW           #282d,(SP)+ -> -(SP)
       AND             L02,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       ADD             L01,#02 -> -(SP)
       STOREW          #282d,(SP)+,L00
L0004: JUMP            L0002
L0005: CALL_2S         R0069 ("it") -> G7f
       STORE           G82,G7f
       CALL_2S         R0069 ("him") -> G80
       STORE           G83,G80
       CALL_2S         R0069 ("her") -> G81
       STORE           G84,G81
       RTRUE           

Routine R0073, 4 locals

       LOADW           #32,#00 -> G04
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G07
       CALL_VN         R0087 (#26,S028)
       STORE           G15,#13
       STORE           G12,#14
       SUB             #019a,#ff -> G03
       PUT_PROP        "(self object)",#2d,#0004
       CALL_1S         R0401 -> L01
       STORE           G0e,G0d
       INSERT_OBJ      G12,G00
L0001: GET_PARENT      G00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      G00 -> G00
       JUMP            L0001
L0002: GET_CHILD       G12 -> -(SP) [FALSE] L0003
L0003: PULL            L00
       JZ              L00 [TRUE] L0005
L0004: SET_ATTR        L00,#0c
       CLEAR_ATTR      L00,#03
       GET_SIBLING     L00 -> L00 [TRUE] L0004
L0005: JE              L01,#02 [TRUE] L0006
       CALL_1N         R0111
L0006: CALL_1N         R0134
       GET_PARENT      G12 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> G14
       JZ              G14 [FALSE] L0007
       STORE           G15,G00
       STORE           G00,#13
L0007: CALL_2N         R0076 (#1f)
       STORE           L00,#01
L0008: JG              L00,#64 [TRUE] L0009
       RANDOM          L00 -> L01
       INC             L00
       JUMP            L0008
L0009: STORE           G82,G7f
       STORE           G83,G80
       STORE           G84,G81
L0010: JZ              G13 [FALSE] L0045
       CALL_1N         R0071
       CALL_2S         R0069 ("it") -> G82
       CALL_2S         R0069 ("him") -> G83
       CALL_2S         R0069 ("her") -> G84
L0011: JE              G0d,G0e [TRUE] L0013
       JE              G0f,#01 [FALSE] L0012
       CALL_1N         R0094
L0012: STORE           G0e,G0d
L0013: STOREW          #2268,#00,#00
       STOREW          #2268,#01,#00
       STOREW          #2268,#02,#00
       STOREW          #2268,#03,#00
       STORE           G37,#00
       CALL_VN         R0486 (#15,#48,#2268)
       LOADW           #2268,#00 -> G28
       JE              G28,#5b,#5c [FALSE] L0015
       LOADW           #2268,#02 -> L00
       LOADW           #2268,#03 -> -(SP)
       STOREW          #2268,#02,(SP)+
       STOREW          #2268,#03,L00
       JE              G28,#5b [FALSE] L0014
       STORE           G28,#15
       JUMP            L0015
L0014: STORE           G28,#16
L0015: JE              G28,#51 [FALSE] L0016
       LOADW           #2268,#02 -> -(SP)
       JE              (SP)+,G12 [FALSE] L0016
       JE              G35,G12 [TRUE] L0016
       STOREW          #2268,#02,G35
       STORE           G35,G12
       STORE           G28,#53
L0016: JE              G28,#5a [FALSE] L0017
       LOADW           #2268,#02 -> -(SP)
       JE              (SP)+,G12 [TRUE] L0017
       JE              G35,G12 [FALSE] L0017
       LOADW           #2268,#02 -> G35
       LOADW           #2268,#03 -> -(SP)
       STOREW          #2268,#02,(SP)+
       STOREW          #2268,#03,G12
       STORE           G28,#15
L0017: JE              G28,#53,#51,#52 [FALSE] L0018
       STORE           G3a,G49
L0018: STORE           G38,#00
       STORE           G40,G3f
       STORE           G3f,#00
L0019: STORE           G29,#00
       STORE           G2a,#00
       LOADW           #2268,#01 -> L00
       JL              L00,#01 [TRUE] L0020
       LOADW           #2268,#02 -> G29
L0020: JL              L00,#02 [TRUE] L0021
       LOADW           #2268,#03 -> G2a
L0021: JE              G29,#01 [FALSE] L0022
       STORE           G2b,G49
       JUMP            L0023
L0022: STORE           G2b,G29
L0023: JE              G2a,#01 [FALSE] L0026
       JE              G29,#01 [FALSE] L0024
       STORE           G2c,G4a
       JUMP            L0025
L0024: STORE           G2c,G49
L0025: JUMP            L0027
L0026: STORE           G2c,G2a
L0027: JE              G35,G12 [TRUE] L0030
       STORE           L01,#00
       JZ              L01 [FALSE] L0029
       CALL_VS         R0086 (G35,#1d) -> L01
       JZ              L01 [FALSE] L0029
       JE              G28,#1009 [FALSE] L0028
       STOREW          #2268,#03,G35
       STORE           G35,G12
       STORE           G28,#52
       JUMP            L0019
L0028: CALL_VS         R0082 (G35,#1003) -> -(SP)
       JZ              (SP)+ [FALSE] L0029
       CALL_VN         R0244 (#1003,#01,G35)
L0029: JUMP            L0041
L0030: JZ              L00 [TRUE] L0032
       JE              L00,#01 [FALSE] L0031
       JZ              G29 [FALSE] L0032
L0031: JE              L00,#02 [FALSE] L0033
       JZ              G29 [TRUE] L0033
       JZ              G2a [TRUE] L0033
L0032: CALL_VN2        R0486 (Geb,#004b,G28,G2b,G2c,#00)
       JUMP            L0041
L0033: STORE           G38,#01
       LOADW           #2288,#00 -> L01
       JZ              L01 [FALSE] L0034
       CALL_VN         R0244 (#1007,#02)
       JUMP            L0013
L0034: JZ              G39 [TRUE] L0035
       STORE           G39,#00
       CALL_VN         R0244 (#1007,#01)
L0035: STORE           L00,G00
       STORE           L02,#01
L0036: JG              L02,L01 [TRUE] L0041
       JZ              G13 [TRUE] L0037
       JUMP            L0041
L0037: JE              G00,L00 [TRUE] L0038
       CALL_VN         R0244 (#1007,#33)
       JUMP            L0041
L0038: LOADW           #2288,L02 -> L03
       CALL_2N         R0072 (L03)
       CALL_2N         R0106 (L03)
       PRINT           ": "
       JZ              G29 [FALSE] L0039
       STORE           G29,L03
       CALL_VN2        R0486 (Geb,#004b,G28,L03,G2c,#00)
       STORE           G29,#00
       JUMP            L0040
L0039: STORE           G2a,L03
       CALL_VN2        R0486 (Geb,#004b,G28,G2b,L03,#00)
       STORE           G2a,#00
L0040: INC             L02
       JUMP            L0036
L0041: JE              G3f,#01 [FALSE] L0042
       CALL_1N         R0077
       JUMP            L0010
L0042: JZ              G37 [TRUE] L0043
       JUMP            L0010
L0043: JZ              G13 [FALSE] L0044
       CALL_VN         R0486 (Geb,#004a)
L0044: JUMP            L0010
L0045: JE              G13,#02 [TRUE] L0046
       CALL_1N         R0435
L0046: JZ              G13 [FALSE] L0047
       JUMP            L0011
L0047: PRINT           "

    "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "***"
       JE              G13,#01 [FALSE] L0048
       CALL_VN         R0244 (#1007,#03)
L0048: JE              G13,#02 [FALSE] L0049
       CALL_VN         R0244 (#1007,#04)
L0049: JG              G13,#02 [FALSE] L0050
       PRINT           " "
       CALL_1N         R0406
       PRINT           " "
L0050: PRINT           "***"
       SET_TEXT_STYLE  ROMAN
       PRINT           "


"
       CALL_1N         R0475
       CALL_1N         R0092
L0051: CALL_VN         R0244 (#1007,#05)
L0052: PRINT           "> "
       STORE           Gef,#00
       STORE           Gec,#25e8
       STOREB          Gec,#01,#00
       CALL_1N         R0479
       READ            Gec,#2661 -> Gef
       LOADW           #2661,#01 -> L00
       JE              L00,"q","quit" [FALSE] L0053
       QUIT            
L0053: JE              L00,"restart" [FALSE] L0054
       RESTART         
L0054: JE              L00,"restore" [FALSE] L0055
       CALL_1N         R0139
       JUMP            L0051
L0055: JE              L00,"fullscore","full" [FALSE] L0056
       JZ              #0000 [FALSE] L0056
       NEW_LINE        
       CALL_1N         R0477
       JUMP            L0051
L0056: JE              G13,#02 [FALSE] L0057
       JE              L00,"amusing" [FALSE] L0057
       JZ              #0000 [FALSE] L0057
       NEW_LINE        
       CALL_1N         R0428
       JUMP            L0051
L0057: JE              L00,"undo","undo","undo" [FALSE] L0062
       JZ              G05 [FALSE] L0058
       CALL_VN         R0244 (#1007,#06)
       JUMP            L0051
L0058: JE              G05,#01 [FALSE] L0059
       JUMP            L0060
L0059: RESTORE_UNDO    -> L00
       JZ              L00 [FALSE] L0061
L0060: CALL_VN         R0244 (#1007,#07)
L0061: JUMP            L0051
L0062: CALL_VN         R0244 (#1007,#08)
       JUMP            L0052

Routine R0074, 2 locals

       INC             G08
       JE              G09,#ffff [TRUE] L0003
       JL              G0a,#00 [TRUE] L0001
       ADD             G09,G0a -> G09
       JUMP            L0002
L0001: DEC             G0b
       JZ              G0b [FALSE] L0002
       INC             G09
       SUB             #00,G0a -> G0b
L0002: MOD             G09,#05a0 -> G09
L0003: STORE           L00,#00
L0004: JL              L00,G0c [FALSE] L0009
       JZ              G13 [TRUE] L0005
       RTRUE           
L0005: LOADW           #2228,L00 -> L01
       JZ              L01 [TRUE] L0008
       AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#7fff -> -(SP)
       CALL_VN         R0086 ((SP)+,#2b)
       JUMP            L0008
L0006: GET_PROP        L01,#28 -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       CALL_2N         R0089 (L01)
       CALL_VN         R0086 (L01,#2a)
       JUMP            L0008
L0007: GET_PROP        L01,#28 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PUT_PROP        L01,#28,(SP)+
L0008: INC             L00
       JUMP            L0004
L0009: JZ              G13 [TRUE] L0010
       RTRUE           
L0010: STORE           G6a,#02
       STORE           G77,#00
       CALL_2N         R0046 (G00)
       CALL_2S         R0024 (G12) -> -(SP)
       CALL_VN         R0043 ((SP)+,G12,#00)
       STORE           G6a,#00
       JZ              G13 [TRUE] L0011
       RTRUE           
L0011: CALL_1N         R0431
       JZ              G13 [TRUE] L0012
       RTRUE           
L0012: CALL_1N         R0095
       JZ              G13 [TRUE] L0013
       RTRUE           
L0013: CALL_1N         R0077
       RFALSE          

Routine R0075, 8 locals

       STORE           L04,G28
       STORE           L05,G2b
       STORE           L06,G2c
       STORE           G28,L00
       STORE           G2b,L01
       STORE           G2c,L02
       STORE           L03,#00
       JZ              G37 [FALSE] L0001
       CALL_1S         R0080 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0001: JL              G28,#1000 [FALSE] L0002
       LOADW           #3323,G28 -> -(SP)
       CALL_1N         (SP)+
       STORE           L07,#00
       JUMP            L0003
L0002: STORE           L07,#01
L0003: STORE           G28,L04
       STORE           G2b,L05
       STORE           G2c,L06
       RFALSE          

Routine R0076, 5 locals

       STORE           L03,G29
       STORE           L04,G2a
       STORE           G29,L01
       STORE           G2a,L02
       CALL_VN2        R0486 (#16,#4b,L00,L01,L02,#01)
       STORE           G29,L03
       STORE           G2a,L04
       RTRUE           

Routine R0077, 1 local

       STORE           L00,#01
L0001: JIN             L00,G12 [FALSE] L0002
       TEST_ATTR       L00,#0c [TRUE] L0002
       SET_ATTR        L00,#0c
       TEST_ATTR       L00,#12 [FALSE] L0002
       ADD             G0d,#0004 -> G0d
       ADD             G11,#0004 -> G11
L0002: INC             L00
       JG              L00,#009b [TRUE] L0003
       JUMP            L0001
L0003: RTRUE           

Routine R0078, 7 locals

       STORE           L05,G32
       STORE           L06,G33
       STORE           G32,L00
       STORE           G33,#00
       STORE           L02,G35
       STORE           L03,G36
       STORE           L04,G6a
       STORE           G6a,#06
       JZ              L01 [FALSE] L0001
       STORE           G35,G12
       JUMP            L0002
L0001: STORE           G35,L01
L0002: CALL_2S         R0024 (G35) -> G36
       CALL_VN         R0043 (G36,G35,#00)
       STORE           G6a,L04
       STORE           G35,L02
       STORE           G36,L03
       STORE           G32,L05
       STORE           L05,G33
       STORE           G33,L06
       RET             L05

Routine R0079, 6 locals

       STORE           L02,G32
       STORE           L03,G6a
       STORE           L04,G35
       STORE           L05,G36
       STORE           G32,L00
       JZ              L01 [FALSE] L0001
       STORE           G35,G12
       JUMP            L0002
L0001: STORE           G35,L01
L0002: CALL_2S         R0024 (G35) -> G36
       STORE           G6a,#05
       CALL_VN         R0043 (G36,G35,#00)
       STORE           G32,L02
       STORE           G6a,L03
       STORE           G35,L04
       STORE           G36,L05
       RTRUE           

Routine R0080, 0 locals

       CALL_1S         R0436 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R0086 (G12,#1d) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JZ              G00 [TRUE] L0001
       CALL_VS         R0086 (G00,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: STORE           G6a,#03
       STORE           G32,#00
       CALL_2S         R0024 (G12) -> -(SP)
       CALL_VN         R0043 ((SP)+,G12,#00)
       STORE           G6a,#00
       JZ              G32 [FALSE] RTRUE
       JG              G29,#01 [FALSE] L0002
       CALL_VS         R0086 (G29,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: RFALSE          

Routine R0081, 0 locals

       STORE           G6a,#04
       STORE           G32,#00
       CALL_2S         R0024 (G12) -> -(SP)
       CALL_VN         R0043 ((SP)+,G12,#00)
       STORE           G6a,#00
       JZ              G32 [FALSE] RTRUE
       JZ              G00 [TRUE] L0001
       CALL_VS         R0086 (G00,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JG              G29,#01 [FALSE] L0002
       CALL_VS         R0086 (G29,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_1S         R0437 -> -(SP)
       RET_POPPED      

Routine R0082, 2 locals

       STORE           G2e,L01
       CALL_VS         R0086 (L00,#06) -> -(SP)
       RET_POPPED      

Routine R0083, 1 local

       CALL_VS         R0496 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       RFALSE          
L0001: JE              Gef,#02,#01 [FALSE] L0002
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       RET             #02
L0003: JE              Gef,#04 [FALSE] L0004
       RET             #03
L0004: RTRUE           

Routine R0084, 3 locals

       CALL_VS         R0489 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0001
       CALL_VS         R0086 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0485 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       CALL_VS         R0485 (L00,L01) -> -(SP)
       CALL_VS         R0496 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#01,#02,#00 [FALSE] L0002
       CALL_VS         R0113 (#02,L00,L01) -> -(SP)
       RET_POPPED      
L0002: JE              Gef,#04 [FALSE] L0004
       CALL_VS         R0485 (L00,L01) -> -(SP)
       PRINT_PADDR     (SP)+
       JZ              L02 [FALSE] L0003
       NEW_LINE        
L0003: RTRUE           
L0004: JE              Gef,#03 [FALSE] L0005
       CALL_VS         R0086 (L00,L01) -> -(SP)
       RET_POPPED      
L0005: RTRUE           

Routine R0085, 2 locals

       CALL_VS         R0485 (L00,L01) -> -(SP)
       JL              (SP)+,#0100 [FALSE] L0001
       CALL_VS         R0485 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0086 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0086, 2 locals

       JE              L00,#13 [FALSE] L0001
       JE              L01,#1e,#2e,#23 [TRUE] L0001
       STORE           L00,G15
L0001: CALL_VS         R0488 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0486 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0087, 2 locals

       SUB             L00,#01 -> -(SP)
       LOADW           #00,#05 -> -(SP)
       STOREW          (SP)+,(SP)+,L01
       RTRUE           

Routine R0088, 3 locals

       STORE           L02,#00
L0001: JL              L02,G0c [FALSE] L0002
       LOADW           #2228,L02 -> -(SP)
       JE              (SP)+,L00 [TRUE] RFALSE
       INC             L02
       JUMP            L0001
L0002: STORE           L02,#00
L0003: JL              L02,G0c [FALSE] L0005
       LOADW           #2228,L02 -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       JUMP            L0006
L0004: INC             L02
       JUMP            L0003
L0005: STORE           L02,G0c
       INC             G0c
       MUL             L02,#02 -> -(SP)
       JL              (SP)+,#40 [TRUE] L0006
       CALL_2N         R0113 (#04)
L0006: GET_PROP_ADDR   L00,#28 -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       CALL_VN         R0113 (#05,L00)
L0007: STOREW          #2228,L02,L00
       PUT_PROP        L00,#28,L01
       RTRUE           

Routine R0089, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0c [FALSE] L0003
       LOADW           #2228,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       JUMP            L0004
L0002: INC             L01
       JUMP            L0001
L0003: RFALSE          
L0004: GET_PROP_ADDR   L00,#28 -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VN         R0113 (#05,L00)
L0005: STOREW          #2228,L01,#00
       PUT_PROP        L00,#28,#00
       RTRUE           

Routine R0090, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0c [FALSE] L0002
       ADD             #8000,L00 -> -(SP)
       LOADW           #2228,L01 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] RFALSE
       INC             L01
       JUMP            L0001
L0002: STORE           L01,#00
L0003: JL              L01,G0c [FALSE] L0005
       LOADW           #2228,L01 -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       JUMP            L0006
L0004: INC             L01
       JUMP            L0003
L0005: STORE           L01,G0c
       INC             G0c
       MUL             L01,#02 -> -(SP)
       JL              (SP)+,#40 [TRUE] L0006
       CALL_2N         R0113 (#04)
L0006: ADD             #8000,L00 -> -(SP)
       STOREW          #2228,L01,(SP)+
       RTRUE           

Routine R0091, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0c [FALSE] L0003
       ADD             #8000,L00 -> -(SP)
       LOADW           #2228,L01 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0002
       JUMP            L0004
L0002: INC             L01
       JUMP            L0001
L0003: RFALSE          
L0004: STOREW          #2228,L01,#00
       RTRUE           

Routine R0092, 0 locals

       JE              G09,#ffff [FALSE] L0001
       STORE           G01,G0d
       STORE           G02,G08
       JUMP            L0002
L0001: DIV             G09,#3c -> G01
       MOD             G09,#3c -> G02
L0002: RTRUE           

Routine R0093, 2 locals

       STORE           G09,L00
       STORE           G0a,L01
       STORE           G0b,#00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L01 -> G0b
L0001: RTRUE           

Routine R0094, 0 locals

       PRINT           "
["
       SUB             G0d,G0e -> -(SP)
       CALL_VN         R0244 (#1007,#32,(SP)+)
       PRINT           ".]
"
       RTRUE           

Routine R0095, 2 locals

       STORE           L01,G14
       GET_PARENT      G12 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> G14
       JZ              L01 [FALSE] L0001
       JE              G14,#01 [FALSE] L0001
       STORE           G00,G15
       JZ              L00 [FALSE] L0001
       CALL_2N         R0076 (#1f)
L0001: JE              L01,#01 [FALSE] L0002
       JZ              G14 [FALSE] L0002
       STORE           G15,G00
       STORE           G00,#13
       JZ              L00 [FALSE] L0002
       CALL_1N         R0181
       CALL_VS         R0244 (#1007,#09) -> -(SP)
       RET_POPPED      
L0002: JZ              L01 [FALSE] L0003
       JZ              G14 [FALSE] L0003
       STORE           G00,#13
L0003: RTRUE           

Routine R0096, 2 locals

       JZ              L00 [TRUE] RFALSE
       TEST_ATTR       L00,#09 [TRUE] RTRUE
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0003
L0002: CALL_2S         R0097 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       GET_SIBLING     L01 -> L01 [TRUE] L0002
L0003: TEST_ATTR       L00,#04 [FALSE] L0006
       TEST_ATTR       L00,#0e [TRUE] L0004
       TEST_ATTR       L00,#17 [FALSE] L0005
L0004: GET_PARENT      L00 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> -(SP)
       RET_POPPED      
L0005: JUMP            L0008
L0006: TEST_ATTR       L00,#07 [TRUE] L0007
       TEST_ATTR       L00,#17 [TRUE] L0007
       TEST_ATTR       L00,#14 [FALSE] L0008
L0007: GET_PARENT      L00 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> -(SP)
       RET_POPPED      
L0008: RFALSE          

Routine R0097, 3 locals

       JZ              L00 [TRUE] RFALSE
       TEST_ATTR       L00,#09 [TRUE] RTRUE
       TEST_ATTR       L00,#07 [TRUE] L0001
       CALL_2S         R0044 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0004
L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: PULL            L01
       JZ              L01 [TRUE] L0004
L0003: CALL_2S         R0097 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       GET_SIBLING     L01 -> L01 [TRUE] L0003
L0004: GET_PROP_ADDR   L00,#18 -> L02
       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [TRUE] L0008
       LOADW           L02,#00 -> -(SP)
       JG              (SP)+,G03 [FALSE] L0005
       STORE           G6f,#00
       STORE           G6e,#01
       CALL_VN         R0086 (L00,#18)
       STORE           G6e,#00
       JE              G6f,#01 [TRUE] RTRUE
       JUMP            L0008
L0005: STORE           L01,#00
L0006: GET_PROP_ADDR   L00,#18 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: PUSH            Gef
       MUL             #02,L01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0008
       LOADW           L02,L01 -> -(SP)
       CALL_2S         R0097 ((SP)+) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       INC             L01
       JUMP            L0006
L0008: RFALSE          

Routine R0098, 3 locals

       JE              G35,G12 [FALSE] L0001
       STORE           G35,L00
L0001: CLEAR_ATTR      G12,#17
       CLEAR_ATTR      G12,#03
       STORE           L02,L00
L0002: GET_PARENT      L02 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       TEST_ATTR       L02,#00 [FALSE] L0003
       SET_ATTR        L02,#17
L0003: GET_PARENT      L02 -> L02
       JUMP            L0002
L0004: JE              G12,#14 [FALSE] L0005
       PUT_PROP        G12,#2e,S029
L0005: STORE           G12,L00
       JE              G12,#14 [FALSE] L0006
       PUT_PROP        G12,#2e,#ffff
L0006: SET_ATTR        G12,#17
       SET_ATTR        G12,#03
       SET_ATTR        G12,#00
       SET_ATTR        G12,#10
       STORE           L02,G12
L0007: GET_PARENT      L02 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       GET_PARENT      L02 -> L02
       JUMP            L0007
L0008: STORE           G00,L02
       STORE           G15,G00
       CALL_1N         R0134
       GET_PARENT      G12 -> -(SP)
       CALL_2S         R0096 ((SP)+) -> G14
       JZ              G14 [FALSE] L0009
       STORE           G00,#13
L0009: STORE           G18,L01
       RTRUE           

Routine R0099, 7 locals

       INC             G22
L0001: STORE           G23,#00
       CALL_1S         L01 -> L03
       STORE           L04,G25
       PRINT           "--- "
       PRINT_PADDR     L04
       PRINT           " ---

"
       CALL_VS         R0491 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0486 (L00,#45)
       JUMP            L0003
L0002: PRINT_PADDR     L00
L0003: CALL_VN         R0244 (#1007,#34,L03)
       PRINT           "> "
       STORE           Gec,#25e8
       STOREB          Gec,#01,#00
       CALL_1N         R0479
       READ            Gec,#2661 -> Gef
       LOADW           #2661,#01 -> L05
       JE              L05,"q","quit" [TRUE] L0004
       LOADB           #2661,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0004: DEC             G22
       JG              G22,#00 [TRUE] RFALSE
       JZ              G13 [FALSE] L0005
       CALL_2N         R0076 (#1f)
       RTRUE           
L0005: RFALSE          
L0006: CALL_2S         R0060 (#01) -> L05
       JZ              L05 [FALSE] L0007
       JUMP            L0001
L0007: JL              L05,#01 [TRUE] L0008
       JG              L05,L03 [FALSE] L0009
L0008: JUMP            L0003
L0009: STORE           G23,L05
       CALL_1S         L02 -> L06
       JE              L06,#02 [FALSE] L0010
       JUMP            L0001
L0010: JE              L06,#03 [TRUE] RFALSE
       JUMP            L0003

Routine R0100, 11 locals

       JZ              G21 [FALSE] L0001
       CALL_VS         R0099 (L00,L01,L02) -> -(SP)
       RET_POPPED      
L0001: INC             G22
       STORE           G23,#00
       CALL_1S         L01 -> L03
       STORE           L04,G25
       STORE           L05,G24
       STORE           L06,#07
L0002: STORE           L09,#00
       ERASE_WINDOW    #ffff
       ADD             L03,#07 -> L07
       SPLIT_WINDOW    L07
       LOADB           #00,#21 -> L07
       JZ              L07 [FALSE] L0003
       STORE           L07,#50
L0003: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,L05 -> L08
       SET_CURSOR      #01,L08
       PRINT_PADDR     L04
       SET_CURSOR      #02,#01
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0007
L0006: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0006
L0007: SET_CURSOR      #02,#02
       PRINT_PADDR     S020
       SUB             L07,#0c -> L08
       SET_CURSOR      #02,L08
       PRINT_PADDR     S021
       SET_CURSOR      #03,#01
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0009
L0008: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0008
L0009: SET_CURSOR      #03,#02
       PRINT_PADDR     S024
       SUB             L07,#11 -> L08
       SET_CURSOR      #03,L08
       JE              G22,#01 [FALSE] L0010
       PRINT_PADDR     S022
       JUMP            L0011
L0010: PRINT_PADDR     S023
L0011: SET_TEXT_STYLE  ROMAN
       SET_CURSOR      #05,#02
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       CALL_VS         R0491 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       PRINT_PADDR     L00
       JUMP            L0013
L0012: CALL_VN         R0486 (L00,#45)
L0013: JE              L06,L09 [TRUE] L0015
       JG              L09,#00 [FALSE] L0014
       SET_CURSOR      L09,#04
       PRINT           " "
L0014: SET_CURSOR      L06,#04
       PRINT           ">"
L0015: STORE           L09,L06
       READ_CHAR       #01 -> L0a
       JE              L0a,#4e,#6e,#82 [FALSE] L0017
       INC             L06
       ADD             #07,L03 -> -(SP)
       JE              L06,(SP)+ [FALSE] L0016
       STORE           L06,#07
L0016: JUMP            L0013
L0017: JE              L0a,#50,#70,#81 [FALSE] L0019
       DEC             L06
       JE              L06,#06 [FALSE] L0018
       ADD             #06,L03 -> L06
L0018: JUMP            L0013
L0019: JE              L0a,#51,#71,#1b [TRUE] L0020
       JE              L0a,#83 [FALSE] L0021
L0020: JUMP            L0028
L0021: JE              L0a,#0a,#0d,#84 [FALSE] L0027
       SET_WINDOW      #00
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       SUB             L06,#06 -> G23
       CALL_VN         R0486 (L01,#45)
       ERASE_WINDOW    #ffff
       SPLIT_WINDOW    #01
       LOADB           #00,#21 -> L07
       JZ              L07 [FALSE] L0022
       STORE           L07,#50
L0022: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0024
L0023: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0023
L0024: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,G24 -> L08
       SET_CURSOR      #01,L08
       PRINT_PADDR     G25
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       NEW_LINE        
       CALL_VS         R0486 (L02,#45) -> L07
       JE              L07,#02 [FALSE] L0025
       JUMP            L0002
L0025: JE              L07,#03 [FALSE] L0026
       JUMP            L0028
L0026: CALL_VN         R0244 (#1007,#35)
       READ_CHAR       #01 -> L0a
       JUMP            L0002
L0027: JUMP            L0013
L0028: DEC             G22
       JG              G22,#00 [TRUE] RFALSE
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_CURSOR      #01,#01
       ERASE_WINDOW    #ffff
       SET_WINDOW      #00
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       JZ              G13 [FALSE] L0029
       CALL_2N         R0076 (#1f)
       RTRUE           
L0029: RTRUE           

Routine R0101, 6 locals

       CALL_VS         R0490 (L00,#31) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       MUL             G7e,#01 -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       GET_PROP_ADDR   L00,#31 -> -(SP)
       LOADW           (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           " "
       JZ              L02 [TRUE] L0001
       RTRUE           
L0001: CALL_2N         R0102 (L00)
       RTRUE           
L0002: CALL_2S         R0062 (L00) -> L03
       JZ              L02 [TRUE] L0004
       JL              L03,#03 [TRUE] L0003
       JL              L03,#06 [TRUE] L0004
       JL              L03,#09 [FALSE] L0004
L0003: ADD             L03,#03 -> L03
L0004: LOADW           #2933,L03 -> L03
       MUL             L03,#01 -> -(SP)
       ADD             G7e,(SP)+ -> -(SP)
       MUL             #0c,(SP)+ -> -(SP)
       ADD             #291b,(SP)+ -> L04
       ADD             L01,#03 -> -(SP)
       LOADW           L04,(SP)+ -> -(SP)
       LOADW           L04,L01 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0005
       STORE           L05,#01
L0005: JZ              G04 [TRUE] L0008
       JZ              L05 [TRUE] L0008
       STOREW          #294b,#00,#a0
       OUTPUT_STREAM   REDIRECT_ENABLE,#294b
       JZ              L02 [TRUE] L0006
       CALL_2N         R0107 (L02)
       JUMP            L0007
L0006: CALL_2N         R0102 (L00)
L0007: OUTPUT_STREAM   #fffd
       ADD             #294b,#02 -> -(SP)
       CALL_2S         R0004 ((SP)+) -> -(SP)
       MUL             #03,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> L01
L0008: LOADW           L04,L01 -> -(SP)
       PRINT_PADDR     (SP)+
       JZ              L02 [TRUE] L0009
       RTRUE           
L0009: CALL_2N         R0102 (L00)
       RTRUE           

Routine R0102, 1 local

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S035
       RTRUE           
L0001: CALL_VS         R0496 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#03 [FALSE] L0002
       PRINT           "<routine "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0002: JE              Gef,#04 [FALSE] L0003
       PRINT           "<string ""
       PRINT_PADDR     L00
       PRINT           "">"
       RTRUE           
L0003: JE              Gef,#00 [FALSE] L0004
       PRINT           "<illegal object number "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0004: JE              L00,G12 [FALSE] L0005
       PRINT_PADDR     S030
       RTRUE           
L0005: JZ              G5b [TRUE] L0006
       GET_PROP_ADDR   L00,#2f -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0084 (L00,#2f,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0006: GET_PROP_ADDR   L00,#2e -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R0084 (L00,#2e,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0007: PRINT_OBJ       L00
       RTRUE           

Routine R0103, 2 locals

       STORE           L01,G5b
       STORE           G5b,#01
       TEST_ATTR       L00,#10 [FALSE] L0001
       STORE           G5b,#ffff
       CALL_2N         R0102 (L00)
       RTRUE           
L0001: CALL_VS         R0490 (L00,#25) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0084 (L00,#25,#01)
       PRINT           " "
       CALL_2N         R0102 (L00)
       STORE           G5b,L01
       RTRUE           
L0002: CALL_VN         R0101 (L00,#02)
       STORE           G5b,L01
       RTRUE           

Routine R0104, 2 locals

       STORE           L01,G5b
       STORE           G5b,#00
       TEST_ATTR       L00,#10 [FALSE] L0001
       STORE           G5b,#ffff
       CALL_2N         R0102 (L00)
       STORE           G5b,L01
       RTRUE           
L0001: CALL_VN         R0101 (L00,#01)
       STORE           G5b,L01
       RTRUE           

Routine R0105, 2 locals

       STORE           L01,G5b
       STORE           G5b,#00
       TEST_ATTR       L00,#10 [FALSE] L0001
       STORE           G5b,#ffff
       CALL_2N         R0102 (L00)
       STORE           G5b,L01
       RTRUE           
L0001: CALL_VN         R0101 (L00,#00)
       STORE           G5b,L01
       RTRUE           

Routine R0106, 2 locals

       STORE           L01,G5b
       STORE           G5b,#ffff
       CALL_2N         R0102 (L00)
       STORE           G5b,L01
       RTRUE           

Routine R0107, 1 local

       CALL_2N         R0006 (L00)
       RTRUE           

Routine R0108, 3 locals

       LOADW           #28c9,#00 -> L02
       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#02 -> L01
L0002: JG              L01,L02 [TRUE] L0004
       LOADW           #28c9,L01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0003
       ADD             L01,#01 -> -(SP)
       LOADW           #28c9,(SP)+ -> -(SP)
       RET_POPPED      
L0003: JUMP            L0001
L0004: RFALSE          

Routine R0109, 1 local

       LOADW           L00,#00 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0113 (#08) -> -(SP)
       RET_POPPED      
L0001: LOADW           L00,#00 -> -(SP)
       RANDOM          (SP)+ -> -(SP)
       LOADW           L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0110, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0111, 1 local

       JZ              #456f [TRUE] L0001
       SET_TEXT_STYLE  BOLDFACE
       PRINT_PADDR     S001
       SET_TEXT_STYLE  ROMAN
L0001: JZ              #4575 [TRUE] L0002
       PRINT_PADDR     S002
L0002: PRINT           "Release "
       LOADW           #00,#01 -> -(SP)
       AND             (SP)+,#03ff -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " / Serial number "
       STORE           L00,#12
L0003: JL              L00,#18 [FALSE] L0004
       LOADB           #00,L00 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L00
       JUMP            L0003
L0004: PRINT           " / Inform v"
       LOADB           #00,#3c -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3d -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3e -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3f -> Gef
       PRINT_CHAR      Gef
       PRINT           " Library "
       PRINT_PADDR     S004
       NEW_LINE        
       RTRUE           

Routine R0112, 0 locals
    Action routine for:
        "version"

       CALL_1N         R0111
       JG              G04,#00 [FALSE] L0001
       PRINT           "Standard interpreter "
       DIV             G04,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "."
       MOD             G04,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " ("
       LOADB           #00,#1e -> -(SP)
       PRINT_NUM       (SP)+
       LOADB           #00,#1f -> -(SP)
       PRINT_CHAR      (SP)+
       PRINT           ") / "
       JUMP            L0002
L0001: PRINT           "Interpreter "
       LOADB           #00,#1e -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " Version "
       LOADB           #00,#1f -> -(SP)
       PRINT_CHAR      (SP)+
       PRINT           " / "
L0002: PRINT           "Library serial number "
       PRINT_PADDR     S003
       PRINT           "
"
       RTRUE           

Routine R0113, 3 locals

       PRINT           "** Library error "
       PRINT_NUM       L00
       PRINT           " ("
       PRINT_NUM       L01
       PRINT           ","
       PRINT_NUM       L02
       PRINT_RET       ") **"

Routine R0114, 0 locals

       JE              Ge9,#2e [FALSE] L0001
       CALL_2N         R0411 (#02)
       PRINT_PADDR     S107
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#58 [FALSE] L0002
       PRINT_PADDR     S108
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#46,#3a,#32 [TRUE] L0003
       JE              Ge9,#49 [FALSE] L0004
L0003: PRINT_PADDR     S109
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#4a [FALSE] L0006
       JE              G26,#01 [FALSE] L0005
       PRINT_PADDR     S110
       NEW_LINE        
       RTRUE           
L0005: RFALSE          
L0006: JE              Ge9,#55 [FALSE] L0008
       CALL_2S         R0078 (#0061) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       TEST_ATTR       "MessageMate (tm) dictaphone",#08 [FALSE] L0007
       PRINT_PADDR     S111
       NEW_LINE        
       RTRUE           
L0007: PRINT_PADDR     S112
       NEW_LINE        
       RTRUE           
L0008: JE              Ge9,#40,#41 [FALSE] L0009
       PRINT_PADDR     S113
       NEW_LINE        
       RTRUE           
L0009: JE              Ge9,#3d [FALSE] L0010
       PRINT_PADDR     S114
       NEW_LINE        
       RTRUE           
L0010: JE              Ge9,#2b [FALSE] L0012
       JE              G26,#01 [FALSE] L0011
       PRINT_PADDR     S115
       NEW_LINE        
       RTRUE           
L0011: RFALSE          
L0012: JE              Ge9,#42 [FALSE] L0013
       CALL_2N         R0411 (#03)
       PRINT_PADDR     S116
       NEW_LINE        
       RTRUE           
L0013: JE              Ge9,#0f [FALSE] L0016
       JE              G26,#0a [TRUE] L0014
       JE              G26,#0b [FALSE] L0015
L0014: PRINT_PADDR     S117
       NEW_LINE        
       RTRUE           
L0015: RFALSE          
L0016: JE              Ge9,#4b,#4c [FALSE] L0018
       JE              G26,#01 [FALSE] L0017
       PRINT_PADDR     S118
       NEW_LINE        
       RTRUE           
L0017: RFALSE          
L0018: JE              Ge9,#50 [FALSE] L0022
       JE              G26,#01 [FALSE] L0021
       INSERT_OBJ      G2b,G00
       TEST_ATTR       G2b,#22 [FALSE] L0019
       CALL_2N         R0105 (G2b)
       PRINT_RET       " flutters harmlessly away."
L0019: TEST_ATTR       G2b,#02 [FALSE] L0020
       CALL_2N         R0105 (G2b)
       PRINT_RET       " flops harmlessly to the floor."
L0020: CALL_2N         R0105 (G2b)
       PRINT_RET       " bounces harmlessly away."
L0021: RFALSE          
L0022: JE              Ge9,#1008 [FALSE] L0025
       JE              G00,#006b [FALSE] L0023
       PRINT           "
What shall I do now? "
       RTRUE           
L0023: CALL_VS         R0491 (G00,#0021) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JZ              G88 [FALSE] L0024
       SET_TEXT_STYLE  BOLDFACE
       PRINT_PADDR     S119
       SET_TEXT_STYLE  ROMAN
       PRINT           "

>"
       STORE           G88,#01
       RTRUE           
L0024: RFALSE          
L0025: JE              Ge9,#43 [FALSE] L0026
       PRINT_PADDR     S120
       NEW_LINE        
       RTRUE           
L0026: RFALSE          

Routine R0115, 0 locals

       JE              Ge9,#29 [FALSE] L0001
       PRINT_PADDR     S124
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#50,#10,#12 [TRUE] L0002
       JE              Ge9,#13,#15 [FALSE] L0003
L0002: PRINT_PADDR     S125
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0116, 0 locals

       PRINT_PADDR     S126
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#005f [FALSE] L0001
       PRINT_PADDR     S127
       NEW_LINE        
       RTRUE           
L0001: TEST_ATTR       Geb,#08 [FALSE] L0002
       PRINT           " The stamp is somewhat sticky."
L0002: PRINT           "
"
       RTRUE           

Routine R0117, 0 locals

       JE              Ge9,#12,#5d [FALSE] L0006
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#005f [FALSE] L0001
       PRINT_PADDR     S128
       NEW_LINE        
       RTRUE           
L0001: JE              G2c,#0030 [TRUE] RFALSE
       JE              G2c,#005f [TRUE] L0002
       TEST_ATTR       G2c,#14 [TRUE] L0002
       PRINT_PADDR     S129
       NEW_LINE        
       RTRUE           
L0002: JE              G2c,#005f [FALSE] L0003
       TEST_ATTR       Geb,#08 [TRUE] L0003
       PRINT_PADDR     S130
       NEW_LINE        
       RTRUE           
L0003: JE              G2c,#005f [FALSE] L0005
       TEST_ATTR       Geb,#08 [FALSE] L0005
       INSERT_OBJ      Geb,"reply card"
       CALL_2N         R0147 (#08)
       INSERT_OBJ      "How do I affix the stamp to something?","Never access
this either"
       GET_PARENT      "honey jar" -> -(SP)
       JE              (SP)+,#0051 [FALSE] L0004
       INSERT_OBJ      "What else is left to do now?","A few helpful hints"
L0004: PRINT_PADDR     S131
       NEW_LINE        
       RTRUE           
L0005: RFALSE          
L0006: RFALSE          

Routine R0118, 0 locals

       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_PADDR     S133
       NEW_LINE        
       RTRUE           
L0001: PUT_PROP        Geb,#2e,S134
       SET_ATTR        Geb,#08
       PRINT_PADDR     S135
       NEW_LINE        
       RTRUE           

Routine R0119, 0 locals

       JE              Ge9,#29 [FALSE] L0001
       TEST_ATTR       Geb,#1a [FALSE] RFALSE
       CALL_2N         R0105 (Geb)
       PRINT_PADDR     S136
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#50,#10,#12 [TRUE] L0002
       JE              Ge9,#13,#15 [FALSE] L0003
L0002: TEST_ATTR       Geb,#1a [FALSE] RFALSE
       PRINT           "But you are wearing "
       CALL_2N         R0104 (Geb)
       PRINT_RET       "."
L0003: RFALSE          

Routine R0120, 0 locals

       JE              Ge9,#2a [FALSE] L0001
       PRINT_PADDR     S137
       CALL_2N         R0147 (#05)
       RTRUE           
L0001: RFALSE          

Routine R0121, 0 locals

       PRINT_PADDR     S139
       INSERT_OBJ      Geb,"Vortex"
       STORE           G87,#03
       RTRUE           

Routine R0122, 0 locals
    Action routine for:
        "places"

       CALL_1N         R0145
       RTRUE           

Routine R0123, 0 locals
    Action routine for:
        "objects"

       CALL_1N         R0146
       RTRUE           

Routine R0124, 2 locals

L0001: GET_SIBLING     L00 -> L00 [FALSE] L0002
L0002: JZ              L00 [FALSE] L0003
       RFALSE          
L0003: JZ              G1b [TRUE] L0004
       GET_PROP        L00,#19 -> -(SP)
       JE              (SP)+,G1b [TRUE] L0004
       JUMP            L0001
L0004: AND             G1a,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JZ              L01 [FALSE] L0005
       TEST_ATTR       L00,#19 [TRUE] L0005
       JUMP            L0001
L0005: AND             G1a,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       TEST_ATTR       L00,#03 [TRUE] L0006
       TEST_ATTR       L00,#11 [FALSE] L0007
L0006: JUMP            L0001
L0007: RET             L00

orphan code fragment:

       RTRUE           

Routine R0125, 1 local

       AND             G1a,#20 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       AND             G1a,#10 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       TEST_ATTR       L00,#17 [TRUE] RTRUE
       TEST_ATTR       L00,#14 [TRUE] RTRUE
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] RTRUE
L0001: RFALSE          

Routine R0126, 2 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0125 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0002: GET_CHILD       L01 -> -(SP) [FALSE] L0003
L0003: JZ              (SP)+ [TRUE] L0004
       CALL_2S         R0125 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0004: AND             G1a,#84 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       TEST_ATTR       L00,#1a [TRUE] L0005
       TEST_ATTR       L01,#1a [TRUE] RFALSE
L0005: TEST_ATTR       L01,#1a [TRUE] L0006
       TEST_ATTR       L00,#1a [TRUE] RFALSE
L0006: TEST_ATTR       L00,#09 [TRUE] L0007
       TEST_ATTR       L01,#09 [TRUE] RFALSE
L0007: TEST_ATTR       L01,#09 [TRUE] L0008
       TEST_ATTR       L00,#09 [TRUE] RFALSE
L0008: CALL_VS         R0035 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0127, 2 locals

L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: JZ              (SP)+ [TRUE] L0008
       GET_CHILD       L00 -> -(SP) [FALSE] L0003
L0003: GET_PROP        (SP)+,#19 -> -(SP)
       JE              (SP)+,L01 [TRUE] L0005
       GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: INSERT_OBJ      (SP)+,"outside"
       JUMP            L0007
L0005: GET_CHILD       L00 -> -(SP) [FALSE] L0006
L0006: INSERT_OBJ      (SP)+,"inside"
L0007: JUMP            L0001
L0008: GET_CHILD       "inside" -> -(SP) [FALSE] L0009
L0009: JZ              (SP)+ [TRUE] L0011
       GET_CHILD       "inside" -> -(SP) [FALSE] L0010
L0010: INSERT_OBJ      (SP)+,L00
       JUMP            L0008
L0011: GET_CHILD       "outside" -> -(SP) [FALSE] L0012
L0012: JZ              (SP)+ [TRUE] L0014
       GET_CHILD       "outside" -> -(SP) [FALSE] L0013
L0013: INSERT_OBJ      (SP)+,L00
       JUMP            L0011
L0014: RTRUE           

Routine R0128, 4 locals

L0001: STORE           L01,L00
       JUMP            L0003
L0002: GET_SIBLING     L01 -> L01 [FALSE] L0003
L0003: JZ              L01 [TRUE] L0013
       GET_PROP        L01,#19 -> L02
       JZ              L02 [TRUE] L0012
       GET_SIBLING     L01 -> L01 [FALSE] L0004
L0004: JZ              L01 [TRUE] L0006
       GET_PROP        L01,#19 -> -(SP)
       JE              (SP)+,L02 [FALSE] L0006
       GET_SIBLING     L01 -> L01 [FALSE] L0005
L0005: JUMP            L0004
L0006: JZ              L01 [TRUE] RFALSE
       GET_SIBLING     L01 -> L03 [FALSE] L0007
L0007: JUMP            L0009
L0008: GET_SIBLING     L03 -> L03 [FALSE] L0009
L0009: JZ              L03 [TRUE] L0012
       GET_PROP        L03,#19 -> -(SP)
       JE              (SP)+,L02 [FALSE] L0011
       GET_PARENT      L00 -> -(SP)
       CALL_VN         R0127 ((SP)+,L02)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0010
L0010: JUMP            L0001
L0011: JUMP            L0008
L0012: JUMP            L0002
L0013: RTRUE           

Routine R0129, 1 local

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: RTRUE           

Routine R0130, 3 locals

       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0001
L0001: JE              L00,(SP)+ [FALSE] L0002
       CALL_2N         R0128 (L00)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0002
L0002: STORE           G1a,L01
       STORE           G1e,#00
       CALL_VN         R0131 (L00,L02)
       RTRUE           

Routine R0131, 15 locals

       JG              L01,#00 [FALSE] L0002
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0001
L0001: JE              L00,(SP)+ [FALSE] L0002
       CALL_2N         R0128 (L00)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0002
L0002: JZ              L00 [TRUE] RFALSE
       AND             G1a,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JZ              L01 [FALSE] L0004
       TEST_ATTR       L00,#19 [TRUE] L0004
       GET_SIBLING     L00 -> L00 [FALSE] L0003
L0003: JUMP            L0002
L0004: AND             G1a,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       TEST_ATTR       L00,#03 [TRUE] L0005
       TEST_ATTR       L00,#11 [FALSE] L0007
L0005: GET_SIBLING     L00 -> L00 [FALSE] L0006
L0006: JUMP            L0002
L0007: JUMP            L0008
L0008: ADD             #24e8,L02 -> L03
       ADD             #2468,L02 -> L04
       STORE           L05,L00
       STORE           L06,#00
       JUMP            L0010
L0009: CALL_VS         R0124 (L05,L01) -> L05
       INC             L06
L0010: JZ              L05 [TRUE] L0012
       ADD             L06,L02 -> -(SP)
       JL              (SP)+,#80 [FALSE] L0012
       STOREB          L03,L06,#00
       GET_PROP        L05,#17 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       INC             L07
L0011: JUMP            L0009
L0012: AND             G1a,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       JE              L06,#01 [FALSE] L0013
       TEST_ATTR       L00,#1e [TRUE] L0013
       PRINT_PADDR     S036
       JUMP            L0014
L0013: PRINT_PADDR     S037
L0014: AND             G1a,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       PRINT           ":
"
       JUMP            L0016
L0015: PRINT_CHAR      ' '
L0016: SUB             G1a,#0400 -> G1a
L0017: ADD             L02,L06 -> -(SP)
       ADD             (SP)+,#01 -> L02
       JL              L07,#02 [FALSE] L0018
       JUMP            L0068
L0018: STORE           L0b,#01
       STORE           L05,L00
       STORE           L07,#00
       JUMP            L0020
L0019: CALL_VS         R0124 (L05,L01) -> L05
       INC             L07
L0020: JL              L07,L06 [FALSE] L0026
       LOADB           L03,L07 -> -(SP)
       JZ              (SP)+ [FALSE] L0025
       STOREB          L03,L07,L0b
       STOREB          L04,L0b,#01
       CALL_VS         R0124 (L05,L01) -> L09
       ADD             L07,#01 -> L0a
       JUMP            L0022
L0021: CALL_VS         R0124 (L09,L01) -> L09
       INC             L0a
L0022: JZ              L09 [TRUE] L0024
       JL              L0a,L06 [FALSE] L0024
       LOADB           L03,L0a -> -(SP)
       JZ              (SP)+ [FALSE] L0023
       GET_PROP        L05,#17 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       GET_PROP        L09,#17 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       CALL_VS         R0126 (L05,L09) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0023
       LOADB           L04,L0b -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREB          L04,L0b,(SP)+
       STOREB          L03,L0a,L0b
L0023: JUMP            L0021
L0024: INC             L0b
L0025: JUMP            L0019
L0026: DEC             L0b
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       JUMP            L0028
L0027: INC             L05
       INC             L0d
L0028: JG              L05,L0b [TRUE] L0032
L0029: LOADB           L03,L07 -> -(SP)
       JE              (SP)+,L05 [TRUE] L0030
       SUB             #00,L05 -> -(SP)
       LOADB           L03,L07 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0030
       INC             L07
       CALL_VS         R0124 (L06,L01) -> L06
       JUMP            L0029
L0030: LOADB           L04,L05 -> L0a
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1b [TRUE] L0031
       GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0031
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0031
       DEC             L0d
L0031: GET_PROP        L06,#19 -> L0e
       JUMP            L0027
L0032: DEC             L0d
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       STORE           L0e,#00
       JUMP            L0034
L0033: INC             L05
       DEC             L0d
L0034: JL              L0d,#00 [TRUE] L0067
L0035: LOADB           L03,L07 -> -(SP)
       JE              (SP)+,L05 [TRUE] L0036
       SUB             #00,L05 -> -(SP)
       LOADB           L03,L07 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0036
       INC             L07
       CALL_VS         R0124 (L06,L01) -> L06
       JUMP            L0035
L0036: GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1b [TRUE] L0056
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0037
       INC             L0d
       JUMP            L0066
L0037: CALL_VS         R0124 (L06,L01) -> L08
       JZ              L08 [TRUE] L0038
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L08,#19 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0039
L0038: JUMP            L0056
L0039: GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> L08
       JE              L08,#02,#03 [FALSE] L0056
       STORE           L0c,L06
       STORE           G1d,#01
       STORE           L09,L07
       STORE           L0a,L05
L0040: JL              L0a,L0b [FALSE] L0044
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L0c,#19 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0044
       INC             L0a
L0041: LOADB           L03,L09 -> -(SP)
       JE              (SP)+,L0a [TRUE] L0042
       SUB             #00,L0a -> -(SP)
       LOADB           L03,L09 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0042
       INC             L09
       CALL_VS         R0124 (L0c,L01) -> L0c
       JUMP            L0041
L0042: GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L0c,#19 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0043
       INC             G1d
L0043: JUMP            L0040
L0044: JE              G1d,#01 [FALSE] L0045
       JUMP            L0056
L0045: AND             G1a,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0046
       ADD             L01,G1e -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0129 ((SP)+)
L0046: JE              L08,#03 [FALSE] L0050
       STORE           L0c,#00
       STORE           L09,#00
L0047: JL              L09,G1d [FALSE] L0048
       ADD             L09,L05 -> -(SP)
       LOADB           L04,(SP)+ -> -(SP)
       ADD             L0c,(SP)+ -> L0c
       INC             L09
       JUMP            L0047
L0048: CALL_2N         R0107 (L0c)
       PRINT           " "
       GET_PROP        L06,#19 -> -(SP)
       PRINT_PADDR     (SP)+
       AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0049
       PRINT           " ("
L0049: AND             G1a,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       PRINT           ":
"
L0050: STORE           L0c,G1a
       JE              L08,#03 [TRUE] L0051
       STORE           G1f,#01
       STORE           G32,L06
       ADD             L01,G1e -> G33
       CALL_VS         R0086 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0051
       JUMP            L0054
L0051: GET_PROP        L06,#19 -> G1b
       STORE           G1c,L06
       INC             G1e
       CALL_VN         R0131 (L06,L01,L02)
       DEC             G1e
       STORE           G1b,#00
       STORE           G1c,#00
       JE              L08,#03 [FALSE] L0053
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0052
       PRINT           ")"
L0052: JUMP            L0054
L0053: STORE           G1f,#02
       STORE           G32,L06
       ADD             L01,G1e -> G33
       CALL_VN         R0086 (L06,#19)
L0054: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0055
       AND             G1a,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0055
       NEW_LINE        
L0055: STORE           G1a,L0c
       GET_PROP        L06,#19 -> L0e
       JUMP            L0064
L0056: SUB             #00,L0d -> -(SP)
       CALL_VS         R0132 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0057
       JUMP            L0066
L0057: LOADB           L04,L05 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0061
       AND             G1a,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0058
       CALL_2N         R0106 (L06)
       JUMP            L0060
L0058: AND             G1a,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0059
       CALL_2N         R0104 (L06)
       JUMP            L0060
L0059: CALL_2N         R0103 (L06)
L0060: JUMP            L0063
L0061: AND             G1a,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0062
       LOADB           L04,L05 -> -(SP)
       CALL_VN         R0101 (L06,#01,(SP)+)
L0062: LOADB           L04,L05 -> -(SP)
       CALL_2N         R0107 ((SP)+)
       PRINT           " "
       CALL_VN         R0084 (L06,#17,#01)
L0063: CALL_VN         R0133 (L06,L01,L02)
L0064: AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0066
       JE              L0d,#01 [FALSE] L0065
       PRINT_PADDR     S040
L0065: JG              L0d,#01 [FALSE] L0066
       PRINT           ", "
L0066: JUMP            L0033
L0067: RTRUE           
L0068: STORE           L0b,L06
       STORE           L05,#01
       STORE           L06,L00
       JUMP            L0070
L0069: CALL_VS         R0124 (L06,L01) -> L06
       INC             L05
       INC             L0d
L0070: JG              L05,L0b [TRUE] L0072
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1b [TRUE] L0071
       GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0071
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0071
       DEC             L0d
L0071: GET_PROP        L06,#19 -> L0e
       JUMP            L0069
L0072: STORE           L05,#01
       STORE           L06,L00
       STORE           L0e,#00
       JUMP            L0074
L0073: CALL_VS         R0124 (L06,L01) -> L06
       INC             L05
L0074: JG              L05,L0d [TRUE] L0095
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,#00,G1b [TRUE] L0087
       GET_PROP        L06,#19 -> -(SP)
       JE              (SP)+,L0e [FALSE] L0075
       DEC             L05
       JUMP            L0094
L0075: CALL_VS         R0124 (L06,L01) -> L07
       JZ              L07 [TRUE] L0076
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L07,#19 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0077
L0076: JUMP            L0087
L0077: GET_PROP        L06,#19 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> L07
       JE              L07,#02,#03 [FALSE] L0087
       AND             G1a,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0078
       ADD             L01,G1e -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0129 ((SP)+)
L0078: JE              L07,#03 [FALSE] L0081
       STORE           L0c,L06
       STORE           L09,#00
L0079: CALL_VS         R0124 (L0c,L01) -> L0c
       INC             L09
       GET_PROP        L06,#19 -> -(SP)
       GET_PROP        L0c,#19 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0079
       CALL_2N         R0107 (L09)
       PRINT           " "
       GET_PROP        L06,#19 -> -(SP)
       PRINT_PADDR     (SP)+
       AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0080
       PRINT           " ("
L0080: AND             G1a,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0081
       PRINT           ":
"
L0081: STORE           L0c,G1a
       JE              L07,#03 [TRUE] L0082
       STORE           G1f,#01
       STORE           G32,L06
       ADD             L01,G1e -> G33
       CALL_VS         R0086 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0082
       JUMP            L0085
L0082: GET_PROP        L06,#19 -> G1b
       STORE           G1c,L06
       INC             G1e
       CALL_VN         R0131 (L06,L01,L02)
       DEC             G1e
       STORE           G1b,#00
       STORE           G1c,#00
       JE              L07,#03 [FALSE] L0084
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0083
       PRINT           ")"
L0083: JUMP            L0085
L0084: STORE           G1f,#02
       STORE           G32,L06
       ADD             L01,G1e -> G33
       CALL_VN         R0086 (L06,#19)
L0085: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0086
       AND             G1a,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0086
       NEW_LINE        
L0086: STORE           G1a,L0c
       GET_PROP        L06,#19 -> L0e
       JUMP            L0092
L0087: SUB             L05,L0d -> -(SP)
       CALL_VS         R0132 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0088
       JUMP            L0094
L0088: AND             G1a,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0089
       CALL_2N         R0106 (L06)
       JUMP            L0091
L0089: AND             G1a,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0090
       CALL_2N         R0104 (L06)
       JUMP            L0091
L0090: CALL_2N         R0103 (L06)
L0091: CALL_VN         R0133 (L06,L01,L02)
L0092: AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0094
       SUB             L0d,#01 -> -(SP)
       JE              L05,(SP)+ [FALSE] L0093
       PRINT_PADDR     S040
L0093: SUB             L0d,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0094
       PRINT           ", "
L0094: JUMP            L0073
L0095: RTRUE           

Routine R0132, 4 locals

       AND             G1a,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L01,G1e -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0129 ((SP)+)
L0001: AND             G1a,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PROP        L00,#16 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           G1f,#01
       CALL_VS         R0084 (L00,#16,#01) -> L03
       JE              L03,#01 [FALSE] L0004
       AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              L02,#ffff [FALSE] L0002
       PRINT_PADDR     S040
L0002: JL              L02,#ffff [FALSE] L0003
       PRINT           ", "
L0003: AND             G1a,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       NEW_LINE        
L0004: RET             L03

Routine R0133, 8 locals

       AND             G1a,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       STORE           L07,#00
       TEST_ATTR       L00,#09 [FALSE] L0001
       TEST_ATTR       G00,#09 [TRUE] L0001
       ADD             L07,#01 -> L07
L0001: TEST_ATTR       L00,#04 [FALSE] L0002
       TEST_ATTR       L00,#0e [TRUE] L0002
       ADD             L07,#02 -> L07
L0002: TEST_ATTR       L00,#04 [FALSE] L0005
       TEST_ATTR       L00,#0e [TRUE] L0003
       TEST_ATTR       L00,#17 [FALSE] L0005
L0003: GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [FALSE] L0005
       ADD             L07,#04 -> L07
L0005: JE              L07,#01 [FALSE] L0006
       CALL_VN         R0244 (#1006,#01,L00)
L0006: JE              L07,#02 [FALSE] L0007
       CALL_VN         R0244 (#1006,#02,L00)
L0007: JE              L07,#03 [FALSE] L0008
       CALL_VN         R0244 (#1006,#03,L00)
L0008: JE              L07,#04 [FALSE] L0009
       CALL_VN         R0244 (#1006,#04,L00)
L0009: JE              L07,#05 [FALSE] L0010
       CALL_VN         R0244 (#1006,#05,L00)
L0010: JE              L07,#06 [FALSE] L0011
       CALL_VN         R0244 (#1006,#06,L00)
L0011: JE              L07,#07 [FALSE] L0012
       CALL_VN         R0244 (#1006,#07,L00)
L0012: AND             G1a,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0030
       GET_PROP        L00,#16 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       STORE           G1f,#02
       CALL_VS         R0086 (L00,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       AND             G1a,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       NEW_LINE        
L0013: RTRUE           
L0014: TEST_ATTR       L00,#09 [FALSE] L0015
       TEST_ATTR       L00,#1a [FALSE] L0015
       CALL_VN         R0244 (#1006,#08)
       STORE           L04,#01
       JUMP            L0017
L0015: TEST_ATTR       L00,#09 [FALSE] L0016
       CALL_VN         R0244 (#1006,#09,L00)
       STORE           L04,#01
L0016: TEST_ATTR       L00,#1a [FALSE] L0017
       CALL_VN         R0244 (#1006,#0a,L00)
       STORE           L04,#01
L0017: TEST_ATTR       L00,#04 [FALSE] L0029
       TEST_ATTR       L00,#0f [FALSE] L0026
       JE              L04,#01 [FALSE] L0018
       PRINT_PADDR     S040
       JUMP            L0019
L0018: CALL_VN         R0244 (#1006,#0b,L00)
L0019: TEST_ATTR       L00,#0e [FALSE] L0023
       GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: JZ              (SP)+ [FALSE] L0021
       CALL_VN         R0244 (#1006,#0d,L00)
       JUMP            L0022
L0021: CALL_VN         R0244 (#1006,#0c,L00)
L0022: JUMP            L0025
L0023: TEST_ATTR       L00,#0a [FALSE] L0024
       TEST_ATTR       L00,#0b [FALSE] L0024
       CALL_VN         R0244 (#1006,#0f,L00)
       JUMP            L0025
L0024: CALL_VN         R0244 (#1006,#0e,L00)
L0025: STORE           L04,#01
       JUMP            L0029
L0026: GET_CHILD       L00 -> -(SP) [FALSE] L0027
L0027: JZ              (SP)+ [FALSE] L0029
       TEST_ATTR       L00,#17 [FALSE] L0029
       JE              L04,#01 [FALSE] L0028
       CALL_VN         R0244 (#1006,#10,L00)
       JUMP            L0029
L0028: CALL_VN         R0244 (#1006,#11,L00)
L0029: JE              L04,#01 [FALSE] L0030
       PRINT           ")"
L0030: AND             G1a,#0800 -> -(SP)
       JZ              (SP)+ [FALSE] L0034
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0032
L0031: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0031
L0032: PULL            Gee
       STORE           L05,Gef
       GET_CHILD       L00 -> L04 [FALSE] L0033
L0033: JUMP            L0038
L0034: STORE           L05,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0035
L0035: PULL            L06
       JZ              L06 [TRUE] L0038
L0036: TEST_ATTR       L06,#03 [TRUE] L0037
       TEST_ATTR       L06,#11 [TRUE] L0037
       INC             L05
       STORE           L04,L06
L0037: GET_SIBLING     L06 -> L06 [TRUE] L0036
L0038: AND             G1a,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0040
       JG              L05,#00 [FALSE] L0040
       AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0039
       CALL_VN         R0244 (#1006,#12,L00)
L0039: STORE           L03,#01
L0040: AND             G1a,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0051
       JG              L05,#00 [FALSE] L0051
       TEST_ATTR       L00,#14 [FALSE] L0045
       AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       AND             G1a,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0041
       CALL_VN         R0244 (#1006,#13,L00)
       JUMP            L0042
L0041: CALL_VN         R0244 (#1006,#14,L00)
L0042: TEST_ATTR       L00,#00 [FALSE] L0043
       PRINT_PADDR     S041
       JUMP            L0044
L0043: PRINT_PADDR     S042
L0044: STORE           L03,#01
L0045: TEST_ATTR       L00,#04 [FALSE] L0051
       TEST_ATTR       L00,#0e [TRUE] L0046
       TEST_ATTR       L00,#17 [FALSE] L0051
L0046: AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       AND             G1a,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0047
       CALL_VN         R0244 (#1006,#15,L00)
       JUMP            L0048
L0047: CALL_VN         R0244 (#1006,#16,L00)
L0048: TEST_ATTR       L00,#00 [FALSE] L0049
       PRINT_PADDR     S041
       JUMP            L0050
L0049: PRINT_PADDR     S042
L0050: STORE           L03,#01
L0051: JE              L03,#01 [FALSE] L0054
       AND             G1a,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0054
       JG              L05,#01 [TRUE] L0052
       TEST_ATTR       L04,#1e [FALSE] L0053
L0052: PRINT_PADDR     S039
       JUMP            L0054
L0053: PRINT_PADDR     S038
L0054: AND             G1a,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0055
       NEW_LINE        
L0055: JE              L03,#01 [FALSE] L0057
       GET_CHILD       L00 -> L00 [FALSE] L0056
L0056: ADD             L01,#01 -> -(SP)
       CALL_VN         R0131 (L00,(SP)+,L02)
       AND             G1a,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0057
       PRINT           ")"
L0057: RTRUE           

Routine R0134, 6 locals

       STORE           L00,#01
L0001: GET_PROP_ADDR   L00,#27 -> L04
       JZ              L04 [TRUE] L0010
       TEST_ATTR       L00,#01 [TRUE] L0010
       LOADW           L04,#00 -> -(SP)
       CALL_2S         R0083 ((SP)+) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0004
       CALL_VS         R0486 (L00,#27) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INSERT_OBJ      L00,G00
       JUMP            L0003
L0002: REMOVE_OBJ      L00
L0003: JUMP            L0010
L0004: GET_PROP_ADDR   L00,#27 -> Gef
       JZ              Gef [TRUE] L0005
       GET_PROP_LEN    Gef -> Gef
L0005: STORE           L01,Gef
       STORE           L02,#00
L0006: DIV             L01,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0009
       LOADW           L04,L02 -> L03
       JE              L03,G00 [TRUE] L0007
       JIN             L03,G00 [FALSE] L0008
L0007: INSERT_OBJ      L00,G00
       STORE           L05,#01
L0008: INC             L02
       JUMP            L0006
L0009: JZ              L05 [FALSE] L0010
       REMOVE_OBJ      L00
L0010: INC             L00
       JG              L00,#009b [TRUE] L0011
       JUMP            L0001
L0011: RTRUE           

Routine R0135, 2 locals

       INSERT_OBJ      G12,L00
L0001: GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      L00 -> L00
       JUMP            L0001
L0002: STORE           G00,L00
       STORE           G15,G00
       CALL_1N         R0134
       CALL_2N         R0095 (#01)
       JZ              L01 [FALSE] L0003
       CALL_2N         R0076 (#1f)
L0003: JE              L01,#01 [FALSE] L0004
       CALL_1N         R0181
       CALL_1N         R0182
L0004: JE              L01,#02 [FALSE] L0005
       CALL_2N         R0183 (#01)
L0005: RTRUE           

Routine R0136, 1 local

       CALL_VN         R0076 (#1b,L00)
       CALL_2N         R0076 (#1f)
       RTRUE           

Routine R0137, 1 local

L0001: STORE           Gec,#25e8
       STOREB          Gec,#01,#00
       CALL_1N         R0479
       READ            Gec,#2661 -> Gef
       LOADW           #2661,#01 -> L00
       JE              L00,"y","yes","yes" [TRUE] RTRUE
       JE              L00,"n","no","no" [TRUE] RFALSE
       CALL_VN         R0244 (#01,#01)
       PRINT           "> "
       JUMP            L0001

orphan code fragment:

       RTRUE           

Routine R0138, 0 locals
    Action routine for:
        "restart"

       CALL_VN         R0244 (#02,#01)
       CALL_1S         R0137 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RESTART         
       CALL_VN         R0244 (#02,#02)
L0001: RTRUE           

Routine R0139, 0 locals
    Action routine for:
        "restore"

       RESTORE         -> Gef
       JE              Gef,#02 [TRUE] L0001
       CALL_VS         R0244 (#03,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0244 (#03,#02)
       RTRUE           

Routine R0140, 0 locals
    Action routine for:
        "verify"

       VERIFY          [TRUE] L0001
       JUMP            L0002
L0001: CALL_VS         R0244 (#05,#01) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0244 (#05,#02)
       RTRUE           

Routine R0141, 0 locals
    Action routine for:
        "script"
        "script on"

       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G07
       JZ              G07 [TRUE] L0001
       CALL_VS         R0244 (#06,#01) -> -(SP)
       RET_POPPED      
L0001: OUTPUT_STREAM   SCRIPTING_ENABLE
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0244 (#06,#03) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0244 (#06,#02)
       CALL_1N         R0112
       STORE           G07,#01
       RTRUE           

Routine R0142, 0 locals
    Action routine for:
        "script off"
        "noscript"

       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> G07
       JZ              G07 [FALSE] L0001
       CALL_VS         R0244 (#07,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0244 (#07,#02)
       OUTPUT_STREAM   #fffe
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0244 (#07,#03) -> -(SP)
       RET_POPPED      
L0002: STORE           G07,#00
       RTRUE           

Routine R0143, 0 locals
    Action routine for:
        "notify on"

       STORE           G0f,#01
       CALL_2N         R0244 (#08)
       RTRUE           

Routine R0144, 0 locals
    Action routine for:
        "notify off"

       STORE           G0f,#00
       CALL_2N         R0244 (#09)
       RTRUE           

Routine R0145, 3 locals

       CALL_2N         R0244 (#0a)
       STORE           L00,#01
L0001: TEST_ATTR       L00,#18 [FALSE] L0002
       INC             L01
L0002: INC             L00
       JG              L00,#009b [TRUE] L0003
       JUMP            L0001
L0003: STORE           L00,#01
L0004: TEST_ATTR       L00,#18 [FALSE] L0007
       CALL_2N         R0106 (L00)
       INC             L02
       JE              L02,L01 [FALSE] L0005
       PRINT_RET       "."
L0005: SUB             L01,#01 -> -(SP)
       JE              L02,(SP)+ [FALSE] L0006
       PRINT_PADDR     S040
       JUMP            L0007
L0006: PRINT           ", "
L0007: INC             L00
       JG              L00,#009b [TRUE] L0008
       JUMP            L0004
L0008: RTRUE           

Routine R0146, 3 locals

       CALL_VN         R0244 (#0b,#01)
       STORE           L00,#01
L0001: TEST_ATTR       L00,#0c [FALSE] L0011
       STORE           L02,#01
       CALL_2N         R0104 (L00)
       GET_PARENT      L00 -> L01
       JE              L01,G12 [FALSE] L0004
       TEST_ATTR       L00,#1a [FALSE] L0002
       CALL_VN         R0244 (#0b,#03)
       JUMP            L0003
L0002: CALL_VN         R0244 (#0b,#04)
L0003: JUMP            L0010
L0004: TEST_ATTR       L01,#00 [FALSE] L0005
       CALL_VN         R0244 (#0b,#05)
       JUMP            L0010
L0005: TEST_ATTR       L01,#18 [FALSE] L0006
       CALL_VN         R0244 (#0b,#06,L01)
       JUMP            L0010
L0006: TEST_ATTR       L01,#04 [FALSE] L0007
       CALL_VN         R0244 (#0b,#08,L01)
       JUMP            L0010
L0007: TEST_ATTR       L01,#14 [FALSE] L0008
       CALL_VN         R0244 (#0b,#09,L01)
       JUMP            L0010
L0008: TEST_ATTR       L01,#07 [FALSE] L0009
       CALL_VN         R0244 (#0b,#07,L01)
       JUMP            L0010
L0009: CALL_VN         R0244 (#0b,#0a)
L0010: NEW_LINE        
L0011: INC             L00
       JG              L00,#009b [TRUE] L0012
       JUMP            L0001
L0012: JZ              L02 [FALSE] L0013
       CALL_VN         R0244 (#0b,#02)
L0013: RTRUE           

Routine R0147, 1 local

       LOADB           #2aa5,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       STOREB          #2aa5,L00,#01
       LOADB           #2a8d,L00 -> -(SP)
       ADD             G0d,(SP)+ -> G0d
L0001: RTRUE           

Routine R0148, 2 locals

       PRINT           "  "
       STORE           L01,L00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L00 -> L01
       MUL             L01,#0a -> L01
L0001: JL              L01,#0a [FALSE] L0002
       PRINT           "   "
       JUMP            L0004
L0002: JL              L01,#64 [FALSE] L0003
       PRINT           "  "
       JUMP            L0004
L0003: JL              L01,#03e8 [FALSE] L0004
       PRINT           " "
L0004: PRINT_NUM       L00
       PRINT           " "
       RTRUE           

Routine R0149, 0 locals
    Action routine for:
        "i wide"

       STORE           G20,#1c
       CALL_2N         R0076 (#0e)
       RTRUE           

Routine R0150, 0 locals
    Action routine for:
        "i tall"

       STORE           G20,#17
       CALL_2N         R0076 (#0e)
       RTRUE           

Routine R0151, 1 local
    Action routine for:
        "carry inventory"
        "i"

       GET_CHILD       G12 -> -(SP) [FALSE] L0001
L0001: JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0244 (#0e,#01) -> -(SP)
       RET_POPPED      
L0002: JZ              G20 [FALSE] L0003
       CALL_1S         R0150 -> -(SP)
       RET_POPPED      
L0003: CALL_VN         R0244 (#0e,#02)
       AND             G20,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       PRINT           ":
"
       JUMP            L0005
L0004: PRINT           " "
L0005: GET_CHILD       G12 -> -(SP) [FALSE] L0006
L0006: CALL_VN         R0130 ((SP)+,G20,#01)
       AND             G20,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT           ".
"
L0007: GET_CHILD       G12 -> -(SP) [FALSE] L0008
L0008: PULL            L00
       JZ              L00 [TRUE] L0010
L0009: CALL_2N         R0072 (L00)
       GET_SIBLING     L00 -> L00 [TRUE] L0009
L0010: CALL_1N         R0081
       RTRUE           

Routine R0152, 4 locals

       STORE           L02,L00
L0001: JZ              L02 [TRUE] L0005
       STORE           L03,L01
L0002: JZ              L03 [TRUE] L0004
       JE              L03,L02 [FALSE] L0003
       RET             L02
L0003: GET_PARENT      L03 -> L03
       JUMP            L0002
L0004: GET_PARENT      L02 -> L02
       JUMP            L0001
L0005: RFALSE          

Routine R0153, 2 locals

L0001: JZ              L01 [TRUE] L0002
       JE              L00,L01 [TRUE] RTRUE
       GET_PARENT      L01 -> L01
       JUMP            L0001
L0002: RFALSE          

Routine R0154, 6 locals

       STORE           L01,L00
L0001: GET_PARENT      L01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      L01 -> L01
       JUMP            L0001
L0002: STORE           L02,#01
L0003: GET_PROP_ADDR   L02,#18 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       GET_PROP_ADDR   L02,#18 -> L04
       GET_PROP_ADDR   L02,#18 -> Gef
       JZ              Gef [TRUE] L0004
       GET_PROP_LEN    Gef -> Gef
L0004: PUSH            Gef
       DIV             (SP)+,#02 -> L03
       LOADW           L04,#00 -> -(SP)
       CALL_VS         R0491 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JUMP            L0008
L0005: STORE           L05,#00
L0006: JL              L05,L03 [FALSE] L0008
       LOADW           L04,L05 -> -(SP)
       JE              (SP)+,L01 [FALSE] L0007
       RET             L02
L0007: INC             L05
       JUMP            L0006
L0008: INC             L02
       JG              L02,#009b [TRUE] L0009
       JUMP            L0003
L0009: RFALSE          

Routine R0155, 5 locals

       CALL_2S         R0154 (L00) -> L04
       JZ              L04 [TRUE] L0001
       CALL_2S         R0155 (L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0152 (G12,L00) -> L03
       JE              G12,L03 [TRUE] L0004
       GET_PARENT      G12 -> L04
L0002: JE              L04,L03 [TRUE] L0004
       TEST_ATTR       L04,#04 [FALSE] L0003
       TEST_ATTR       L04,#0e [TRUE] L0003
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0244 (#0f,#09,L04) -> -(SP)
       RET_POPPED      
L0003: GET_PARENT      L04 -> L04
       JUMP            L0002
L0004: JE              L00,L03 [TRUE] L0010
       GET_PARENT      L00 -> L04
L0005: JE              L04,L03 [TRUE] L0010
       JZ              L02 [TRUE] L0008
       TEST_ATTR       L04,#04 [TRUE] L0008
       TEST_ATTR       L04,#14 [TRUE] L0008
       TEST_ATTR       L04,#00 [FALSE] L0006
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0244 (#0f,#06,L04) -> -(SP)
       RET_POPPED      
L0006: TEST_ATTR       L04,#17 [FALSE] L0007
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0244 (#0f,#07,L04) -> -(SP)
       RET_POPPED      
L0007: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0244 (#0f,#08,L00) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       L04,#04 [FALSE] L0009
       TEST_ATTR       L04,#0e [TRUE] L0009
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0244 (#0f,#09,L04) -> -(SP)
       RET_POPPED      
L0009: GET_PARENT      L04 -> L04
       JUMP            L0005
L0010: RFALSE          

Routine R0156, 6 locals

       JE              L00,G12 [FALSE] L0001
       CALL_VS         R0244 (#0f,#02) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       L00,#00 [FALSE] L0002
       CALL_VS         R0244 (#0f,#03,L00) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0152 (G12,L00) -> L01
       JZ              L01 [FALSE] L0003
       CALL_2S         R0154 (L00) -> L03
       JZ              L03 [TRUE] L0003
       CALL_VS         R0152 (G12,L03) -> L01
L0003: JZ              L01 [FALSE] L0004
       CALL_VS         R0244 (#0f,#08,L00) -> -(SP)
       RET_POPPED      
L0004: JE              L01,L00 [FALSE] L0005
       CALL_VS         R0244 (#0f,#04,L00) -> -(SP)
       RET_POPPED      
L0005: JIN             L00,G12 [FALSE] L0006
       CALL_VS         R0244 (#0f,#05,L00) -> -(SP)
       RET_POPPED      
L0006: CALL_VS         R0155 (L00,#00,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       RTRUE           
L0007: GET_PARENT      L00 -> L03
       JE              L03,L01 [TRUE] L0010
       TEST_ATTR       L03,#04 [TRUE] L0008
       TEST_ATTR       L03,#14 [FALSE] L0010
L0008: STORE           L02,L03
       STORE           L05,G28
       STORE           G28,#1000
       CALL_VS         R0086 (L03,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           G28,L05
       RTRUE           
L0009: STORE           G28,L05
L0010: TEST_ATTR       L00,#11 [FALSE] L0011
       CALL_VS         R0244 (#0f,#0a,L00) -> -(SP)
       RET_POPPED      
L0011: TEST_ATTR       L00,#13 [FALSE] L0012
       CALL_VS         R0244 (#0f,#0b,L00) -> -(SP)
       RET_POPPED      
L0012: STORE           L05,#00
       GET_CHILD       G12 -> -(SP) [FALSE] L0013
L0013: PULL            L04
       JZ              L04 [TRUE] L0016
L0014: TEST_ATTR       L04,#1a [TRUE] L0015
       INC             L05
L0015: GET_SIBLING     L04 -> L04 [TRUE] L0014
L0016: CALL_VS         R0085 (G12,#2d) -> -(SP)
       JL              L05,(SP)+ [TRUE] L0025
       JZ              #0041 [TRUE] L0024
       GET_PARENT      "green jacket" -> -(SP)
       JE              (SP)+,G12 [TRUE] L0017
       CALL_VS         R0244 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0017: STORE           L04,#00
       GET_CHILD       G12 -> -(SP) [FALSE] L0018
L0018: PULL            L05
       JZ              L05 [TRUE] L0021
L0019: JE              L05,#0041 [TRUE] L0020
       TEST_ATTR       L05,#1a [TRUE] L0020
       TEST_ATTR       L05,#09 [TRUE] L0020
       STORE           L04,L05
L0020: GET_SIBLING     L05 -> L05 [TRUE] L0019
L0021: JZ              L04 [TRUE] L0022
       CALL_VN         R0244 (#0f,#0d,L04)
       STORE           G2d,#01
       CALL_VN         R0076 (#13,L04,#0041)
       STORE           G2d,#00
       JIN             L04,"green jacket" [FALSE] RTRUE
       JUMP            L0023
L0022: CALL_VS         R0244 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0023: JUMP            L0025
L0024: CALL_VS         R0244 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0025: INSERT_OBJ      L00,G12
       JZ              L02 [TRUE] L0027
       STORE           L05,G28
       STORE           G28,#1000
       CALL_VS         R0086 (L02,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       STORE           G28,L05
       RTRUE           
L0026: STORE           G28,L05
L0027: RFALSE          

Routine R0157, 0 locals
    Action routine for:
        "carry multi"
        "get multi"
        "pick up multi"
        "pick multi up"
        "remove multi"
        "peel noun"
        "peel off noun"

       JZ              G40 [TRUE] L0001
       JIN             G2b,G12 [TRUE] L0002
L0001: CALL_2S         R0156 (G2b) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G3f,G40
       JE              G3f,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#0f,#01)
       RTRUE           

Routine R0158, 1 local
    Action routine for:
        "carry multiinside from noun"
        "carry multiinside off noun"
        "get multiinside from noun"
        "remove multiinside from noun"

       GET_PARENT      G2b -> L00
       TEST_ATTR       L00,#04 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] L0001
       CALL_VS         R0244 (#11,#01,G2b) -> -(SP)
       RET_POPPED      
L0001: JE              L00,G2c [TRUE] L0002
       CALL_VS         R0244 (#11,#02,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       L00,#00 [FALSE] L0003
       CALL_VS         R0244 (#0f,#06,L00) -> -(SP)
       RET_POPPED      
L0003: CALL_2S         R0156 (G2b) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       STORE           G28,#0f
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G28,#11
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VS         R0244 (#11,#03,G2b) -> -(SP)
       RET_POPPED      

Routine R0159, 0 locals
    Action routine for:
        "put down multiheld"
        "put multiheld down"
        "discard multiheld"

       JE              G2b,G12 [FALSE] L0001
       CALL_VS         R0244 (#12,#04) -> -(SP)
       RET_POPPED      
L0001: GET_PARENT      G12 -> -(SP)
       JIN             G2b,(SP)+ [FALSE] L0002
       CALL_VS         R0244 (#10,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: JIN             G2b,G12 [TRUE] L0003
       CALL_VS         R0244 (#10,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#1a [FALSE] L0004
       CALL_VN         R0244 (#10,#03,G2b)
       CALL_VN         R0076 (#29,G2b)
       TEST_ATTR       G2b,#1a [TRUE] RTRUE
L0004: GET_PARENT      G12 -> -(SP)
       INSERT_OBJ      G2b,(SP)+
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VS         R0244 (#10,#04,G2b) -> -(SP)
       RET_POPPED      

Routine R0160, 1 local
    Action routine for:
        "put multiexcept on / onto noun"
        "discard multiexcept on / onto noun"

       STORE           G2f,#12
       JE              G2c,#10 [TRUE] L0001
       JIN             G12,G2c [FALSE] L0002
L0001: CALL_VN         R0076 (#10,G2b)
       RTRUE           
L0002: GET_PARENT      G2b -> -(SP)
       JE              (SP)+,G12 [TRUE] L0003
       CALL_VS         R0244 (#12,#01,G2b) -> -(SP)
       RET_POPPED      
L0003: CALL_VS         R0152 (G2b,G2c) -> L00
       JE              L00,G2b [FALSE] L0004
       CALL_VS         R0244 (#12,#02,G2b) -> -(SP)
       RET_POPPED      
L0004: CALL_2S         R0155 (G2c) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RTRUE           
L0005: JE              G2c,L00 [TRUE] L0007
       STORE           G28,#1001
       CALL_VS         R0086 (G2c,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           G28,#12
       RTRUE           
L0006: STORE           G28,#12
L0007: TEST_ATTR       G2c,#14 [TRUE] L0008
       CALL_VS         R0244 (#12,#03,G2c) -> -(SP)
       RET_POPPED      
L0008: JE              L00,G12 [FALSE] L0009
       CALL_VS         R0244 (#12,#04) -> -(SP)
       RET_POPPED      
L0009: TEST_ATTR       G2b,#1a [FALSE] L0010
       CALL_VN         R0244 (#12,#05,G2b)
       CALL_VN         R0076 (#29,G2b)
       TEST_ATTR       G2b,#1a [FALSE] L0010
       RTRUE           
L0010: CALL_VS         R0085 (G2c,#2d) -> -(SP)
       STORE           Gef,#00
       GET_CHILD       G2c -> -(SP) [FALSE] L0012
L0011: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0011
L0012: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0013
       CALL_VS         R0244 (#12,#06,G2c) -> -(SP)
       RET_POPPED      
L0013: INSERT_OBJ      G2b,G2c
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0014
       RTRUE           
L0014: JE              G2c,L00 [TRUE] L0016
       STORE           G28,#1001
       CALL_VS         R0086 (G2c,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       STORE           G28,#12
       RTRUE           
L0015: STORE           G28,#12
L0016: JE              G2d,#01 [FALSE] L0017
       RTRUE           
L0017: JE              G38,#01 [FALSE] L0018
       CALL_VS         R0244 (#12,#07) -> -(SP)
       RET_POPPED      
L0018: CALL_VN         R0244 (#12,#08,G2b)
       RTRUE           

Routine R0161, 1 local
    Action routine for:
        "put multiexcept in / inside / into noun"
        "insert multiexcept in / into noun"
        "discard multiexcept in / into / down noun"

       STORE           G2f,#13
       JE              G2c,#10 [TRUE] L0001
       JIN             G12,G2c [FALSE] L0002
L0001: CALL_VN         R0076 (#10,G2b)
       RTRUE           
L0002: GET_PARENT      G2b -> -(SP)
       JE              (SP)+,G12 [TRUE] L0003
       CALL_VS         R0244 (#13,#01,G2b) -> -(SP)
       RET_POPPED      
L0003: CALL_VS         R0152 (G2b,G2c) -> L00
       JE              L00,G2b [FALSE] L0004
       CALL_VS         R0244 (#13,#05,G2b) -> -(SP)
       RET_POPPED      
L0004: CALL_2S         R0155 (G2c) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       RTRUE           
L0005: JE              G2c,L00 [TRUE] L0007
       STORE           G28,#1001
       CALL_VS         R0086 (G2c,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           G28,#13
       RTRUE           
L0006: STORE           G28,#13
       TEST_ATTR       G2c,#04 [FALSE] L0007
       TEST_ATTR       G2c,#0e [TRUE] L0007
       CALL_VS         R0244 (#13,#03,G2c) -> -(SP)
       RET_POPPED      
L0007: TEST_ATTR       G2c,#04 [TRUE] L0008
       CALL_VS         R0244 (#13,#02,G2c) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       G2b,#1a [FALSE] L0009
       CALL_VN         R0244 (#13,#06,G2b)
       CALL_VN         R0076 (#29,G2b)
       TEST_ATTR       G2b,#1a [FALSE] L0009
       RTRUE           
L0009: CALL_VS         R0085 (G2c,#2d) -> -(SP)
       STORE           Gef,#00
       GET_CHILD       G2c -> -(SP) [FALSE] L0011
L0010: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0010
L0011: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0012
       CALL_VS         R0244 (#13,#07,G2c) -> -(SP)
       RET_POPPED      
L0012: INSERT_OBJ      G2b,G2c
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2c,L00 [TRUE] L0014
       STORE           G28,#1001
       CALL_VS         R0086 (G2c,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       STORE           G28,#13
       RTRUE           
L0013: STORE           G28,#13
L0014: JE              G2d,#01 [TRUE] RTRUE
       JE              G38,#01 [FALSE] L0015
       CALL_VS         R0244 (#13,#08,G2b) -> -(SP)
       RET_POPPED      
L0015: CALL_VN         R0244 (#13,#09,G2b)
       RTRUE           

Routine R0162, 0 locals
    Action routine for:
        "transfer held to noun"
        "clear noun to noun"

       JIN             G2b,G12 [TRUE] L0001
       CALL_2S         R0156 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2c,#04 [FALSE] L0002
       CALL_VN         R0076 (#13,G2b,G2c)
       RTRUE           
L0002: TEST_ATTR       G2c,#14 [FALSE] L0003
       CALL_VN         R0076 (#12,G2b,G2c)
       RTRUE           
L0003: CALL_VN         R0076 (#10,G2b)
       RTRUE           

Routine R0163, 0 locals
    Action routine for:
        "empty noun"
        "empty out noun"
        "empty noun out"

       STORE           G2c,#10
       CALL_1N         R0164
       RTRUE           

Routine R0164, 2 locals
    Action routine for:
        "empty noun to / into / on / onto noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#04 [TRUE] L0002
       CALL_VS         R0244 (#14,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#0e [TRUE] L0003
       CALL_VS         R0244 (#14,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: JE              G2c,#10 [TRUE] L0005
       TEST_ATTR       G2c,#04 [TRUE] L0004
       CALL_VS         R0244 (#14,#01,G2c) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       G2c,#0e [TRUE] L0005
       CALL_VS         R0244 (#14,#02,G2c) -> -(SP)
       RET_POPPED      
L0005: GET_CHILD       G2b -> L00 [FALSE] L0006
L0006: JZ              L00 [FALSE] L0007
       CALL_VS         R0244 (#14,#03,G2b) -> -(SP)
       RET_POPPED      
L0007: JZ              L00 [TRUE] L0009
       GET_SIBLING     L00 -> L01 [FALSE] L0008
L0008: CALL_2N         R0106 (L00)
       PRINT           ": "
       CALL_VN         R0076 (#5e,L00,G2c)
       STORE           L00,L01
       JUMP            L0007
L0009: RTRUE           

Routine R0165, 0 locals
    Action routine for:
        "feed held to creature"
        "feed creature held" REVERSE
        "feed over held to creature"

       GET_PARENT      G2b -> -(SP)
       JE              (SP)+,G12 [TRUE] L0001
       CALL_VS         R0244 (#15,#01,G2b) -> -(SP)
       RET_POPPED      
L0001: JE              G2c,G12 [FALSE] L0002
       CALL_VS         R0244 (#15,#02,G2b) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0082 (G2c,#15) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0244 (#15,#03,G2c)
       RTRUE           

Routine R0166, 0 locals
    Action routine for:
        

       CALL_VN         R0076 (#15,G2c,G2b)
       RTRUE           

Routine R0167, 0 locals
    Action routine for:
        "display creature held" REVERSE
        "display held to creature"

       GET_PARENT      G2b -> -(SP)
       JE              (SP)+,G12 [TRUE] L0001
       CALL_VS         R0244 (#16,#01,G2b) -> -(SP)
       RET_POPPED      
L0001: JE              G2c,G12 [FALSE] L0002
       CALL_VN         R0076 (#20,G2b)
       RTRUE           
L0002: CALL_VS         R0082 (G2c,#16) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0244 (#16,#02,G2c)
       RTRUE           

Routine R0168, 0 locals
    Action routine for:
        

       CALL_VN         R0076 (#16,G2c,G2b)
       RTRUE           

Routine R0169, 3 locals
    Action routine for:
        "get in / into / on / onto noun"
        "stand on noun"
        "go noun"
        "go into / in / inside / through noun"
        "leave into / in / inside / through noun"
        "cross noun"
        "lie on top of noun"
        "lie on / in / inside noun"

       TEST_ATTR       G2b,#05 [TRUE] L0001
       JIN             G2b,"compass" [FALSE] L0002
L0001: CALL_VN         R0076 (#1b,G2b)
       RTRUE           
L0002: JIN             G12,G2b [FALSE] L0003
       CALL_VS         R0244 (#17,#01,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#07 [TRUE] L0004
       CALL_VS         R0244 (#17,#02,G2b) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       G2b,#04 [FALSE] L0005
       TEST_ATTR       G2b,#0e [TRUE] L0005
       CALL_VS         R0244 (#17,#03,G2b) -> -(SP)
       RET_POPPED      
L0005: GET_PARENT      G2b -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0015
       CALL_VS         R0152 (G12,G2b) -> L00
       JE              L00,G12,#00 [FALSE] L0006
       CALL_VS         R0244 (#17,#04,G2b) -> -(SP)
       RET_POPPED      
L0006: JIN             G12,L00 [TRUE] L0010
       GET_PARENT      G12 -> L01
       GET_PARENT      L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0007
       JE              G2b,L00 [TRUE] L0008
L0007: CALL_VN         R0244 (#17,#06,L01)
       STORE           L02,G2d
       STORE           G2d,#01
L0008: CALL_2N         R0076 (#19)
       STORE           G2d,L02
       JIN             G12,L01 [FALSE] L0009
       RTRUE           
L0009: JUMP            L0006
L0010: JIN             G12,G2b [FALSE] L0011
       RTRUE           
L0011: JIN             G2b,L00 [TRUE] L0015
       GET_PARENT      G2b -> L01
L0012: GET_PARENT      L01 -> -(SP)
       JE              (SP)+,L00 [TRUE] L0013
       GET_PARENT      L01 -> L01
       JUMP            L0012
L0013: CALL_VN         R0244 (#17,#07,L01)
       STORE           L02,G2d
       STORE           G2d,#01
       CALL_VN         R0076 (#17,L01)
       STORE           G2d,L02
       JIN             G12,L01 [TRUE] L0014
       RTRUE           
L0014: CALL_VN         R0076 (#17,G2b)
       RTRUE           
L0015: INSERT_OBJ      G12,G2b
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#17,#05,G2b)
       CALL_2N         R0177 (G2b)
       RTRUE           

Routine R0170, 0 locals
    Action routine for:
        "get off noun"
        "hop off noun"

       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,G2b [FALSE] L0001
       CALL_2N         R0076 (#19)
       RTRUE           
L0001: CALL_VN         R0244 (#18,#01,G2b)
       RTRUE           

Routine R0171, 1 local
    Action routine for:
        "get out / off / up"
        "stand"
        "stand up"
        "leave noun"
        "exit"
        "hop off"

       GET_PARENT      G12 -> L00
       JE              L00,G00 [TRUE] L0001
       JE              G00,#13 [FALSE] L0004
       JE              L00,G15 [FALSE] L0004
L0001: GET_PROP        G00,#12 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       JE              G00,#13 [FALSE] L0003
       GET_PROP        G15,#12 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
L0002: CALL_VN         R0076 (#1b,#11)
       RTRUE           
L0003: CALL_VS         R0244 (#19,#01) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       L00,#04 [FALSE] L0005
       TEST_ATTR       L00,#0e [TRUE] L0005
       CALL_VS         R0244 (#19,#02,L00) -> -(SP)
       RET_POPPED      
L0005: GET_PARENT      L00 -> -(SP)
       INSERT_OBJ      G12,(SP)+
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#19,#03,L00)
       CALL_2N         R0183 (#01)
       RTRUE           

Routine R0172, 0 locals
    Action routine for:
        "go"
        "leave"

       CALL_2N         R0244 (#1a)
       RTRUE           

Routine R0173, 0 locals
    Action routine for:
        "cross"
        "in"

       CALL_VN         R0076 (#1b,#12)
       RTRUE           

Routine R0174, 7 locals
    Action routine for:
        "go noun = [parse $4104]"
        "leave noun = [parse $4104]"

       STORE           L06,G00
       STORE           L04,#00
       GET_PARENT      G12 -> L00
       JE              G00,#13 [TRUE] L0001
       JE              L00,G00 [FALSE] L0002
L0001: JE              G00,#13 [FALSE] L0007
       JE              L00,G15 [TRUE] L0007
L0002: STORE           L01,G00
       JE              G00,#13 [FALSE] L0003
       STORE           G00,G15
L0003: CALL_VS         R0086 (L00,#04) -> L02
       JE              L02,#03 [TRUE] L0004
       STORE           G00,L01
L0004: JE              L02,#01 [FALSE] L0005
       STORE           L04,L00
       GET_PARENT      L00 -> L00
       JUMP            L0007
L0005: JZ              L02 [FALSE] L0006
       CALL_VN         R0244 (#1b,#01,L00)
L0006: RTRUE           
L0007: GET_PROP        G2b,#15 -> L05
       CALL_2S         R0083 (L05) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0008
       CALL_VS         R0086 (G2b,#15) -> L05
L0008: CALL_VS         R0485 (L00,L05) -> L01
       CALL_2S         R0083 (L01) -> L02
       JE              L02,#03 [FALSE] L0009
       PRINT_PADDR     L01
       NEW_LINE        
       RFALSE          
L0009: JE              L02,#02 [FALSE] L0010
       CALL_VS         R0086 (L00,L05) -> L01
       JE              L01,#01 [TRUE] RTRUE
L0010: JZ              L02 [TRUE] L0011
       JZ              L01 [FALSE] L0013
L0011: GET_PROP        L00,#26 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_VN         R0084 (L00,#26)
L0012: RFALSE          
L0013: TEST_ATTR       L01,#05 [FALSE] L0019
       TEST_ATTR       L01,#03 [FALSE] L0014
       CALL_VS         R0244 (#1b,#02) -> -(SP)
       RET_POPPED      
L0014: TEST_ATTR       L01,#0e [TRUE] L0017
       JE              G2b,#0f [FALSE] L0015
       CALL_VS         R0244 (#1b,#03,L01) -> -(SP)
       RET_POPPED      
L0015: JE              G2b,#10 [FALSE] L0016
       CALL_VS         R0244 (#1b,#04,L01) -> -(SP)
       RET_POPPED      
L0016: CALL_VS         R0244 (#1b,#05,L01) -> -(SP)
       RET_POPPED      
L0017: CALL_VS         R0086 (L01,#13) -> L02
       JZ              L02 [FALSE] L0018
       CALL_VS         R0244 (#1b,#06,L01) -> -(SP)
       RET_POPPED      
L0018: JE              L02,#01 [TRUE] RTRUE
       STORE           L01,L02
L0019: JZ              L04 [FALSE] L0020
       INSERT_OBJ      G12,L01
       JUMP            L0021
L0020: INSERT_OBJ      L04,L01
L0021: STORE           G00,L01
       CALL_1N         R0134
       CALL_2S         R0096 (L01) -> L03
       JZ              L03 [TRUE] L0022
       STORE           G00,L01
       STORE           G14,#01
       JUMP            L0024
L0022: JE              L06,#13 [FALSE] L0023
       CALL_1N         R0432
       JZ              G13 [FALSE] RTRUE
L0023: STORE           G15,L01
       STORE           G00,#13
       STORE           G14,#00
L0024: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_2N         R0183 (#01)
       RTRUE           

Routine R0175, 3 locals

       GET_PARENT      G12 -> -(SP)
       JE              L00,(SP)+ [TRUE] RFALSE
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L01
       JZ              L01 [TRUE] L0004
L0002: TEST_ATTR       L01,#03 [TRUE] L0003
       TEST_ATTR       L01,#11 [TRUE] L0003
       STORE           L02,#01
L0003: GET_SIBLING     L01 -> L01 [TRUE] L0002
L0004: JZ              L02 [TRUE] RFALSE
       CALL_VN         R0244 (#1f,#04,L00)
       RTRUE           

Routine R0176, 2 locals

       GET_PARENT      G12 -> L01
L0001: JZ              L01 [TRUE] L0003
       JE              L01,G16 [TRUE] L0003
       JE              L01,L00 [TRUE] RFALSE
       GET_PARENT      L01 -> L01
       JZ              L01 [TRUE] L0002
       TEST_ATTR       L01,#14 [FALSE] RTRUE
L0002: JUMP            L0001
L0003: RTRUE           

Routine R0177, 9 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: PULL            L03
       JZ              L03 [TRUE] L0003
L0002: CLEAR_ATTR      L03,#19
       GET_SIBLING     L03 -> L03 [TRUE] L0002
L0003: STORE           L04,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: PULL            L03
       JZ              L03 [TRUE] L0019
L0005: TEST_ATTR       L03,#03 [TRUE] L0018
       CALL_2S         R0176 (L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       CALL_2N         R0072 (L03)
       TEST_ATTR       L03,#11 [TRUE] L0016
       SET_ATTR        L03,#19
       INC             L04
       STORE           L05,#1e
       STORE           L07,#00
       TEST_ATTR       L03,#05 [TRUE] L0006
       TEST_ATTR       L03,#04 [FALSE] L0007
L0006: TEST_ATTR       L03,#0e [FALSE] L0007
       CALL_VS         R0490 (L03,#1f) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       STORE           L05,#1f
       STORE           L07,#01
       JUMP            L0011
L0007: TEST_ATTR       L03,#05 [TRUE] L0008
       TEST_ATTR       L03,#04 [FALSE] L0009
L0008: TEST_ATTR       L03,#0e [TRUE] L0009
       CALL_VS         R0490 (L03,#20) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           L05,#20
       STORE           L07,#01
       JUMP            L0011
L0009: TEST_ATTR       L03,#15 [FALSE] L0010
       TEST_ATTR       L03,#0d [FALSE] L0010
       CALL_VS         R0490 (L03,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L05,#21
       STORE           L07,#01
       JUMP            L0011
L0010: TEST_ATTR       L03,#15 [FALSE] L0011
       TEST_ATTR       L03,#0d [TRUE] L0011
       CALL_VS         R0490 (L03,#22) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       STORE           L05,#22
       STORE           L07,#01
L0011: TEST_ATTR       L03,#0c [FALSE] L0012
       GET_PROP        L03,#24 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0012
       JE              L07,#01 [FALSE] L0015
L0012: GET_PROP        L03,#24 -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0013
       CALL_VS         R0086 (L03,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       STORE           L08,#01
       CLEAR_ATTR      L03,#19
       DEC             L04
       JUMP            L0015
L0013: CALL_VS         R0485 (L03,L05) -> L06
       JZ              L06 [TRUE] L0015
       NEW_LINE        
       CALL_VN         R0084 (L03,L05)
       STORE           L08,#01
       CLEAR_ATTR      L03,#19
       DEC             L04
       TEST_ATTR       L03,#14 [FALSE] L0015
       GET_CHILD       L03 -> -(SP) [FALSE] L0014
L0014: JZ              (SP)+ [TRUE] L0015
       CALL_2N         R0175 (L03)
L0015: JUMP            L0018
L0016: TEST_ATTR       L03,#14 [FALSE] L0018
       GET_CHILD       L03 -> -(SP) [FALSE] L0017
L0017: JZ              (SP)+ [TRUE] L0018
       CALL_2N         R0175 (L03)
L0018: GET_SIBLING     L03 -> L03 [TRUE] L0005
L0019: JZ              L04 [FALSE] L0020
       RFALSE          
L0020: JZ              L01 [TRUE] L0023
       NEW_LINE        
       JE              L08,#01 [FALSE] L0021
       STORE           L01,L02
L0021: PRINT_PADDR     L01
       PRINT           " "
       GET_CHILD       L00 -> -(SP) [FALSE] L0022
L0022: CALL_VN         R0130 ((SP)+,#0ad8)
       RET             L04
L0023: JE              L08,#01 [FALSE] L0024
       CALL_VN         R0244 (#1f,#05,L00)
       JUMP            L0025
L0024: CALL_VN         R0244 (#1f,#06,L00)
L0025: RTRUE           

Routine R0178, 0 locals
    Action routine for:
        "brief"

       STORE           G17,#01
       PRINT_PADDR     S001
       CALL_2N         R0244 (#1c)
       RTRUE           

Routine R0179, 0 locals
    Action routine for:
        "long"

       STORE           G17,#02
       PRINT_PADDR     S001
       CALL_2N         R0244 (#1d)
       RTRUE           

Routine R0180, 0 locals
    Action routine for:
        "short"

       STORE           G17,#03
       PRINT_PADDR     S001
       CALL_2N         R0244 (#1e)
       RTRUE           

Routine R0181, 1 local

       STORE           L00,G00
       JE              L00,G19 [TRUE] L0002
       GET_PROP        L00,#1e -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0084 (L00,#1e)
L0001: STORE           L00,G00
       CALL_1N         R0433
       STORE           G19,L00
L0002: RTRUE           

Routine R0182, 0 locals

       TEST_ATTR       G00,#18 [TRUE] L0001
       SET_ATTR        G00,#18
       TEST_ATTR       G00,#12 [FALSE] L0001
       ADD             G0d,#05 -> G0d
       ADD             G10,#05 -> G10
L0001: RTRUE           

Routine R0183, 5 locals
    Action routine for:
        "l"

       GET_PARENT      G12 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0113 (#0a) -> -(SP)
       RET_POPPED      
L0001: JE              G00,#13 [FALSE] L0002
       STORE           G16,#13
       JUMP            L0006
L0002: STORE           L01,#01
       GET_PARENT      G12 -> G16
L0003: GET_PARENT      G16 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       TEST_ATTR       G16,#04 [FALSE] L0004
       TEST_ATTR       G16,#0e [TRUE] L0004
       TEST_ATTR       G16,#17 [FALSE] L0005
L0004: GET_PARENT      G16 -> G16
       INC             L01
       JUMP            L0003
L0005: JE              G16,G00 [FALSE] L0006
       CALL_1N         R0181
       JE              G16,G00 [TRUE] L0006
       JUMP            L0001
L0006: NEW_LINE        
       SET_TEXT_STYLE  BOLDFACE
       JZ              L01 [FALSE] L0007
       CALL_2N         R0106 (#13)
       JUMP            L0009
L0007: JE              G16,G00 [TRUE] L0008
       CALL_2N         R0105 (G16)
       JUMP            L0009
L0008: CALL_2N         R0106 (G16)
L0009: SET_TEXT_STYLE  ROMAN
       STORE           L03,#01
       GET_PARENT      G12 -> L02
       JUMP            L0011
L0010: INC             L03
       GET_PARENT      L02 -> L02
L0011: JL              L03,L01 [FALSE] L0014
       TEST_ATTR       L02,#14 [FALSE] L0012
       CALL_VN         R0244 (#1f,#01,L02)
       JUMP            L0013
L0012: CALL_VN         R0244 (#1f,#02,L02)
L0013: JUMP            L0010
L0014: JE              G18,#01 [FALSE] L0015
       CALL_VN         R0244 (#1f,#03,G12)
L0015: NEW_LINE        
       JL              G17,#03 [FALSE] L0019
       JE              G16,G00 [FALSE] L0019
       JE              L00,#01 [FALSE] L0016
       JE              G17,#02 [TRUE] L0016
       TEST_ATTR       G00,#18 [TRUE] L0019
L0016: GET_PROP        G00,#24 -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0017
       CALL_VN         R0086 (G00,#24)
       JUMP            L0019
L0017: GET_PROP        G00,#23 -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       CALL_VN         R0113 (#0b,G00)
       JUMP            L0019
L0018: CALL_VN         R0084 (G00,#23)
L0019: JZ              L01 [FALSE] L0020
       CALL_2N         R0177 (#13)
       JUMP            L0028
L0020: STORE           L02,G12
       STORE           L03,L01
       JUMP            L0022
L0021: DEC             L03
       GET_PARENT      L02 -> L02
L0022: JG              L03,#00 [FALSE] L0023
       SET_ATTR        L02,#19
       JUMP            L0021
L0023: STORE           L03,L01
L0024: JG              L03,#00 [FALSE] L0028
       STORE           L02,G12
       STORE           L04,#00
L0025: JL              L04,L03 [FALSE] L0026
       GET_PARENT      L02 -> L02
       INC             L04
       JUMP            L0025
L0026: GET_PROP        L02,#32 -> -(SP)
       JZ              (SP)+ [TRUE] L0027
       NEW_LINE        
       CALL_VN         R0084 (L02,#32)
L0027: CALL_2N         R0177 (L02)
       DEC             L03
       JUMP            L0024
L0028: CALL_1N         R0434
       CALL_1N         R0182
       STORE           G28,#1f
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0184, 1 local
    Action routine for:
        "l at noun"
        "check noun"
        "read noun"
        "diagnose ATTRIBUTE(0)"

       JE              G00,#13 [FALSE] L0001
       CALL_VS         R0244 (#20,#01) -> -(SP)
       RET_POPPED      
L0001: GET_PROP        G2b,#23 -> L00
       JZ              L00 [FALSE] L0004
       TEST_ATTR       G2b,#04 [FALSE] L0002
       CALL_VN         R0076 (#22,G2b)
       RTRUE           
L0002: TEST_ATTR       G2b,#15 [FALSE] L0003
       CALL_VN         R0244 (#20,#03,G2b)
       RFALSE          
L0003: CALL_VS         R0244 (#20,#02,G2b) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0084 (G2b,#23)
       TEST_ATTR       G2b,#15 [FALSE] L0005
       CALL_VN         R0244 (#20,#03,G2b)
L0005: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0185, 0 locals
    Action routine for:
        "l under noun"

       JE              G00,#13 [FALSE] L0001
       CALL_VS         R0244 (#21,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0244 (#21,#02)
       RTRUE           

Routine R0186, 2 locals
    Action routine for:
        "l inside / in / into / through noun"
        "search noun"

       JE              G00,#13 [FALSE] L0001
       CALL_VS         R0244 (#22,#01,G2b) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: GET_CHILD       G2b -> -(SP) [FALSE] L0003
L0003: PULL            L00
       JZ              L00 [TRUE] L0006
L0004: TEST_ATTR       L00,#03 [TRUE] L0005
       TEST_ATTR       L00,#11 [TRUE] L0005
       STORE           L01,#01
L0005: GET_SIBLING     L00 -> L00 [TRUE] L0004
L0006: TEST_ATTR       G2b,#14 [FALSE] L0008
       JZ              L01 [FALSE] L0007
       CALL_VS         R0244 (#22,#02,G2b) -> -(SP)
       RET_POPPED      
L0007: CALL_VS         R0244 (#22,#03,G2b) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       G2b,#04 [TRUE] L0009
       CALL_VS         R0244 (#22,#04,G2b) -> -(SP)
       RET_POPPED      
L0009: TEST_ATTR       G2b,#17 [TRUE] L0010
       TEST_ATTR       G2b,#0e [TRUE] L0010
       CALL_VS         R0244 (#22,#05,G2b) -> -(SP)
       RET_POPPED      
L0010: CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           Gef,#00
       GET_CHILD       G2b -> -(SP) [FALSE] L0012
L0011: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0011
L0012: PULL            Gee
       STORE           L00,Gef
       JZ              L01 [FALSE] L0013
       CALL_VS         R0244 (#22,#06,G2b) -> -(SP)
       RET_POPPED      
L0013: CALL_VN         R0244 (#22,#07,G2b)
       RTRUE           

Routine R0187, 0 locals
    Action routine for:
        "open noun with held"
        "unlock noun with held"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#0a [TRUE] L0002
       CALL_VS         R0244 (#23,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#0b [TRUE] L0003
       CALL_VS         R0244 (#23,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: GET_PROP        G2b,#14 -> -(SP)
       JE              (SP)+,G2c [TRUE] L0004
       CALL_VS         R0244 (#23,#03,G2c) -> -(SP)
       RET_POPPED      
L0004: CLEAR_ATTR      G2b,#0b
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#23,#04,G2b)
       RTRUE           

Routine R0188, 0 locals
    Action routine for:
        "lock noun with held"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#0a [TRUE] L0002
       CALL_VS         R0244 (#24,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#0b [FALSE] L0003
       CALL_VS         R0244 (#24,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#0e [FALSE] L0004
       CALL_VS         R0244 (#24,#03,G2b) -> -(SP)
       RET_POPPED      
L0004: GET_PROP        G2b,#14 -> -(SP)
       JE              (SP)+,G2c [TRUE] L0005
       CALL_VS         R0244 (#24,#04,G2c) -> -(SP)
       RET_POPPED      
L0005: SET_ATTR        G2b,#0b
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#24,#05,G2b)
       RTRUE           

Routine R0189, 0 locals
    Action routine for:
        "rotate noun on"
        "rotate on noun"
        "switch noun"
        "switch noun on"
        "switch on noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#15 [TRUE] L0002
       CALL_VS         R0244 (#25,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#0d [FALSE] L0003
       CALL_VS         R0244 (#25,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: SET_ATTR        G2b,#0d
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#25,#03,G2b)
       RTRUE           

Routine R0190, 0 locals
    Action routine for:
        "close off noun"
        "rotate noun off"
        "rotate off noun"
        "switch noun off"
        "switch off noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#15 [TRUE] L0002
       CALL_VS         R0244 (#26,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#0d [TRUE] L0003
       CALL_VS         R0244 (#26,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: CLEAR_ATTR      G2b,#0d
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#26,#03,G2b)
       RTRUE           

Routine R0191, 0 locals
    Action routine for:
        "open noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#0f [TRUE] L0002
       CALL_VS         R0244 (#27,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#0b [FALSE] L0003
       CALL_VS         R0244 (#27,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#0e [FALSE] L0004
       CALL_VS         R0244 (#27,#03,G2b) -> -(SP)
       RET_POPPED      
L0004: SET_ATTR        G2b,#0e
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       TEST_ATTR       G2b,#04 [FALSE] L0006
       TEST_ATTR       G2b,#17 [TRUE] L0006
       GET_CHILD       G2b -> -(SP) [FALSE] L0005
L0005: JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0153 (G2b,G12) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_VS         R0244 (#27,#04,G2b) -> -(SP)
       RET_POPPED      
L0006: CALL_VN         R0244 (#27,#05,G2b)
       RTRUE           

Routine R0192, 0 locals
    Action routine for:
        "close noun"
        "close up noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#0f [TRUE] L0002
       CALL_VS         R0244 (#28,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#0e [TRUE] L0003
       CALL_VS         R0244 (#28,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: CLEAR_ATTR      G2b,#0e
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#28,#03,G2b)
       RTRUE           

Routine R0193, 0 locals
    Action routine for:
        "carry off ATTRIBUTE(26)"
        "remove held"
        "disrobe held"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#1a [TRUE] L0002
       CALL_VS         R0244 (#29,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: CLEAR_ATTR      G2b,#1a
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#29,#02,G2b)
       RTRUE           

Routine R0194, 0 locals
    Action routine for:
        "don held"
        "put on held"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#02 [TRUE] L0002
       CALL_VS         R0244 (#2a,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: GET_PARENT      G2b -> -(SP)
       JE              (SP)+,G12 [TRUE] L0003
       CALL_VS         R0244 (#2a,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#1a [FALSE] L0004
       CALL_VS         R0244 (#2a,#03,G2b) -> -(SP)
       RET_POPPED      
L0004: SET_ATTR        G2b,#1a
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#2a,#04,G2b)
       RTRUE           

Routine R0195, 0 locals
    Action routine for:
        "eat held"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#06 [TRUE] L0002
       CALL_VS         R0244 (#2b,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: REMOVE_OBJ      G2b
       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2d,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#2b,#02,G2b)
       RTRUE           

Routine R0196, 0 locals
    Action routine for:
        "y"

       CALL_2N         R0244 (#2c)
       RTRUE           

Routine R0197, 0 locals
    Action routine for:
        "no"

       CALL_2N         R0244 (#2d)
       RTRUE           

Routine R0198, 0 locals
    Action routine for:
        "burn noun"
        "burn noun with held"

       CALL_VN         R0244 (#2e,#01,G2b)
       RTRUE           

Routine R0199, 0 locals
    Action routine for:
        "pray"

       CALL_VN         R0244 (#2f,#01,G2b)
       RTRUE           

Routine R0200, 0 locals
    Action routine for:
        "awake"
        "awake up"

       CALL_VN         R0244 (#30,#01,G2b)
       RTRUE           

Routine R0201, 0 locals
    Action routine for:
        "awake creature"
        "awake creature up"
        "awake up creature"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0082 (G2b,#31) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0244 (#31,#01,G2b)
       RTRUE           

Routine R0202, 0 locals
    Action routine for:
        "think"

       CALL_VN         R0244 (#33,#01,G2b)
       RTRUE           

Routine R0203, 0 locals
    Action routine for:
        "smell"
        "smell noun"

       CALL_VN         R0244 (#34,#01,G2b)
       RTRUE           

Routine R0204, 0 locals
    Action routine for:
        "hear"
        "hear noun"
        "hear to noun"

       CALL_VN         R0244 (#35,#01,G2b)
       RTRUE           

Routine R0205, 0 locals
    Action routine for:
        "taste noun"

       CALL_VN         R0244 (#36,#01,G2b)
       RTRUE           

Routine R0206, 0 locals
    Action routine for:
        "dig noun"
        "dig noun with held"

       CALL_VN         R0244 (#38,#01,G2b)
       RTRUE           

Routine R0207, 0 locals
    Action routine for:
        "chop noun"

       CALL_VN         R0244 (#39,#01,G2b)
       RTRUE           

Routine R0208, 0 locals
    Action routine for:
        "hop"

       CALL_VN         R0244 (#3a,#01,G2b)
       RTRUE           

Routine R0209, 0 locals
    Action routine for:
        "hop over noun"

       CALL_VN         R0244 (#3b,#01,G2b)
       RTRUE           

Routine R0210, 0 locals
    Action routine for:
        "attach noun"
        "attach noun to noun"

       CALL_VN         R0244 (#3c,#01,G2b)
       RTRUE           

Routine R0211, 0 locals
    Action routine for:
        "drink noun"

       CALL_VN         R0244 (#3d,#01,G2b)
       RTRUE           

Routine R0212, 0 locals
    Action routine for:
        "fill noun"

       CALL_VN         R0244 (#3e,#01,G2b)
       RTRUE           

Routine R0213, 0 locals
    Action routine for:
        "sorry"

       CALL_VN         R0244 (#3f,#01,G2b)
       RTRUE           

Routine R0214, 0 locals
    Action routine for:
        "damn"
        "damn topic"

       CALL_VN         R0244 (#40,#01,G2b)
       RTRUE           

Routine R0215, 0 locals
    Action routine for:
        "bother"
        "bother topic"

       CALL_VN         R0244 (#41,#01,G2b)
       RTRUE           

Routine R0216, 0 locals
    Action routine for:
        "dive"

       CALL_VN         R0244 (#43,#01,G2b)
       RTRUE           

Routine R0217, 0 locals
    Action routine for:
        

       CALL_VN         R0244 (#44,#01,G2b)
       RTRUE           

Routine R0218, 0 locals
    Action routine for:
        "blow held"

       CALL_VN         R0244 (#45,#01,G2b)
       RTRUE           

Routine R0219, 0 locals
    Action routine for:
        "clean noun"

       CALL_VN         R0244 (#46,#01,G2b)
       RTRUE           

Routine R0220, 0 locals
    Action routine for:
        "adjust noun"

       CALL_VN         R0244 (#47,#01,G2b)
       RTRUE           

Routine R0221, 0 locals
    Action routine for:
        "adjust noun to special"

       CALL_VN         R0244 (#48,#01,G2b)
       RTRUE           

Routine R0222, 0 locals
    Action routine for:
        "ring"
        "greetings noun"
        "hello noun"

       CALL_VN         R0244 (#49,#01,G2b)
       RTRUE           

Routine R0223, 0 locals
    Action routine for:
        "buy noun"

       CALL_VN         R0244 (#54,#01,G2b)
       RTRUE           

Routine R0224, 0 locals
    Action routine for:
        "sing"

       CALL_VN         R0244 (#55,#01,G2b)
       RTRUE           

Routine R0225, 0 locals
    Action routine for:
        "clamber noun"
        "clamber up / over noun"
        "clamber on to noun"
        "clamber on noun"
        "clamber onto noun"
        "ride ATTRIBUTE(0)"

       CALL_VN         R0244 (#56,#01,G2b)
       RTRUE           

Routine R0226, 0 locals
    Action routine for:
        "nap"

       CALL_VN         R0244 (#58,#01,G2b)
       RTRUE           

Routine R0227, 0 locals
    Action routine for:
        "l up topic in noun"
        "consult noun about topic"
        "consult noun on topic"
        "read about topic in noun"
        "read topic in noun"

       CALL_VN         R0244 (#59,#01,G2b)
       RTRUE           

Routine R0228, 0 locals
    Action routine for:
        "feel noun"

       JE              G2b,G12 [FALSE] L0001
       CALL_VS         R0244 (#37,#03,G2b) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: TEST_ATTR       G2b,#00 [FALSE] L0003
       CALL_VS         R0244 (#37,#01,G2b) -> -(SP)
       RET_POPPED      
L0003: CALL_VN         R0244 (#37,#02,G2b)
       RTRUE           

Routine R0229, 0 locals
    Action routine for:
        "ring held"
        "swing held"

       GET_PARENT      G2b -> -(SP)
       JE              (SP)+,G12 [TRUE] L0001
       CALL_VS         R0244 (#4a,#01,G2b) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0244 (#4a,#02,G2b)
       RTRUE           

Routine R0230, 0 locals
    Action routine for:
        "drag noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#13 [FALSE] L0002
       CALL_VS         R0244 (#4b,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#11 [FALSE] L0003
       CALL_VS         R0244 (#4b,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#00 [FALSE] L0004
       CALL_VS         R0244 (#4b,#04,G2b) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0244 (#4b,#03,G2b)
       RTRUE           

Routine R0231, 0 locals
    Action routine for:
        "clear noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#13 [FALSE] L0002
       CALL_VS         R0244 (#4c,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#11 [FALSE] L0003
       CALL_VS         R0244 (#4c,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#00 [FALSE] L0004
       CALL_VS         R0244 (#4b,#04,G2b) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0244 (#4c,#03,G2b)
       RTRUE           

Routine R0232, 0 locals
    Action routine for:
        "rotate noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#13 [FALSE] L0002
       CALL_VS         R0244 (#4d,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G2b,#11 [FALSE] L0003
       CALL_VS         R0244 (#4d,#02,G2b) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G2b,#00 [FALSE] L0004
       CALL_VS         R0244 (#4b,#04,G2b) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0244 (#4d,#03,G2b)
       RTRUE           

Routine R0233, 0 locals
    Action routine for:
        "wait"

       CALL_1S         R0081 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       CALL_VN         R0244 (#57,#01,G2b)
       RTRUE           

Routine R0234, 0 locals
    Action routine for:
        "clear noun noun"

       CALL_VN         R0244 (#4e,#01,G2b)
       RTRUE           

Routine R0235, 1 local

       GET_PARENT      G2c -> -(SP)
       JE              (SP)+,#06 [TRUE] L0001
       CALL_VS         R0244 (#4e,#02,G2b) -> -(SP)
       RET_POPPED      
L0001: JE              G2c,#0f,#10 [FALSE] L0002
       CALL_VS         R0244 (#4e,#03,G2b) -> -(SP)
       RET_POPPED      
L0002: CALL_1N         R0081
       STORE           L00,G2b
       INSERT_OBJ      L00,G12
       CALL_VN         R0076 (#1b,G2c)
       JE              G00,#13 [FALSE] L0003
       INSERT_OBJ      L00,G15
       JUMP            L0004
L0003: INSERT_OBJ      L00,G00
L0004: RTRUE           

Routine R0236, 0 locals
    Action routine for:
        "squash noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#00 [FALSE] L0002
       CALL_VS         R0244 (#4f,#01,G2b) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0244 (#4f,#02,G2b)
       RTRUE           

Routine R0237, 0 locals
    Action routine for:
        "discard held at / against / on / onto noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              G2c,#01 [FALSE] L0003
       STORE           G28,#1002
       CALL_VS         R0086 (G2c,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G28,#50
       RTRUE           
L0002: STORE           G28,#50
L0003: TEST_ATTR       G2c,#00 [TRUE] L0004
       CALL_VS         R0244 (#50,#01) -> -(SP)
       RET_POPPED      
L0004: CALL_VS         R0082 (G2c,#50) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0244 (#50,#02,G2b)
       RTRUE           

Routine R0238, 0 locals
    Action routine for:
        "attack noun"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: TEST_ATTR       G2b,#00 [FALSE] L0002
       CALL_VS         R0082 (G2b,#42) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0002: CALL_VN         R0244 (#42,#01,G2b)
       RTRUE           

Routine R0239, 0 locals
    Action routine for:
        "embrace creature"

       CALL_2S         R0155 (G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0082 (G2b,#32) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JE              G2b,G12 [FALSE] L0002
       CALL_VS         R0244 (#37,#03,G2b) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0244 (#32,#01,G2b)
       RTRUE           

Routine R0240, 0 locals
    Action routine for:
        "answer topic to creature"

       CALL_VS         R0082 (G2c,#52) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0244 (#52,#01,G2b)
       RTRUE           

Routine R0241, 0 locals
    Action routine for:
        "tell creature about topic"

       JE              G2b,G12 [FALSE] L0001
       CALL_VS         R0244 (#51,#01,G2b) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0082 (G2b,#51) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0244 (#51,#02,G2b)
       RTRUE           

Routine R0242, 0 locals
    Action routine for:
        "ask creature about topic"

       CALL_VS         R0082 (G2b,#53) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0244 (#53,#01,G2b)
       RTRUE           

Routine R0243, 0 locals
    Action routine for:
        "ask creature for noun"

       JE              G2b,G12 [FALSE] L0001
       CALL_2N         R0076 (#0e)
       RTRUE           
L0001: CALL_VN         R0244 (#1003,#01,G2b)
       RTRUE           

Routine R0244, 4 locals

       STORE           L03,Ge9
       STORE           Ge9,L00
       JZ              L01 [FALSE] L0001
       STORE           L01,#01
L0001: CALL_VN         R0245 (L01,L02)
       STORE           Ge9,L03
       RTRUE           

Routine R0245, 3 locals

       STORE           L02,G28
       STORE           G26,L00
       STORE           G27,L01
       STORE           G28,Ge9
       CALL_VS         R0086 (#17,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G28,L02
       RFALSE          
L0001: STORE           G28,L02
       CALL_VN         R0014 (L00,L01)
       RTRUE           

Routine R0246, 4 locals

       LOADB           #00,#21 -> G8a
       ERASE_WINDOW    #ffff
       SPLIT_WINDOW    L00
       SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,G8a
       JL              Gef,#01 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: JZ              G04 [FALSE] L0003
       SET_CURSOR      #01,#01
       JUMP            L0005
L0003: STOREW          #2ac1,#00,#80
       OUTPUT_STREAM   REDIRECT_ENABLE,#2ac1
       CALL_2N         R0106 (Geb)
       JE              L02,#01 [TRUE] L0004
       PRINT           " ["
       PRINT_NUM       L01
       PRINT           "/"
       PRINT_NUM       L02
       PRINT           "]"
L0004: OUTPUT_STREAM   #fffd
       LOADW           #2ac1,#00 -> -(SP)
       SUB             G8a,(SP)+ -> -(SP)
       DIV             (SP)+,#02 -> L03
       SET_CURSOR      #01,L03
L0005: CALL_2N         R0106 (Geb)
       JE              L02,#01 [TRUE] L0006
       PRINT           " ["
       PRINT_NUM       L01
       PRINT           "/"
       PRINT_NUM       L02
       PRINT           "]"
L0006: LOADW           #2ac1,#00 -> -(SP)
       RET_POPPED      

Routine R0247, 0 locals

       CALL_VN2        R0486 (Geb,#4c,#01,#01,#01)
       SET_WINDOW      #00
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_TEXT_STYLE  ROMAN
       NEW_LINE        
       NEW_LINE        
       CALL_VS         R0490 (Geb,#23) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0486 (Geb,#23) -> -(SP)
       RET_POPPED      
L0001: PRINT_PADDR     S140
       NEW_LINE        
       RTRUE           

Routine R0248, 12 locals

       LOADB           #00,#21 -> G8a
       LOADB           #00,#20 -> G8b
       JE              G8b,#00,#ff [FALSE] L0001
       STORE           G8b,#12
L0001: SUB             G8b,#07 -> G8b
       STORE           L0a,#00
       STORE           L02,#01
L0002: JIN             L02,Geb [FALSE] L0003
       CALL_VS         R0491 (L02,#1d) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L0a
L0003: INC             L02
       JG              L02,#009b [TRUE] L0004
       JUMP            L0002
L0004: JZ              L0a [FALSE] L0005
       RET             #02
L0005: DIV             L0a,G8b -> -(SP)
       ADD             #01,(SP)+ -> L09
       STORE           L06,#06
       STORE           L08,#01
       STORE           L04,L06
L0006: SUB             L08,#01 -> -(SP)
       MUL             (SP)+,G8b -> L0b
       ADD             #07,L00 -> -(SP)
       CALL_VN2        R0486 (Geb,#4c,(SP)+,L08,L09)
       SET_CURSOR      #02,#01
       STORE           Gef,G8a
       JL              Gef,#01 [TRUE] L0008
L0007: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0007
L0008: SET_CURSOR      #02,#02
       PRINT_PADDR     S020
       SUB             G8a,#0c -> L01
       SET_CURSOR      #02,L01
       PRINT_PADDR     S021
       SET_CURSOR      #03,#01
       STORE           Gef,G8a
       JL              Gef,#01 [TRUE] L0010
L0009: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0009
L0010: SET_CURSOR      #03,#02
       PRINT_PADDR     S024
       SUB             G8a,#11 -> L01
       SET_CURSOR      #03,L01
       CALL_VS         R0491 (Gea,#1d) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       PRINT_PADDR     S023
       JUMP            L0012
L0011: PRINT_PADDR     S022
L0012: SET_TEXT_STYLE  ROMAN
       STORE           L00,L06
       STORE           L01,#00
       STORE           L02,#01
L0013: JIN             L02,Geb [FALSE] L0015
       CALL_VS         R0491 (L02,#1d) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       JL              L01,L0b [TRUE] L0014
       ADD             L0b,G8b -> -(SP)
       JL              L01,(SP)+ [FALSE] L0014
       SET_CURSOR      L00,#06
       CALL_2N         R0106 (L02)
       INC             L00
L0014: INC             L01
L0015: INC             L02
       JG              L02,#009b [TRUE] L0016
       JUMP            L0013
L0016: SUB             L00,#01 -> L07
       STORE           L05,#00
L0017: JE              L04,L05 [TRUE] L0019
       JZ              L05 [TRUE] L0018
       SET_CURSOR      L05,#04
       PRINT           " "
L0018: SET_CURSOR      L04,#04
       PRINT           ">"
L0019: STORE           L05,L04
       READ_CHAR       #01 -> L03
       JE              L03,#4e,#6e,#82 [FALSE] L0023
       INC             L04
       JG              L04,L07 [FALSE] L0022
       STORE           L04,L06
       JG              L09,#01 [FALSE] L0022
       JE              L08,L09 [FALSE] L0020
       STORE           L08,#01
       JUMP            L0021
L0020: INC             L08
L0021: JUMP            L0006
L0022: JUMP            L0017
L0023: JE              L03,#50,#70,#81 [FALSE] L0027
       DEC             L04
       JL              L04,L06 [FALSE] L0026
       STORE           L04,L07
       JG              L09,#01 [FALSE] L0026
       JE              L08,#01 [FALSE] L0024
       STORE           L08,L09
       MOD             L0a,G8b -> -(SP)
       ADD             L06,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L04
       JUMP            L0025
L0024: DEC             L08
       ADD             L06,G8b -> -(SP)
       SUB             (SP)+,#01 -> L04
L0025: JUMP            L0006
L0026: JUMP            L0017
L0027: JE              L03,#51,#71,#1b [TRUE] L0028
       JE              L03,#83 [FALSE] L0029
L0028: JUMP            L0037
L0029: JE              L03,#0a,#0d,#84 [FALSE] L0036
       STORE           L00,#00
       STORE           L02,#01
L0030: JIN             L02,Geb [FALSE] L0032
       CALL_VS         R0491 (L02,#1d) -> -(SP)
       JZ              (SP)+ [TRUE] L0032
       ADD             L0b,L04 -> -(SP)
       SUB             (SP)+,L06 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0031
       JUMP            L0033
L0031: INC             L00
L0032: INC             L02
       JG              L02,#009b [TRUE] L0033
       JUMP            L0030
L0033: CALL_VS         R0486 (L02,#4d) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0034
       JUMP            L0006
L0034: JE              Gef,#03 [FALSE] L0035
       JUMP            L0037
L0035: CALL_VN         R0244 (#1007,#35)
       READ_CHAR       #01 -> L03
       JUMP            L0006
L0036: JUMP            L0017
L0037: CALL_VS         R0491 (Gea,#1d) -> -(SP)
       JZ              (SP)+ [TRUE] L0038
       RET             #02
L0038: LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_CURSOR      #01,#01
       ERASE_WINDOW    #ffff
       SET_WINDOW      #00
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       JZ              G13 [FALSE] L0039
       CALL_2N         R0076 (#1f)
       RTRUE           
L0039: RET             #02

Routine R0249, 4 locals

       STORE           L01,#01
       ERASE_WINDOW    #ffff
       SPLIT_WINDOW    #03
       SET_WINDOW      #01
       SET_TEXT_STYLE  REVERSE
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       LOADB           #00,#21 -> L03
       SET_CURSOR      #01,#01
       STORE           Gef,L03
       JL              Gef,#01 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: SET_CURSOR      #02,#01
       STORE           Gef,L03
       JL              Gef,#01 [TRUE] L0004
L0003: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0003
L0004: SET_CURSOR      #03,#01
       STORE           Gef,L03
       JL              Gef,#01 [TRUE] L0006
L0005: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0005
L0006: SET_CURSOR      #01,#01
       CALL_2N         R0106 (Geb)
       SET_CURSOR      #03,#01
       PRINT_PADDR     S141
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       STORE           L00,#00
L0007: GET_PROP        Geb,#29 -> -(SP)
       JG              L00,(SP)+ [TRUE] L0008
       PRINT           "
"
       CALL_VS         R0486 (Geb,#23,L00) -> L01
       INC             L00
       JUMP            L0007
L0008: JZ              L01 [FALSE] L0009
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "

*** No more hints ***
"
       SET_TEXT_STYLE  ROMAN
       RTRUE           
L0009: JZ              #01 [TRUE] L0012
       READ_CHAR       #01,#00,#00 -> L02
       JE              L02,#71,#51 [FALSE] L0010
       RFALSE          
L0010: JE              L02,#0a,#0d,#84 [FALSE] L0011
       STORE           Gef,Geb
       STORE           Gee,#29
       GET_PROP        Gef,Gee -> Ged
       INC             Ged
       PUT_PROP        Gef,Gee,Ged
       PRINT           "
"
       GET_PROP        Geb,#29 -> -(SP)
       CALL_VS         R0486 (Geb,#23,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0011
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "

*** No more hints ***
"
       SET_TEXT_STYLE  ROMAN
       RTRUE           
L0011: JUMP            L0009
L0012: RFALSE          

Routine R0250, 0 locals

       JE              Ge9,#1f [FALSE] L0002
       CALL_2S         R0078 (#0047) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0486 (#0047,#004f)
L0001: CALL_2S         R0078 (#004b) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0486 (#004b,#004f)
       GET_PARENT      "What good is Holly the cat?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0002
       INSERT_OBJ      "What good is Holly the cat?","A few helpful hints"
L0002: RFALSE          

Routine R0251, 0 locals

       JZ              G87 [TRUE] RTRUE
       SET_TEXT_STYLE  BOLDFACE
       STORE           Gef,G87
       JE              Gef,#01 [FALSE] L0001
       PRINT_PADDR     S142
       INSERT_OBJ      "honey jar","high bench"
       INSERT_OBJ      "What should I do with the honey?","A few helpful hints"
       JUMP            L0003
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT_PADDR     S143
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT_PADDR     S144
L0003: SUB             G87,#01 -> G87
       SET_TEXT_STYLE  ROMAN
       RTRUE           

Routine R0252, 0 locals

       JE              G89,#01 [TRUE] L0001
       PRINT_RET       "You can't go that way."
L0001: PRINT_PADDR     S145
       NEW_LINE        
       RTRUE           

Routine R0253, 0 locals

       JE              Ge9,#56,#17 [FALSE] L0004
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT           "You are on "
       CALL_2N         R0104 (Geb)
       PRINT           " already.
"
       RTRUE           
L0001: GET_PARENT      G12 -> -(SP)
       CALL_VS         R0491 ((SP)+,#0024) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0490 (Geb,#0053) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0486 (Geb,#0053)
       RTRUE           
L0002: GET_PARENT      G12 -> -(SP)
       CALL_VS         R0491 ((SP)+,#0024) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PRINT_PADDR     S146
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S147
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0254, 0 locals

       JE              Ge9,#13,#15,#5d [FALSE] L0004
       CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
L0002: JE              G2c,Geb [TRUE] L0003
       CALL_2N         R0105 (G2c)
       PRINT_RET       " is out of reach."
L0003: RFALSE          
L0004: JE              Ge9,#5f,#22,#23 [TRUE] L0005
       JE              Ge9,#24,#25,#26 [TRUE] L0005
       JE              Ge9,#27,#28,#0f [TRUE] L0005
       JE              Ge9,#60,#11,#61 [TRUE] L0005
       JE              Ge9,#32,#36,#37 [TRUE] L0005
       JE              Ge9,#46,#4b,#4c [TRUE] L0005
       JE              Ge9,#4e,#4d,#4f [TRUE] L0005
       JE              Ge9,#62,#42,#34 [TRUE] L0005
       JE              Ge9,#63,#64 [FALSE] L0009
L0005: JZ              G2b [TRUE] RFALSE
       CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
L0006: CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
L0007: JE              G2b,Geb [TRUE] L0008
       CALL_2N         R0105 (G2b)
       PRINT_RET       " is out of reach."
L0008: RFALSE          
L0009: JE              Ge9,#56,#17 [FALSE] L0011
       CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       JE              G2b,Geb [TRUE] L0010
       CALL_2N         R0105 (G2b)
       PRINT_RET       " is out of reach."
L0010: RFALSE          
L0011: JE              Ge9,#65 [FALSE] L0017
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] L0013
       GET_PARENT      G12 -> -(SP)
       JE              G2b,(SP)+,Geb [FALSE] L0012
       PRINT           "You are already on "
       CALL_2N         R0104 (G2b)
       PRINT           ".
"
       RTRUE           
L0012: PRINT           "Perhaps you should get off "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           " first.
"
       RTRUE           
L0013: CALL_VS         R0491 (G2b,#0024) -> -(SP)
       JZ              (SP)+ [FALSE] L0014
       CALL_VS         R0491 (G2b,#0023) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
L0014: PRINT           "With a flying leap you land on "
       CALL_2N         R0104 (G2b)
       PRINT           ".
"
       INSERT_OBJ      G12,G2b
       RTRUE           
L0015: CALL_VS         R0491 (G2b,#22) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       PRINT_RET       "Such a feat seems beyond you."
L0016: RFALSE          
L0017: JE              Ge9,#20 [FALSE] L0021
       TEST_ATTR       G2b,#23 [TRUE] RFALSE
       CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
L0018: CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [FALSE] L0020
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0020
L0019: JE              G2b,Geb [TRUE] L0020
       PRINT           "You will have to get closer to "
       CALL_2N         R0104 (G2b)
       PRINT_RET       " to see in detail."
L0020: RFALSE          
L0021: JE              Ge9,#12 [FALSE] L0025
       CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0023
L0022: CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [FALSE] L0024
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0024
L0023: PRINT_RET       "You can't reach that far."
L0024: RFALSE          
L0025: JE              Ge9,#19 [FALSE] L0027
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [FALSE] L0026
       PRINT_PADDR     S148
       GET_PARENT      Geb -> -(SP)
       INSERT_OBJ      G12,(SP)+
       RTRUE           
L0026: RFALSE          
L0027: RFALSE          

Routine R0255, 0 locals

       JE              Ge9,#56,#17 [FALSE] L0003
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT           "You are on "
       CALL_2N         R0104 (Geb)
       PRINT           " already.
"
       RTRUE           
L0001: GET_PARENT      Geb -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0002
       PRINT           "(tumbling off "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           " and onto the floor first)
"
L0002: PRINT_PADDR     S149
       INSERT_OBJ      G12,Geb
       RTRUE           
L0003: RFALSE          

Routine R0256, 0 locals

       JE              Ge9,#13,#15,#5d [FALSE] L0004
       CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
L0002: JE              G2c,Geb [TRUE] L0003
       CALL_2N         R0105 (G2c)
       PRINT_RET       " is out of reach."
L0003: RFALSE          
L0004: JE              Ge9,#5f,#22,#23 [TRUE] L0005
       JE              Ge9,#24,#25,#26 [TRUE] L0005
       JE              Ge9,#27,#28,#0f [TRUE] L0005
       JE              Ge9,#60,#11,#61 [TRUE] L0005
       JE              Ge9,#32,#36,#37 [TRUE] L0005
       JE              Ge9,#46,#4b,#4c [TRUE] L0005
       JE              Ge9,#4e,#4d,#4f [TRUE] L0005
       JE              Ge9,#62,#42,#34 [TRUE] L0005
       JE              Ge9,#63,#64 [FALSE] L0009
L0005: JZ              G2b [TRUE] RFALSE
       CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
L0006: CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
L0007: JE              G2b,Geb [TRUE] L0008
       CALL_2N         R0105 (G2b)
       PRINT_RET       " is out of reach."
L0008: RFALSE          
L0009: JE              Ge9,#56,#17 [FALSE] L0011
       CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       JE              G2b,Geb [TRUE] L0010
       CALL_2N         R0105 (G2b)
       PRINT_RET       " is out of reach."
L0010: RFALSE          
L0011: JE              Ge9,#65 [FALSE] L0015
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] L0013
       GET_PARENT      G12 -> -(SP)
       JE              G2b,(SP)+,Geb [FALSE] L0012
       PRINT           "You are already on "
       CALL_2N         R0104 (G2b)
       PRINT           ".
"
       RTRUE           
L0012: PRINT           "Perhaps you should get off "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           " first.
"
       RTRUE           
L0013: CALL_VS         R0491 (G2b,#0024) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       PRINT           "With a flying leap you land on "
       CALL_2N         R0104 (G2b)
       PRINT           ".
"
       INSERT_OBJ      G12,G2b
       RTRUE           
L0014: RFALSE          
L0015: JE              Ge9,#20 [FALSE] L0019
       TEST_ATTR       G2b,#23 [TRUE] RFALSE
       CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0017
L0016: CALL_VS         R0153 (Geb,G2b) -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
L0017: JE              G2b,Geb [TRUE] L0018
       PRINT           "You will have to get closer to "
       CALL_2N         R0104 (G2b)
       PRINT_RET       " to see in detail."
L0018: RFALSE          
L0019: JE              Ge9,#12 [FALSE] L0023
       CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
L0020: CALL_VS         R0153 (Geb,G2c) -> -(SP)
       JZ              (SP)+ [FALSE] L0022
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0022
L0021: PRINT_RET       "You can't reach that far."
L0022: RFALSE          
L0023: JE              Ge9,#19 [FALSE] L0026
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [FALSE] L0025
       PRINT_PADDR     S150
       GET_PARENT      Geb -> -(SP)
       INSERT_OBJ      G12,(SP)+
       CALL_2N         R0411 (#00)
       GET_PARENT      "How do I get off the bed?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0024
       INSERT_OBJ      "How do I get off the bed?","Never access this either"
L0024: RTRUE           
L0025: RFALSE          
L0026: RFALSE          

Routine R0257, 0 locals

       JE              Ge9,#56,#17 [FALSE] L0003
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT           "You are on "
       CALL_2N         R0104 (Geb)
       PRINT           " already.
"
       RTRUE           
L0001: GET_PARENT      Geb -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0002
       PRINT           "(tumbling off "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           " and onto the floor first)
"
L0002: PRINT_PADDR     S151
       INSERT_OBJ      G12,Geb
       RTRUE           
L0003: RFALSE          

Routine R0258, 0 locals

       JE              Ge9,#19 [FALSE] L0002
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [FALSE] L0001
       PRINT_PADDR     S152
       GET_PARENT      Geb -> -(SP)
       INSERT_OBJ      G12,(SP)+
       RTRUE           
L0001: RFALSE          
L0002: JE              Ge9,#65 [FALSE] L0005
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] L0004
       GET_PARENT      G12 -> -(SP)
       JE              G2b,(SP)+,Geb [FALSE] L0003
       PRINT           "You are already on "
       CALL_2N         R0104 (G2b)
       PRINT           ".
"
       RTRUE           
L0003: PRINT           "Perhaps you should get off "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           " first.
"
       RTRUE           
L0004: RFALSE          
L0005: RFALSE          

Routine R0259, 2 locals

L0001: CALL_1S         R0056 -> L01
       GET_PROP        Geb,#01 -> -(SP)
       JE              L01,"disk",(SP)+ [FALSE] L0002
       INC             L00
       JUMP            L0004
L0002: JE              L01,"disks" [FALSE] L0003
       STORE           G31,#1005
       INC             L00
       JUMP            L0004
L0003: RET             L00
L0004: JUMP            L0001

Routine R0260, 2 locals

L0001: CALL_1S         R0056 -> L01
       GET_PROP        Geb,#01 -> -(SP)
       JE              L01,"moose",(SP)+ [FALSE] L0002
       INC             L00
       JUMP            L0004
L0002: JE              L01,"mooses" [FALSE] L0003
       STORE           G31,#1005
       INC             L00
       JUMP            L0004
L0003: RET             L00
L0004: JUMP            L0001

Routine R0261, 0 locals

       JE              G1f,#01 [FALSE] L0001
       PRINT           "your good friends "
       JUMP            L0002
L0001: PRINT           " Moose"
L0002: RFALSE          

Routine R0262, 0 locals

       JE              Ge9,#42,#50 [FALSE] L0001
       PRINT_PADDR     S153
       CALL_2N         R0104 (Geb)
       PRINT_RET       "?"
L0001: JE              Ge9,#32 [FALSE] L0002
       PRINT_PADDR     S154
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#53 [FALSE] L0003
       PRINT_PADDR     S155
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#51,#52 [FALSE] L0004
       CALL_2N         R0105 (Geb)
       PRINT_RET       " listens quietly."
L0004: JE              Ge9,#16,#15 [FALSE] L0005
       CALL_2N         R0105 (Geb)
       PRINT_PADDR     S156
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0263, 0 locals

       CALL_2N         R0105 (Geb)
       PRINT_PADDR     S157
       NEW_LINE        
       RTRUE           

Routine R0264, 0 locals

       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] RFALSE
       GET_PARENT      "How do I climb the glass table?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0001
       INSERT_OBJ      "How do I climb the glass table?","A few helpful hints"
L0001: PRINT_PADDR     S160
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,Geb [TRUE] L0002
       PUSH            #00
       JUMP            L0003
L0002: PUSH            #01
L0003: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0004: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0004
L0005: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,#01 [FALSE] L0006
       PRINT_RET       "."
L0006: PRINT_PADDR     S161
       GET_CHILD       Geb -> -(SP) [FALSE] L0007
L0007: CALL_VN         R0130 ((SP)+,#0808)
       PRINT_RET       " through the thick glass."

Routine R0265, 0 locals

       JE              Ge9,#4d,#4c,#4b [TRUE] L0001
       JE              Ge9,#64 [FALSE] L0002
L0001: PRINT_PADDR     S164
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#4e [FALSE] L0009
       GET_PARENT      G12 -> -(SP)
       TEST_ATTR       (SP)+,#14 [FALSE] L0003
       PRINT_PADDR     S165
       NEW_LINE        
       RTRUE           
L0003: JE              G00,#0044 [FALSE] L0004
       JE              G2c,#0a [FALSE] L0004
       PRINT_PADDR     S166
       NEW_LINE        
       RTRUE           
L0004: JE              G00,#004d [FALSE] L0005
       JE              G2c,#08 [TRUE] L0006
L0005: JE              G00,#0065 [FALSE] L0007
       JE              G2c,#09 [FALSE] L0007
L0006: PRINT_PADDR     S167
       NEW_LINE        
       RTRUE           
L0007: JE              G00,#002c [FALSE] L0008
       JE              G2c,#08 [FALSE] L0008
       PRINT_PADDR     S168
       NEW_LINE        
       RTRUE           
L0008: CALL_1N         R0235
       RTRUE           
L0009: RFALSE          

Routine R0266, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       STORE           G89,#01
       PRINT_PADDR     S169
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0267, 0 locals

       STORE           G89,#00
       RFALSE          

Routine R0268, 0 locals

       JE              Ge9,#1001 [FALSE] L0005
       TEST_ATTR       "personal computer",#0d [TRUE] L0004
       TEST_ATTR       G2b,#20 [FALSE] L0002
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "One disk at a time please."
L0001: INSERT_OBJ      G2b,Geb
       SET_ATTR        Geb,#08
       CALL_2N         R0105 (G2b)
       PRINT_RET       " fits nicely in the disk drive."
L0002: JE              G2b,#0074 [FALSE] L0003
       INSERT_OBJ      G2b,Geb
       CALL_2N         R0147 (#06)
       PRINT_PADDR     S171
       NEW_LINE        
       RTRUE           
L0003: CALL_2N         R0105 (G2b)
       PRINT_PADDR     S172
       NEW_LINE        
       RTRUE           
L0004: PRINT_PADDR     S173
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#1000 [FALSE] L0008
       TEST_ATTR       "personal computer",#0d [TRUE] L0007
       JE              G2b,#0074 [FALSE] L0006
       PRINT_PADDR     S174
       NEW_LINE        
       RTRUE           
L0006: CLEAR_ATTR      Geb,#08
       PRINT           "The disk pops out.
"
       RFALSE          
L0007: PRINT_PADDR     S175
       NEW_LINE        
       RTRUE           
L0008: RFALSE          

Routine R0269, 0 locals

       JE              Ge9,#25 [FALSE] L0003
       TEST_ATTR       Geb,#08 [FALSE] L0001
       GET_PARENT      "z-machine chip" -> -(SP)
       JE              (SP)+,Geb [FALSE] L0001
       CALL_2N         R0407 (#00)
       RTRUE           
L0001: TEST_ATTR       Geb,#08 [FALSE] L0002
       PRINT_PADDR     S176
L0002: CALL_2N         R0409 (#11)
       PRINT_PADDR     S177
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#26 [FALSE] L0004
       PRINT_PADDR     S178
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0270, 0 locals

       JE              Ge9,#1f [FALSE] L0004
       GET_PARENT      Geb -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0003
       PRINT_PADDR     S179
       TEST_ATTR       Geb,#0d [FALSE] L0001
       PRINT           ", screen saver dancing.
"
       JUMP            L0002
L0001: PRINT           ".
"
L0002: RFALSE          
L0003: RFALSE          
L0004: RFALSE          

Routine R0271, 0 locals

       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#2a [FALSE] L0001
       PRINT_PADDR     S180
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S181
       NEW_LINE        
       RTRUE           

Routine R0272, 0 locals

       JE              Ge9,#4a,#62 [FALSE] L0001
       PRINT_PADDR     S186
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
       CALL_VN         R0486 (#004b,#0051)
       RTRUE           
L0001: JE              Ge9,#50 [FALSE] L0002
       JE              G2c,#004b [TRUE] RFALSE
       PRINT_PADDR     S187
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
       INSERT_OBJ      Geb,G00
       CALL_VN         R0486 (#004b,#0051)
       RTRUE           
L0002: JE              Ge9,#64 [FALSE] L0003
       CALL_VN         R0076 (#4a,Geb)
       RTRUE           
L0003: RFALSE          

Routine R0273, 0 locals

       JE              Ge9,#10 [FALSE] L0001
       PRINT_RET       "The bell tinkles faintly."
L0001: RFALSE          

Routine R0274, 0 locals

       PRINT_PADDR     S188
       TEST_ATTR       "storage drawer",#08 [TRUE] L0006
       PRINT           ", and a storage drawer below"
       TEST_ATTR       "storage drawer",#0e [TRUE] L0001
       PRINT_RET       "."
L0001: PRINT           " (which is open"
       STORE           Gef,#00
       GET_CHILD       "storage drawer" -> -(SP) [FALSE] L0003
L0002: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0002
L0003: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0004
       PRINT_RET       " and empty)."
L0004: PRINT           ", revealing "
       GET_CHILD       "storage drawer" -> -(SP) [FALSE] L0005
L0005: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       ")."
L0006: PRINT           "."
       PRINT           "
"
       RTRUE           

Routine R0275, 0 locals

       JE              Ge9,#17,#22 [FALSE] L0001
       PRINT_PADDR     S190
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#1001 [FALSE] L0004
       JE              G2b,#1a [FALSE] L0003
       TEST_ATTR       "last lousy point stamp",#08 [TRUE] L0002
       PRINT_PADDR     S191
       SET_ATTR        "last lousy point stamp",#08
       PUT_PROP        "last lousy point stamp",#29,#01
       RTRUE           
L0002: PRINT_PADDR     S192
       NEW_LINE        
       RTRUE           
L0003: PRINT           "Getting "
       CALL_2N         R0104 (G2b)
       PRINT_PADDR     S193
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0276, 0 locals

       JE              Ge9,#37,#46,#34 [TRUE] L0001
       JE              Ge9,#36,#22,#60 [TRUE] L0001
       JE              Ge9,#32,#4f [FALSE] L0002
L0001: PRINT_PADDR     S195
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#1002,#64 [FALSE] L0003
       PRINT_PADDR     S196
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#1001 [FALSE] L0006
       JE              G2b,#1a [FALSE] L0005
       TEST_ATTR       "last lousy point stamp",#08 [TRUE] L0004
       PRINT_PADDR     S197
       SET_ATTR        "last lousy point stamp",#08
       PUT_PROP        "last lousy point stamp",#29,#01
       RTRUE           
L0004: PRINT_PADDR     S198
       NEW_LINE        
       RTRUE           
L0005: PRINT           "Getting "
       CALL_2N         R0104 (G2b)
       PRINT_PADDR     S199
       NEW_LINE        
       RTRUE           
L0006: RFALSE          

Routine R0277, 0 locals

       PRINT_PADDR     S200
       TEST_ATTR       "storage drawer",#08 [FALSE] L0001
       PRINT_PADDR     S201
       NEW_LINE        
       RTRUE           
L0001: PRINT           "
"
       RTRUE           

Routine R0278, 0 locals

       JE              Ge9,#56,#17 [FALSE] L0001
       PRINT_PADDR     S202
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0279, 0 locals

       PRINT           "A nicely laminated white drawer"
       TEST_ATTR       Geb,#0e [TRUE] L0001
       PRINT_RET       ", presently shut."
L0001: PRINT           ", which is open"
       TEST_ATTR       Geb,#08 [FALSE] L0002
       PRINT_PADDR     S203
L0002: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0003: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0003
L0004: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0005
       PRINT_RET       "."
L0005: PRINT           ", revealing "
       GET_CHILD       Geb -> -(SP) [FALSE] L0006
L0006: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."

Routine R0280, 0 locals

       JE              Ge9,#4b [FALSE] L0003
       TEST_ATTR       Geb,#0e [FALSE] L0002
       TEST_ATTR       Geb,#08 [TRUE] L0002
       PRINT_PADDR     S204
       SET_ATTR        Geb,#08
       GET_PARENT      "Is the loose drawer at all meaningful?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0001
       INSERT_OBJ      "Is the loose drawer at all meaningful?","Never access
this either"
L0001: CLEAR_ATTR      Geb,#0f
       INSERT_OBJ      "deep hole","Bathroom"
       CALL_2N         R0147 (#0c)
       CALL_2N         R0409 (#28)
       PUT_PROP        "Bathroom",#10,#0037
       CALL_2N         R0411 (#01)
       RTRUE           
L0002: CALL_VN         R0076 (#27,Geb)
       RTRUE           
L0003: JE              Ge9,#4c [FALSE] L0004
       CALL_VN         R0076 (#28,Geb)
       RTRUE           
L0004: JE              Ge9,#27 [FALSE] L0005
       TEST_ATTR       Geb,#08 [FALSE] RFALSE
       PRINT_PADDR     S205
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#28 [FALSE] L0006
       TEST_ATTR       Geb,#08 [FALSE] RFALSE
       PRINT_RET       "It's a bit late for that now."
L0006: RFALSE          

Routine R0281, 0 locals

       JE              Ge9,#27 [FALSE] L0006
       PRINT_PADDR     S206
       GET_PARENT      "Is the loose drawer at all meaningful?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0001
       INSERT_OBJ      "Is the loose drawer at all meaningful?","A few helpful
hints"
L0001: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0003
L0002: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0002
L0003: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0004
       PRINT_RET       "."
L0004: PRINT           ", revealing "
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0005: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."
L0006: JE              Ge9,#28 [FALSE] L0007
       PRINT_PADDR     S207
       NEW_LINE        
       RTRUE           
L0007: RFALSE          

Routine R0282, 0 locals

       PRINT_PADDR     S208
       TEST_ATTR       Geb,#09 [TRUE] L0001
       PRINT           "
"
       RTRUE           
L0001: GET_PROP        Geb,#29 -> -(SP)
       JG              (SP)+,#0a [TRUE] L0002
       PRINT           " The yoyo is glowing faintly.
"
       SET_ATTR        Geb,#08
       RTRUE           
L0002: PRINT           " The yoyo is glowing brightly.
"
       SET_ATTR        Geb,#08
       RTRUE           

Routine R0283, 0 locals

       JE              Ge9,#64 [FALSE] L0001
       PRINT_RET       "Sadly, the yoyo has no string."
L0001: RFALSE          

Routine R0284, 0 locals

       TEST_ATTR       Geb,#09 [FALSE] L0001
       GET_PROP        Geb,#29 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PUT_PROP        Geb,#29,(SP)+
L0001: CALL_VS         R0078 (Geb,#004c) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       TEST_ATTR       "television",#0d [TRUE] L0003
L0002: CALL_VS         R0078 (Geb,#2a) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       TEST_ATTR       "personal computer",#0d [FALSE] L0006
L0003: GET_PROP        Geb,#29 -> -(SP)
       ADD             (SP)+,#14 -> -(SP)
       PUT_PROP        Geb,#29,(SP)+
       SET_ATTR        Geb,#09
       CALL_2S         R0078 (Geb) -> -(SP)
       JZ              (SP)+ [TRUE] RTRUE
       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       GET_PROP        Geb,#29 -> -(SP)
       JL              (SP)+,#1e [FALSE] L0004
       PRINT_PADDR     S209
       NEW_LINE        
       RTRUE           
L0004: GET_PROP        Geb,#29 -> -(SP)
       JG              (SP)+,#3c [FALSE] L0005
       PUT_PROP        Geb,#29,#3c
L0005: RTRUE           
L0006: TEST_ATTR       Geb,#09 [FALSE] RTRUE
       GET_PROP        Geb,#29 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       CALL_2S         R0078 (Geb) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT           "
The yoyo stops glowing.
"
L0007: CLEAR_ATTR      Geb,#09
       RTRUE           
L0008: CALL_2S         R0078 (Geb) -> -(SP)
       JZ              (SP)+ [TRUE] RTRUE
       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       TEST_ATTR       Geb,#08 [FALSE] L0009
       CLEAR_ATTR      Geb,#08
       RTRUE           
L0009: GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#05 [FALSE] L0010
       PRINT_PADDR     S210
       NEW_LINE        
       RTRUE           
L0010: GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#0a [FALSE] L0011
       PRINT_PADDR     S211
       NEW_LINE        
       RTRUE           
L0011: RFALSE          

Routine R0285, 0 locals

       JE              Ge9,#62 [FALSE] L0001
       PRINT_PADDR     S214
       CALL_2N         R0409 (#02)
       CALL_VN         R0486 (#0058,#0057,#02)
       CALL_VN         R0486 (#004b,#0051)
       RTRUE           
L0001: JE              Ge9,#66,#64 [FALSE] L0002
       CALL_VN         R0076 (#62,Geb)
       RTRUE           
L0002: RFALSE          

Routine R0286, 0 locals

       PRINT           "
A storage drawer "
       STORE           Gef,#00
       GET_CHILD       "storage drawer" -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0004
       PRINT           "(containing "
       GET_CHILD       "storage drawer" -> -(SP) [FALSE] L0003
L0003: CALL_VN         R0130 ((SP)+,#08)
       PRINT           ") "
L0004: PRINT_PADDR     S216
       NEW_LINE        
       RTRUE           

Routine R0287, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_VN         R0135 (#0037,#02)
       RTRUE           
L0001: JE              Ge9,#22 [FALSE] L0004
       CALL_2S         R0097 (#0037) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_2S         R0096 (#0037) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
L0002: PRINT_RET       "It looks quite dim down there."
L0003: PRINT_RET       "It looks dark down there."
L0004: RFALSE          

Routine R0288, 0 locals

       JE              Ge9,#1001 [FALSE] L0005
       CALL_2N         R0105 (G2b)
       PRINT           " falls into the hole with a "
       TEST_ATTR       G2b,#22 [FALSE] L0001
       PRINT           "flutter.
"
       JUMP            L0002
L0001: PRINT           "clunk.
"
L0002: JE              G2b,#0061 [FALSE] L0003
       CLEAR_ATTR      G2b,#08
L0003: TEST_ATTR       G2b,#22 [TRUE] L0004
       CALL_2N         R0409 (#26)
L0004: INSERT_OBJ      G2b,"Deep Hole"
       RTRUE           
L0005: RFALSE          

Routine R0289, 0 locals

       JE              Ge9,#1002 [FALSE] L0001
       TEST_ATTR       G2b,#22 [TRUE] RFALSE
       TEST_ATTR       G2b,#02 [TRUE] RFALSE
       INSERT_OBJ      G2b,G00
       CALL_VN         R0076 (#42,Geb)
       RTRUE           
L0001: JE              Ge9,#42 [FALSE] L0003
       PRINT_PADDR     S218
       CALL_2N         R0409 (#29)
       TEST_ATTR       "sparkling new copper pipe",#08 [TRUE] L0002
       CALL_VN         R0486 (Geb,#004e)
L0002: CALL_VN         R0486 (#004b,#0051)
       RTRUE           
L0003: JE              Ge9,#1001 [FALSE] L0005
       TEST_ATTR       G2b,#21 [FALSE] L0004
       CALL_2N         R0105 (G2b)
       PRINT_RET       " won't fit in the pipe."
L0004: RFALSE          
L0005: JE              Ge9,#22 [FALSE] L0009
       TEST_ATTR       "yoyo",#09 [FALSE] L0006
       GET_PARENT      "yoyo" -> -(SP)
       JE              (SP)+,#003d [FALSE] L0006
       PRINT_PADDR     S219
       NEW_LINE        
       RTRUE           
L0006: TEST_ATTR       "sparkling new copper pipe",#08 [FALSE] L0008
       CALL_2S         R0097 (#0037) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       CALL_2S         R0096 (#0037) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
L0007: PRINT_RET       "It looks quite dim down there."
L0008: PRINT_RET       "It looks dark down there."
L0009: RFALSE          

Routine R0290, 0 locals

       JE              Ge9,#1001 [FALSE] L0006
       CALL_2N         R0105 (G2b)
       PRINT           " falls through the pipe with a "
       TEST_ATTR       G2b,#22 [FALSE] L0001
       PRINT           "
flutter."
       JUMP            L0002
L0001: PRINT           "clunk.
"
L0002: JE              G2b,#0061 [FALSE] L0003
       CLEAR_ATTR      G2b,#08
L0003: TEST_ATTR       G2b,#22 [TRUE] L0004
       CALL_2N         R0409 (#26)
L0004: TEST_ATTR       "sparkling new copper pipe",#08 [FALSE] L0005
       INSERT_OBJ      G2b,"Deep Hole"
       RTRUE           
L0005: INSERT_OBJ      G2b,"dummy pipe section"
       RTRUE           
L0006: RFALSE          

Routine R0291, 0 locals

L0001: GET_CHILD       "dummy pipe section" -> -(SP) [FALSE] L0002
L0002: INSERT_OBJ      (SP)+,"Deep Hole"
       STORE           Gef,#00
       GET_CHILD       "dummy pipe section" -> -(SP) [FALSE] L0004
L0003: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0003
L0004: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0001
       SET_ATTR        "sparkling new copper pipe",#08
       INSERT_OBJ      "sludge","Deep Hole"
       CALL_2N         R0147 (#03)
       GET_PARENT      "How do I unblock the pipe?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0005
       INSERT_OBJ      "How do I unblock the pipe?","Never access this either"
L0005: PRINT_PADDR     S220
       RFALSE          

Routine R0292, 0 locals

       JE              Ge9,#34 [FALSE] L0001
       JZ              G2b [FALSE] L0001
       PRINT_RET       "Musty and stale."
L0001: RFALSE          

Routine R0293, 0 locals

       PRINT_PADDR     S222
       CALL_VN         R0135 (#2e,#02)
       RTRUE           

Routine R0294, 0 locals

       PRINT_PADDR     S223
       TEST_ATTR       Geb,#0e [TRUE] L0001
       PRINT_RET       "."
L0001: PRINT           ", which has been pried open"
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0003
L0002: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0002
L0003: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0004
       PRINT_RET       "."
L0004: PRINT           ", revealing "
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0005: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."

Routine R0295, 0 locals

       PRINT_PADDR     S224
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0003
       PRINT           "
"
       RTRUE           
L0003: PRINT           " Within the capsule you can see "
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0004: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."

Routine R0296, 0 locals

       JE              Ge9,#28 [FALSE] L0001
       TEST_ATTR       Geb,#0e [FALSE] L0001
       PRINT_PADDR     S226
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0297, 0 locals

       JE              Ge9,#27 [FALSE] L0003
       PRINT_PADDR     S227
       GET_CHILD       Geb -> -(SP) [FALSE] L0001
L0001: CALL_VN         R0130 ((SP)+,#08)
       PRINT           ".
"
       CALL_2N         R0147 (#07)
       GET_PARENT      "How do I use these computer disks?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0002
       INSERT_OBJ      "How do I use these computer disks?","A few helpful
hints"
L0002: CALL_2N         R0409 (#2a)
       RTRUE           
L0003: RFALSE          

Routine R0298, 0 locals

       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#2a [FALSE] L0001
       PRINT_PADDR     S228
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S229
       NEW_LINE        
       RTRUE           

Routine R0299, 0 locals

       JE              Ge9,#37,#46,#34 [TRUE] L0001
       JE              Ge9,#36,#22,#60 [TRUE] L0001
       JE              Ge9,#32,#4f,#0f [TRUE] L0001
       JE              Ge9,#11,#64,#4c [TRUE] L0001
       JE              Ge9,#4b [FALSE] L0002
L0001: PRINT_RET       "No thanks."
L0002: RFALSE          

Routine R0300, 0 locals

       PRINT_PADDR     S232
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "freshly cleared of blockage."
L0001: PRINT_PADDR     S233
       NEW_LINE        
       RTRUE           

Routine R0301, 0 locals

       PRINT_PADDR     S234
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "."
L0001: GET_PARENT      "How do I unblock the pipe?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0002
       INSERT_OBJ      "How do I unblock the pipe?","A few helpful hints"
L0002: PRINT_PADDR     S235
       NEW_LINE        
       RTRUE           

Routine R0302, 0 locals

       JE              Ge9,#1002 [FALSE] L0001
       TEST_ATTR       G2b,#22 [TRUE] RFALSE
       TEST_ATTR       G2b,#02 [TRUE] RFALSE
       INSERT_OBJ      G2b,G00
       CALL_VN         R0076 (#42,Geb)
       RTRUE           
L0001: JE              Ge9,#42 [FALSE] L0003
       PRINT_PADDR     S236
       TEST_ATTR       Geb,#08 [TRUE] L0002
       CALL_VN         R0486 (Geb,#4e)
L0002: PRINT           ".
"
       CALL_2N         R0409 (#29)
       CALL_VN         R0486 (#004b,#0051)
       RTRUE           
L0003: JE              Ge9,#1001 [FALSE] L0005
       TEST_ATTR       Geb,#08 [TRUE] L0004
       PRINT_PADDR     S237
       NEW_LINE        
       RTRUE           
L0004: PRINT_PADDR     S238
       CALL_2N         R0104 (G2b)
       PRINT_PADDR     S239
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#22 [FALSE] L0007
       TEST_ATTR       Geb,#08 [TRUE] L0006
       PRINT_RET       "The pipe is blocked with sludge."
L0006: PRINT_RET       "The pipe has been cleared."
L0007: RFALSE          

Routine R0303, 0 locals

       PRINT_PADDR     S240
       GET_CHILD       "dummy pipe section" -> -(SP) [FALSE] L0001
L0001: CALL_VN         R0130 ((SP)+,#08)
L0002: GET_CHILD       "dummy pipe section" -> -(SP) [FALSE] L0003
L0003: INSERT_OBJ      (SP)+,G00
       STORE           Gef,#00
       GET_CHILD       "dummy pipe section" -> -(SP) [FALSE] L0005
L0004: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0004
L0005: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0002
       SET_ATTR        Geb,#08
       INSERT_OBJ      "sludge",G00
       GET_PARENT      "How do I unblock the pipe?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0006
       INSERT_OBJ      "How do I unblock the pipe?","Never access this either"
L0006: CALL_2N         R0147 (#03)
       RFALSE          

Routine R0304, 0 locals

       PRINT           "Awful slimy sludge"
       TEST_ATTR       "sparkling new copper pipe",#08 [FALSE] L0001
       PRINT_RET       "."
L0001: PRINT_RET       ", blocking the pipe."

Routine R0305, 0 locals

       JE              Ge9,#37,#46,#34 [TRUE] L0001
       JE              Ge9,#36,#22,#60 [TRUE] L0001
       JE              Ge9,#32,#4f,#0f [TRUE] L0001
       JE              Ge9,#11,#64 [FALSE] L0002
L0001: PRINT_RET       "Yuck!"
L0002: JE              Ge9,#42,#4c,#4b [FALSE] L0003
       PRINT_PADDR     S242
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#1002 [FALSE] L0004
       PRINT_PADDR     S243
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0306, 0 locals

       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] RFALSE
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [TRUE] RTRUE
       GET_PARENT      "What good are the mooses?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0003
       INSERT_OBJ      "What good are the mooses?","A few helpful hints"
L0003: PRINT_PADDR     S247
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0004: CALL_VN         R0130 ((SP)+,#0808)
       PRINT_RET       "."

Routine R0307, 0 locals

       JE              Ge9,#50,#10,#12 [TRUE] L0001
       JE              Ge9,#13,#15 [FALSE] L0002
L0001: TEST_ATTR       Geb,#1a [FALSE] RFALSE
       PRINT           "But you are wearing "
       CALL_2N         R0104 (Geb)
       PRINT_RET       "."
L0002: RFALSE          

Routine R0308, 0 locals

       JE              Ge9,#2a [FALSE] L0001
       CALL_2N         R0147 (#09)
       PRINT_RET       "Just the thing for a cold night."
L0001: RFALSE          

Routine R0309, 0 locals

       JE              Ge9,#0f,#11,#4c [TRUE] L0001
       JE              Ge9,#4b [FALSE] L0002
L0001: PRINT_PADDR     S252
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#37 [FALSE] L0003
       PRINT_RET       "Smooth and furry."
L0003: JE              Ge9,#64 [FALSE] L0004
       PRINT_PADDR     S253
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0310, 0 locals

       JE              Ge9,#0f,#11,#4c [TRUE] L0001
       JE              Ge9,#4b [FALSE] L0002
L0001: PRINT_PADDR     S255
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#37 [FALSE] L0003
       PRINT_PADDR     S256
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#64 [FALSE] L0004
       PRINT_PADDR     S257
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0311, 0 locals

       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] RFALSE
       PRINT           "
A big bed"
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,Geb [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0003: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0003
L0004: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
       PRINT_RET       " fills up most of the room."
L0005: PRINT           ", on which you have left "
       GET_CHILD       Geb -> -(SP) [FALSE] L0006
L0006: CALL_VN         R0130 ((SP)+,#0808)
       PRINT_RET       ", fills up most of the room."

Routine R0312, 0 locals

       RTRUE           

Routine R0313, 0 locals

       JE              Ge9,#4c [FALSE] L0001
       CALL_VN         R0076 (#28,Geb)
       RTRUE           
L0001: JE              Ge9,#4b [FALSE] L0002
       CALL_VN         R0076 (#27,Geb)
       RTRUE           
L0002: JE              Ge9,#28 [FALSE] L0003
       PRINT_PADDR     S261
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0314, 0 locals

       JE              Ge9,#42 [FALSE] L0001
       CALL_2N         R0411 (#03)
       PRINT_PADDR     S263
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#31,#50,#15 [TRUE] L0002
       JE              Ge9,#16 [FALSE] L0003
L0002: PRINT_PADDR     S264
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#53,#51,#52 [FALSE] L0004
       PRINT_PADDR     S265
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#32 [FALSE] L0005
       PRINT_PADDR     S266
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0315, 0 locals

       PRINT_PADDR     S267
       NEW_LINE        
       RTRUE           

Routine R0316, 0 locals

       JE              Ge9,#64 [FALSE] L0001
       PRINT_PADDR     S268
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0317, 0 locals

       GET_PARENT      Geb -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0001
       PRINT_PADDR     S269
       RFALSE          
L0001: PRINT_PADDR     S270
       RFALSE          

Routine R0318, 0 locals

       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] RFALSE
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,Geb [TRUE] L0001
       PUSH            #00
       JUMP            L0002
L0001: PUSH            #01
L0002: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0003: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0003
L0004: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] RTRUE
       PRINT_PADDR     S274
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0005: CALL_VN         R0130 ((SP)+,#0808)
       PRINT_RET       "."

Routine R0319, 0 locals

       TEST_ATTR       Geb,#1f [FALSE] L0001
       PRINT_PADDR     S275
       JUMP            L0002
L0001: PRINT_PADDR     S276
L0002: RFALSE          

Routine R0320, 0 locals

       JE              Ge9,#52,#53,#51 [FALSE] L0002
       TEST_ATTR       Geb,#1f [FALSE] L0001
       PRINT_PADDR     S277
       SET_ATTR        Geb,#08
       RTRUE           
L0001: PRINT_PADDR     S278
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#42 [FALSE] L0004
       CALL_2N         R0411 (#03)
       TEST_ATTR       Geb,#1f [FALSE] L0003
       PRINT_PADDR     S279
       SET_ATTR        Geb,#08
       RTRUE           
L0003: PRINT_RET       "Holly appears not to notice."
L0004: JE              Ge9,#50 [FALSE] L0007
       INSERT_OBJ      G2b,G00
       JE              G2b,#2d [FALSE] L0006
       TEST_ATTR       Geb,#1f [FALSE] L0005
       PRINT_PADDR     S280
       CALL_2N         R0409 (#12)
       SET_ATTR        Geb,#08
       CALL_VN         R0486 (#0058,#0057,#12)
       INSERT_OBJ      Geb,G00
       RTRUE           
L0005: PRINT_PADDR     S281
       CALL_VN         R0486 (Geb,#0050)
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
       RTRUE           
L0006: PRINT_PADDR     S282
       RTRUE           
L0007: JE              Ge9,#32 [FALSE] L0009
       CALL_2N         R0147 (#00)
       TEST_ATTR       Geb,#1f [FALSE] L0008
       CLEAR_ATTR      Geb,#1f
       PRINT_PADDR     S283
       NEW_LINE        
       RTRUE           
L0008: PRINT_PADDR     S284
       NEW_LINE        
       RTRUE           
L0009: JE              Ge9,#15,#16 [FALSE] L0017
       TEST_ATTR       Geb,#1f [FALSE] L0016
       GET_PARENT      G12 -> -(SP)
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0010
       PRINT_PADDR     S285
       RTRUE           
L0010: JE              G2b,#1a [FALSE] L0012
       TEST_ATTR       "last lousy point stamp",#08 [TRUE] L0012
       PRINT_PADDR     S286
       GET_PARENT      "What good is Holly the cat?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0011
       INSERT_OBJ      "What good is Holly the cat?","Never access this either"
L0011: SET_ATTR        "last lousy point stamp",#08
       SET_ATTR        Geb,#08
       RTRUE           
L0012: JE              G2b,#0052 [FALSE] L0014
       TEST_ATTR       "baguette",#08 [FALSE] L0013
       PRINT_PADDR     S287
       SET_ATTR        Geb,#08
       RTRUE           
L0013: PRINT_PADDR     S288
       SET_ATTR        Geb,#08
       SET_ATTR        "baguette",#08
       CALL_2N         R0147 (#00)
       RTRUE           
L0014: JE              G2b,#2d [FALSE] L0015
       PRINT_PADDR     S289
       INSERT_OBJ      "yellow ball",G00
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
       SET_ATTR        Geb,#08
       RTRUE           
L0015: PRINT           "Holly sniffs "
       CALL_2N         R0104 (G2b)
       PRINT           " suspiciously.
"
       SET_ATTR        Geb,#08
       RTRUE           
L0016: PRINT_PADDR     S290
       NEW_LINE        
       RTRUE           
L0017: JE              Ge9,#31 [FALSE] L0019
       TEST_ATTR       Geb,#1f [FALSE] L0018
       PRINT_RET       "Holly is already awake."
L0018: PRINT_RET       "You haven't the heart."
L0019: RFALSE          

Routine R0321, 0 locals

       TEST_ATTR       Geb,#1f [TRUE] L0001
       PRINT_PADDR     S291
       NEW_LINE        
       RTRUE           
L0001: SET_ATTR        Geb,#08
       PRINT_PADDR     S292
       NEW_LINE        
       RTRUE           

Routine R0322, 0 locals

       JE              Ge9,#17,#56 [FALSE] L0006
       CALL_VS         R0153 (Geb,G12) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT           "You are on "
       CALL_2N         R0104 (Geb)
       PRINT           " already.
"
       RTRUE           
L0001: GET_PARENT      Geb -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0003
       PRINT_PADDR     S293
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,G00 [TRUE] L0002
       GET_PARENT      Geb -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ".
"
       RTRUE           
L0002: PRINT           "the floor.
"
       RTRUE           
L0003: TEST_ATTR       Geb,#1f [FALSE] L0004
       PRINT_PADDR     S294
       SET_ATTR        Geb,#08
       RTRUE           
L0004: GET_PARENT      Geb -> -(SP)
       JE              (SP)+,G00 [TRUE] L0005
       PRINT           "Maintaining your balance on "
       GET_PARENT      Geb -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT_PADDR     S295
       INSERT_OBJ      G12,G00
       RTRUE           
L0005: PRINT_PADDR     S296
       INSERT_OBJ      G12,"Holly the cat"
       RTRUE           
L0006: JE              Ge9,#37 [FALSE] L0007
       CALL_VN         R0076 (#32,Geb)
       RTRUE           
L0007: JE              Ge9,#64 [FALSE] L0009
       TEST_ATTR       Geb,#1f [TRUE] L0008
       PRINT_RET       "Holly appears not to notice."
L0008: PRINT_PADDR     S297
       SET_ATTR        Geb,#08
       INSERT_OBJ      G12,G00
       RTRUE           
L0009: JE              Ge9,#1001 [FALSE] L0013
       JE              G2b,G12 [TRUE] L0012
       TEST_ATTR       Geb,#1f [FALSE] L0010
       PRINT           "Holly backs away suspiciously.
"
       SET_ATTR        Geb,#08
       RTRUE           
L0010: GET_PARENT      Geb -> -(SP)
       INSERT_OBJ      G2b,(SP)+
       CALL_2N         R0105 (G2b)
       PRINT           " slides off the calico fur.
"
       JE              G2b,#0061 [FALSE] L0011
       TEST_ATTR       "MessageMate (tm) dictaphone",#08 [FALSE] L0011
       PRINT_PADDR     S298
       CLEAR_ATTR      "MessageMate (tm) dictaphone",#08
       RTRUE           
L0011: RTRUE           
L0012: RFALSE          
L0013: RFALSE          

Routine R0323, 2 locals

       JE              Ge9,#19 [FALSE] L0002
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [FALSE] L0001
       PRINT_PADDR     S299
       GET_PARENT      Geb -> -(SP)
       INSERT_OBJ      G12,(SP)+
       RTRUE           
L0001: RFALSE          
L0002: JE              Ge9,#4a [FALSE] L0005
       JE              G2b,#2d [FALSE] L0004
       TEST_ATTR       Geb,#1f [TRUE] L0003
       PRINT_PADDR     S300
       CALL_VN         R0486 (Geb,#0050)
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
       SET_ATTR        Geb,#08
       RTRUE           
L0003: PRINT_PADDR     S301
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
       SET_ATTR        Geb,#08
       RTRUE           
L0004: RFALSE          
L0005: JE              Ge9,#62 [FALSE] L0013
       JE              G2b,#2d [TRUE] L0006
       JE              G2b,#34 [FALSE] L0012
L0006: TEST_ATTR       Geb,#1f [TRUE] L0009
       PRINT_PADDR     S302
       SET_ATTR        Geb,#08
       CALL_VN         R0486 (Geb,#0050)
       JE              G2b,#2d [FALSE] L0007
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
L0007: JE              G2b,#34 [FALSE] L0008
       CALL_2N         R0409 (#02)
       CALL_VN         R0486 (#0058,#0057,#02)
L0008: RTRUE           
L0009: PRINT_PADDR     S303
       JE              G2b,#2d [FALSE] L0010
       CALL_2N         R0409 (#01)
       CALL_VN         R0486 (#0058,#0057,#01)
L0010: JE              G2b,#34 [FALSE] L0011
       CALL_2N         R0409 (#02)
       CALL_VN         R0486 (#0058,#0057,#02)
L0011: SET_ATTR        Geb,#08
       RTRUE           
L0012: RFALSE          
L0013: JE              Ge9,#50 [FALSE] L0025
       JE              G2b,#2d [FALSE] L0024
       JE              G2c,Geb [TRUE] L0024
       TEST_ATTR       Geb,#1f [TRUE] L0014
       PRINT           "Holly is jolted awake. "
       JUMP            L0015
L0014: PRINT           "Holly starts suddenly. "
L0015: PRINT_PADDR     S304
       INSERT_OBJ      "yellow ball",G00
       INSERT_OBJ      Geb,G00
       SET_ATTR        Geb,#08
       SET_ATTR        "Holly the cat",#1f
       CALL_2N         R0409 (#12)
       CALL_VN         R0486 (#0058,#0057,#12)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [FALSE] L0023
       STORE           L01,G2c
       STORE           L00,#00
L0016: GET_PARENT      L01 -> L01
       TEST_ATTR       L01,#14 [FALSE] L0017
       STORE           L00,#02
L0017: JE              L01,G12,G00 [FALSE] L0018
       STORE           L00,#01
L0018: JZ              L00 [TRUE] L0016
       JE              G2c,G12 [TRUE] L0019
       JE              L00,#01 [FALSE] L0020
L0019: PRINT_PADDR     S305
       INSERT_OBJ      G12,G00
       RTRUE           
L0020: PRINT_PADDR     S306
       CALL_2N         R0104 (L01)
       PRINT           ".
"
       INSERT_OBJ      G12,L01
       JE              L01,#28 [FALSE] L0021
       CALL_2N         R0147 (#04)
       GET_PARENT      "How do I climb the glass table?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0021
       INSERT_OBJ      "How do I climb the glass table?","Never access this
either"
L0021: JE              L01,#004f [FALSE] L0022
       GET_PARENT      "How do I climb the bench in the kitchen?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0022
       INSERT_OBJ      "How do I climb the bench in the kitchen?","Never access
this either"
L0022: RTRUE           
L0023: RTRUE           
L0024: RFALSE          
L0025: RFALSE          

Routine R0324, 0 locals

       SET_ATTR        Geb,#1f
       SET_ATTR        Geb,#08
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [FALSE] L0001
       PRINT_PADDR     S307
       GET_PARENT      Geb -> -(SP)
       INSERT_OBJ      G12,(SP)+
       RFALSE          
L0001: RFALSE          

Routine R0325, 0 locals

       TEST_ATTR       Geb,#1f [FALSE] L0002
       PRINT_PADDR     S308
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,G00 [FALSE] L0001
       PRINT_RET       "."
L0001: PRINT           " along "
       GET_PARENT      Geb -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ".
"
       RFALSE          
L0002: PRINT_PADDR     S309
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,G00 [FALSE] L0003
       PRINT_RET       " on the floor."
L0003: PRINT           " on "
       GET_PARENT      Geb -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ".
"
       RFALSE          

orphan code fragment:

       RFALSE          

Routine R0326, 0 locals

       TEST_ATTR       Geb,#1f [FALSE] RFALSE
       CALL_VS         R0153 (G00,Geb) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       SET_ATTR        Geb,#08
       JE              G00,#37 [TRUE] L0001
       JE              G15,#37 [FALSE] L0002
L0001: INSERT_OBJ      Geb,"South Hallway"
       PRINT_PADDR     S310
       NEW_LINE        
       RTRUE           
L0002: JE              G00,#2e [FALSE] L0003
       INSERT_OBJ      Geb,"South Hallway"
       PRINT_PADDR     S311
       NEW_LINE        
       RTRUE           
L0003: JE              G00,#3f [FALSE] L0004
       INSERT_OBJ      Geb,"big bed"
       PRINT_PADDR     S312
       NEW_LINE        
       RTRUE           
L0004: INSERT_OBJ      Geb,G00
       PRINT_PADDR     S313
       NEW_LINE        
       RTRUE           

Routine R0327, 1 local

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S314
       JUMP            L0002
L0001: PRINT_PADDR     S315
L0002: JE              G00,#0069 [FALSE] L0003
       PRINT_PADDR     S316
       INSERT_OBJ      Geb,"Computer Room"
       CLEAR_ATTR      Geb,#1f
       RTRUE           
L0003: JE              G00,#006a [FALSE] L0004
       PRINT_PADDR     S317
       INSERT_OBJ      Geb,"Computer Room"
       CLEAR_ATTR      Geb,#1f
       RTRUE           
L0004: PRINT_PADDR     S318
       INSERT_OBJ      Geb,"Computer Room"
       CLEAR_ATTR      Geb,#1f
       RTRUE           

Routine R0328, 4 locals

       TEST_ATTR       Geb,#08 [FALSE] L0001
       CLEAR_ATTR      Geb,#08
       RTRUE           
L0001: TEST_ATTR       Geb,#1f [FALSE] RTRUE
       CALL_2S         R0078 (Geb) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       RANDOM          #0a -> -(SP)
       JG              (SP)+,#01 [TRUE] L0002
       GET_PARENT      Geb -> -(SP)
       TEST_ATTR       (SP)+,#14 [FALSE] L0002
       GET_PARENT      Geb -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       INSERT_OBJ      Geb,(SP)+
L0002: RANDOM          #28 -> -(SP)
       JG              (SP)+,#01 [TRUE] L0003
       CLEAR_ATTR      Geb,#1f
L0003: RTRUE           
L0004: PRINT           "
"
       RANDOM          #0a -> -(SP)
       JG              (SP)+,#03 [TRUE] L0016
       RANDOM          #0c -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0005
       PRINT_RET       "Holly peers at you expectantly."
L0005: JE              Gef,#02 [FALSE] L0006
       PRINT_PADDR     S319
       NEW_LINE        
       RTRUE           
L0006: JE              Gef,#03 [FALSE] L0007
       PRINT_PADDR     S320
       NEW_LINE        
       RTRUE           
L0007: JE              Gef,#04 [FALSE] L0008
       PRINT_RET       "Holly stretches and yawns."
L0008: JE              Gef,#05 [FALSE] L0009
       PRINT_RET       "Holly preens herself a little."
L0009: JE              Gef,#06 [FALSE] L0010
       PRINT_RET       "Holly eyes you suspiciously."
L0010: JE              Gef,#07 [FALSE] L0011
       PRINT_RET       "Holly swats away a mote of dust."
L0011: JE              Gef,#08 [FALSE] L0012
       PRINT_PADDR     S321
       CLEAR_ATTR      Geb,#1f
       RTRUE           
L0012: JE              Gef,#09 [FALSE] L0013
       PRINT_PADDR     S322
       NEW_LINE        
       RTRUE           
L0013: JE              Gef,#0a [FALSE] L0014
       PRINT           "Holly darts about "
       GET_PARENT      Geb -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ".
"
       RTRUE           
L0014: JE              Gef,#0b [FALSE] L0015
       PRINT_PADDR     S323
       CALL_2N         R0409 (#27)
       RTRUE           
L0015: PRINT           "Holly pointedly ignores you.
"
       RTRUE           
L0016: GET_PARENT      Geb -> -(SP)
       TEST_ATTR       (SP)+,#14 [FALSE] L0017
       RANDOM          #0a -> -(SP)
       JG              (SP)+,#04 [FALSE] L0020
L0017: GET_PARENT      Geb -> -(SP)
       STORE           Gef,#00
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0019
L0018: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0018
L0019: PULL            Gee
       PUSH            Gef
       JE              (SP)+,#01 [FALSE] L0021
L0020: PRINT           "Holly leaps down from "
       GET_PARENT      Geb -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ".
"
       INSERT_OBJ      Geb,G00
       RTRUE           
L0021: GET_PARENT      Geb -> -(SP)
       STORE           Gef,#00
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0023
L0022: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0022
L0023: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,#01 -> L01
       JE              G00,#0065 [FALSE] L0024
       SUB             L01,#02 -> L01
L0024: GET_PARENT      Geb -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0025
L0025: JE              L00,Geb,#0068,#0067 [FALSE] L0026
       GET_SIBLING     L00 -> L00 [FALSE] L0026
L0026: RANDOM          L01 -> -(SP)
       SUB             (SP)+,#01 -> L03
       STORE           L02,#01
L0027: JG              L02,L03 [TRUE] L0030
       GET_SIBLING     L00 -> L00 [FALSE] L0028
L0028: JE              L00,Geb,#0068,#0067 [FALSE] L0029
       GET_SIBLING     L00 -> L00 [FALSE] L0029
L0029: INC             L02
       JUMP            L0027
L0030: PRINT           "Holly "
       TEST_ATTR       L00,#14 [FALSE] L0031
       RANDOM          #0a -> -(SP)
       JG              (SP)+,#04 [TRUE] L0031
       PRINT           "leaps onto "
       CALL_2N         R0104 (L00)
       PRINT           ".
"
       INSERT_OBJ      Geb,L00
       RTRUE           
L0031: JE              L00,#47 [FALSE] L0032
       PRINT_PADDR     S324
       CLEAR_ATTR      Geb,#1f
       RTRUE           
L0032: RANDOM          #10 -> -(SP)
       PULL            Gef
       JL              Gef,#01 [TRUE] L0033
       JG              Gef,#03 [TRUE] L0033
       PRINT           "bats at "
       JUMP            L0042
L0033: JL              Gef,#04 [TRUE] L0034
       JG              Gef,#06 [TRUE] L0034
       PRINT           "sniffs at "
       JUMP            L0042
L0034: JL              Gef,#07 [TRUE] L0035
       JG              Gef,#09 [TRUE] L0035
       PRINT           "paws "
       JUMP            L0042
L0035: JE              Gef,#0a [FALSE] L0036
       PRINT           "stares at "
       JUMP            L0042
L0036: JE              Gef,#0b [FALSE] L0037
       PRINT           "glares threateningly at "
       JUMP            L0042
L0037: JL              Gef,#0c [TRUE] L0040
       JG              Gef,#0e [TRUE] L0040
       JE              L00,#0057 [FALSE] L0038
       PRINT           "stares into "
       JUMP            L0039
L0038: PRINT           "winds around "
L0039: JUMP            L0042
L0040: JE              Gef,#0f [FALSE] L0041
       PRINT           "sneaks up on "
       JUMP            L0042
L0041: PRINT           "playfully bites "
L0042: JE              L00,G12 [FALSE] L0043
       PRINT_RET       "you."
L0043: CALL_2N         R0104 (L00)
       PRINT           ".
"
       RTRUE           

Routine R0329, 0 locals

       PRINT_PADDR     S325
       TEST_ATTR       Geb,#0d [TRUE] L0001
       PRINT_RET       ".
"
L0001: PRINT_PADDR     S326
       NEW_LINE        
       RTRUE           

Routine R0330, 0 locals

       JE              Ge9,#35 [FALSE] L0001
       TEST_ATTR       Geb,#0d [FALSE] L0001
       PRINT_PADDR     S328
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0331, 0 locals

       JE              Ge9,#25 [FALSE] L0001
       PRINT_PADDR     S329
       CALL_2N         R0090 (Geb)
       RTRUE           
L0001: JE              Ge9,#26 [FALSE] L0002
       PRINT_PADDR     S330
       CALL_2N         R0091 (Geb)
       PUT_PROP        Geb,#29,#02
       RTRUE           
L0002: RFALSE          

Routine R0332, 0 locals

       GET_PARENT      Geb -> -(SP)
       JE              G00,(SP)+ [TRUE] L0002
       STORE           Gef,Geb
       STORE           Gee,#29
       GET_PROP        Gef,Gee -> Ged
       INC             Ged
       PUT_PROP        Gef,Gee,Ged
       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#10 [FALSE] L0001
       PUT_PROP        Geb,#29,#02
L0001: RTRUE           
L0002: STORE           Gef,Geb
       STORE           Gee,#29
       GET_PROP        Gef,Gee -> Ged
       INC             Ged
       PUT_PROP        Gef,Gee,Ged
       PRINT           "
"
       GET_PROP        Geb,#29 -> -(SP)
       CALL_2N         R0408 ((SP)+)
       GET_PROP        Geb,#29 -> -(SP)
       CALL_2N         R0409 ((SP)+)
       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#10 [FALSE] L0003
       PUT_PROP        Geb,#29,#02
L0003: RTRUE           

Routine R0333, 0 locals

       JE              Ge9,#23 [FALSE] L0001
       PRINT_RET       "You can't reach high enough."
L0001: JE              Ge9,#27,#17 [FALSE] L0002
       PRINT_PADDR     S334
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0334, 0 locals

       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,Geb [TRUE] RFALSE
       GET_PARENT      "How do I climb the bench in the kitchen?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0001
       INSERT_OBJ      "How do I climb the bench in the kitchen?","A few
helpful hints"
L0001: SET_ATTR        "sink full of dirty dishes",#03
       PRINT_PADDR     S336
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,Geb [TRUE] L0002
       PUSH            #00
       JUMP            L0003
L0002: PUSH            #01
L0003: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0004: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0004
L0005: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,#01 [FALSE] L0006
       PRINT           "."
       JUMP            L0008
L0006: PRINT           ", next to which you can see "
       GET_CHILD       Geb -> -(SP) [FALSE] L0007
L0007: CALL_VN         R0130 ((SP)+,#0808)
       PRINT_PADDR     S337
L0008: CLEAR_ATTR      "sink full of dirty dishes",#03
       CALL_2S         R0078 (#0055) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       PRINT_PADDR     S338
       NEW_LINE        
       RTRUE           
L0009: PRINT_PADDR     S339
       NEW_LINE        
       RTRUE           

Routine R0335, 0 locals

       PRINT_PADDR     S340
       INSERT_OBJ      G12,Geb
       GET_PARENT      "How do I climb the bench in the kitchen?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0001
       INSERT_OBJ      "How do I climb the bench in the kitchen?","Never access
this either"
L0001: RTRUE           

Routine R0336, 0 locals

       JE              Ge9,#37,#46,#34 [TRUE] L0001
       JE              Ge9,#36,#22,#60 [TRUE] L0001
       JE              Ge9,#32,#4f,#64 [TRUE] L0001
       JE              Ge9,#4c,#4b [FALSE] L0002
L0001: PRINT_RET       "Yuck!"
L0002: RFALSE          

Routine R0337, 0 locals

       PRINT_PADDR     S342
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0003
       PRINT_RET       "."
L0003: PRINT           ", in which you can see "
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0004: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."

Routine R0338, 0 locals

       PRINT_PADDR     S343
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0003
       PRINT_RET       "."
L0003: PRINT           ", containing "
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0004: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."

Routine R0339, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_2N         R0411 (#04)
       PRINT_RET       "What a strange idea."
L0001: JE              Ge9,#4d,#4c,#4b [TRUE] L0002
       JE              Ge9,#64 [FALSE] L0003
L0002: CALL_2N         R0411 (#04)
       PRINT_PADDR     S344
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#4e [FALSE] L0009
       GET_PARENT      G12 -> -(SP)
       TEST_ATTR       (SP)+,#14 [FALSE] L0004
       PRINT_PADDR     S345
       NEW_LINE        
       RTRUE           
L0004: CALL_2N         R0411 (#04)
       JE              G00,#4d [FALSE] L0005
       JE              G2c,#08 [TRUE] L0006
L0005: JE              G00,#0065 [FALSE] L0007
       JE              G2c,#09 [FALSE] L0007
L0006: PRINT_PADDR     S346
       NEW_LINE        
       RTRUE           
L0007: JE              G00,#2c [FALSE] L0008
       JE              G2c,#08 [FALSE] L0008
       PRINT_PADDR     S347
       NEW_LINE        
       RTRUE           
L0008: CALL_1N         R0235
       RTRUE           
L0009: CALL_2N         R0411 (#04)
       RFALSE          

Routine R0340, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       STORE           G89,#01
       PRINT_PADDR     S348
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0341, 0 locals

       PRINT_PADDR     S349
       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT_RET       "."
L0001: PRINT_PADDR     S350
       NEW_LINE        
       RTRUE           

Routine R0342, 0 locals

       JE              Ge9,#34 [FALSE] L0001
       PRINT_RET       "Mmmmmm, freshly baked."
L0001: JE              Ge9,#2b,#36 [FALSE] L0002
       PRINT_PADDR     S351
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0343, 0 locals

       JE              Ge9,#27 [FALSE] L0001
       PRINT_PADDR     S353
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0002
       CALL_VN         R0486 (Geb,#0054)
       RTRUE           
L0002: RFALSE          

Routine R0344, 1 local

       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#51 [FALSE] L0001
       PRINT_PADDR     S354
       NEW_LINE        
       RTRUE           
L0001: CALL_2S         R0078 (#51) -> -(SP)
       CALL_2S         R0078 (#29) -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2S         R0078 (#0072) -> -(SP)
       MUL             #04,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> L00
       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0002
       PRINT_PADDR     S355
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#01 [FALSE] L0003
       PRINT_PADDR     S356
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#02 [FALSE] L0004
       PRINT_PADDR     S357
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#03 [FALSE] L0005
       PRINT_PADDR     S358
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,#04 [FALSE] L0006
       PRINT_PADDR     S359
       NEW_LINE        
       RTRUE           
L0006: JE              Gef,#05 [FALSE] L0007
       PRINT_PADDR     S360
       NEW_LINE        
       RTRUE           
L0007: JE              Gef,#06 [FALSE] L0008
       PRINT_PADDR     S361
       NEW_LINE        
       RTRUE           
L0008: JE              Gef,#07 [FALSE] L0011
       PRINT_PADDR     S362
       GET_PARENT      "What should I do with the honey?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0009
       INSERT_OBJ      "What should I do with the honey?","Never access this
either"
L0009: GET_PARENT      "last lousy point stamp" -> -(SP)
       JE              (SP)+,#005f [FALSE] L0010
       INSERT_OBJ      "What else is left to do now?","A few helpful hints"
L0010: INSERT_OBJ      Geb,"picnic basket"
       CALL_2N         R0147 (#02)
       RTRUE           
L0011: RFALSE          

Routine R0345, 0 locals

       JE              Ge9,#4c [FALSE] L0001
       CALL_VN         R0076 (#4c,#53)
       RTRUE           
L0001: RFALSE          

Routine R0346, 0 locals

       JE              Ge9,#4b,#0f,#64 [FALSE] L0006
       PRINT_PADDR     S366
       INSERT_OBJ      "answering machine","Kitchen"
       INSERT_OBJ      "wire cord","Vortex"
       CLEAR_ATTR      "red light",#09
       CALL_2S         R0078 (#4b) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT           "
Holly"
       TEST_ATTR       "Holly the cat",#1f [TRUE] L0001
       PRINT           " wakes with a start and "
       JUMP            L0002
L0001: PRINT           ", startled, "
L0002: PRINT           "rushes from the room"
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,#4b [FALSE] L0003
       PRINT           ", as you tumble to the floor.
"
       INSERT_OBJ      G12,G00
       JUMP            L0004
L0003: PRINT           ".
"
L0004: INSERT_OBJ      "Holly the cat","Living Room"
L0005: CALL_VN         R0486 (#4b,#50)
       INSERT_OBJ      "small tape","Kitchen"
       CALL_2N         R0147 (#0b)
       CALL_2N         R0411 (#01)
       PUT_PROP        "answering machine",#23,S367
       RTRUE           
L0006: RFALSE          

Routine R0347, 0 locals

       JE              Ge9,#1001 [FALSE] L0003
       TEST_ATTR       G2b,#21 [FALSE] L0001
       CALL_2N         R0105 (G2b)
       PRINT_RET       " won't fit in the hole."
L0001: INSERT_OBJ      G2b,"Vortex"
       CALL_2N         R0105 (G2b)
       PRINT           " falls through the hole with a "
       TEST_ATTR       G2b,#22 [FALSE] L0002
       PRINT_RET       "flutter."
L0002: PRINT           "clunk.
"
       CALL_2N         R0409 (#26)
       RTRUE           
L0003: JE              Ge9,#17 [FALSE] L0004
       PRINT_RET       "You won't fit through the hole."
L0004: JE              Ge9,#22 [FALSE] L0005
       PRINT_PADDR     S369
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0348, 0 locals

       PRINT_PADDR     S370
       GET_PROP        Geb,#29 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_RET       "."
L0001: PRINT_RET       ", currently in use."

Routine R0349, 0 locals

       JE              Ge9,#35 [FALSE] L0002
       GET_PROP        Geb,#29 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     S371
       NEW_LINE        
       RTRUE           
L0001: RFALSE          
L0002: JE              Ge9,#63 [FALSE] L0004
       GET_PROP        Geb,#29 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S372
       NEW_LINE        
       RTRUE           
L0003: PUT_PROP        Geb,#29,#00
       CALL_VN         R0484 (Geb,#0055,#00)
       CALL_2N         R0091 (Geb)
       CALL_2N         R0408 (#2d)
       CALL_2N         R0409 (#2d)
       RTRUE           
L0004: RFALSE          

Routine R0350, 1 local

       GET_PROP        Geb,#29 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_RET       "The telephone is already in use."
L0001: JE              L00,#5f [TRUE] L0013
       JE              L00,#48 [TRUE] L0013
       JE              L00,#038f [TRUE] L0013
       JE              L00,#03e7 [TRUE] L0013
       MOD             L00,#11 -> -(SP)
       PULL            Gef
       JE              Gef,#00,#03,#06 [TRUE] L0002
       JE              Gef,#09,#0d [FALSE] L0003
L0002: PRINT_RET       "No-one seems to be answering."
L0003: JE              Gef,#01,#04,#07 [TRUE] L0004
       JE              Gef,#0b,#0f [FALSE] L0005
L0004: PRINT_PADDR     S373
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,#02 [FALSE] L0006
       CALL_2N         R0408 (#13)
       CALL_2N         R0409 (#13)
       RTRUE           
L0006: JE              Gef,#05 [FALSE] L0007
       CALL_2N         R0408 (#14)
       CALL_2N         R0409 (#14)
       RTRUE           
L0007: JE              Gef,#08 [FALSE] L0008
       CALL_2N         R0408 (#15)
       CALL_2N         R0409 (#15)
       RTRUE           
L0008: JE              Gef,#0a [FALSE] L0009
       CALL_2N         R0408 (#16)
       CALL_2N         R0409 (#16)
       PRINT_PADDR     S374
       NEW_LINE        
       RTRUE           
L0009: JE              Gef,#0c [FALSE] L0010
       CALL_2N         R0408 (#17)
       CALL_2N         R0409 (#17)
       RTRUE           
L0010: JE              Gef,#0e [FALSE] L0011
       CALL_2N         R0408 (#2b)
       CALL_2N         R0409 (#2b)
       RTRUE           
L0011: JE              Gef,#10 [FALSE] L0012
       CALL_2N         R0408 (#2c)
       CALL_2N         R0409 (#2c)
       PRINT_PADDR     S375
       NEW_LINE        
       RTRUE           
L0012: PRINT_RET       "No-one seems to be answering."
       RTRUE           
L0013: JE              L00,#038f,#03e7 [FALSE] L0014
       PRINT_RET       "This is no emergency."
L0014: JE              L00,#48 [FALSE] L0015
       PUT_PROP        Geb,#29,#01
       CALL_VN         R0484 (Geb,#55,#18)
       CALL_2N         R0408 (#18)
       CALL_2N         R0409 (#18)
       CALL_2N         R0090 (Geb)
       RTRUE           
L0015: PUT_PROP        Geb,#29,#02
       CALL_VN         R0484 (Geb,#55,#1e)
       GET_PARENT      "How do I make myself heard?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0016
       INSERT_OBJ      "How do I make myself heard?","A few helpful hints"
L0016: CALL_2N         R0408 (#1e)
       CALL_2N         R0409 (#1e)
       CALL_2N         R0090 (Geb)
       RTRUE           

Routine R0351, 1 local

       CALL_2S         R0078 (Geb) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#02 [FALSE] RFALSE
       JZ              L00 [TRUE] RFALSE
       JE              L00,#01,#02,#03 [TRUE] L0001
       JE              L00,#07,#11,#12 [TRUE] L0001
       JE              L00,#13 [FALSE] L0002
L0001: PRINT           "
"
       CALL_2N         R0408 (#25)
       PUT_PROP        Geb,#29,#03
       RFALSE          
L0002: JE              L00,#0d,#0f [TRUE] L0003
       PRINT           "
"
       CALL_2N         R0408 (#24)
       PUT_PROP        Geb,#29,#03
       RFALSE          
L0003: TEST_ATTR       "z-machine chip",#08 [FALSE] L0004
       PRINT_PADDR     S376
       CALL_VN         R0484 (Geb,#55,#00)
       PUT_PROP        Geb,#29,#00
       CALL_2N         R0091 (Geb)
       RFALSE          
L0004: PRINT_PADDR     S377
       GET_PARENT      "How do I make myself heard?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0005
       INSERT_OBJ      "How do I make myself heard?","Never access this either"
L0005: CALL_VN         R0484 (Geb,#55,#00)
       PUT_PROP        Geb,#29,#00
       INSERT_OBJ      "cardboard box","Front Entrance"
       SET_ATTR        "z-machine chip",#08
       CALL_2N         R0091 (Geb)
       CALL_2N         R0147 (#01)
       RFALSE          

Routine R0352, 0 locals

       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
       CALL_VS         R0153 (G00,Geb) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VN         R0487 (Geb,#55)
       JUMP            L0003
L0001: CALL_VS         R0485 (Geb,#55) -> -(SP)
       JE              (SP)+,#18 [FALSE] L0002
       CALL_VN         R0487 (Geb,#55)
       RTRUE           
L0002: PRINT           "
"
       CALL_VS         R0485 (Geb,#55) -> -(SP)
       CALL_2N         R0408 ((SP)+)
       CALL_VS         R0485 (Geb,#55) -> -(SP)
       CALL_2N         R0409 ((SP)+)
       CALL_VN         R0487 (Geb,#55)
L0003: CALL_VS         R0485 (Geb,#55) -> -(SP)
       JE              (SP)+,#1e [FALSE] L0004
       CALL_VN         R0484 (Geb,#55,#00)
       PUT_PROP        Geb,#29,#00
       CALL_2N         R0091 (Geb)
       RTRUE           
L0004: JUMP            L0011
L0005: CALL_VS         R0153 (G00,Geb) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#03 [FALSE] L0008
L0006: CALL_VN         R0487 (Geb,#55)
       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#03 [FALSE] L0007
       PUT_PROP        Geb,#29,#02
       CALL_VN         R0484 (Geb,#55,#23)
L0007: JUMP            L0010
L0008: CALL_VS         R0485 (Geb,#55) -> -(SP)
       JE              (SP)+,#1e [FALSE] L0009
       CALL_VN         R0487 (Geb,#55)
       RTRUE           
L0009: PRINT           "
"
       CALL_VS         R0485 (Geb,#55) -> -(SP)
       CALL_2N         R0408 ((SP)+)
       CALL_VS         R0485 (Geb,#55) -> -(SP)
       CALL_2N         R0409 ((SP)+)
       CALL_VN         R0487 (Geb,#55)
L0010: CALL_VS         R0485 (Geb,#55) -> -(SP)
       JE              (SP)+,#24 [FALSE] L0011
       CALL_VN         R0484 (Geb,#55,#00)
       PUT_PROP        Geb,#29,#00
       CALL_2N         R0091 (Geb)
       RTRUE           
L0011: RTRUE           

Routine R0353, 0 locals

       JE              Ge9,#53,#51,#52 [FALSE] L0003
       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       PRINT_PADDR     S378
       NEW_LINE        
       RTRUE           
L0001: GET_PROP        Geb,#29 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PRINT_RET       "There's no-one at the other end."
L0002: PRINT_PADDR     S379
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0354, 0 locals

       GET_PROP        Geb,#29 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       PRINT_PADDR     S380
       NEW_LINE        
       RTRUE           
L0001: GET_PROP        Geb,#29 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PRINT_RET       "There's no-one at the other end."
L0002: PRINT_PADDR     S381
       NEW_LINE        
       RTRUE           

Routine R0355, 0 locals

       JE              Ge9,#4c [FALSE] L0006
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#4f [FALSE] RFALSE
       PRINT_PADDR     S384
       INSERT_OBJ      "answering machine","Kitchen"
       INSERT_OBJ      "wire cord","Vortex"
       CLEAR_ATTR      "red light",#09
       CALL_2S         R0078 (#4b) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT           "
Holly"
       TEST_ATTR       "Holly the cat",#1f [TRUE] L0001
       PRINT           " wakes with a start and "
       JUMP            L0002
L0001: PRINT           ", startled, "
L0002: PRINT           "rushes from the room"
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,#4b [FALSE] L0003
       PRINT           ", as you tumble to the floor.
"
       INSERT_OBJ      G12,G00
       JUMP            L0004
L0003: PRINT           ".
"
L0004: INSERT_OBJ      "Holly the cat","Living Room"
L0005: CALL_VN         R0486 (#4b,#50)
       CALL_VN         R0486 (#58,#57,#01)
       INSERT_OBJ      "small tape","Kitchen"
       CALL_2N         R0147 (#0b)
       CALL_2N         R0411 (#01)
       PUT_PROP        "answering machine",#23,S385
       RTRUE           
L0006: JE              Ge9,#1001 [FALSE] L0008
       JE              G2b,#005b [FALSE] L0007
       PRINT_PADDR     S386
       NEW_LINE        
       RTRUE           
L0007: CALL_2N         R0105 (G2b)
       PRINT_PADDR     S387
       NEW_LINE        
       RTRUE           
L0008: RFALSE          

Routine R0356, 0 locals

       TEST_ATTR       Geb,#09 [FALSE] L0001
       PRINT_RET       "The red light is glowing faintly"
L0001: PRINT_RET       "The red light is unlit."

Routine R0357, 0 locals

       JE              Ge9,#0f [FALSE] L0002
       GET_PARENT      "small tape" -> -(SP)
       JE              (SP)+,#0061 [FALSE] L0001
       PRINT_PADDR     S389
       NEW_LINE        
       RTRUE           
L0001: RFALSE          
L0002: JE              Ge9,#67 [FALSE] L0003
       PRINT_PADDR     S390
       CALL_VN         R0076 (#4c,#0063)
       RTRUE           
L0003: RFALSE          

Routine R0358, 0 locals

       JE              Ge9,#20 [FALSE] L0001
       JE              G2b,#0a [FALSE] RFALSE
       PRINT_PADDR     S392
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0359, 0 locals

       PRINT_PADDR     S393
       TEST_ATTR       Geb,#0e [TRUE] L0001
       PRINT_RET       ", firmly shut."
L0001: PRINT           ", which is open"
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0003
L0002: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0002
L0003: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0004
       PRINT_RET       "."
L0004: PRINT           ", revealing "
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0005: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."

Routine R0360, 0 locals

       PRINT_PADDR     S394
       TEST_ATTR       Geb,#0e [FALSE] L0004
       PRINT           ", which is open"
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0004
       PRINT           ", revealing "
       GET_CHILD       Geb -> -(SP) [FALSE] L0003
L0003: CALL_2N         R0130 ((SP)+)
L0004: PRINT_RET       "."

Routine R0361, 0 locals

       JE              Ge9,#4b [FALSE] L0001
       CALL_VN         R0076 (#27,Geb)
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0002
       CALL_VN         R0076 (#28,Geb)
       RTRUE           
L0002: RFALSE          

Routine R0362, 0 locals

       JE              Ge9,#24 [FALSE] L0001
       PRINT_PADDR     S395
       CALL_2N         R0409 (#26)
       RTRUE           
L0001: JE              Ge9,#23 [FALSE] L0002
       PRINT_PADDR     S396
       CALL_2N         R0409 (#26)
       RTRUE           
L0002: JE              Ge9,#27 [FALSE] L0007
       PRINT_PADDR     S397
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0004
L0003: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0003
L0004: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0005
       PRINT_RET       "."
L0005: PRINT           ", revealing "
       GET_CHILD       Geb -> -(SP) [FALSE] L0006
L0006: CALL_VN         R0130 ((SP)+,#08)
       PRINT_RET       "."
L0007: JE              Ge9,#28 [FALSE] L0008
       PRINT_PADDR     S398
       NEW_LINE        
       RTRUE           
L0008: RFALSE          

Routine R0363, 0 locals

       PRINT_PADDR     S399
       CALL_VN         R0076 (#22,Geb)
       RTRUE           

Routine R0364, 0 locals

       JE              Ge9,#22 [FALSE] L0001
       CALL_VN         R0486 (Geb,#0058)
       RTRUE           
L0001: JE              Ge9,#64,#65 [FALSE] L0002
       PRINT_PADDR     S400
       INSERT_OBJ      G12,G00
       CALL_VN         R0076 (#22,Geb)
       RTRUE           
L0002: RFALSE          

Routine R0365, 0 locals

       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       PULL            Gef
       JE              Gef,#00 [FALSE] L0003
       CALL_VN         R0486 (Geb,#0059)
       RTRUE           
L0003: JE              Gef,#01 [FALSE] L0004
       PRINT_PADDR     S401
       INSERT_OBJ      "reply card",G12
       CALL_2N         R0147 (#0a)
       RTRUE           
L0004: JE              Gef,#02 [FALSE] L0005
       PRINT_PADDR     S402
       INSERT_OBJ      "flyer",G12
       RTRUE           
L0005: RFALSE          

Routine R0366, 1 local

       RANDOM          #03 -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0001
       PRINT           "At the top "
       JUMP            L0003
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT           "Towards the middle "
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT           "Near the bottom "
L0003: PRINT           "of the pile of papers you find a"
L0004: RANDOM          #1e -> L00
       GET_PROP        Geb,#29 -> -(SP)
       JE              L00,(SP)+ [TRUE] L0004
       PUT_PROP        Geb,#29,L00
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0005
       PRINT_PADDR     S403
       JUMP            L0034
L0005: JE              Gef,#02 [FALSE] L0006
       PRINT_PADDR     S404
       JUMP            L0034
L0006: JE              Gef,#03 [FALSE] L0007
       PRINT_PADDR     S405
       JUMP            L0034
L0007: JE              Gef,#04 [FALSE] L0008
       PRINT           " brochure advertising MIT"
       JUMP            L0034
L0008: JE              Gef,#05 [FALSE] L0009
       PRINT_PADDR     S406
       JUMP            L0034
L0009: JE              Gef,#06 [FALSE] L0010
       PRINT_PADDR     S407
       JUMP            L0034
L0010: JE              Gef,#07 [FALSE] L0011
       PRINT           "n Inform Designer's Manual"
       JUMP            L0034
L0011: JE              Gef,#08 [FALSE] L0012
       PRINT_PADDR     S408
       JUMP            L0034
L0012: JE              Gef,#09 [FALSE] L0013
       PRINT           " tourist map of Paris"
       JUMP            L0034
L0013: JE              Gef,#0a [FALSE] L0014
       PRINT_PADDR     S409
       JUMP            L0034
L0014: JE              Gef,#0b [FALSE] L0015
       PRINT           "n exceedingly dull M.Sc. thesis"
       JUMP            L0034
L0015: JE              Gef,#0c [FALSE] L0016
       PRINT_PADDR     S410
       JUMP            L0034
L0016: JE              Gef,#0d [FALSE] L0017
       PRINT           " Dial-A-Pirate wheel"
       JUMP            L0034
L0017: JE              Gef,#0e [FALSE] L0018
       PRINT           " notebook written by Henry Who"
       JUMP            L0034
L0018: JE              Gef,#0f [FALSE] L0019
       PRINT_PADDR     S411
       JUMP            L0034
L0019: JE              Gef,#10 [FALSE] L0020
       PRINT           " Crimestompers' Coloring book"
       JUMP            L0034
L0020: JE              Gef,#11 [FALSE] L0021
       PRINT_PADDR     S412
       JUMP            L0034
L0021: JE              Gef,#12 [FALSE] L0022
       PRINT           " map of Rockvil, South Dakota"
       JUMP            L0034
L0022: JE              Gef,#13 [FALSE] L0023
       PRINT           " free poster of Commander Borf"
       JUMP            L0034
L0023: JE              Gef,#14 [FALSE] L0024
       PRINT           " blueprint for the Chron-O-John"
       JUMP            L0034
L0024: JE              Gef,#15 [FALSE] L0025
       PRINT           " featureless white cube"
       JUMP            L0034
L0025: JE              Gef,#16 [FALSE] L0026
       PRINT_PADDR     S413
       JUMP            L0034
L0026: JE              Gef,#17 [FALSE] L0027
       PRINT_PADDR     S414
       JUMP            L0034
L0027: JE              Gef,#18 [FALSE] L0028
       PRINT           " copy of Tinsel World magazine"
       JUMP            L0034
L0028: JE              Gef,#19 [FALSE] L0029
       PRINT_PADDR     S415
       JUMP            L0034
L0029: JE              Gef,#1a [FALSE] L0030
       PRINT           " Lane Mastodon comic"
       JUMP            L0034
L0030: JE              Gef,#1b [FALSE] L0031
       PRINT_PADDR     S416
       JUMP            L0034
L0031: JE              Gef,#1c [FALSE] L0032
       PRINT           "n Atom Bomb comic"
       JUMP            L0034
L0032: JE              Gef,#1d [FALSE] L0033
       PRINT_PADDR     S417
       JUMP            L0034
L0033: JE              Gef,#1e [FALSE] L0034
       PRINT           " Kevin Pope cartoon"
L0034: PRINT_PADDR     S418
       RFALSE          

Routine R0367, 0 locals

       PRINT_PADDR     S419
       GET_PARENT      "last lousy point stamp" -> -(SP)
       JE              (SP)+,Geb [FALSE] L0001
       PRINT_PADDR     S420
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S421
       NEW_LINE        
       RTRUE           

Routine R0368, 0 locals

       SET_TEXT_STYLE  BOLDFACE
       PRINT_PADDR     S422
       SET_TEXT_STYLE  ROMAN
       PRINT_PADDR     S423
       RTRUE           

Routine R0369, 0 locals

       PRINT_PADDR     S424
       GET_PARENT      "small tape" -> -(SP)
       JE              (SP)+,Geb [FALSE] L0001
       PRINT_PADDR     S425
       JUMP            L0002
L0001: PRINT_PADDR     S426
L0002: TEST_ATTR       Geb,#08 [FALSE] L0003
       PRINT_RET       "
The tape recorder hums softly."
L0003: RTRUE           

Routine R0370, 0 locals

       JE              Ge9,#13 [FALSE] L0005
       JE              G2c,Geb [TRUE] L0001
       RFALSE          
L0001: JE              G2b,#5b [TRUE] L0002
       PRINT_PADDR     S427
       NEW_LINE        
       RTRUE           
L0002: GET_PARENT      "MessageMate (tm) dictaphone" -> -(SP)
       JE              (SP)+,G12 [FALSE] L0003
       GET_PARENT      "small tape" -> -(SP)
       JE              (SP)+,G12 [TRUE] L0004
L0003: PRINT_PADDR     S428
       NEW_LINE        
       RTRUE           
L0004: INSERT_OBJ      "small tape","MessageMate (tm) dictaphone"
       PRINT_PADDR     S429
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0371, 0 locals

       JE              Ge9,#62 [FALSE] L0001
       PRINT_PADDR     S430
       CALL_VN         R0076 (#4c,#0063)
       RTRUE           
L0001: JE              Ge9,#50 [FALSE] L0002
       PRINT_PADDR     S431
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0372, 0 locals

       JE              Ge9,#10,#12 [FALSE] L0002
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_PADDR     S432
       CLEAR_ATTR      Geb,#08
       RTRUE           
L0001: RFALSE          
L0002: RFALSE          

Routine R0373, 0 locals

       JE              Ge9,#51,#52 [FALSE] L0002
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_PADDR     S433
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S434
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#53 [FALSE] L0003
       PRINT_RET       "What a curious idea."
L0003: RFALSE          

Routine R0374, 0 locals

       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_PADDR     S435
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S436
       NEW_LINE        
       RTRUE           

Routine R0375, 0 locals

       TEST_ATTR       "MessageMate (tm) dictaphone",#08 [FALSE] L0001
       PRINT_PADDR     S437
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S438
       NEW_LINE        
       RTRUE           

Routine R0376, 0 locals

       JE              Ge9,#4c [FALSE] L0003
       GET_PARENT      "small tape" -> -(SP)
       JE              (SP)+,#61 [TRUE] L0001
       PRINT_PADDR     S439
       NEW_LINE        
       RTRUE           
L0001: TEST_ATTR       "MessageMate (tm) dictaphone",#08 [FALSE] L0002
       PRINT_PADDR     S440
       NEW_LINE        
       RTRUE           
L0002: SET_ATTR        "MessageMate (tm) dictaphone",#08
       PRINT_PADDR     S441
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0377, 0 locals

       JE              Ge9,#4c [FALSE] L0008
       GET_PARENT      "small tape" -> -(SP)
       JE              (SP)+,#61 [TRUE] L0001
       PRINT_PADDR     S443
       NEW_LINE        
       RTRUE           
L0001: TEST_ATTR       "MessageMate (tm) dictaphone",#08 [FALSE] L0002
       PRINT_PADDR     S444
       CLEAR_ATTR      "MessageMate (tm) dictaphone",#08
       RTRUE           
L0002: GET_PROP        "small tape",#29 -> -(SP)
       CALL_2N         R0408 ((SP)+)
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,G00 [FALSE] L0007
       GET_PROP        "small tape",#29 -> -(SP)
       PULL            Gef
       JE              Gef,#01,#02,#12 [TRUE] L0003
       JE              Gef,#27,#29,#2a [FALSE] L0007
L0003: TEST_ATTR       "Holly the cat",#1f [FALSE] L0006
       PRINT_PADDR     S445
       GET_PROP        "small tape",#29 -> -(SP)
       JE              (SP)+,#27 [TRUE] L0004
       PRINT           ".
"
       JUMP            L0005
L0004: PRINT           ", and hisses angrily.
"
L0005: SET_ATTR        "Holly the cat",#08
       JUMP            L0007
L0006: PRINT           "
Holly awakes with a start.
"
       CALL_VN         R0486 (#4b,#50)
L0007: GET_PROP        "small tape",#29 -> -(SP)
       CALL_VN         R0486 (#58,#57,(SP)+)
       RTRUE           
L0008: RFALSE          

Routine R0378, 0 locals

       JE              Ge9,#13 [FALSE] L0005
       JE              G2c,Geb [TRUE] L0001
       RFALSE          
L0001: JE              G2b,#5b [TRUE] L0002
       PRINT_PADDR     S447
       NEW_LINE        
       RTRUE           
L0002: GET_PARENT      "MessageMate (tm) dictaphone" -> -(SP)
       JE              (SP)+,G12 [FALSE] L0003
       GET_PARENT      "small tape" -> -(SP)
       JE              (SP)+,G12 [TRUE] L0004
L0003: PRINT_PADDR     S448
       NEW_LINE        
       RTRUE           
L0004: INSERT_OBJ      "small tape","MessageMate (tm) dictaphone"
       PRINT_PADDR     S449
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0379, 0 locals

       JE              Ge9,#23 [FALSE] L0001
       PRINT_RET       "You can't reach high enough."
L0001: JE              Ge9,#27,#17 [FALSE] L0002
       PRINT_PADDR     S453
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0380, 0 locals

       PRINT           "A slim postage slot."
       TEST_ATTR       "z-machine chip",#08 [TRUE] L0001
       PRINT           "
"
       RTRUE           
L0001: PRINT_PADDR     S454
       NEW_LINE        
       RTRUE           

Routine R0381, 0 locals

       JE              Ge9,#20 [FALSE] L0001
       RFALSE          
L0001: PRINT_PADDR     S455
       NEW_LINE        
       RTRUE           

Routine R0382, 0 locals

       JE              Ge9,#20 [FALSE] L0001
       RFALSE          
L0001: JE              Ge9,#35 [FALSE] L0002
       PRINT_PADDR     S457
       NEW_LINE        
       RTRUE           
L0002: PRINT_PADDR     S458
       NEW_LINE        
       RTRUE           

Routine R0383, 0 locals

       JE              Ge9,#13,#15,#16 [TRUE] L0001
       JE              Ge9,#61,#5d,#12 [FALSE] L0002
L0001: JE              G2c,Geb [FALSE] RFALSE
       PRINT_PADDR     S459
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0384, 0 locals

       PRINT_PADDR     S460
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,#28 [FALSE] L0001
       TEST_ATTR       "Holly the cat",#1f [FALSE] L0001
       CALL_VN         R0486 (#4b,#52,#01)
L0001: RTRUE           

Routine R0385, 0 locals

       JE              Ge9,#1b [FALSE] L0002
       JE              G2b,#10 [FALSE] L0001
       CALL_VN         R0486 (Geb,#005a,#02)
       RTRUE           
L0001: CALL_VN         R0486 (Geb,#005a,#01)
       RTRUE           
L0002: JE              Ge9,#17 [FALSE] L0004
       JE              G2b,#006e [FALSE] L0003
       CALL_VN         R0486 (Geb,#005a,#02)
       RTRUE           
L0003: CALL_VN         R0486 (Geb,#005a,#01)
       RTRUE           
       RFALSE          
L0004: JE              Ge9,#1f [FALSE] L0005
       RFALSE          
L0005: CALL_VN         R0486 (Geb,#005a,#01)
       RTRUE           

Routine R0386, 1 local

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S461
       GET_PROP        Geb,#29 -> -(SP)
       ADD             G08,(SP)+ -> G08
       CALL_2N         R0410 (#02)
       CALL_VN         R0135 (#28,#01)
       RTRUE           
L0001: JE              L00,#02 [FALSE] L0002
       PRINT_PADDR     S462
       JUMP            L0003
L0002: PRINT           "
Anyway,"
L0003: TEST_ATTR       "druid's hat",#0c [TRUE] L0004
       PRINT_PADDR     S463
       JUMP            L0005
L0004: PRINT_PADDR     S464
L0005: TEST_ATTR       "druid's hat",#0c [TRUE] L0006
       INSERT_OBJ      "druid's hat",G12
L0006: RANDOM          #03e8 -> -(SP)
       GET_PROP        Geb,#29 -> -(SP)
       ADD             G08,(SP)+ -> -(SP)
       ADD             (SP)+,#0fa0 -> -(SP)
       ADD             (SP)+,(SP)+ -> G08
       CALL_2N         R0410 (#02)
       CALL_VN         R0135 (#28,#01)
       RTRUE           

Routine R0387, 0 locals

       JE              Ge9,#1f [FALSE] L0001
       RFALSE          
L0001: CALL_VN         R0486 (Geb,#5a,#01)
       RTRUE           

Routine R0388, 1 local

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S466
       GET_PROP        Geb,#29 -> -(SP)
       ADD             G08,(SP)+ -> G08
       CALL_2N         R0410 (#01)
       CALL_VN         R0135 (#28,#01)
       RTRUE           
L0001: TEST_ATTR       "last lousy point stamp",#0c [TRUE] L0002
       PRINT_PADDR     S467
L0002: TEST_ATTR       "last lousy point stamp",#0c [TRUE] L0003
       INSERT_OBJ      "last lousy point stamp",G12
       JUMP            L0004
L0003: PRINT_PADDR     S468
L0004: RANDOM          #012c -> -(SP)
       GET_PROP        Geb,#29 -> -(SP)
       ADD             G08,(SP)+ -> -(SP)
       ADD             (SP)+,#0384 -> -(SP)
       ADD             (SP)+,(SP)+ -> G08
       CALL_2N         R0410 (#01)
       GET_PARENT      "How do I affix the stamp to something?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0005
       INSERT_OBJ      "How do I affix the stamp to something?","A few helpful
hints"
L0005: CALL_VN         R0135 (#28,#01)
       CALL_2N         R0147 (#0d)
       RTRUE           

Routine R0389, 0 locals

       JE              Ge9,#1f [FALSE] L0001
       RFALSE          
L0001: CALL_VN         R0486 (Geb,#5a,#01)
       RTRUE           

Routine R0390, 1 local

       JZ              L00 [FALSE] L0001
       PRINT_PADDR     S470
       GET_PROP        Geb,#29 -> -(SP)
       ADD             G08,(SP)+ -> G08
       CALL_2N         R0410 (#03)
       CALL_VN         R0135 (#28,#01)
       RTRUE           
L0001: TEST_ATTR       "*ROYAL HONEY*",#0c [TRUE] L0002
       PRINT_PADDR     S471
       JUMP            L0003
L0002: PRINT_PADDR     S472
L0003: TEST_ATTR       "*ROYAL HONEY*",#0c [TRUE] L0004
       INSERT_OBJ      "*ROYAL HONEY*",G12
L0004: RANDOM          #32 -> -(SP)
       GET_PROP        Geb,#29 -> -(SP)
       ADD             G08,(SP)+ -> -(SP)
       ADD             (SP)+,#c8 -> -(SP)
       ADD             (SP)+,(SP)+ -> G08
       CALL_2N         R0410 (#03)
       CALL_VN         R0135 (#28,#01)
       RTRUE           

Routine R0391, 0 locals

       PRINT_PADDR     S473
       TEST_ATTR       Geb,#0e [FALSE] L0001
       PRINT_PADDR     S474
       NEW_LINE        
       RTRUE           
L0001: PRINT           "
"
       RTRUE           

Routine R0392, 0 locals

       PRINT           "
A large cardboard box stands "
       TEST_ATTR       Geb,#0e [FALSE] L0001
       PRINT           "open"
       JUMP            L0002
L0001: PRINT           "waiting"
L0002: PRINT           " on the floor here"
       TEST_ATTR       Geb,#0e [TRUE] L0003
       PRINT           ".
"
       RTRUE           
L0003: PRINT_PADDR     S475
       RTRUE           

Routine R0393, 0 locals

       JE              Ge9,#28 [FALSE] L0001
       PRINT_PADDR     S476
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#1001 [FALSE] L0002
       PRINT_PADDR     S477
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#22 [FALSE] L0003
       CALL_VN         R0076 (#22,#0073)
       RTRUE           
L0003: JE              Ge9,#4c,#4b,#64 [FALSE] L0004
       PRINT_PADDR     S478
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#4e [FALSE] L0010
       GET_PARENT      G12 -> -(SP)
       TEST_ATTR       (SP)+,#14 [FALSE] L0005
       PRINT_PADDR     S479
       NEW_LINE        
       RTRUE           
L0005: JE              G00,#4d [FALSE] L0006
       JE              G2c,#08 [TRUE] L0007
L0006: JE              G00,#65 [FALSE] L0008
       JE              G2c,#09 [FALSE] L0008
L0007: PRINT_PADDR     S480
       NEW_LINE        
       RTRUE           
L0008: JE              G00,#2c [FALSE] L0009
       JE              G2c,#08 [FALSE] L0009
       PRINT_PADDR     S481
       NEW_LINE        
       RTRUE           
L0009: CALL_1N         R0235
       RTRUE           
L0010: JE              Ge9,#65 [FALSE] L0011
       CALL_VN         R0076 (#65,#0073)
       RTRUE           
L0011: JE              Ge9,#56,#17 [FALSE] L0014
       GET_PARENT      Geb -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0013
       PRINT_PADDR     S482
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,G00 [TRUE] L0012
       GET_PARENT      Geb -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ".
"
       RTRUE           
L0012: PRINT           "the floor.
"
       RTRUE           
L0013: PRINT_PADDR     S483
       NEW_LINE        
       RTRUE           
L0014: RFALSE          

Routine R0394, 0 locals

       JE              Ge9,#27 [FALSE] L0001
       PRINT_PADDR     S484
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4e [FALSE] L0002
       STORE           G89,#01
       PRINT_PADDR     S485
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0395, 0 locals

       JE              Ge9,#4c,#4b,#64 [FALSE] L0001
       PRINT_PADDR     S488
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#22 [FALSE] L0002
       CALL_VN         R0486 (Geb,#58)
       RTRUE           
L0002: JE              Ge9,#56,#17 [FALSE] L0003
       CALL_VN         R0076 (#56,#72)
       RTRUE           
L0003: JE              Ge9,#65 [FALSE] L0006
       GET_PARENT      "cardboard box" -> -(SP)
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0004
       CALL_VN         R0076 (#4c,Geb)
       RTRUE           
L0004: GET_PARENT      G12 -> -(SP)
       JE              (SP)+,#4b [FALSE] L0005
       PRINT           "(first tumbling off "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ")
"
       GET_PARENT      "Holly the cat" -> -(SP)
       INSERT_OBJ      G12,(SP)+
       CALL_VN         R0076 (#65,Geb)
       RTRUE           
L0005: CALL_VN         R0486 (Geb,#005b)
       RTRUE           
L0006: RFALSE          

Routine R0396, 0 locals

       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       PULL            Gef
       JE              Gef,#00 [FALSE] L0003
       PRINT_PADDR     S489
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#01 [FALSE] L0005
       PRINT_PADDR     S490
       INSERT_OBJ      "green disk",G12
       GET_PARENT      "How do I use these computer disks?" -> -(SP)
       JE              (SP)+,#0081 [FALSE] L0004
       INSERT_OBJ      "How do I use these computer disks?","A few helpful
hints"
L0004: RTRUE           
L0005: JE              Gef,#02 [FALSE] L0006
       PRINT_PADDR     S491
       INSERT_OBJ      "z-machine chip",G12
       RTRUE           
L0006: JE              Gef,#03 [FALSE] L0007
       PRINT_PADDR     S492
       INSERT_OBJ      "promotional leaflet",G12
       RTRUE           
L0007: RFALSE          

Routine R0397, 7 locals

       STORE           L02,#00
       STORE           L04,G12
L0001: GET_PARENT      L04 -> L04
       TEST_ATTR       L04,#14 [FALSE] L0002
       STORE           L02,#02
L0002: JE              L04,G00 [FALSE] L0003
       STORE           L02,#01
L0003: JZ              L02 [TRUE] L0001
       JE              L02,#01 [FALSE] L0004
       INSERT_OBJ      G12,G00
       CALL_VN         R0076 (#4c,Geb)
       RTRUE           
L0004: STORE           L01,#01
       GET_CHILD       G00 -> L03 [FALSE] L0005
L0005: STORE           L05,G00
       STORE           L06,#01
L0006: STORE           Gef,#00
       GET_CHILD       G00 -> -(SP) [FALSE] L0008
L0007: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0007
L0008: PULL            Gee
       PUSH            Gef
       JG              L06,(SP)+ [TRUE] L0016
       JG              L06,#01 [FALSE] L0009
       GET_SIBLING     L03 -> L03 [FALSE] L0009
L0009: JE              L03,L04 [FALSE] L0010
       JUMP            L0015
L0010: TEST_ATTR       L03,#14 [TRUE] L0011
       JUMP            L0015
L0011: STORE           L00,#01
       CALL_VS         R0491 (L03,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       STORE           L00,#02
L0012: CALL_VS         R0491 (L03,#23) -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       STORE           L00,#03
L0013: CALL_VS         R0491 (L03,#22) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       STORE           L00,#04
L0014: JG              L00,L01 [FALSE] L0015
       STORE           L01,L00
       STORE           L05,L03
L0015: INC             L06
       JUMP            L0006
L0016: PRINT_PADDR     S493
       JE              L01,#01 [FALSE] L0017
       PRINT           "the floor.
"
       INSERT_OBJ      G12,G00
       JUMP            L0018
L0017: CALL_2N         R0104 (L05)
       PRINT           ".
"
       INSERT_OBJ      G12,L05
L0018: CALL_2S         R0078 (#4b) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       TEST_ATTR       "Holly the cat",#1f [FALSE] L0019
       PRINT_PADDR     S494
       SET_ATTR        "Holly the cat",#08
L0019: JE              L05,#28 [FALSE] L0020
       CALL_2N         R0147 (#04)
L0020: RTRUE           

Routine R0398, 0 locals

       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#2a [FALSE] L0001
       PRINT_PADDR     S495
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S496
       NEW_LINE        
       RTRUE           

Routine R0399, 0 locals

       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#2a [FALSE] L0001
       PRINT_PADDR     S497
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S498
       NEW_LINE        
       RTRUE           

Routine R0400, 0 locals

       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Welcome to Interactive Fiction"
       SET_TEXT_STYLE  ROMAN
       PRINT_PADDR     S499
       RTRUE           

Routine R0401, 0 locals

       CALL_1N         R0402
       STORE           G00,#45
       INSERT_OBJ      "night shirt",G12
       CALL_2N         R0090 (#4b)
       CALL_2N         R0090 (#33)
       PUT_PROP        G12,#1d,#3e77
       PUT_PROP        "(darkness object)",#23,#3e74
       CALL_2N         R0090 (#29)
       PUT_PROP        G12,#23,S500
       PUT_PROP        G12,#04,#3ee8
       PRINT_RET       "

"

Routine R0402, 1 local

       ERASE_WINDOW    #ffff
       PRINT           "


"
       PRINT_PADDR     S501
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       PRINT_PADDR     S502
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       CALL_VS         R0482 (#24,#2b42) -> Gef
L0001: READ_CHAR       #01,#00,#00 -> L00
       JE              L00,#20,#0a,#0d [FALSE] L0001
       ERASE_WINDOW    #ffff
       RTRUE           

Routine R0403, 0 locals

       CALL_2N         R0411 (#05)
       PRINT_PADDR     S508
       NEW_LINE        
       RTRUE           

Routine R0404, 1 local

       JE              Ge9,#1f [FALSE] L0001
       RFALSE          
L0001: JE              Ge9,#1b [FALSE] L0003
       GET_PARENT      G12 -> -(SP)
       TEST_ATTR       (SP)+,#14 [FALSE] L0002
       JE              G2b,#10 [FALSE] L0002
       CALL_2N         R0076 (#19)
       RTRUE           
L0002: RFALSE          
L0003: JE              Ge9,#10 [FALSE] L0005
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,#4b [FALSE] RFALSE
       GET_PARENT      "Holly the cat" -> -(SP)
       INSERT_OBJ      G2b,(SP)+
       CALL_2N         R0105 (G2b)
       PRINT           " slides off the calico fur.
"
       JE              G2b,#61 [FALSE] L0004
       TEST_ATTR       "MessageMate (tm) dictaphone",#08 [FALSE] L0004
       PRINT_PADDR     S509
       CLEAR_ATTR      "MessageMate (tm) dictaphone",#08
       RTRUE           
L0004: RTRUE           
L0005: JE              Ge9,#58 [FALSE] L0023
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#45 [TRUE] L0006
       GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#40 [FALSE] RFALSE
L0006: TEST_ATTR       "green jacket",#1a [FALSE] L0007
       PRINT           "Taking off your jacket, you"
       JUMP            L0008
L0007: PRINT           "You"
L0008: PRINT_PADDR     S510
       GET_PARENT      "honey jar" -> -(SP)
       JE              (SP)+,#51 [TRUE] L0009
       PUSH            #00
       JUMP            L0010
L0009: PUSH            #01
L0010: GET_PARENT      "last lousy point stamp" -> -(SP)
       JE              (SP)+,#5f [TRUE] L0011
       PUSH            #00
       JUMP            L0012
L0011: PUSH            #01
L0012: MUL             #02,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> L00
       TEST_ATTR       "reply card",#0c [TRUE] L0013
       PRINT_PADDR     S511
       STORE           G13,#03
       RTRUE           
L0013: PRINT_PADDR     S512
       TEST_ATTR       "baguette",#08 [FALSE] L0014
       PRINT           " (with a small chunk missing)"
L0014: CALL_VS         R0153 (#51,#52) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       PRINT_PADDR     S513
       JUMP            L0016
L0015: PRINT           " and the reply card eventually,"
L0016: STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0018
       PRINT_PADDR     S514
       GET_PARENT      "honey jar" -> -(SP)
       JE              (SP)+,#4f [FALSE] L0017
       PRINT_PADDR     S515
L0017: PRINT_PADDR     S516
       STORE           G13,#04
       RTRUE           
L0018: JE              Gef,#01 [FALSE] L0019
       PRINT_PADDR     S517
       STORE           G13,#05
       RTRUE           
L0019: JE              Gef,#02 [FALSE] L0021
       PRINT_PADDR     S518
       GET_PARENT      "honey jar" -> -(SP)
       JE              (SP)+,#4f [FALSE] L0020
       PRINT_PADDR     S519
L0020: PRINT_PADDR     S520
       STORE           G13,#05
       RTRUE           
L0021: JE              Gef,#03 [FALSE] L0022
       PRINT_PADDR     S521
       STORE           G13,#02
       RTRUE           
L0022: RTRUE           
L0023: JE              Ge9,#4a [FALSE] L0026
       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JE              G2b,#2d [TRUE] L0024
       CALL_VN         R0486 (G00,#5a,#01)
       RTRUE           
L0024: TEST_ATTR       "Holly the cat",#1f [TRUE] L0025
       CALL_VN         R0486 (G00,#5a,#01)
       RTRUE           
L0025: CALL_VN         R0486 (#4b,#52,#00)
       RTRUE           
L0026: JE              Ge9,#62 [FALSE] L0029
       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JE              G2b,#34 [TRUE] L0027
       CALL_VN         R0486 (G00,#5a,#01)
       RTRUE           
L0027: TEST_ATTR       "Holly the cat",#1f [TRUE] L0028
       CALL_VN         R0486 (G00,#5a,#01)
       RTRUE           
L0028: CALL_VN         R0486 (#4b,#52,#00)
       RTRUE           
L0029: CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0030
       CALL_VN         R0486 (G00,#5a,#01)
       RTRUE           
L0030: RFALSE          

Routine R0405, 0 locals

       JE              Ge9,#4a,#64,#62 [TRUE] L0001
       JE              Ge9,#4c,#4b,#4d [TRUE] L0001
       JE              Ge9,#24,#27,#13 [TRUE] L0001
       JE              Ge9,#45 [FALSE] L0002
L0001: PRINT_PADDR     S522
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#42,#2e,#39 [FALSE] L0003
       PRINT_PADDR     S523
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#25,#26 [FALSE] L0004
       PRINT_PADDR     S524
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#4f [FALSE] L0005
       PRINT_PADDR     S525
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#2b,#36,#37 [TRUE] L0006
       JE              Ge9,#34,#35,#46 [FALSE] L0007
L0006: PRINT_RET       "Is there a point to this?"
L0007: JE              Ge9,#12 [FALSE] L0010
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,G2c [FALSE] L0008
       PRINT           "You are already on "
       CALL_2N         R0104 (G2c)
       PRINT_RET       "."
L0008: TEST_ATTR       G2c,#14 [FALSE] L0009
       PRINT_PADDR     S526
       NEW_LINE        
       RTRUE           
L0009: PRINT_RET       "That sounds like quite a feat."
L0010: JE              Ge9,#4e [FALSE] L0011
       PRINT_PADDR     S527
       NEW_LINE        
       RTRUE           
L0011: RFALSE          

Routine R0406, 0 locals

       STORE           Gef,G13
       JE              Gef,#03 [FALSE] L0001
       PRINT           "You have missed out"
       RTRUE           
L0001: JE              Gef,#04 [FALSE] L0002
       PRINT           "You have not thought ahead"
       RTRUE           
L0002: JE              Gef,#05 [FALSE] L0003
       PRINT           "You have underprepared"
       RTRUE           
L0003: RTRUE           

Routine R0407, 1 local

       GET_PARENT      "How do I use these computer disks?" -> -(SP)
       JE              (SP)+,#0082 [TRUE] L0001
       INSERT_OBJ      "How do I use these computer disks?","Never access this
either"
L0001: ERASE_WINDOW    #ffff
       GET_PARENT      "blue disk" -> -(SP)
       JE              (SP)+,#2a [FALSE] L0002
       PUT_PROP        "Attic",#29,G08
       STORE           G08,L00
       PRINT_PADDR     S528
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "

CURSES"
       SET_TEXT_STYLE  ROMAN
       PRINT_PADDR     S529
       CALL_VN         R0135 (#69,#00)
       RTRUE           
L0002: GET_PARENT      "black disk" -> -(SP)
       JE              (SP)+,#2a [FALSE] L0004
       PUT_PROP        "West of House",#29,G08
       STORE           G08,L00
       PRINT_PADDR     S530
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,#28 [FALSE] L0003
       TEST_ATTR       "Holly the cat",#1f [FALSE] L0003
       CALL_VN         R0486 (#4b,#52,#01)
L0003: CALL_VN         R0135 (#6a,#01)
       RTRUE           
L0004: PUT_PROP        "Forest",#29,G08
       STORE           G08,L00
       PRINT_PADDR     S531
       GET_PARENT      "Holly the cat" -> -(SP)
       JE              (SP)+,#28 [FALSE] L0005
       TEST_ATTR       "Holly the cat",#1f [FALSE] L0005
       CALL_VN         R0486 (#4b,#52,#01)
L0005: CALL_VN         R0135 (#6b,#01)
       RTRUE           

Routine R0408, 1 local

       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0001
       PRINT           "`Ting-a-ling.'
"
       JUMP            L0046
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT_PADDR     S532
       JUMP            L0046
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT_PADDR     S533
       JUMP            L0046
L0003: JE              Gef,#04 [FALSE] L0004
       PRINT_PADDR     S534
       JUMP            L0046
L0004: JE              Gef,#05 [FALSE] L0005
       PRINT_PADDR     S535
       JUMP            L0046
L0005: JE              Gef,#06 [FALSE] L0006
       PRINT_PADDR     S536
       JUMP            L0046
L0006: JE              Gef,#07 [FALSE] L0007
       PRINT_PADDR     S537
       JUMP            L0046
L0007: JE              Gef,#08 [FALSE] L0008
       PRINT_PADDR     S538
       JUMP            L0046
L0008: JE              Gef,#09 [FALSE] L0009
       PRINT_PADDR     S539
       JUMP            L0046
L0009: JE              Gef,#0a [FALSE] L0010
       PRINT_PADDR     S540
       JUMP            L0046
L0010: JE              Gef,#0b [FALSE] L0011
       PRINT_PADDR     S541
       JUMP            L0046
L0011: JE              Gef,#0c [FALSE] L0012
       PRINT_PADDR     S542
       JUMP            L0046
L0012: JE              Gef,#0d,#0f [FALSE] L0013
       PRINT           "`xyzzyplughellosailor'
"
       JUMP            L0046
L0013: JE              Gef,#0e [FALSE] L0014
       PRINT           "`That password again...'
"
       JUMP            L0046
L0014: JE              Gef,#10 [FALSE] L0015
       PRINT_PADDR     S543
       JUMP            L0046
L0015: JE              Gef,#11 [FALSE] L0016
       PRINT           "`Beep.'
"
       JUMP            L0046
L0016: JE              Gef,#12 [FALSE] L0017
       PRINT           "`Ting-a-ling. Crash. Clatter.'
"
       JUMP            L0046
L0017: JE              Gef,#13 [FALSE] L0018
       PRINT_PADDR     S544
       JUMP            L0046
L0018: JE              Gef,#14 [FALSE] L0019
       PRINT_PADDR     S545
       JUMP            L0046
L0019: JE              Gef,#15 [FALSE] L0020
       PRINT_PADDR     S546
       JUMP            L0046
L0020: JE              Gef,#16 [FALSE] L0021
       PRINT_PADDR     S547
       JUMP            L0046
L0021: JE              Gef,#17 [FALSE] L0022
       PRINT_PADDR     S548
       JUMP            L0046
L0022: JE              Gef,#18 [FALSE] L0023
       PRINT_PADDR     S549
       JUMP            L0046
L0023: JE              Gef,#19 [FALSE] L0024
       PRINT_PADDR     S550
       JUMP            L0046
L0024: JE              Gef,#1a [FALSE] L0025
       PRINT_PADDR     S551
       JUMP            L0046
L0025: JE              Gef,#1b [FALSE] L0026
       PRINT_PADDR     S552
       JUMP            L0046
L0026: JE              Gef,#1c [FALSE] L0027
       PRINT_PADDR     S553
       JUMP            L0046
L0027: JE              Gef,#1d [FALSE] L0028
       PRINT_PADDR     S554
       JUMP            L0046
L0028: JE              Gef,#1e [FALSE] L0029
       PRINT_PADDR     S555
       JUMP            L0046
L0029: JE              Gef,#1f [FALSE] L0030
       PRINT_PADDR     S556
       JUMP            L0046
L0030: JE              Gef,#20 [FALSE] L0031
       PRINT_PADDR     S557
       JUMP            L0046
L0031: JE              Gef,#21 [FALSE] L0032
       PRINT_PADDR     S558
       JUMP            L0046
L0032: JE              Gef,#22 [FALSE] L0033
       PRINT_PADDR     S559
       JUMP            L0046
L0033: JE              Gef,#23 [FALSE] L0034
       PRINT_PADDR     S560
       JUMP            L0046
L0034: JE              Gef,#24 [FALSE] L0035
       PRINT_PADDR     S561
       JUMP            L0046
L0035: JE              Gef,#25 [FALSE] L0036
       PRINT_PADDR     S562
       JUMP            L0046
L0036: JE              Gef,#26 [FALSE] L0037
       PRINT           "`Clunk.'
"
       JUMP            L0046
L0037: JE              Gef,#27 [FALSE] L0038
       PRINT           "`Meow.'
"
       JUMP            L0046
L0038: JE              Gef,#28 [FALSE] L0039
       PRINT           "`Crash. Clatter.'
"
       JUMP            L0046
L0039: JE              Gef,#29 [FALSE] L0040
       PRINT           "`Clang!'
"
       JUMP            L0046
L0040: JE              Gef,#2a [FALSE] L0041
       PRINT_PADDR     S563
       JUMP            L0046
L0041: JE              Gef,#2b [FALSE] L0042
       PRINT_PADDR     S564
       JUMP            L0046
L0042: JE              Gef,#2c [FALSE] L0043
       PRINT_PADDR     S565
       JUMP            L0046
L0043: JE              Gef,#2d [FALSE] L0044
       PRINT           "`*Click*'
"
       JUMP            L0046
L0044: JE              Gef,#2e [FALSE] L0045
       PRINT           "`Squeak.'
"
       JUMP            L0046
L0045: PRINT_PADDR     S566
L0046: RFALSE          

Routine R0409, 1 local

       CALL_VS         R0153 (G00,#61) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       TEST_ATTR       "MessageMate (tm) dictaphone",#08 [FALSE] RFALSE
       PUT_PROP        "small tape",#29,L00
       PRINT_PADDR     S567
       CLEAR_ATTR      "MessageMate (tm) dictaphone",#08
       RFALSE          

Routine R0410, 1 local

       CLEAR_ATTR      "personal computer",#0d
       CLEAR_ATTR      "personal computer",#08
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0001
       INSERT_OBJ      "black disk","tall glass table"
       JUMP            L0003
L0001: JE              Gef,#02 [FALSE] L0002
       INSERT_OBJ      "blue disk","tall glass table"
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       INSERT_OBJ      "green disk","tall glass table"
L0003: PRINT_PADDR     S568
       NEW_LINE        
       RTRUE           

Routine R0411, 1 local

       LOADB           #2a9b,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       STOREB          #2a9b,L00,#01
       STORE           G85,L00
L0001: RTRUE           

Routine R0412, 0 locals

       JZ              G86 [TRUE] RFALSE
       STORE           Gef,G85
       JE              Gef,#00 [FALSE] L0001
       CALL_VS         R0482 (#1c,#2b4e) -> Gef
       JUMP            L0008
L0001: JE              Gef,#01 [FALSE] L0002
       CALL_VS         R0482 (#10,#2b5c) -> Gef
       JUMP            L0008
L0002: JE              Gef,#02 [FALSE] L0003
       CALL_VS         R0482 (#18,#2b64) -> Gef
       JUMP            L0008
L0003: JE              Gef,#03 [FALSE] L0004
       CALL_VS         R0482 (#1d,#2b6c) -> Gef
       JUMP            L0008
L0004: JE              Gef,#04 [FALSE] L0005
       CALL_VS         R0482 (#1b,#2b78) -> Gef
       JUMP            L0008
L0005: JE              Gef,#05 [FALSE] L0006
       CALL_VS         R0482 (#27,#2b88) -> Gef
       JUMP            L0008
L0006: JE              Gef,#06 [FALSE] L0007
       CALL_VS         R0482 (#25,#2b92) -> Gef
       JUMP            L0008
L0007: RFALSE          
L0008: STORE           G85,#ffff
       RTRUE           

Routine R0413, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S611
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT           "Try JUMP OFF BED."
L0002: RFALSE          

Routine R0414, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S612
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S613
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S614
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S615
L0004: RFALSE          

Routine R0415, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S616
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S617
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S618
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S619
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_PADDR     S620
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_PADDR     S621
       NEW_LINE        
       RTRUE           
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_PADDR     S622
       NEW_LINE        
       RTRUE           
L0007: JE              Gef,#07 [FALSE] L0008
       PRINT_PADDR     S623
       NEW_LINE        
       RTRUE           
L0008: JE              Gef,#08 [FALSE] L0009
       PRINT_PADDR     S624
L0009: RFALSE          

Routine R0416, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "Yes."
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S625
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "The drawer is not very sturdy."
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT           "PULL DRAWER when it is open."
L0004: RFALSE          

Routine R0417, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S626
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT           "HIT PIPE."
L0002: RFALSE          

Routine R0418, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "With a little amplification."
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S627
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S628
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S629
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_RET       "PULL CORD."
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_PADDR     S630
       NEW_LINE        
       RTRUE           
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_PADDR     S631
       NEW_LINE        
       RTRUE           
L0007: JE              Gef,#07 [FALSE] L0008
       PRINT_RET       "PUT TAPE IN DICTAPHONE"
L0008: JE              Gef,#08 [FALSE] L0009
       PRINT_PADDR     S632
L0009: RFALSE          

Routine R0419, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S633
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S634
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S635
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S636
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_PADDR     S637
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_RET       "The packing material."
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_PADDR     S638
L0007: RFALSE          

Routine R0420, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S639
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_RET       "ECHO also works."
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S640
L0003: RFALSE          

Routine R0421, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S641
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S642
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S643
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S644
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_PADDR     S645
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_PADDR     S646
L0006: RFALSE          

Routine R0422, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "None at all."
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S647
L0002: RFALSE          

Routine R0423, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "None at all."
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT           "But he did write this game."
L0002: RFALSE          

Routine R0424, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S648
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_RET       "Try a hardware upgrade."
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S649
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S650
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_PADDR     S651
L0005: RFALSE          

Routine R0425, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S652
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S653
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S654
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT           "SHOW STAMP TO HOLLY."
L0004: RFALSE          

Routine R0426, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "Did you dial for information?"
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_RET       "The last thing on the list."
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT           "SLEEP."
L0003: RFALSE          

Routine R0427, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S655
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S656
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S657
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_PADDR     S658
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_PADDR     S659
L0005: RFALSE          

Routine R0428, 0 locals

       CALL_VN         R0486 (#96,#4d)
       RTRUE           

Routine R0429, 0 locals
    Parsing routine for:
        "go noun = [parse $4104]"
        "leave noun = [parse $4104]"

       JIN             G2b,"compass" [TRUE] RTRUE
       RFALSE          

Routine R0430, 1 local

       STORE           G3d,G75
L0001: CALL_1S         R0057 -> L00
       JE              L00,#ffff [TRUE] L0002
       JE              L00,"to" [FALSE] L0001
       JE              G4f,#52 [FALSE] L0001
L0002: DEC             G75
       SUB             G75,G3d -> G3e
       JZ              G3e [FALSE] L0003
       RET             #ffff
L0003: JE              G4f,#53,#52,#51 [FALSE] L0005
       STORE           L00,G75
       STORE           G75,G3d
       CALL_1S         R0056 -> G3c
       JE              G3c,"the" [FALSE] L0004
       JG              G3e,#01 [FALSE] L0004
       CALL_1S         R0056 -> G3c
L0004: STORE           G75,L00
       RTRUE           
L0005: RFALSE          

Routine R0431, 0 locals

       RFALSE          

Routine R0432, 0 locals

       RFALSE          

Routine R0433, 0 locals

       RFALSE          

Routine R0434, 0 locals

       RFALSE          

Routine R0435, 0 locals

       RFALSE          

Routine R0436, 0 locals

       RFALSE          

Routine R0437, 0 locals

       RFALSE          

Routine R0438, 0 locals

       RFALSE          

Routine R0439, 1 local

       RFALSE          

Routine R0440, 1 local

       RFALSE          

Routine R0441, 1 local

       RFALSE          

Routine R0442, 1 local

       RFALSE          

Routine R0443, 1 local

       RFALSE          

Routine R0444, 2 locals

       RFALSE          

Routine R0445, 2 locals

       RFALSE          

Routine R0446, 1 local

       STORE           L00,L00
       RET             #ffff

Routine R0447, 0 locals
    Action routine for:
        "ride noun"

       PRINT_RET       "What a curious idea."

Routine R0448, 0 locals
    Action routine for:
        "play held"

       PRINT_PADDR     S668
       NEW_LINE        
       RTRUE           

Routine R0449, 0 locals
    Parsing routine for:
        "play noun = [parse $4131]"

       JIN             G2b,"MessageMate (tm) dictaphone" [TRUE] RTRUE
       RFALSE          

Routine R0450, 0 locals
    Action routine for:
        "play noun = [parse $4131]"

       PRINT_PADDR     S669
       NEW_LINE        
       RTRUE           

Routine R0451, 0 locals
    Action routine for:
        "play with ATTRIBUTE(0)"
        "play with ATTRIBUTE(19)"
        "play with held"

       PRINT           "Unlike you, "
       CALL_2N         R0104 (G2b)
       PRINT_RET       " is not a toy."

Routine R0452, 0 locals
    Action routine for:
        "pluck held"

       PRINT_PADDR     S670
       NEW_LINE        
       RTRUE           

Routine R0453, 0 locals
    Action routine for:
        "about"

       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0486 (G00,#5a,#01)
       RTRUE           
L0001: CALL_VN         R0486 (#77,#4d)
       RTRUE           

Routine R0454, 0 locals
    Action routine for:
        "quotes on"

       JE              G86,#01 [FALSE] L0001
       PRINT_RET       "Quotes are already switched on."
L0001: STORE           G86,#01
       PRINT_RET       "Quotes are now switched on."

Routine R0455, 0 locals
    Action routine for:
        "quotes off"

       JZ              G86 [FALSE] L0001
       PRINT_RET       "Quotes are already switched off."
L0001: STORE           G86,#00
       PRINT_RET       "Quotes are now switched off."

Routine R0456, 0 locals
    Action routine for:
        "quotes"

       JE              G86,#01 [FALSE] L0001
       CALL_2N         R0076 (#6e)
       RTRUE           
L0001: CALL_2N         R0076 (#6f)
       RTRUE           

Routine R0457, 0 locals
    Action routine for:
        "affix held to noun"
        "affix held on noun"

       PRINT_RET       "That won't achieve a great deal."

Routine R0458, 0 locals
    Action routine for:
        "lick noun"

       PRINT_PADDR     S671
       NEW_LINE        
       RTRUE           

Routine R0459, 0 locals
    Action routine for:
        "dial"

       PRINT_RET       "Try dialling a number."

Routine R0460, 0 locals
    Action routine for:
        "dial number on noun" REVERSE

       JE              G2b,#58 [FALSE] L0001
       CALL_VN         R0486 (#58,#56,G2c)
       RTRUE           
L0001: CALL_2N         R0105 (G2b)
       PRINT_PADDR     S672
       NEW_LINE        
       RTRUE           

Routine R0461, 0 locals
    Action routine for:
        "dial number"

       CALL_2S         R0078 (#58) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S673
       NEW_LINE        
       RTRUE           
L0001: PRINT           "(on the telephone)
"
       CALL_VN         R0076 (#61,#58,G2b)
       RTRUE           

Routine R0462, 0 locals
    Action routine for:
        "hang up noun"

       CALL_2N         R0105 (G2b)
       PRINT_PADDR     S674
       NEW_LINE        
       RTRUE           

Routine R0463, 0 locals
    Action routine for:
        "hop on to noun"
        "hop on noun"
        "hop onto noun"

       TEST_ATTR       G2b,#14 [FALSE] L0001
       CALL_VN         R0076 (#56,G2b)
       RTRUE           
L0001: PRINT_RET       "What a curious idea."

Routine R0464, 0 locals
    Action routine for:
        "waylay noun"

       PRINT           "(jumping on then attacking "
       CALL_2N         R0104 (G2b)
       PRINT           ")

Jump on: "
       CALL_VN         R0076 (#65,G2b)
       PRINT           "
Attack: "
       CALL_VN         R0076 (#42,G2b)
       RTRUE           

Routine R0465, 0 locals
    Action routine for:
        "attack noun with held"

       PRINT           "(throwing "
       CALL_2N         R0104 (G2c)
       PRINT           " at "
       CALL_2N         R0104 (G2b)
       PRINT           ")
"
       CALL_VN         R0076 (#50,G2c,G2b)
       RTRUE           

Routine R0466, 0 locals
    Action routine for:
        "diagnose"
        "diagnose me"

       JG              G0d,#1e [FALSE] L0001
       PRINT_PADDR     S675
       NEW_LINE        
       RTRUE           
L0001: PRINT           "You are wide awake"
       TEST_ATTR       "green jacket",#1a [FALSE] L0002
       PRINT_RET       "."
L0002: PRINT_RET       ", if a little chilly."

Routine R0467, 0 locals
    Action routine for:
        "diagnose noun"

       PRINT_PADDR     S676
       NEW_LINE        
       RTRUE           

Routine R0468, 0 locals
    Action routine for:
        "away"
        "hello sailor"

       CALL_2N         R0411 (#06)
       PRINT_PADDR     S677
       NEW_LINE        
       RTRUE           

Routine R0469, 0 locals
    Action routine for:
        "frotz noun"

       CALL_2N         R0411 (#06)
       PRINT_PADDR     S678
       NEW_LINE        
       RTRUE           

Routine R0470, 0 locals
    Action routine for:
        "rezrov noun"

       TEST_ATTR       G2b,#0b [TRUE] L0001
       CALL_2N         R0076 (#77)
       RTRUE           
L0001: CALL_2N         R0411 (#06)
       PRINT_PADDR     S679
       NEW_LINE        
       RTRUE           

Routine R0471, 0 locals
    Action routine for:
        "vaxum noun"

       JE              G2b,#42,#43,#4b [TRUE] L0001
       JE              G2b,#47 [FALSE] L0002
L0001: CALL_2N         R0411 (#06)
       CALL_2N         R0105 (G2b)
       PRINT_RET       " is already your friend."
L0002: CALL_2N         R0076 (#77)
       RTRUE           

Routine R0472, 0 locals
    Action routine for:
        "greetings"
        "hello"

       PRINT_PADDR     S680
       NEW_LINE        
       RTRUE           

Routine R0473, 0 locals
    Action routine for:
        "greetings ATTRIBUTE(0)"
        "hello ATTRIBUTE(0)"

       CALL_VN         R0076 (#51,G2b,G12)
       RTRUE           

Routine R0474, 0 locals
    Action routine for:
        "unplug noun"

       JE              G2b,#55 [FALSE] L0001
       CALL_VN         R0076 (#0f,#55)
       RTRUE           
L0001: JE              G2b,#2a,#58,#59 [TRUE] L0002
       JE              G2b,#4c [FALSE] L0003
L0002: PRINT_PADDR     S681
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S682
       NEW_LINE        
       RTRUE           

Routine R0475, 0 locals
    Action routine for:
        "score"

       JE              G00,#69 [FALSE] L0002
       PRINT_PADDR     S683
       PRINT_NUM       G08
       PRINT           " turn"
       JG              G08,#01 [FALSE] L0001
       PRINT           "s"
L0001: PRINT_PADDR     S684
       RFALSE          
L0002: JE              G00,#6a [FALSE] L0004
       PRINT_PADDR     S685
       PRINT_NUM       G08
       PRINT           " move"
       JG              G08,#01 [FALSE] L0003
       PRINT           "s"
L0003: PRINT_PADDR     S686
       RFALSE          
L0004: JE              G00,#6b [FALSE] L0005
       PRINT_PADDR     S687
       RFALSE          
L0005: CALL_2N         R0244 (#0c)
       CALL_1N         R0478
       RTRUE           

Routine R0476, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "for kindness to kittens"
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_RET       "for password playback"
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "for gastronomical gymnastics"
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_RET       "for constructive campanology"
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_RET       "for advanced aviation"
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_RET       "for matching millinery"
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_RET       "for silicon surgery"
L0007: JE              Gef,#07 [FALSE] L0008
       PRINT_RET       "for amateur archeology"
L0008: JE              Gef,#08 [FALSE] L0010
       GET_PROP        "last lousy point stamp",#29 -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       PRINT_RET       "for feline philately"
L0009: PRINT_RET       "for aqueous adhesion"
L0010: JE              Gef,#09 [FALSE] L0011
       PRINT_RET       "for furry fashion"
L0011: JE              Gef,#0a [FALSE] L0012
       PRINT_RET       "for paper pile perusal"
L0012: JE              Gef,#0b [FALSE] L0013
       PRINT_RET       "for moving machinery"
L0013: JE              Gef,#0c [FALSE] L0014
       PRINT_RET       "for drawer derailment"
L0014: JE              Gef,#0d [FALSE] L0015
       PRINT_RET       "last lousy point"
L0015: RTRUE           

Routine R0477, 1 local
    Action routine for:
        "full"
        "full score"

       CALL_1N         R0475
       JZ              G0d [TRUE] RFALSE
       JZ              #00 [FALSE] RFALSE
       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       NEW_LINE        
       CALL_VN         R0244 (#0d,#01)
       STORE           L00,#00
L0001: JL              L00,#0e [FALSE] L0003
       LOADB           #2aa5,L00 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       LOADB           #2a8d,L00 -> -(SP)
       CALL_2N         R0148 ((SP)+)
       CALL_2N         R0476 (L00)
L0002: INC             L00
       JUMP            L0001
L0003: JZ              G11 [TRUE] L0004
       CALL_2N         R0148 (G11)
       CALL_VN         R0244 (#0d,#02)
L0004: JZ              G10 [TRUE] L0005
       CALL_2N         R0148 (G10)
       CALL_VN         R0244 (#0d,#03)
L0005: NEW_LINE        
       CALL_2N         R0148 (G0d)
       CALL_VN         R0244 (#0d,#04)
       RTRUE           

Routine R0478, 0 locals

       PRINT           ", giving you the rank of "
       STORE           Gef,G0d
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "tv related merchandise."
L0001: JL              Gef,#01 [TRUE] L0002
       JG              Gef,#05 [TRUE] L0002
       PRINT_RET       "marketing fad."
L0002: JL              Gef,#06 [TRUE] L0003
       JG              Gef,#0b [TRUE] L0003
       PRINT_RET       "birthday present."
L0003: JL              Gef,#0c [TRUE] L0004
       JG              Gef,#12 [TRUE] L0004
       PRINT_RET       "security blanket."
L0004: JL              Gef,#13 [TRUE] L0005
       JG              Gef,#18 [TRUE] L0005
       PRINT_RET       "childhood friend."
L0005: JL              Gef,#19 [TRUE] L0006
       JG              Gef,#1e [TRUE] L0006
       PRINT_RET       "family heirloom."
L0006: JL              Gef,#1f [TRUE] L0008
       JG              Gef,#21 [TRUE] L0008
       PRINT           "lifelong companion."
       JE              G13,#02 [TRUE] L0007
       PRINT_PADDR     S688
       NEW_LINE        
       RTRUE           
L0007: PRINT           "
"
       RTRUE           
L0008: RTRUE           

Routine R0479, 3 locals

       JE              G00,#6b [FALSE] L0001
       RTRUE           
L0001: LOADB           #00,#21 -> L00
       JE              G00,#69 [FALSE] L0009
       SPLIT_WINDOW    #02
       SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       SUB             L00,#23 -> L01
       SUB             L00,#10 -> L02
       JL              L00,#3c [FALSE] L0002
       SUB             L00,#14 -> L01
       SUB             L00,#0a -> L02
L0002: STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0004
L0003: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0003
L0004: SET_CURSOR      #02,#01
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0006
L0005: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0005
L0006: SET_CURSOR      #01,#02
       CALL_2N         R0106 (G00)
       SET_CURSOR      #01,L01
       PRINT           "Score: 0"
       SET_CURSOR      #02,#02
       PRINT           "(in Meldrew Hall)"
       SET_CURSOR      #02,L01
       PRINT           "Turns: "
       PRINT_NUM       G02
       SET_CURSOR      #02,L02
       JL              L00,#3c [FALSE] L0007
       PRINT           "1993"
       JUMP            L0008
L0007: PRINT           "June 3rd, 1993"
L0008: SET_CURSOR      #01,#01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       RTRUE           
L0009: JE              G00,#6a [FALSE] L0014
       SPLIT_WINDOW    #01
       SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       SUB             L00,#1a -> L01
       SUB             L00,#0d -> L02
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0011
L0010: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0010
L0011: SET_CURSOR      #01,#02
       CALL_2N         R0106 (G00)
       JG              L00,#4c [FALSE] L0012
       SET_CURSOR      #01,L01
       PRINT           "Score: 0"
       SET_CURSOR      #01,L02
       PRINT           "Moves: "
       PRINT_NUM       G02
L0012: JG              L00,#3f [FALSE] L0013
       JG              L00,#4c [TRUE] L0013
       SET_CURSOR      #01,L02
       PRINT           "0/"
       PRINT_NUM       G02
L0013: SET_CURSOR      #01,#01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       RTRUE           
L0014: SPLIT_WINDOW    #02
       SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       SUB             L00,#10 -> L02
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0016
L0015: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0015
L0016: SET_CURSOR      #02,#01
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0018
L0017: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0017
L0018: SET_CURSOR      #01,#02
       CALL_2N         R0106 (G00)
       SET_CURSOR      #01,L02
       PRINT           "Score: "
       PRINT_NUM       G01
       GET_PARENT      G12 -> -(SP)
       JE              (SP)+,G00 [TRUE] L0020
       JE              G00,#13 [TRUE] L0020
       SET_CURSOR      #02,#02
       GET_PARENT      G12 -> -(SP)
       TEST_ATTR       (SP)+,#14 [FALSE] L0019
       PRINT           "(on "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ")"
       JUMP            L0020
L0019: PRINT           "(in "
       GET_PARENT      G12 -> -(SP)
       CALL_2N         R0104 ((SP)+)
       PRINT           ")"
L0020: SET_CURSOR      #02,L02
       PRINT           "Moves: "
       PRINT_NUM       G02
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       RTRUE           

Routine R0480, 0 locals
    Action routine for:
        "die"

       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0486 (G00,#5a,#00)
       RTRUE           
L0001: CALL_VN         R0244 (#01,#02)
       CALL_1S         R0137 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       QUIT            
L0002: RTRUE           

Routine R0481, 0 locals
    Action routine for:
        "save"

       CALL_VS         R0491 (G00,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "
Disk Error: "
       JE              G00,#6a [FALSE] L0001
       PRINT           "Dungeon"
L0001: JE              G00,#69 [FALSE] L0002
       PRINT           "Curses"
L0002: JE              G00,#6b [FALSE] L0003
       PRINT           "Adventureland"
L0003: PRINT           " game disk is write protected.
"
       SET_TEXT_STYLE  ROMAN
       CALL_VN         R0486 (G00,#5a,#01)
       RTRUE           
L0004: SAVE            -> Gef
       JZ              Gef [FALSE] L0005
       CALL_VS         R0244 (#04,#01) -> -(SP)
       RET_POPPED      
L0005: CALL_VN         R0244 (#04,#02)
       RTRUE           

Routine R0482, 8 locals

       LOADW           L01,#00 -> L02
       ADD             L02,#06 -> -(SP)
       SPLIT_WINDOW    (SP)+
       SET_WINDOW      #01
       LOADB           #00,#21 -> L03
       JZ              L03 [FALSE] L0001
       STORE           L03,#50
L0001: SUB             L03,L00 -> -(SP)
       DIV             (SP)+,#02 -> L04
       SET_TEXT_STYLE  REVERSE
       SUB             L04,#02 -> L03
       STORE           L05,#05
       STORE           L06,#01
       SET_CURSOR      #04,L03
       ADD             L00,#04 -> -(SP)
       PULL            Gef
       JL              Gef,#01 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: SET_CURSOR      L05,L03
       ADD             L00,#04 -> -(SP)
       PULL            Gef
       JL              Gef,#01 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: SET_CURSOR      L05,L04
       LOADW           L01,L06 -> L07
       JZ              L07 [TRUE] L0006
       PRINT_PADDR     L07
L0006: INC             L05
       INC             L06
       JG              L06,L02 [FALSE] L0003
       SET_CURSOR      L05,L03
       ADD             L00,#04 -> -(SP)
       PULL            Gef
       JL              Gef,#01 [TRUE] L0008
L0007: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0007
L0008: BUFFER_MODE     #01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       SPLIT_WINDOW    #01
       OUTPUT_STREAM   #ffff
       PRINT           "[ "
       STORE           L06,#01
L0009: LOADW           L01,L06 -> L03
       JZ              L03 [TRUE] L0010
       PRINT_PADDR     L03
L0010: INC             L06
       JG              L06,L02 [FALSE] L0011
       PRINT           "]

"
       JUMP            L0012
L0011: PRINT           "
  "
       JZ              #00 [TRUE] L0009
L0012: OUTPUT_STREAM   OUTPUT_ENABLE
       RTRUE           

Routine R0483, 5 locals

       AND             L00,#c000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L00,#ff -> -(SP)
       LOADW           #1b32,(SP)+ -> L03
       CALL_2N         R0106 (L03)
       PRINT           "::"
       AND             L00,#8000 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       AND             L00,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       JUMP            L0004
L0001: AND             L00,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       GET_PROP        L03,#03 -> L04
L0002: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JG              L00,#00 [FALSE] L0003
       LOADB           L04,#02 -> -(SP)
       ADD             L04,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L04
       DEC             L00
       JUMP            L0002
L0003: LOADW           L04,#00 -> -(SP)
       AND             (SP)+,#7fff -> L00
L0004: STORE           L01,#1b52
       LOADW           L01,#00 -> L02
       JG              L00,#00 [FALSE] L0005
       JL              L00,L02 [FALSE] L0005
       LOADW           L01,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0005: PRINT           "<number "
       PRINT_NUM       L00
       PRINT           ">"
       JUMP            L0007
L0006: LOADW           L01,L00 -> -(SP)
       PRINT_PADDR     (SP)+
L0007: RTRUE           

Routine R0484, 4 locals

       CALL_VS         R0488 (L00,L01) -> L03
       JZ              L03 [FALSE] L0001
       CALL_VN         R0493 (S689,L00,L01)
       RTRUE           
L0001: STOREW          L03,#00,L02
       RTRUE           

Routine R0485, 3 locals

       CALL_VS         R0488 (L00,L01) -> L02
       JZ              L02 [FALSE] L0002
       JL              L01,#01 [TRUE] L0001
       JL              L01,#40 [FALSE] L0001
       GET_PROP        L00,L01 -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0493 (S690,L00,L01)
       RTRUE           
L0002: LOADW           L02,#00 -> -(SP)
       RET_POPPED      

Routine R0486, 15 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #019a,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0007
L0001: CALL_2S         R0494 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0003
       JE              L01,#45 [FALSE] L0002
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           Ge9,G28
       CALL_VS2        L00 (L02,L03,L04,L05,L06,L07) -> L08
       STORE           Geb,Gea
       STORE           Gea,L0b
       RET             L08
L0002: JUMP            L0014
L0003: JE              Gef,#03 [FALSE] L0006
       JE              L01,#46 [FALSE] L0004
       PRINT_PADDR     L00
       RTRUE           
L0004: JE              L01,#47 [FALSE] L0005
       OUTPUT_STREAM   REDIRECT_ENABLE,L02
       PRINT_PADDR     L00
       OUTPUT_STREAM   #fffd
       LOADW           L02,#00 -> -(SP)
       RET_POPPED      
L0005: JUMP            L0014
L0006: JUMP            L0014
L0007: CHECK_ARG_COUNT #03 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #04 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #05 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #06 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #07 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #08 [FALSE] L0008
       INC             L09
L0008: JL              L01,#00 [TRUE] L0012
       JL              L01,#40 [FALSE] L0012
       GET_PROP_ADDR   L00,L01 -> L08
       JZ              L08 [FALSE] L0009
       STORE           L0d,#02
       JUMP            L0011
L0009: GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0010
       GET_PROP_LEN    Gef -> Gef
L0010: STORE           L0d,Gef
L0011: JUMP            L0016
L0012: JL              L01,#40 [TRUE] L0013
       JL              L01,#45 [FALSE] L0013
       JIN             L00,"Class" [FALSE] L0013
       CALL_VS2        R0498 (L00,L01,L02,L03) -> -(SP)
       RET_POPPED      
L0013: CALL_VS         R0488 (L00,L01) -> L08
       JZ              L08 [FALSE] L0015
L0014: CALL_VN         R0493 (S691,L00,L01)
       RTRUE           
L0015: SUB             L08,#01 -> -(SP)
       LOADB           #00,(SP)+ -> L0d
L0016: MUL             #02,L0e -> -(SP)
       JL              (SP)+,L0d [FALSE] L0030
       LOADW           L08,L0e -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       LOADW           L08,L0e -> -(SP)
       CALL_2S         R0494 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0027
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           L0c,Ge9
       JE              L01,#06 [FALSE] L0017
       STORE           Ge9,G2e
       JUMP            L0018
L0017: STORE           Ge9,G28
L0018: STORE           Gef,L09
       JE              Gef,#00 [FALSE] L0019
       LOADW           L08,L0e -> -(SP)
       CALL_1S         (SP)+ -> L0a
       JUMP            L0025
L0019: JE              Gef,#01 [FALSE] L0020
       LOADW           L08,L0e -> -(SP)
       CALL_2S         (SP)+ (L02) -> L0a
       JUMP            L0025
L0020: JE              Gef,#02 [FALSE] L0021
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03) -> L0a
       JUMP            L0025
L0021: JE              Gef,#03 [FALSE] L0022
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03,L04) -> L0a
       JUMP            L0025
L0022: JE              Gef,#04 [FALSE] L0023
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05) -> L0a
       JUMP            L0025
L0023: JE              Gef,#05 [FALSE] L0024
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06) -> L0a
       JUMP            L0025
L0024: JE              Gef,#06 [FALSE] L0025
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06,L07) -> L0a
L0025: STORE           Geb,Gea
       STORE           Gea,L0b
       STORE           Ge9,L0c
       JZ              L0a [TRUE] L0026
       RET             L0a
L0026: JUMP            L0029
L0027: JE              Gef,#03 [FALSE] L0028
       LOADW           L08,L0e -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       RTRUE           
L0028: LOADW           L08,L0e -> -(SP)
       RET_POPPED      
L0029: INC             L0e
       JUMP            L0016
L0030: RFALSE          

Routine R0487, 3 locals

       CALL_VS         R0488 (L00,L01) -> L02
       JZ              L02 [FALSE] L0001
       CALL_VN         R0493 (S692,L00,L01)
       RTRUE           
L0001: STORE           Gef,L02
       STORE           Gee,#00
       LOADW           Gef,Gee -> Ged
       PUSH            Ged
       INC             Ged
       STOREW          Gef,Gee,Ged
       RET_POPPED      

Routine R0488, 5 locals

       JL              L01,#40 [FALSE] L0001
       JG              L01,#00 [FALSE] L0001
       GET_PROP_ADDR   L00,L01 -> -(SP)
       RET_POPPED      
L0001: AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L01,#ff -> -(SP)
       LOADW           #1b32,(SP)+ -> L04
       GET_PROP_ADDR   L04,#03 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0491 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       AND             L01,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       GET_PROP        L04,#03 -> L02
L0002: JG              L01,#00 [FALSE] L0003
       DEC             L01
       LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0002
L0003: ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0004: AND             L01,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#ff -> -(SP)
       LOADW           #1b32,(SP)+ -> L04
       AND             L01,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       CALL_VS         R0491 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       LOADW           #00,#05 -> L02
       JE              L04,#02 [FALSE] L0005
       MUL             #02,L01 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       SUB             (SP)+,#02 -> -(SP)
       RET_POPPED      
L0005: MUL             L04,#0e -> -(SP)
       ADD             L02,#7c -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       LOADW           #00,(SP)+ -> L02
       LOADB           #00,L02 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0497 ((SP)+,#ffff) -> -(SP)
       ADD             (SP)+,#06 -> L02
       CALL_VS         R0497 (L02,L01) -> -(SP)
       RET_POPPED      
L0006: GET_PROP_ADDR   L00,#03 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JIN             L00,"Class" [FALSE] L0007
       JL              L01,#40 [TRUE] RFALSE
       JL              L01,#48 [FALSE] RFALSE
L0007: JE              Geb,L00 [FALSE] L0008
       OR              L01,#8000 -> L03
L0008: GET_PROP        L00,#03 -> L02
L0009: LOADW           L02,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       LOADW           L02,#00 -> -(SP)
       JE              (SP)+,L01,L03 [FALSE] L0010
       ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0010: LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0009
L0011: RFALSE          

Routine R0489, 3 locals

       JL              L01,#40 [FALSE] L0002
       JG              L01,#00 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       RET_POPPED      
L0002: CALL_VS         R0488 (L00,L01) -> L02
       JZ              L02 [TRUE] RFALSE
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       RET_POPPED      

Routine R0490, 2 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #019a,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0004
L0001: JE              L01,#46,#47,#45 [FALSE] RFALSE
       CALL_2S         R0494 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0002
       JE              L01,#45 [TRUE] RTRUE
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       JE              L01,#46,#47 [TRUE] RTRUE
L0003: RFALSE          
L0004: JL              L01,#40 [FALSE] L0005
       GET_PROP_ADDR   L00,L01 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          
L0005: CALL_VS         R0488 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JL              L01,#48 [FALSE] L0006
       JIN             L00,"Class" [TRUE] RTRUE
L0006: RFALSE          

Routine R0491, 5 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #019a,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0002
L0001: JE              L01,#03,#04 [FALSE] RFALSE
       SUB             L01,#01 -> -(SP)
       CALL_2S         R0494 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] RTRUE
       RFALSE          
L0002: STORE           Gef,L01
       JE              Gef,#01 [FALSE] L0003
       JG              L00,#04 [FALSE] RTRUE
       JIN             L00,"Class" [TRUE] RTRUE
       RFALSE          
L0003: JE              Gef,#02 [FALSE] L0004
       JG              L00,#04 [FALSE] RFALSE
       JIN             L00,"Class" [TRUE] RFALSE
       RTRUE           
L0004: JE              Gef,#03,#04 [FALSE] L0005
       RFALSE          
L0005: JIN             L01,"Class" [TRUE] L0006
       CALL_VN         R0493 (S693,L01,#ffff)
       RFALSE          
L0006: GET_PROP_ADDR   L00,#02 -> L03
       JZ              L03 [TRUE] RFALSE
       GET_PROP_ADDR   L00,#02 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: STORE           L04,Gef
       STORE           L02,#00
L0008: DIV             L04,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0009
       LOADW           L03,L02 -> -(SP)
       JE              (SP)+,L01 [TRUE] RTRUE
       INC             L02
       JUMP            L0008
L0009: RFALSE          

Routine R0492, 9 locals

       STORE           L04,#00
L0001: JL              L04,#30 [FALSE] L0004
       TEST_ATTR       L01,L04 [FALSE] L0002
       SET_ATTR        L00,L04
       JUMP            L0003
L0002: CLEAR_ATTR      L00,L04
L0003: INC             L04
       JUMP            L0001
L0004: STORE           L04,#01
L0005: JL              L04,#40 [FALSE] L0010
       GET_PROP_ADDR   L00,L04 -> L02
       GET_PROP_ADDR   L01,L04 -> L03
       GET_PROP_ADDR   L00,L04 -> Gef
       JZ              Gef [TRUE] L0006
       GET_PROP_LEN    Gef -> Gef
L0006: STORE           L07,Gef
       JZ              L02 [TRUE] L0009
       JZ              L03 [TRUE] L0009
       GET_PROP_ADDR   L01,L04 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: PUSH            Gef
       JE              L07,(SP)+ [FALSE] L0009
       STORE           L05,#00
L0008: JL              L05,L07 [FALSE] L0009
       LOADB           L03,L05 -> -(SP)
       STOREB          L02,L05,(SP)+
       INC             L05
       JUMP            L0008
L0009: INC             L04
       JUMP            L0005
L0010: GET_PROP_ADDR   L00,#03 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       GET_PROP_ADDR   L01,#03 -> -(SP)
       JZ              (SP)+ [FALSE] L0012
L0011: RTRUE           
L0012: GET_PROP        L01,#03 -> L04
       JUMP            L0014
L0013: ADD             L04,L07 -> -(SP)
       ADD             (SP)+,#03 -> L04
L0014: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       LOADW           L04,#00 -> L08
       LOADB           L04,#02 -> L07
       GET_PROP        L00,#03 -> L05
       JUMP            L0016
L0015: LOADB           L05,#02 -> -(SP)
       ADD             L05,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L05
L0016: LOADW           L05,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       LOADW           L05,#00 -> -(SP)
       AND             (SP)+,#7fff -> -(SP)
       AND             L08,#7fff -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0018
       LOADB           L05,#02 -> -(SP)
       JE              L07,(SP)+ [FALSE] L0018
       STORE           L06,#03
L0017: ADD             L07,#03 -> -(SP)
       JL              L06,(SP)+ [FALSE] L0018
       LOADB           L04,L06 -> -(SP)
       STOREB          L05,L06,(SP)+
       INC             L06
       JUMP            L0017
L0018: JUMP            L0015
L0019: JUMP            L0013
L0020: RTRUE           

Routine R0493, 5 locals

       PRINT           "
** Run-time error: "
       JIN             L01,"Class" [FALSE] L0001
       PRINT           "Class "
L0001: PRINT_OBJ       L01
       PRINT           " (object number "
       PRINT_NUM       L01
       PRINT           ") "
       JL              L02,#00 [FALSE] L0002
       PRINT           "is not of class "
       SUB             #00,L02 -> -(SP)
       CALL_2N         R0106 ((SP)+)
       JUMP            L0004
L0002: PRINT           " has no property "
       CALL_2N         R0483 (L02)
       STORE           L04,#1b52
       LOADW           L04,#00 -> L03
       JL              L02,#00 [TRUE] L0003
       JL              L02,L03 [TRUE] L0004
L0003: PRINT           " (and nor has any other object)"
L0004: PRINT           " to "
       PRINT_PADDR     L00
       PRINT           " **
"
       RTRUE           

Routine R0494, 1 local

       JZ              L00 [TRUE] RFALSE
       JL              L00,#01 [TRUE] L0001
       SUB             #019a,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] RTRUE
L0001: CALL_VS         R0495 (L00,S001) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       RET             #03
L0002: CALL_VS         R0495 (L00,#1191) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       RET             #02
L0003: RFALSE          

Routine R0495, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0496, 1 local

       CALL_2S         R0494 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0001
       RET             #03
L0001: JE              Gef,#03 [FALSE] L0002
       RET             #04
L0002: JE              Gef,#01 [FALSE] L0005
       JIN             L00,"Class" [TRUE] L0003
       JG              L00,#04 [TRUE] L0004
L0003: RTRUE           
L0004: RET             #02
L0005: RFALSE          

Routine R0497, 4 locals

L0001: LOADB           #00,L00 -> L02
       JZ              L02 [TRUE] L0006
       AND             L02,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L00
       LOADB           #00,L00 -> -(SP)
       AND             (SP)+,#3f -> L03
       JUMP            L0004
L0002: AND             L02,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L03,#02
       JUMP            L0004
L0003: STORE           L03,#01
L0004: INC             L00
       AND             L02,#3f -> -(SP)
       JE              (SP)+,L01 [FALSE] L0005
       RET             L00
L0005: ADD             L00,L03 -> L00
       JUMP            L0001
L0006: JL              L01,#00 [FALSE] L0007
       ADD             L00,#01 -> -(SP)
       RET_POPPED      
L0007: RFALSE          

Routine R0498, 5 locals

       STORE           Gef,L01
       JE              Gef,#40 [FALSE] L0005
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JG              (SP)+,#01 [FALSE] RFALSE
       GET_CHILD       L00 -> L04 [FALSE] L0003
L0003: REMOVE_OBJ      L04
       CALL_VS         R0490 (L04,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R0486 (L04,#40)
L0004: RET             L04
L0005: JE              Gef,#41 [FALSE] L0009
       CALL_VS         R0491 (L02,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0493 (S694,L02,(SP)+)
       RFALSE          
L0006: GET_CHILD       L00 -> -(SP) [FALSE] L0007
L0007: CALL_VN         R0492 (L02,(SP)+)
       CALL_VS         R0490 (L02,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       CALL_VN         R0486 (L02,#40)
L0008: RFALSE          
L0009: JE              Gef,#42 [FALSE] L0013
       CALL_VS         R0491 (L02,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0493 (S695,L02,(SP)+)
       RFALSE          
L0010: CALL_VS         R0490 (L02,#42) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       CALL_VN         R0486 (L02,#42)
L0011: GET_CHILD       L00 -> -(SP) [FALSE] L0012
L0012: CALL_VN         R0492 (L02,(SP)+)
       INSERT_OBJ      L02,L00
       RFALSE          
L0013: JE              Gef,#43 [FALSE] L0016
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0015
L0014: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0014
L0015: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,#01 -> -(SP)
       RET_POPPED      
L0016: JE              Gef,#44 [FALSE] L0019
       CALL_VS         R0491 (L02,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0493 (S696,L02,(SP)+)
       RFALSE          
L0017: CALL_VS         R0491 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0493 (S697,L03,(SP)+)
       RFALSE          
L0018: CALL_VN         R0492 (L02,L03)
       RFALSE          
L0019: RTRUE           

[End of code]

[Start of text]

S001: "A BEAR'S NIGHT OUT"
S002: "
An Interactive Children's Story
Copyright (c) 1997-1999 by David Dyte.
"
S003: "970918"
S004: "6/7"
S005: "a"
S006: "---"
S007: "the"
S008: "The "
S009: "the "
S010: "a "
S011: "The "
S012: "the "
S013: "an "
S014: "The "
S015: "the "
S016: "some "
S017: "The "
S018: "the "
S019: "some "
S020: "N = next subject"
S021: "P = previous"
S022: "  Q = resume game"
S023: "Q = previous menu"
S024: "RETURN = read subject"
S025: "Score: "
S026: "Moves: "
S027: "Time: "
S028: "You can't go that way."
S029: "your former self"
S030: "yourself"
S031: "Darkness"
S032: "those things"
S033: "that"
S034: " or "
S035: "nothing"
S036: " is"
S037: " are"
S038: "is "
S039: "are "
S040: " and "
S041: "whom "
S042: "which "
S043: "(considering the first sixteen objects only)
"
S044: "
Would you like to RESTART, RESTORE a saved game"
S045: ", give the FULL score for that game"
S046: ", see some suggestions for AMUSING things to do"
S047: "[Your interpreter does not provide "undo".  Sorry!]"
S048: ""Undo" failed.  [Not all interpreters provide it.]"
S049: "Please give one of the answers above."
S050: "[You can't "undo" what hasn't been done!]"
S051: "[Can't "undo" twice in succession. Sorry!]"
S052: ""Oops" can only correct a single word."
S053: "It is pitch dark, and you can't see a thing."
S054: "To repeat a command like "frog, jump", just say "again", not "frog,
again"."
S055: "You seem to want to talk to someone, but I can't see whom."
S056: "To talk to someone, try "someone, hello" or some such."
S057: "I didn't understand that sentence."
S058: "I only understood you as far as wanting to "
S059: "You seem to have said too little!"
S060: "You can't use multiple objects with that verb."
S061: "You can only use multiple objects once on a line."
S062: "You excepted something not included anyway!"
S063: "You can only do that to something animate."
S064: "That's not something you need to refer to in the course of this game."
S065: "I didn't understand the way that finished."
S066: "Sorry, you can only have one item here. Which exactly?"
S067: "(Since something dramatic has happened, your list of commands has been
cut short.)"
S068: " (closed, empty and providing light)"
S069: "no pronouns are known to the game."
S070: "Are you sure you want to restart? "
S071: "The game file has verified as intact."
S072: "The game file did not verify as intact, and may be corrupt."
S073: "Attempt to begin transcript failed."
S074: "Attempt to end transcript failed."
S075: "You're carrying too many things already."
S076: "You can't put something on top of itself."
S077: "You can't put something inside itself."
S078: " for a while, but don't achieve much."
S079: "You can only get into something freestanding."
S080: "But you aren't in anything at the moment."
S081: "You'll have to say which compass direction to go in."
S082: " is now in its normal "brief" printing mode, which gives long
descriptions of places never before visited and short descriptions otherwise."
S083: " is now in its "verbose" mode, which always gives long descriptions of
locations (even if you've been there before)."
S084: " is now in its "superbrief" mode, which always gives short descriptions
of locations (even if you haven't been there before)."
S085: "Darkness, noun.  An absence of light to see by."
S086: "seem to be something you can unlock."
S087: "seem to be something you can lock."
S088: "This dangerous act would achieve little."
S089: "Nothing practical results from your prayer."
S090: "The dreadful truth is, this is not a dream."
S091: "Digging would achieve nothing here."
S092: "You jump on the spot, fruitlessly."
S093: "You would achieve nothing by this."
S094: "There's nothing suitable to drink here."
S095: "But there's no water here to carry."
S096: "Real adventurers do not use such language."
S097: "Violence isn't the answer to this one."
S098: "There's not enough water to swim in."
S099: "There's nothing sensible to swing here."
S100: "That would be less than courteous."
S101: "Is that the best you can think of?"
S102: "You lack the nerve when it comes to the crucial moment."
S103: "I don't think much is to be achieved by that."
S104: "You aren't feeling especially drowsy."
S105: "You discover nothing of interest in "
S106: "[Gluing in inference with pattern code "
S107: "Now, that's hardly good bear behaviour, is it?"
S108: "This isn't the best place for sleep."
S109: "Full marks for cute and furry, but none for achievement."
S110: "Full marks for cute and furry, but none for achievement."
S111: "Despite your rousing chorus of "Teddy Bear's Picnic," the tape recorder
appears not to hear you."
S112: "`If you go into the woods today...'"
S113: "Oh, my! Such language from a small bear!"
S114: "That's not something a teddy bear ever has a need to do."
S115: "That's not something a teddy bear ever has a need to do."
S116: "Now, that's hardly good bear behaviour, is it?"
S117: "That's not something a small bear can readily carry."
S118: "That's not really going anywhere."
S119: "
First time players may wish to try HELP."
S120: "Swimming is not something teddy bears are renowned for."
S121: "Where disappearing items go."
S122: "A snappy night shirt of blue and white stripes."
S123: "your"
S124: "Why change the habit of a lifetime?"
S125: "But you are wearing your night shirt."
S126: "A stamp in honour of Don Woods, with a rather charming ascii picture of
a lantern."
S127: " The stamp is affixed to the reply card."
S128: "The stamp is already affixed to the reply card."
S129: "What a silly place to put a stamp!"
S130: "The stamp won't stick to the reply card."
S131: "The stamp sticks nicely to the reply card."
S132: "druid's hat"
S133: "A snappy night cap of blue and white stripes, which could, in a darker
place, be mistaken for a druid's hat."
S134: "night cap"
S135: "Well now that you look closely, it appears to be a teddy bear sized
night cap in blue and white stripes."
S136: " is just too comfortable to take off."
S137: "What a snug fit! Just the thing for those cold winter nights.
"
S138: "The Royal Honey treasure from Adventureland."
S139: "Wait a moment...

You couldn't have taken the honey out of Adventureland, because to win you must
have left it in the large hollow damp stump.

The Royal Honey disappears, sorry.
"
S140: "[No text written for this option.]
"
S141: "Press RETURN for more hints, or Q to quit.

"
S142: "
Oh alright. Have another look in the kitchen- you might find some honey there.
"
S143: "
Oh stop sulking. It was just an example game, after all.
"
S144: "
Now don't be like that. Honey is bad for your teeth, anyway.
"
S145: "
Of course, it bumps into the wall, too, since you can't go that way."
S146: "You can't quite reach high enough to clamber up."
S147: "You can't reach anywhere near that high."
S148: "You tumble down, but being a soft bear, that's ok.
"
S149: "You struggle, but clamber up successfully.
"
S150: "You tumble down, but being a soft bear, that's ok.
"
S151: "You struggle, but clamber up successfully.
"
S152: "You tumble down, but being a soft bear, that's ok.
"
S153: "How could you do that to such a good friend as "
S154: "You get a sort of warm fuzzy feeling of well being."
S155: "It's hard to tell, but you think you hear a faint voice telling you to
type HELP for hints."
S156: " looks cute when he is ignoring something."
S157: " seems quite content to listen quietly and do nothing."
S158: "The computer room is neat but not often used. One day a new computer
will arrive here, and surely then your owner will regain his enthusiasm. For
now he keeps mumbling about bank accounts and expensive machines and repair
bills.

To the west lies the south end of the hall."
S159: "A tall, slightly battle scarred glass table, long home to your owner's
faithful hobby computer, which sits atop."
S160: "
A tall glass table stands here, home to your owner's old hobby computer"
S161: ". Next to the computer you can make out "
S162: "an"
S163: "A strange looking padded chair on casters, designed for people to kneel
on. This is supposed to be comfortable for them."
S164: "The chair rolls around on its casters. Having fun?"
S165: "This would be much easier if you were standing on the floor."
S166: "The ergonomic chair won't fit into the cupboard."
S167: "The ergonomic chair won't roll through a closed door."
S168: "That's not a room teddy bears or ergonomic chairs are normally found
in."
S169: "The chair rolls easily on its casters."
S170: "An old home made computer with a green screen and a rickety disk drive,
circuit boards and such sticking out at all angles.
"
S171: "Congratulations. Your computer is now a state of the art interactive
fiction machine of your dreams. At least that's what the advertisement said."
S172: " is not supposed to go in a computer."
S173: "This computer has been known in the past to cause electric shock. It is
recommended you turn it off before mucking about with it, even if you are a
teddy bear."
S174: "But this is the interactive fiction machine of your dreams. At least
that's what the advertisement said."
S175: "This computer has been known in the past to cause electric shock. It is
recommended you turn it off before mucking about with it, even if you are a
teddy bear."
S176: "The words `Disk Error' appear on the screen.

"
S177: "The computer beeps and hums a little. Presently a green screen saver
begins its merry dance."
S178: "The computer goes dark and quiet."
S179: "
Next to you stands your owner's old hobby computer"
S180: "A standard 5.25 inch computer disk, inside a standard 5.25 inch disk
drive."
S181: "A standard 5.25 inch computer disk, labelled `Curses.'"
S182: "This is the southern end of a plain carpeted hallway, which continues to
the north.

To the east is the computer room and to the southeast the bedroom. A bathroom
(in the English sense) lies to the southwest, and one in the American sense to
the south."
S183: "That's not a room teddy bears are normally found in."
S184: "A spherical yellow plastic cage, with a shiny bell inside."
S185: "A yellow plastic ball, known as a favourite toy of the family cat, has
been left here."
S186: "The bell tinkles surprisingly loudly.
"
S187: "The ball bounces away with a surprisingly loud tinkling noise.
"
S188: "The bathroom has recently been tiled in glaring white. A doorway to the
northeast leads to the rest of the house.

Along the west wall is a large tub, which your owner apparently enjoys swimming
in.

To the south is the bathroom sink, the next subject of renovation, with a new
copper pipe installed"
S189: "A large white tub, still with quite a bit of water from the last time
your owner went swimming."
S190: "But then you might get your fur wet."
S191: "You dip the stamp into the water for the smallest of split seconds, just
enough to moisten it ever so slightly.
"
S192: "The stamp is moist enough already."
S193: ", and possibly your fur, wet will achieve nothing."
S194: "A pool of soapy water, not good for teddy bears."
S195: "But then you might get your fur wet."
S196: "What, and splash the whole room? You might get your fur wet."
S197: "You dip the stamp into the water for the smallest of split seconds, just
enough to moisten it ever so slightly.
"
S198: "The stamp is moist enough already."
S199: ", and possibly your fur, wet will achieve nothing."
S200: "In actual fact, the one thing this unit presently lacks is a sink. But
it does have a sparkling new pipe and a working drawer."
S201: " Well, it did have a working drawer."
S202: "The half built unit looks a bit rickety and dangerous."
S203: " (and, for that matter, lying on the floor)"
S204: "The drawer comes right off its runners, following you onto the floor
with a crash, and revealing a deep hole underneath the new sink.
"
S205: "The drawer is already open, and for that matter, will remain that way."
S206: "The drawer wobbles around, and seems quite loose as you pull it open"
S207: "The drawer wobbles around, and seems quite loose as you push it shut."
S208: "A `Moose' brand glow in the dark yoyo, missing its string."
S209: "
The yoyo begins to glow brightly."
S210: "
The yoyo is glowing very faintly now."
S211: "
The yoyo is glowing more faintly."
S212: "a"
S213: "A small plastic ukulele, designed for young children, the most advanced
musical instrument your owner ever got around to learning."
S214: "You strum a few chords, unconvincingly. Which isn't surprising,
considering your soft toy paws.
"
S215: "A rather gloomy looking deep hole, which appears to lead down into the
foundations of the house."
S216: "has been carelessly left lying about, revealing a deep hole beneath the
sink unit."
S217: "A brand new sink pipe, still waiting to be connected, it leads from the
floor to nowhere as yet."
S218: "The pipe gives a resounding clang.
"
S219: "Eerie green light glows from within the pipe."
S220: "
A strangely satisfying `splot' can be heard from beneath the floor.
"
S221: "The hole is entirely lined with concrete. It gives the impression
someone once created a small wine cellar, and forgot about it when they built
the rest of the house.

The bathroom is up from here."
S222: "Fortunately you can get a solid grip on the rough surface, and with a
mighty effort you pull yourself up.
"
S223: "A slowly rusting iron box, labelled `Time Capsule 1982' in fading red
letters"
S224: "An old time capsule, of all things, lies open on the floor."
S225: "An old time capsule, of all things, has been left here on the floor."
S226: "No thanks, that creaking noise was bad enough the first time."
S227: "The lid creaks dreadfully as you pry it open, revealing the wonders
hidden all these years: "
S228: "A standard 5.25 inch computer disk, inside a standard 5.25 inch disk
drive."
S229: "A standard 5.25 inch computer disk, labelled `Dungeon.'"
S230: "some"
S231: "The newspapers have been left down here rather too long to be readable."
S232: "The lower half of a new sink pipe, "
S233: "which appears to be blocked with sludge."
S234: "
The lower half of a sparkling new pipe descends from above"
S235: ", and appears to be blocked with sludge."
S236: "The pipe gives a resounding clang"
S237: "But you would get sludge on your paws."
S238: "Since this is the lower end of a vertical pipe, "
S239: " would simply fall down if you did that."
S240: ", and the sludge drops to the floor, followed by "
S241: "some"
S242: "But you would get sludge on your paws."
S243: "And splash sludge all over the room? Yuck!"
S244: "A plain brass key."
S245: "When you aren't lying on the bed, you usually stay in here, snug and
safe with your friends atop the warm pile of clothes.

The cupboard opens eastward to the bedroom."
S246: "A neatly stacked pile of clothes intended for human beings."
S247: "
On the pile of clothes you can see "
S248: "A smart green jacket with big pockets, teddy bear sized."
S249: "Your warm winter jacket is here, which may be just as well, it's a
little chilly."
S250: "your"
S251: "A beautiful plush toy moose, in a kneeling pose, and a loyal (if silent)
friend."
S252: "It would be altogether nicer behaviour to leave Matt alone."
S253: "You get a sort of warm fuzzy feeling of well being."
S254: "A beautiful plush toy moose, in a standing pose, and a loyal (if silent)
friend."
S255: "It would be altogether nicer behaviour to leave Terry alone."
S256: "Smooth and furry, with a slight spikiness."
S257: "You get a sort of warm fuzzy feeling of well being."
S258: "Moonlight plays through the window, softly illuminating the bedroom,
full of comfortable memories.

To the west is the cupboard where you usually live, and the doorway to the
northwest leads to the rest of the house."
S259: "A large bed for bears, but just right for people."
S260: "It's tough to see into the cupboard from out here, the light isn't very
strong."
S261: "The cupboard door is just a bit too heavy for a small bear to budge."
S262: "David is handsome, debonair, forgetful and fast asleep. He also wrote
this description."
S263: "David continues to sleep, totally oblivious."
S264: "David continues to sleep, totally oblivious."
S265: "It's a funny thing, but teddy bears have always had a tough time making
themselves heard in the company of people."
S266: "A touching gesture, although your owner remains asleep and unaware."
S267: "David continues to sleep, totally oblivious."
S268: "A touching gesture, although your owner remains asleep and unaware."
S269: "
David, your owner, lies next to you on the bed, in a deep sleep.
"
S270: "
David lies on the bed, very much asleep.
"
S271: "A small knot of doors leading every which way, this end of the hall can
be a little confusing for small bears such as yourself.

Let's try to make it easy: northwest to the living room, north to the study,
east to the front entrance, and south to the rest of the hall."
S272: "The local centre for entertainment and laziness, the living room is
permanent home to a very comfortable sofa and a television set. Both of these
are much in use, usually at the same time.

From here you can go south to the kitchen, southeast to the hall, or east to
the study."
S273: "People seem to enjoy sitting on this luxurious new sofa."
S274: "
On the comfortable sofa you can see "
S275: "Holly's eyes dart about, looking for a toy to chase.
"
S276: "Holly sleeps soundly, softly purring.
"
S277: "Holly looks at you, curious but uncomprehending.
"
S278: "Holly continues to sleep, undisturbed."
S279: "Holly looks surprised for a second, then swipes at you with a menacing
paw.
"
S280: "Holly bats the ball away expertly, and pounces on it again for good
measure.
"
S281: "Holly awakes with a start, eyes and ears alert, and bats the ball away.
"
S282: "Holly appears not to notice, or perhaps care.
"
S283: "Holly winds around, curls up, and presently falls asleep."
S284: "Holly purrs contendedly, and sleeps a little sounder."
S285: "Holly appears not to notice. Perhaps if you were a little closer?
"
S286: "Holly licks the stamp cautiously then shies away with distaste.
"
S287: "Holly sniffs at the baguette, but decides she has had her fill.
"
S288: "Holly sniffs the baguette with interest, and bites off a small chunk.
"
S289: "Holly bats at the ball, knocking it out of your paws and onto the floor.
"
S290: "Holly appears not to notice, or perhaps care."
S291: "Holly appears not to notice, or perhaps care."
S292: "Holly stares at you blankly, then pointedly ignores you."
S293: "This might be easier if you were on "
S294: "Holly bats you away with a strong paw.
"
S295: " and climbing onto Holly at the same time proves to be too difficult,
and you tumble to the floor.
"
S296: "Gently you climb onto Holly's back and cling on.
"
S297: "Holly eyes you watchfully, then bats you to the ground with a strong and
superbly timed paw.
"
S298: "
The tape recorder clicks and whirs, and the red button pops up.
"
S299: "You tumble down, but being a soft bear, that's ok.
"
S300: "This makes more of a noise than you might have thought, and Holly awakes
with a start.
"
S301: "This makes quite a noise. Holly looks around suspiciously, ears and eyes
alert.
"
S302: "This makes more of a noise than you might have thought, and Holly awakes
with a start.
"
S303: "This makes quite a noise. Holly looks around suspiciously, ears and eyes
alert.
"
S304: "Tracking the ball with lightning reflexes, she leaps and pounces with
power and grace. The ball drops to the floor and Holly sniffs at it warily.
"
S305: "
In the middle of all this you are flung away and land on the floor.
"
S306: "
In the middle of all this you are flung away and land on "
S307: "
Holly looks back and shakes you off with a brush of her tail.
"
S308: "
Holly the calico cat is here, prowling menacingly"
S309: "
Holly the calico cat is here, fast asleep"
S310: "
You hear a flurry of paw steps from somewhere overhead."
S311: "
With a flurry of paw steps, Holly rushes to investigate. She pokes her head in
the doorway, but the cold tiles don't appeal and she wanders off."
S312: "
You hear a flurry of paw steps from the bedroom."
S313: "
With a flurry of paw steps, Holly rushes to investigate."
S314: "This makes quite a noise. With a flurry of paw steps, Holly rushes to
investigate. "
S315: "
Holly appears by your side, looking somewhat bemused. "
S316: "She appears to sense the presence of another cat, takes fright, and
jumps through the trapdoor and out of the game.
"
S317: "Sensing prey, she strikes out west into the forest.
"
S318: "She cautiously pads her way east. Presently you hear a scuffle, and see
a somewhat miffed looking dragon fly off over the horizon.
"
S319: "Holly scrabbles at the wall with her paws."
S320: "Holly pounces on an insect which isn't there."
S321: "Holly tires of this game, and curls up for a snooze.
"
S322: "Holly flicks her tail back and forth."
S323: "Holly meows for no particular reason.
"
S324: "curls up next to David, and falls asleep.
"
S325: "A less than state of the art colour tv"
S326: ", presently tuned to a home shopping show.
"
S327: "The television burbles away with a home shopping show."
S328: "You hear a ghastly home shopping show."
S329: "The television appears to be tuned to a home shopping show.
"
S330: "The television goes dark and quiet, much to your relief.
"
S331: "The kitchen manages to remain untidy, despite the fact that your owner
tends to prefer home delivered pizza to anything else. 

A door to the south leads outside, and one to the north leads to the living
room."
S332: "The door is locked. Besides, it's cold and dangerous outside at night."
S333: "A tall and forbidding locked door."
S334: "The door is locked. Besides, it's cold and dangerous outside at night."
S335: "The occasionally clean bench where all the food is prepared."
S336: "
Along one wall stands a high bench, featuring a sink full of dirty dishes"
S337: ", if you step back and crane your neck a little."
S338: "

An insulated wire cord emerges from a hole at the bottom of the bench, leading
to a socket in the wall."
S339: "

An empty looking hole at the bottom of the bench loiters suspiciously near a
power socket on the wall."
S340: "Standing as tall as you can, the tops of your paws just reach the edge
of the bench, and you struggle to the top.
"
S341: "A sink full of assorted cutlery and crockery, which your owner is so
looking forward to washing."
S342: "A wicker picnic hamper (David picked it up from a toyshop about two
years ago)"
S343: "
A picnic basket has been left here"
S344: "The basket bumps over the floor. Having fun?"
S345: "This would be much easier if you were standing on the floor."
S346: "The basket can't be pushed through a closed door."
S347: "That's not a room teddy bears or picnic baskets are normally found in."
S348: "The basket bumps over the floor as you push it."
S349: "A long, thin loaf of French bread"
S350: ", which has a small bite out of one end."
S351: "Perhaps it's best to save the baguette for later."
S352: "A heavy looking, sturdy jar full of very real honey."
S353: "I think it best to save this up for a special occasion, don't you?"
S354: "That's not really going anywhere now."
S355: "And smash the jar on the floor? That's not a smart idea, is it?"
S356: "Into the picnic basket? Good idea! Hmm, wait a moment...

No, you might miss and smash the jar. Better not."
S357: "Use the ergonomic chair to break the fall? Good idea! Hmm, wait a
moment...

No, you might miss and smash the jar. Better not."
S358: "Get the jar to roll off the ergonomic chair and into the basket? Good
idea! Hmm, wait a moment...

No, you might miss the chair and smash the jar. Better not."
S359: "Use the packing foam to break the fall? Good idea! Hmm, wait a moment...

No, the jar could bounce anywhere after that. Better not."
S360: "Try to bounce the jar from the packing foam into the basket? Good idea!
Hmm, wait a moment...

No, the basket isn't a very big target, you could smash the jar. Better not."
S361: "Try to bounce the jar from the packing foam onto the ergonomic chair?
Good idea! Hmm, wait a moment...

No, the jar might roll off the chair and smash on the floor. Better not."
S362: "The jar falls from the bench, tumbling onto the foam packing. It spins
high into the air, eventually coming down on the ergonomic chair. From there it
rolls neatly into the picnic basket. Great idea!
"
S363: "some"
S364: "Rich, gooey and sweet. Everything a bear could want."
S365: "The cord is thin, white and functional, and runs from a hole at the
bottom of the bench to a socket in the wall."
S366: "The cord comes away from the socket, and you lose grip as it recoils
back through the hole. The answering machine tumbles to the floor with a loud
thud, cracking open.

A small tape drops out of the machine.
"
S367: "A bulky, primitive, answering machine with no controls you seem to
understand. A small red light is conspicuously not glowing."
S368: "A hole in the bench, not large enough for a teddy bear."
S369: "It's dark in there, you can't see a thing."
S370: "A push button phone with none of the mod cons"
S371: "No extra effort is required to hear the telephone."
S372: "The telephone is not currently in use."
S373: "That number appears to be engaged."
S374: "
Strange. Must have been a crossed line."
S375: "
Strange. Must have been a crossed line."
S376: "
`Yes, that is the correct password. However we can only give one free z-chip to
each customer. Sorry. *Click*'
"
S377: "
`Congratulations! That is the correct password! Your brand new miracle z-chip
will be delivered immediately. Thankyou once again. *Click*'

A dull thud echoes from somewhere near the front door.
"
S378: "There's no point talking to a recorded message."
S379: "It's a funny thing, but teddy bears have always had a tough time making
themselves heard in the company of people."
S380: "There's no point talking to a recorded message."
S381: "It's a funny thing, but teddy bears have always had a tough time making
themselves heard in the company of people."
S382: "an"
S383: "A bulky, primitive answering machine with no controls you seem to
understand. A small glowing red light tells you it is working."
S384: "You hear a wrenching sound from below. The answering machine tumbles to
the floor with a loud thud, cracking open.

A small tape drops out of the machine.
"
S385: "A bulky, primitive, answering machine with no controls you seem to
understand. A small red light is conspicuously not glowing."
S386: "It seems a little late to fix things now."
S387: " would look silly in an answering machine."
S388: "A small magnetic tape of the type used to record messages on."
S389: "The tape is out of reach of your stubby bear paws now."
S390: "(pressing the white `PLAY' button)
"
S391: "This is more of a study-to-be than a study. A desk will one day grace
the west wall, along with a comfortable study chair. One day.

The hall lies to the south, the living room to the west."
S392: "You see nothing special about the west wall... yet."
S393: "A dull grey metal filing cabinet, consisting of one drawer"
S394: "
On the floor you can see a less than organised pile of papers. In one corner
sits a lone filing cabinet"
S395: "The tumblers in the lock click firmly into place.
"
S396: "The tumblers in the lock click firmly back.
"
S397: "It's a big effort, but you manage to pull the drawer open"
S398: "It's a big effort, but you manage to push the drawer shut."
S399: "A dreadfully messy pile of old exam papers, study notes, letters, junk
mail, bills, walkthroughs for adventure games, recipes, newspaper articles,
medical records, and who knows what else.

"
S400: "Joyfully you dive into the pile of papers. "
S401: "Delving deep into the pile, you find a reply card for the Teddy Bear
Picnic!
"
S402: "Near the top of the pile you find a flyer for a Teddy Bear Picnic!
"
S403: " copy of Popular Paranoia magazine"
S404: " copy of Spelunker Today magazine"
S405: " copy of US News and Dungeon Report"
S406: " yellowed scroll labelled `FROTZ'"
S407: " Mathematical Statistics 823 exam from 1988"
S408: " walkthrough for the game `Freefall'"
S409: "n autographed picture of Matt Barringer"
S410: " copy of Various Artists' first album"
S411: " police dossier on Carmen Sandiego"
S412: " soup can with the letter Y on it"
S413: "n advertisement for Nile Nook burial chambers"
S414: " Contra Central Mentality Lottery Card"
S415: "n application form for Stellar Patrol"
S416: " copy of National Detective Gazette"
S417: " thing David's aunt gave him that he doesn't know what is"
S418: ", but this fails to hold your interest, and you place it back.
"
S419: "Next to a picture of a famous teddy bear of print, stage and screen, it
says `Please bring this card with you when you attend the Teddy Bear Picnic.' "
S420: "A stamp is affixed to the top corner."
S421: "A square in the top right corner says `Affix stamp here.'"
S422: "Come Along to the Teddy Bear Picnic"
S423: "

Everyone who is young, or just young at heart, will have a fine day out at the
Teddy Bear Picnic. Bring along your teddy bear and partake in all the fun!
Frolic in the woods, join the scavenger hunt, and you never know, a special
guest may just turn up!

(A picture of a famous teddy bear of print, stage and screen appears on the
flyer here)

For more information about the Teddy Bear Picnic just dial 72 on your phone.
Calls will be charged at... (The rest seems quite unimportant apart from the
date- tomorrow!)
"
S424: "A small personal tape recorder, of the kind designed for making messages
to oneself. It has a red button labelled `REC' and a white button labelled
`PLAY.'"
S425: "

A small tape is inside the tape recorder.
"
S426: "

The slot at the side of the tape recorder is empty.
"
S427: "That doesn't really belong in the tape recorder."
S428: "You would have to be holding both the small tape and the dictaphone to
do that."
S429: "The tape fits neatly in the slot, very neatly in fact. It appears to be
quite permanent."
S430: "(pressing the white `PLAY' button)
"
S431: "That's no way to treat expensive equipment."
S432: "The tape recorder clicks and whirs, and the red button pops up.
"
S433: "It's a funny thing, but there have been very few successful recordings
of teddy bears."
S434: "Oddly enough, the tape recorder does not respond."
S435: "It's a funny thing, but there have been very few successful recordings
of teddy bears."
S436: "Oddly enough, the tape recorder does not respond."
S437: "A bright red button, labelled `REC' and pressed in."
S438: "A bright red button, labelled `REC.'"
S439: "The tape recorder whirs and grinds for second, then the red button pops
back up."
S440: "The red button is already depressed."
S441: "The red button depresses quietly, and the recorder begins to hum very
softly."
S442: "A white button, labelled `PLAY.'"
S443: "The tape recorder whirs and grinds for second, then the white button
pops back up."
S444: "A whir and a grind later, the red and white buttons both pop up.
"
S445: "
Holly eyes the tape recorder suspiciously"
S446: "A thin, tape shaped slot in the side of the tape recorder."
S447: "That doesn't really belong in the tape recorder."
S448: "You would have to be holding both the small tape and the dictaphone to
do that."
S449: "The tape fits neatly in the slot, very neatly in fact. It appears to be
quite permanent."
S450: "The front entrance is unremarkable, but for the charming antique clock
hanging on the south wall.

A door to the east leads outside, and the hall lies to the west."
S451: "The door is locked. Besides, it's cold and dangerous outside at night."
S452: "A tall and forbidding locked door, with a postage slot half way up."
S453: "The door is locked. Besides, it's cold and dangerous outside at night."
S454: " You wonder how on earth the cardboard box ever got through there."
S455: "The postage slot is out of reach."
S456: "This is a timeless tale."
S457: "A very faint ticking can be heard."
S458: "The antique clock is out of reach."
S459: "The antique clock is out of reach."
S460: "The attics, full of low beams and awkward angles, begin here in a
relatively tidy area which extends north, south and east. The wooden
floorboards seem fairly sound, just as well considering how heavy all these
teachests are. But the old wiring went years ago, and there's no electric
light.

A hinged trapdoor in the floor stands open, and light streams in from below.
"
S461: "
Never having been an intrepid tourist, you quit Curses, and miss out on all the
fun. Maybe next time.
"
S462: "
Anyway, despite this appalling error,"
S463: " you play awhile and finish Curses, achieving the rank of Master Druid.
You may now wear the official Druid's hat.
"
S464: " you play awhile and finish Curses again. Ho hum.
"
S465: "You are in an open field west of a big white house with a boarded front
door. 
There is a small mailbox here."
S466: "
Lacking a sense of adventure, danger and low cunning, you quit Dungeon, and
miss out on all the fun. Maybe next time.
"
S467: "
Anyway, you play awhile and finish Dungeon, even scoring the last lousy point.
This is particularly impressive, as your owner has read the source code and
still never managed such a feat.
"
S468: "
Anyway, you play awhile and finish Dungeon again. Ho hum.
"
S469: "I'm in a forest. 

Obvious exits: North, South, East, West, Up. 

I can also see: Trees"
S470: "
Obviously you think mazes are the pits. You quit Adventureland and miss out on
all the fun. Maybe next time.
"
S471: "
Anyway, you play awhile and finish Adventureland, even achieving the difficult
feat of obtaining the *ROYAL HONEY* at your first attempt.
"
S472: "
Anyway, you play awhile and finish Adventureland again. Ho hum.
"
S473: "A large cardboard box, with `Your new Z-CHIP!' neatly typed in a fixed
pitch font on the label."
S474: " Foam packing sprawls out of the box in a rather unattractive mass."
S475: ", foam rubber packing sprawling in all directions.
"
S476: "It's hard to compress the packing back down to close the box."
S477: "The foam has expanded to fill the box completely."
S478: "The box glides smoothly. Having fun?"
S479: "This would be much easier if you were standing on the floor."
S480: "The box can't be pushed through a closed door."
S481: "That's not a room teddy bears or cardboard boxes are normally found in."
S482: "This would be easier if you were on "
S483: "The box is too smooth for you to get a good grip."
S484: "The box appears to have been packed rather too tightly with foam rubber.
It springs out in all directions, knocking you to the floor."
S485: "The box glides smoothly across the floor."
S486: "some"
S487: "A large springy mass of foam rubber pieces, presumably designed to
protect the more important contents of the box."
S488: "The foam rubber bounces back, knocking you off your paws."
S489: "You find nothing of interest left in the box."
S490: "Scraping right at the bottom of the box, you find a green disk.
"
S491: "Right in the middle of the packing, you find a well protected silicon
chip. This must be the z-chip you have heard so much about.
"
S492: "Just near the top of the foam packing, you find a leaflet.
"
S493: "You leap boldly onto the foam rubber, bouncing and spinning high in the
air, finally coming to rest on "
S494: "
Holly stares at you in amazement.
"
S495: "The z-chip is embedded in the hobby computer, making it the interactive
fiction machine of your dreams. Well, that's what the advertisement said."
S496: "A small state of the art z-chip, designed to turn any old computer into
the interactive fiction machine of your dreams. Well, that's what the
advertisement said."
S497: "A standard 5.25 inch computer disk, inside a standard 5.25 inch disk
drive."
S498: "A standard 5.25 inch computer disk, labelled `Adventureland.'"
S499: "

Congratulations on ordering the z-chip. You should find enclosed in this
package one (1) brand new, never before used, mint condition z-machine chip for
use with any existing personal computer. Just put the chip in your computer and
before you can say `xyzzy' it will be the Interactive Fiction machine of your
dreams.

All you need to do is provide the software. And you need not even do that!
We've provided you with a free sample game. Just put the enclosed disk in your
computer and before you can say `away' you'll be storing treasures and annoying
dragons just like a real adventurer would!

Best of luck!
"
S500: "Quite the most beautiful furry brown teddy bear."
S501: "









 Some nights, when people are fast asleep, teddy bears are just waking up.


 And some nights, those teddy bears make mischief.


 And some nights, things somehow turn out for the best...



"
S502: "         [Please press SPACE to begin.]"
S503: "The children tucked Teddy into his"
S504: "special bed, climbed into their own,"
S505: "and soon they were all fast asleep."
S506: ""
S507: "    -- Helen McKay, "The Lost Teddy""
S508: "It is pitch dark, and you can't see a thing."
S509: "
The tape recorder clicks and whirs, and the red button pops up.
"
S510: " settle down in the warm fabric and fall asleep. In time, morning comes.
The day of your owner's big plan to take you along to the Teddy Bear Picnic!"
S511: " Unfortunately, the picnic requires some kind of reply card for entry,
and David can't find it anywhere. Ah well, maybe next year.
"
S512: " David finds the specially chosen baguette"
S513: " where he left it, and the reply card turns up somehow,"
S514: " but things turn a bit sour at the picnic. Apparently the reply card
needs some kind of stamp, and David spends two hours talking his way in. And
after that he just complains his bread is too dry"
S515: ", having missed the lovely jar of honey in his haste to find everything
else"
S516: ". Should have been better prepared really.
"
S517: " but things turn a bit sour at the picnic. Apparently the reply card
needs some kind of stamp, and David spends two hours talking his way in.
Although the mysterious honey he finds in the basket is lovely, so it isn't all
bad.
"
S518: " and off you go. You go and have a lovely day, meeting all the other
bears. David spoils it a little, complaining that his bread is too dry"
S519: ", having missed the lovely jar of honey in his haste to find everything
else"
S520: ". Still, you have a reasonably good time.
"
S521: " and off you go. What a wonderful day. All the other teddy bears are
there, playing games and making mischief. Everyone admires your beautiful brown
fur, and smart clothes. And the mysterious jar of honey is enjoyed by all.
"
S522: "I'm not sure I understand your intention."
S523: "How could you hurt such a lovely teddy bear?"
S524: "You are not the kind of toy that requires batteries."
S525: "From deep within you hear a cute honking sound."
S526: "That sounds like quite a feat. Try climbing."
S527: "Wouldn't it be easier to walk there?"
S528: "


It's become a matter of pride now not to give up. That tourist map of Paris
must be up here somewhere in all this clutter, even if it has been five years
since your last trip. And it's your own fault. It looks as if your
great-grandfather was the last person to tidy up these lofts..."
S529: "
An Interactive Diversion 
Copyright (c) 1993, 1994, 1995 by Graham Nelson. 
Release 16 / Serial Number 951024 / Inform v1600 Library 5/12
"
S530: "

Welcome to Dungeon.                    This version created 13-MAR-82. 
You are in an open field west of a big white house with a boarded front door. 
There is a small mailbox here.
"
S531: "


A voice BOOOOMS out: 

Welcome to Adventure number: 1 "ADVENTURELAND" 
In this Adventure you're to find *TREASURES* and store them away. 
To see how well you're doing say: "SCORE" 
Remember you can always say "HELP" 

I'm in a forest. 

Obvious exits: North, South, East, West, Up. 

I can also see: Trees
"
S532: "The sound of low quality ukulele strumming fills the air.
"
S533: "Awful tacky home shopping show muzak can be heard.
"
S534: "`Have you always wanted to plunder great underground empires?'
"
S535: "`Do you dream of saving bridges from imminent disaster during major
storms rather than playing volleyball?'
"
S536: "`Have you ever wondered just how many designers of text adventures are
obsessed with their cats?'
"
S537: "A less than thrilling crescendo of over the top home shopping show muzak
can be heard.
"
S538: "`Well want, wish and wonder no more!'
"
S539: "`Because now, you too can thrill to the drama and excitement of
interactive fiction!'
"
S540: "`That's right, with this amazing device, the z-chip, any computer can be
a z-machine!'
"
S541: "`Your computer can become the interactive fiction machine of your
dreams, and this week only you can have this miracle z-chip FREE!'
"
S542: "`Just dial 95 on your phone, that's right, dial 95 on your phone, and
give the operator our password...'
"
S543: "`So call us now. We deliver to your door!'
"
S544: "`Trevyllian Castle, this is Tamara speaking. Hello? *Click*'
"
S545: "`Hello, Foley Consultants, can I help you? Hello? Hello? *Click*'
"
S546: "`Bob's Fish 'N Bait Store, Bob speaking. Hello? Hello? *Click*'
"
S547: "`Hello, Bungay? This is Jarboe. *Click*'
"
S548: "`Fillmore Fiduciary Trust. Hello? Hello? *Click*'
"
S549: "`Hello and welcome to the Teddy Bear Picnic information service.'
"
S550: "`When you come to the Teddy Bear Picnic, please bring the following
items.'
"
S551: "`Your reply card, and do make sure a stamp is affixed.'
"
S552: "`A picnic basket full of goodies to eat.'
"
S553: "`And most importantly a teddy bear to share the fun.'
"
S554: "`Thankyou for calling. Get a good night of sleep, and see you there!
*Click*'
"
S555: "`Hello and welcome to the z-chip home shopping service.'
"
S556: "`Now just give the password, and you can have the fabulous z-chip
delivered to your door!'
"
S557: "`That is correct, just give us the password. No payment is required.'
"
S558: "`Your computer will be the interactive fiction machine of your dreams.'
"
S559: "`So, the password, if you would be so kind?'
"
S560: "`Obviously you don't know the password. No problem, you can still call
us later when you find it. Bye! *Click*'
"
S561: "`Are you trying to be funny, sir?'
"
S562: "`Is everything quite alright there, sir?'
"
S563: "A spine tingling creaking noise wrenches the air."
S564: "`You have reached G.U.E. Tech. Unfortunately, our operator has just been
eaten. Please call back later. *Click*'
"
S565: "`Lundstrom, watch your behind you... *Click*'
"
S566: "The tape recorder hisses faintly.
"
S567: "
The tape recorder clicks, and the red button pops up.
"
S568: "
Naturally, being a tidy sort of bear, you turn off the computer and remove the
disk after you finish your game."
S569: "He gets what exercise he can"
S570: "By falling off the ottoman,"
S571: "But generally seems to lack"
S572: "The energy to clamber back."
S573: ""
S574: " -- A.A. Milne, "Teddy Bear""
S575: "I didn't do it."
S576: ""
S577: " -- Bart Simpson"
S578: "Help fight forest fires."
S579: ""
S580: "          -- Smokey Bear"
S581: "The teddy bears were fighting"
S582: "by themselves!"
S583: ""
S584: "   -- The Author, age 3, when"
S585: "        asked about the noise"
S586: "Shall we steal the picnic"
S587: "basket, Boo Boo?"
S588: ""
S589: "I don't think Mister Ranger"
S590: "would like that, Yogi."
S591: ""
S592: "   -- Yogi Bear and Boo Boo"
S593: "KIBITZ: What did you pick up that brass"
S594: "        lantern for, your health?"
S595: ""
S596: "                    -- Matthew Russotto"
S597: "Watch me pull a rabbit out of my hat!"
S598: ""
S599: "That trick never works."
S600: ""
S601: "               -- Bullwinkle J. Moose"
S602: "                   and Rocky Squirrel"
S603: "Moving from room to room in A Bear's Night Out is a simple matter of
choosing a direction, for instance GO SOUTHEAST. This can be abbreviated to SE.
As well as the compass directions, UP and DOWN are available.

In this game there are many things you can climb onto or down from. Try CLIMB
LADDER for instance, or JUMP ON HORSE, or JUMP OFF BED. EXIT and ENTER may work
just as well, or GET ON and GET OFF. Mostly these actions will have the same
effect, but sometimes they may not- be aware."
S604: "There are many ways to manipulate items you come across- the most
obvious being TAKE (or GET) and DROP, followed by the item's name.

You may also wish to try: PUSH, PULL, PUSHing something in a given direction
(eg: PUSH ROCK WEST), WAVE, HIT, WAYLAY, EAT, THROW, (or THROWing something AT
something else), SWITCH ON or OFF, PLAY, PUTting (or STICKing) something IN
something else or ON it, WEAR, or REMOVE. INVENTORY (or INV or I) will give you
a list of your possessions. 

Many more things will work too. Experiment and see!"
S605: "When you first arrive in a new room, you will see a full description of
that room (provided there is light to see by). Items you see in the description
may be EXAMINEd or SEARCHed (two different things!) to reveal more details.
LOOK will show you the whole room description again. LOOK IN or SEARCH a
container item (such as a box) to view the contents.

Other senses will work too- try LISTEN, SMELL, TASTE and TOUCH."
S606: "Many options are available to the adventurer who wants to try something
a little different- WAIT (or Z for short, oddly enough) allows time to pass,
SLEEP has the obvious effect, also SWIM, DIAGNOSE will tell you about yourself,
and so on.

You can also SAY things TO others, HUG them, ATTACK them if you feel so bold,
or order them around by saying something like HORSE, GO NORTH.

Don't be limited by what you see here- you may be surprised just how many
actions achieve something, or at least earn a response."
S607: "If you find a telephone in this game (and since I wrote this, it seems a
fair bet you will) you can use it with the word DIAL. Try DIAL 1157 or whatever
number you wish. DIAL 1157 ON PHONE would also work.

When you tire of a conversation, try HANG UP PHONE."
S608: "You can save your present position, in case you want to try something
dangerous, or just want to have your elevenses, by simply saying SAVE. Saved
games can be reloaded at any time by saying RESTORE.

Other options available to you include:

VERBOSE, BRIEF (or NORMAL) and SUPERBRIEF. These control how often you see a
full room description when entering, namely always, first time, and never.

NOTIFY ON and NOTIFY OFF. These control whether you are informed of a change in
your score.

QUOTES ON and QUOTES OFF. If you would rather not see the occasional pithy (but
quite irrelevant) quote appear on your screen, feel free to turn them off, or
indeed on again."
S609: "The maximum score in A Bear's Night Out is 33 points, although it is
possible to win the game with as few as 29. Points are scored for completing
various tasks, try SCORE for your score and rank, or FULL to see this and a
list of tasks thus far completed."
S610: "This menu changes as you go through the game, providing hints about
puzzles you have not yet solved. The solution may not be revealed outright- if
you read this and are still stuck, or no hint at all is provided for what you
need, try the walkthrough file for this game. You are urged to go back and look
at the general help information first- there may be something suggested there
you hadn't thought of yet."
S611: "It's a bit early in the game to be asking for hints, isn't it?"
S612: "Perhaps you can find something smaller to climb on first."
S613: "However, it needs to be something you can move around."
S614: "The ergonomic chair in the Computer Room can be PUSHed around."
S615: "PUSH CHAIR to the kitchen. CLIMB CHAIR. CLIMB BENCH."
S616: "With a leap of gymnastic daring, or with a little help."
S617: "Have you seen anything that can get to the table top?"
S618: "Holly leaps up there occasionally, if she's in the Computer Room."
S619: "Alternatively, have you seen anything particularly springy?"
S620: "The foam rubber packing might assist you."
S621: "You can ride Holly up to the tabletop."
S622: "See the topic "What good is Holly the Cat" for information about luring
her to the computer room."
S623: "PAT HOLLY. GET ON HOLLY. THROW BALL AT COMPUTER."
S624: "Alternatively, PUSH BOX to the computer room. CLIMB CHAIR. JUMP ON BOX."
S625: "There's more to this than a couple of plastic toys."
S626: "Violence is the answer to this one."
S627: "Have you found any sound equipment?"
S628: "The answering machine might be useful."
S629: "The cord emerging from the bench is for the answering machine."
S630: "So, what can you do with the tape?"
S631: "If you haven't opened the filing cabinet, concentrate on that."
S632: "PUSH RECORD to record sounds, and PUSH PLAY to play them back."
S633: "Have you dialled for information?"
S634: "You need to put the honey in the picnic basket."
S635: "You can't just push it off the bench - it would break."
S636: "The chair will help break the fall, but that's not enough."
S637: "You also need something else springy on the floor."
S638: "Don't forget to push the picnic basket to the kitchen, too."
S639: "Stop the water flowing over the dam."
S640: "What game are you playing, anyway?"
S641: "Stick at this one, the answer will show itself."
S642: "Once Holly is awake, she does all sorts of interesting things."
S643: "SHAKE BALL or PLAY UKULELE to wake her up."
S644: "You can also lure her around the house with noise, once she's awake."
S645: "Try throwing the ball at things near her."
S646: "For more explicit information, look under other hint topics."
S647: "But you must admit they are beautiful."
S648: "Can the computer understand the disks yet?"
S649: "There's a relevant advertisement running on the television."
S650: "You'll need to PUT CHIP IN COMPUTER, and then..."
S651: "PUT each disk IN COMPUTER. TURN ON COMPUTER."
S652: "Well I would lick it and stick it, what would you do?"
S653: "Obviously, you can't lick the stamp yourself."
S654: "Can you think of anything else that might?"
S655: "Your owner, David, is very forgetful - maybe you could help him."
S656: "He's rather unprepared for an event tomorrow that you're keen on
attending."
S657: "Go and SEARCH the pile of papers in the study."
S658: "You need to get things ready for the Teddy Bears' Picnic."
S659: "If you're still stuck, read other hints, or the walkthrough, if you
must."
S660: "A Bear's Night Out was first created for the 1997 Interactive Fiction
Competition, run by Kevin Wilson. Some revision history:

Release 1: worked in jzip, not in frotz. Oops.
Release 2: fixed the evil null object bug, official contest version
Release 3: made some daemons better, fixed many typos
Release 4: added a new solution to one puzzle, many verb synonyms
Release 5: fixed some very long lived bugs and one egregious typo

During its lifetime, this game has found itself on a cover CD of Mac User, been
used in classrooms as an educational aid, been recommended as a gift for blind
children, been translated into German, and won 5th place in the IF Competition
and a 1997 Xyzzy Award for Best Setting. I am amazed by all these things. What
can I say? Thankyou to everyone who helped make them happen."
S661: "For various reasons, all the following people (and probably more)
deserve a mention, even if they don't know it:

Gerry Kevin Wilson, Jay Goemmer, Andrew Plotkin, Russell Glasser, Adam Dawes,
Adam Cadre, Terence Fergusson, Patrick Kellum, Joe Mason, Liza Daly, Lucian
Smith, Gareth Rees, Admiral Jota, Mary Kuhner, Dan Shiovitz, Neil deMause,
Matthew Russotto, Michael Fessler, Female Deer, Neil Brown, Robert Rendell,
Andrew Harvey, Stephen Granade, Cody Sandifer, Chris Forman, Paul O'Brian,
Matthew Amster-Burton, Damian Jardim, Dylan O'Donnell, Jon Blaskowitz, Mark
Musante, Graham Nelson, Scott Adams and Mitch Lasky.

Extra thanks are due to Gunther Schmidl for his wonderful German translation of
this game.

Make sure to also read the closing credits, available after you win the game."
S662: "David Dyte was born in 1969 (see if you can find his birthday in the
game) and lives in Melbourne, Australia. Whilst the hero of our story is a
composite of many well loved friends, David does indeed own a cat called Holly,
as well as Matt and Terry and a Moose brand glow in the dark yoyo.

David can be contacted at ddyte@cricket.org."
S663: "For use of the three games most obviously referred to in A Bear's Night
Out, I owe considerable thanks:

The extract from `Curses' appears by kind permission of the author, Graham
Nelson.

The extract from `Adventureland' appears with the kind blessing of the author,
Scott Adams.

The extract from `Dungeon' appears by kind permission of Activision, with my
thanks to Mitch Lasky.

The idea of a hardware z-machine is independently mine, but thanks to Matthew
Russotto for his April Fool post to rec.arts.int-fiction anyway."
S664: "Shamelessly collecting in-jokes from across the history of Interactive
Fiction, and in case nothing else in the game amused you yet, find references
to about 32 other games in A Bear's Night Out. Try the paper pile, the
telephone and casting a few spells."
S665: "Have you: Fed Holly? Played her a tape of herself? Lured her into an
adventure?"
S666: "Have you quit while in an adventure? Have you saved while in an
adventure? Please do. 

Have you completely destroyed the illusion by using PLACES, OBJECTS or VERSION
while in adventure? Please don't."
S667: "Have you played the operator a range of tapes? Have you dialled for
help?"
S668: "Clearly you lack a musical background."
S669: "That's not something you can play."
S670: "Clearly you lack a musical background."
S671: "Teddy bears, being soft toys, find such feats difficult."
S672: " is not something you can dial numbers on."
S673: "You can't see anything to dial that number on."
S674: " is not something you can hang up."
S675: "You are in need of a good night's sleep."
S676: "Obviously you lack a medical background."
S677: "A hollow voice says `Obviously, you are in the wrong game.'"
S678: "An ingenious bear need not cast spells to make light."
S679: "The tumblers in the lock click back firmly.

On second thought, they don't. You should be able to do this without magic."
S680: "Hello and welcome to `A Bear's Night Out.'"
S681: "Electrical repair is not your forte."
S682: "That's not something you can unplug."
S683: "This is the afternoon of June 3rd, 1993, and you are in Meldrew Hall.
You have so far scored 0 out of a possible 550, in "
S684: ", giving you the rank of hapless Tourist.
"
S685: "Your score is 0 [total of 616 points], in "
S686: ".
This gives you the rank of Beginner.
"
S687: "I've stored 0 treasures. On a scale of 0 to 100, that rates 0.
"
S688: " All you need now is a good night's sleep."
S689: "write to"
S690: "read"
S691: "send message"
S692: "increment"
S693: "apply 'ofclass' for"
S694: "recreate"
S695: "destroy"
S696: "copy"
S697: "copy"
S698: "<unknown attribute>"
S699: "name"
S700: "create"
S701: "recreate"
S702: "destroy"
S703: "remaining"
S704: "copy"
S705: "call"
S706: "print"
S707: "print_to_array"
S708: "animate"
S709: "absent"
S710: "clothing"
S711: "concealed"
S712: "container"
S713: "door"
S714: "edible"
S715: "enterable"
S716: "general"
S717: "light"
S718: "lockable"
S719: "locked"
S720: "moved"
S721: "on"
S722: "open"
S723: "openable"
S724: "proper"
S725: "scenery"
S726: "scored"
S727: "static"
S728: "supporter"
S729: "switchable"
S730: "talkable"
S731: "transparent"
S732: "visited"
S733: "workflag"
S734: "worn"
S735: "male"
S736: "female"
S737: "neuter"
S738: "pluralname"
S739: "before"
S740: "after"
S741: "life"
S742: "n_to"
S743: "s_to"
S744: "e_to"
S745: "w_to"
S746: "ne_to"
S747: "se_to"
S748: "nw_to"
S749: "sw_to"
S750: "u_to"
S751: "d_to"
S752: "in_to"
S753: "out_to"
S754: "door_to"
S755: "with_key"
S756: "door_dir"
S757: "invent"
S758: "plural"
S759: "add_to_scope"
S760: "list_together"
S761: "react_before"
S762: "react_after"
S763: "grammar"
S764: "orders"
S765: "initial"
S766: "when_open"
S767: "when_closed"
S768: "when_on"
S769: "when_off"
S770: "description"
S771: "describe"
S772: "article"
S773: "cant_go"
S774: "found_in"
S775: "time_left"
S776: "number"
S777: "time_out"
S778: "daemon"
S779: "each_turn"
S780: "capacity"
S781: "short_name"
S782: "short_name_indef"
S783: "parse_name"
S784: "articles"
S785: "inside_description"
S786: "play"
S787: "Pronouns"
S788: "Quit"
S789: "Restart"
S790: "Restore"
S791: "Save"
S792: "Verify"
S793: "ScriptOn"
S794: "ScriptOff"
S795: "NotifyOn"
S796: "NotifyOff"
S797: "Places"
S798: "Objects"
S799: "Score"
S800: "FullScore"
S801: "Inv"
S802: "Take"
S803: "Drop"
S804: "Remove"
S805: "PutOn"
S806: "Insert"
S807: "EmptyT"
S808: "Give"
S809: "Show"
S810: "Enter"
S811: "GetOff"
S812: "Exit"
S813: "VagueGo"
S814: "Go"
S815: "LMode1"
S816: "LMode2"
S817: "LMode3"
S818: "Look"
S819: "Examine"
S820: "LookUnder"
S821: "Search"
S822: "Unlock"
S823: "Lock"
S824: "SwitchOn"
S825: "SwitchOff"
S826: "Open"
S827: "Close"
S828: "Disrobe"
S829: "Wear"
S830: "Eat"
S831: "Yes"
S832: "No"
S833: "Burn"
S834: "Pray"
S835: "Wake"
S836: "WakeOther"
S837: "Kiss"
S838: "Think"
S839: "Smell"
S840: "Listen"
S841: "Taste"
S842: "Touch"
S843: "Dig"
S844: "Cut"
S845: "Jump"
S846: "JumpOver"
S847: "Tie"
S848: "Drink"
S849: "Fill"
S850: "Sorry"
S851: "Strong"
S852: "Mild"
S853: "Attack"
S854: "Swim"
S855: "Swing"
S856: "Blow"
S857: "Rub"
S858: "Set"
S859: "SetTo"
S860: "WaveHands"
S861: "Wave"
S862: "Pull"
S863: "Push"
S864: "Turn"
S865: "PushDir"
S866: "Squeeze"
S867: "ThrowAt"
S868: "Tell"
S869: "Answer"
S870: "Ask"
S871: "Buy"
S872: "Sing"
S873: "Climb"
S874: "Wait"
S875: "Sleep"
S876: "Consult"
S877: "parse_input"
S878: "AskFor"
S879: "GiveR"
S880: "ShowR"
S881: "begin_action"
S882: "end_turn_sequence"
S883: "awake"
S884: "magmedia"
S885: "bulky"
S886: "feathery"
S887: "quite_big"
S888: "StickTo"
S889: "Transfer"
S890: "emblazon"
S891: "select"
S892: "see_me"
S893: "climb_from_low"
S894: "Empty"
S895: "Lick"
S896: "DialUp"
S897: "Play"
S898: "HangUp"
S899: "PlayWith"
S900: "JumpOn"
S901: "hear_noise"
S902: "move_me"
S903: "Strum"
S904: "lose_sludge"
S905: "awaken"
S906: "move_adv"
S907: "push_test"
S908: "talk_stage"
S909: "call_up"
S910: "PlayTape"
S911: "give_up_item"
S912: "useless_item"
S913: "only_move"
S914: "big_bounce"
S915: "Version"
S916: "InvTall"
S917: "InvWide"
S918: "GoIn"
S919: "Ride"
S920: "Help"
S921: "QuotesOff"
S922: "QuotesOn"
S923: "QuoteTog"
S924: "NonDialUp"
S925: "AutoDialUp"
S926: "Waylay"
S927: "AttWith"
S928: "Diagnose"
S929: "OddDiag"
S930: "MagicWord"
S931: "Frotz"
S932: "Rezrov"
S933: "Vaxum"
S934: "Hello"
S935: "HelloTo"
S936: "Unplug"

[End of text]

[End of file]
