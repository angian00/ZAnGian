Resident data ends at 3ac4, program starts at 3ac4, file ends at 15a50

Starting analysis pass at address 3ac4

End of analysis pass, low address = 3ac4, high address = 132a8

[Start of code]

Main routine R0001, 0 locals

       CALL_VS         R0002 -> Gef
       QUIT            

Routine R0002, 0 locals

       CALL_1N         R0052
       RTRUE           

Routine R0003, 7 locals

       CALL_1N         R0049
L0001: STORE           L03,#00
L0002: JL              L03,#0a [FALSE] L0003
       LOADB           L01,L03 -> -(SP)
       STOREB          #1a36,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: STOREB          L00,#00,#78
       STOREB          L01,#00,#40
       CALL_2N         R0206 (#0108)
       CALL_1N         R0328
       STORE           Gef,#00
       STORE           Gec,L00
       STOREB          Gec,#01,#00
       CALL_1N         R0327
       READ            Gec,L01 -> Gef
       LOADB           L01,#01 -> L02
       JZ              L02 [FALSE] L0004
       CALL_VN         R0206 (#0107,#0a)
       JUMP            L0001
L0004: LOADW           L01,#01 -> L04
       JE              L04,"o","oops" [FALSE] L0005
       JUMP            L0016
L0005: JE              L04,"undo" [FALSE] L0012
       LOADB           #183a,#01 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0012
       JE              G0b,#01 [FALSE] L0006
       CALL_VN         R0206 (#0107,#0b)
       JUMP            L0001
L0006: JZ              G2e [FALSE] L0007
       CALL_VN         R0206 (#0107,#06)
       JUMP            L0001
L0007: JE              G2e,#01 [FALSE] L0008
       JUMP            L0010
L0008: JE              G6e,#01 [FALSE] L0009
       CALL_VN         R0206 (#0107,#0c)
       JUMP            L0001
L0009: RESTORE_UNDO    -> L03
       JZ              L03 [FALSE] L0011
L0010: CALL_VN         R0206 (#0107,#07)
L0011: JUMP            L0001
L0012: SAVE_UNDO       -> L03
       STORE           G6e,#00
       STORE           G2e,#02
       JE              L03,#ffff [FALSE] L0013
       STORE           G2e,#00
L0013: JZ              L03 [FALSE] L0014
       STORE           G2e,#01
L0014: JE              L03,#02 [FALSE] L0015
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0078 (G04)
       PRINT           "
"
       SET_TEXT_STYLE  ROMAN
       CALL_VN         R0206 (#0107,#0d)
       STORE           G6e,#01
       JUMP            L0001
L0015: RET             L02
L0016: JZ              G42 [FALSE] L0017
       CALL_VN         R0206 (#0107,#0e)
       JUMP            L0001
L0017: JE              L02,#01 [FALSE] L0018
       CALL_VN         R0206 (#0107,#0f)
       JUMP            L0001
L0018: JG              L02,#02 [FALSE] L0019
       CALL_VN         R0206 (#0107,#10)
       JUMP            L0001
L0019: LOADW           L01,#03 -> L05
       LOADW           L01,#04 -> L06
       STORE           L03,#00
L0020: JL              L03,#0a [FALSE] L0021
       LOADB           #1a36,L03 -> -(SP)
       STOREB          L01,L03,(SP)+
       INC             L03
       JUMP            L0020
L0021: MUL             #02,G42 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STOREW          L01,L04,L05
       ADD             L04,#01 -> -(SP)
       STOREW          L01,(SP)+,L06
       RET             L02

Routine R0004, 10 locals

       JE              G28,#01 [FALSE] L0003
       STORE           L05,#00
L0001: JL              L05,#08 [FALSE] L0002
       LOADW           #1b40,L05 -> -(SP)
       STOREW          L00,L05,(SP)+
       INC             L05
       JUMP            L0001
L0002: STORE           G28,#00
       RTRUE           
L0003: JE              G59,#01 [FALSE] L0006
       STORE           G59,#00
       STORE           L05,#00
L0004: JL              L05,#40 [FALSE] L0005
       LOADB           #1994,L05 -> -(SP)
       STOREB          #183a,L05,(SP)+
       INC             L05
       JUMP            L0004
L0005: NEW_LINE        
       JUMP            L0007
L0006: CALL_VN         R0003 (#17c1,#183a)
L0007: LOADB           #183a,#01 -> G34
       STORE           G33,#01
       CALL_1N         R0371
       LOADB           #183a,#01 -> G34
       STORE           G36,#01
       STORE           G1b,G0c
       STORE           G1c,G04
       STORE           G6d,#00
L0008: STORE           G60,#00
       STORE           G67,#00
       STORE           G64,#ffff
L0009: STORE           G33,G36
       CALL_1S         R0037 -> G35
       JE              G35,#ffff [FALSE] L0010
       STORE           G5b,#01
       JUMP            L0084
L0010: JE              G35,"g" [FALSE] L0011
       STORE           G35,"again"
L0011: JE              G35,"again" [FALSE] L0016
       JE              G1b,G0c [TRUE] L0012
       PRINT           "To repeat a command like "frog, jump", just say
"again", not "frog, again".
"
       JUMP            L0006
L0012: LOADB           #19d5,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0013
       PRINT           "You can hardly repeat that.
"
       JUMP            L0006
L0013: STORE           L05,#00
L0014: JL              L05,#40 [FALSE] L0015
       LOADB           #19d5,L05 -> -(SP)
       STOREB          #183a,L05,(SP)+
       INC             L05
       JUMP            L0014
L0015: JUMP            L0007
L0016: JE              G35,"again" [TRUE] L0018
       STORE           L05,#00
L0017: JL              L05,#40 [FALSE] L0018
       LOADB           #183a,L05 -> -(SP)
       STOREB          #19d5,L05,(SP)+
       INC             L05
       JUMP            L0017
L0018: JZ              G6d [FALSE] L0023
       CALL_VS         R0048 (G1b,#11) -> L05
       JL              L05,#00 [FALSE] L0019
       STORE           G6d,G36
       SUB             #00,L05 -> L05
L0019: JE              L05,#01 [FALSE] L0020
       STOREW          L00,#00,G1d
       STOREW          L00,#01,G22
       STOREW          L00,#02,G23
       RTRUE           
L0020: JZ              L05 [TRUE] L0021
       STORE           G35,L05
       DEC             G33
       DEC             G36
       JUMP            L0022
L0021: STORE           G33,G36
       CALL_1S         R0036 -> G35
L0022: JUMP            L0024
L0023: STORE           G6d,#00
L0024: JZ              G35 [TRUE] L0025
       LOADB           G35,#06 -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0040
L0025: STORE           G33,G36
       CALL_VS         R0009 (#06,#00,#00) -> L08
       JE              L08,#2710 [FALSE] L0026
       JUMP            L0007
L0026: JZ              L08 [TRUE] L0027
       STOREW          L00,#00,#00
       STOREW          L00,#01,#01
       STOREW          L00,#02,L08
       JUMP            L0114
L0027: JE              G1b,G0c [FALSE] L0031
       STORE           L06,#02
L0028: JG              L06,G34 [TRUE] L0030
       CALL_1S         R0036 -> L05
       JE              L05,"xcomma" [FALSE] L0029
       JUMP            L0032
L0029: INC             L06
       JUMP            L0028
L0030: CALL_2S         R0373 (G35) -> G35
       JZ              G35 [TRUE] L0031
       JUMP            L0040
L0031: STORE           G5b,#0c
       JUMP            L0084
L0032: SUB             G33,#01 -> L06
       JE              L06,#01 [FALSE] L0033
       PRINT           "You can't begin with a comma.
"
       JUMP            L0006
L0033: STORE           G33,#01
       STORE           G50,#01
       STORE           G66,#01
       CALL_VS         R0009 (G0c,G1c,#06) -> L08
       STORE           G66,#00
       JE              L08,#2710 [FALSE] L0034
       JUMP            L0007
L0034: JZ              L08 [FALSE] L0035
       PRINT           "You seem to want to talk to someone, but I can't see
whom.
"
       JUMP            L0006
L0035: TEST_ATTR       L08,#00 [TRUE] L0036
       TEST_ATTR       L08,#16 [TRUE] L0036
       PRINT           "You can't talk to "
       CALL_2N         R0076 (L08)
       PRINT           ".
"
       JUMP            L0006
L0036: JE              G33,L06 [TRUE] L0037
       PRINT           "To talk to someone, try "someone, hello" or some such.
"
       JUMP            L0006
L0037: CALL_2N         R0041 (L08)
       ADD             L06,#01 -> G36
       STORE           G1b,L08
       STORE           G1c,L08
L0038: GET_PARENT      G1c -> -(SP)
       JZ              (SP)+ [TRUE] L0039
       GET_PARENT      G1c -> G1c
       JUMP            L0038
L0039: JUMP            L0009
L0040: LOADB           G35,#06 -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> G2a
       JE              G2a,#01 [FALSE] L0041
       JE              G1b,G0c [TRUE] L0041
       STORE           G5b,#0c
       STORE           G2a,#00
       JUMP            L0084
L0041: LOADB           G35,#07 -> -(SP)
       SUB             #ff,(SP)+ -> L05
       LOADW           #00,#07 -> -(SP)
       LOADW           (SP)+,L05 -> L01
       LOADB           L01,#00 -> -(SP)
       SUB             (SP)+,#01 -> L03
       STORE           G4b,"it"
       STORE           G4c,G4d
       STORE           G5b,#01
       STORE           G5c,G5b
       STORE           L02,#00
L0042: JG              L02,L03 [TRUE] L0084
       MUL             L02,#08 -> -(SP)
       ADD             L01,#01 -> -(SP)
       ADD             (SP)+,(SP)+ -> L04
       STORE           G56,#00
       STORE           G40,#00
       STORE           G3d,#00
       LOADB           L04,#00 -> G3e
       STORE           G3f,#00
       STORE           G24,#00
       STORE           G25,#00
       STOREW          #189b,#00,#00
       STORE           G3a,#00
       STORE           G5d,#01
       LOADB           L04,#07 -> G64
       ADD             G36,#01 -> G33
       STORE           G61,#ffff
       STORE           G51,#00
       STORE           L05,#00
       STORE           L09,#00
       STORE           G3b,#01
L0043: JG              G3b,#06 [TRUE] L0052
       STORE           G67,#00
       LOADB           L04,G3b -> L07
       JE              L07,#02 [FALSE] L0044
       INC             L09
L0044: JL              L07,#b4 [FALSE] L0045
       INC             L05
L0045: JE              L07,#04,#05 [FALSE] L0051
       JE              L05,#01 [FALSE] L0051
       INC             G3b
L0046: JG              G3b,#06 [TRUE] L0047
       LOADB           L04,G3b -> -(SP)
       JL              (SP)+,#b4 [TRUE] L0047
       INC             G3b
       JUMP            L0046
L0047: SUB             G3b,#01 -> -(SP)
       LOADB           L04,(SP)+ -> L07
       JL              L07,#b4 [TRUE] L0051
       CALL_2S         R0034 (L07) -> L06
L0048: JG              G33,G34 [TRUE] L0051
       CALL_1S         R0036 -> -(SP)
       JE              (SP)+,L06 [FALSE] L0050
       CALL_VS         R0009 (G1c,G1b,L07) -> L08
       JE              L08,#2710 [FALSE] L0049
       JUMP            L0007
L0049: JL              L08,#02 [TRUE] L0050
       STORE           G61,L08
L0050: JUMP            L0048
L0051: INC             G3b
       JUMP            L0043
L0052: STORE           G6c,#00
       JE              L09,#01 [FALSE] L0053
       JE              G3e,#01 [FALSE] L0053
       JE              G64,#01 [FALSE] L0053
       STORE           G6c,#01
L0053: STORE           G56,#00
       STORE           G40,#00
       STORE           G3d,#00
       STORE           G3f,#00
       STORE           G24,#00
       STORE           G25,#00
       STOREW          #189b,#00,#00
       STORE           G5d,#01
       LOADB           L04,#07 -> G64
       ADD             G36,#01 -> G33
       STORE           G3b,#01
L0054: JG              G3b,#06 [TRUE] L0080
       STOREW          #1a16,G3b,#00
       STORE           G67,#00
       LOADB           L04,G3b -> L07
       ADD             G3b,#01 -> L09
       STORE           G50,#08
       JG              L09,#06 [TRUE] L0055
       LOADB           L04,L09 -> G50
L0055: JZ              G50 [FALSE] L0057
       STORE           L09,G3d
       JG              L07,#07 [TRUE] L0056
       INC             L09
L0056: JL              L09,G3e [TRUE] L0057
       STORE           G50,#08
L0057: JG              L07,#b4 [FALSE] L0061
       ADD             #2710,L07 -> -(SP)
       STOREW          #1a16,G3b,(SP)+
       JG              G33,G34 [FALSE] L0059
       JZ              G40 [FALSE] L0058
       JL              G3d,G3e [FALSE] L0058
       STORE           G40,G3b
       STORE           G41,L07
L0058: JZ              G40 [FALSE] L0059
       JUMP            L0080
L0059: JG              G33,G34 [TRUE] L0060
       CALL_1S         R0033 -> -(SP)
       JE              L07,(SP)+ [TRUE] L0060
       JUMP            L0080
L0060: JUMP            L0079
L0061: JE              G3d,G3e [FALSE] L0075
       JG              G33,G34 [TRUE] L0065
       CALL_1S         R0036 -> L08
       JE              L08,"then","xcomma" [FALSE] L0062
       STORE           G59,#01
       SUB             G33,#01 -> G5a
       JUMP            L0065
L0062: STORE           L09,#00
L0063: JL              L09,#08 [FALSE] L0064
       LOADW           #1a16,L09 -> -(SP)
       STOREW          #1a26,L09,(SP)+
       INC             L09
       JUMP            L0063
L0064: STORE           G3c,G3b
       STORE           G5d,#02
       JUMP            L0080
L0065: JL              G3d,#01 [TRUE] L0066
       LOADW           L00,#02 -> -(SP)
       JZ              (SP)+ [FALSE] L0066
       LOADW           L00,#03 -> -(SP)
       CALL_2S         R0011 ((SP)+) -> L08
       JZ              L08 [TRUE] L0066
       STORE           G5d,L08
       JUMP            L0080
L0066: JL              G3d,#02 [TRUE] L0067
       LOADW           L00,#03 -> -(SP)
       JZ              (SP)+ [FALSE] L0067
       LOADW           L00,#02 -> -(SP)
       CALL_2S         R0011 ((SP)+) -> L08
       JZ              L08 [TRUE] L0067
       STORE           G5d,L08
       JUMP            L0080
L0067: JE              G6c,#02 [FALSE] L0068
       LOADW           L00,#02 -> -(SP)
       JE              (SP)+,G1b [FALSE] L0068
       STORE           G5b,#11
       JUMP            L0084
L0068: JZ              G40 [TRUE] L0069
       PRINT           "("
       CALL_VN         R0015 (G40,#01)
       PRINT           ")
"
L0069: STOREW          L00,#01,G3e
       LOADB           L04,#07 -> -(SP)
       STOREW          L00,#00,(SP)+
       JG              G3d,#00 [FALSE] L0070
       LOADW           L00,#02 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0070
       LOADW           L00,#02 -> -(SP)
       CALL_2N         R0041 ((SP)+)
L0070: STORE           G42,#00
       JZ              G56 [TRUE] L0073
       JE              G1b,G0c [FALSE] L0073
       STORE           G28,#01
       STORE           L05,#00
L0071: JL              L05,#08 [FALSE] L0072
       LOADW           L00,L05 -> -(SP)
       STOREW          #1b40,L05,(SP)+
       INC             L05
       JUMP            L0071
L0072: STOREW          L00,#00,#01
       STOREW          L00,#01,#01
       STOREW          L00,#02,G56
       PRINT           "(first taking "
       CALL_2N         R0076 (G56)
       PRINT           ")
"
L0073: JE              G59,#01 [FALSE] L0074
       STORE           G33,G5a
       JUMP            L0114
L0074: RTRUE           
L0075: JE              L07,#06 [FALSE] L0077
       JE              G64,#02,#03,#04 [TRUE] L0076
       JE              G64,#05 [FALSE] L0077
L0076: STORE           G66,#01
L0077: CALL_VS         R0008 (L00,L07) -> L08
       STORE           G66,#00
       JE              L08,#2710 [FALSE] L0078
       JUMP            L0007
L0078: JZ              L08 [FALSE] L0079
       JUMP            L0080
L0079: INC             G3b
       JUMP            L0054
L0080: JG              G5d,G5b [FALSE] L0081
       STORE           G5b,G5d
L0081: JE              G5d,#12 [TRUE] L0082
       JG              G5d,G5c [FALSE] L0082
       STORE           G5c,G5d
L0082: JE              G6c,#02 [FALSE] L0083
       JE              G5d,#11 [FALSE] L0083
       JUMP            L0084
L0083: INC             L02
       JUMP            L0042
L0084: STORE           G5d,G5b
       JE              G1b,G0c [TRUE] L0087
       JG              G6d,#00 [FALSE] L0085
       STORE           G36,G6d
       JUMP            L0008
L0085: STORE           G33,G36
       CALL_1S         R0036 -> G24
       JE              G24,"xcomma" [FALSE] L0086
       CALL_1S         R0036 -> G24
       INC             G36
L0086: CALL_2S         R0040 (G36) -> G25
       STOREW          L00,#00,#0109
       STOREW          L00,#01,#02
       STOREW          L00,#02,#01
       STORE           G20,G24
       STOREW          L00,#03,G1b
       STORE           G2c,G36
       SUB             G34,G2c -> -(SP)
       ADD             (SP)+,#01 -> G2d
       RTRUE           
L0087: CALL_2S         R0375 (G5d) -> -(SP)
       JZ              (SP)+ [TRUE] L0088
       JUMP            L0006
L0088: JE              G5d,#01 [FALSE] L0089
       PRINT           "I didn't understand that sentence.
"
       STORE           G42,#01
L0089: JE              G5d,#02 [FALSE] L0092
       PRINT           "I only understood you as far as wanting to "
       STORE           L09,#00
L0090: JL              L09,#08 [FALSE] L0091
       LOADW           #1a26,L09 -> -(SP)
       STOREW          #1a16,L09,(SP)+
       INC             L09
       JUMP            L0090
L0091: STORE           G3b,G3c
       CALL_VN         R0015 (#00,#01)
       PRINT           ".
"
L0092: JE              G5d,#03 [FALSE] L0093
       PRINT           "I didn't understand that number.
"
L0093: JE              G5d,#04 [FALSE] L0094
       PRINT           "You can't see any such thing.
"
       STORE           G42,G43
L0094: JE              G5d,#05 [FALSE] L0095
       PRINT           "You seem to have said too little!
"
L0095: JE              G5d,#06 [FALSE] L0096
       PRINT           "You aren't holding that!
"
       STORE           G42,G43
L0096: JE              G5d,#07 [FALSE] L0097
       PRINT           "You can't use multiple objects with that verb.
"
L0097: JE              G5d,#08 [FALSE] L0098
       PRINT           "You can only use multiple objects once on a line.
"
L0098: JE              G5d,#09 [FALSE] L0099
       PRINT           "I'm not sure what ""
       PRINT_ADDR      G4b
       PRINT           "" refers to.
"
L0099: JE              G5d,#0a [FALSE] L0100
       PRINT           "You excepted something not included anyway!
"
L0100: JE              G5d,#0b [FALSE] L0101
       PRINT           "You can only do that to something animate.
"
L0101: JE              G5d,#0c [FALSE] L0102
       PRINT           "That's not a verb I recognise.
"
L0102: JE              G5d,#0d [FALSE] L0103
       PRINT           "That's not something you need to refer to in the course
of this game.
"
L0103: JE              G5d,#0e [FALSE] L0104
       PRINT           "You can't see ""
       PRINT_ADDR      G4b
       PRINT           "" ("
       CALL_2N         R0076 (G4c)
       PRINT           ") at the moment.
"
L0104: JE              G5d,#0f [FALSE] L0105
       PRINT           "I didn't understand the way that finished.
"
L0105: JE              G5d,#10 [FALSE] L0110
       JZ              G39 [FALSE] L0106
       PRINT           "None"
       JUMP            L0107
L0106: PRINT           "Only "
       CALL_2N         R0087 (G39)
L0107: PRINT           " of those "
       JE              G39,#01 [FALSE] L0108
       PRINT           "is"
       JUMP            L0109
L0108: PRINT           "are"
L0109: PRINT           " available.
"
L0110: JE              G5d,#11 [FALSE] L0112
       JE              G38,#64 [FALSE] L0111
       PRINT           "Nothing to do!
"
       JUMP            L0112
L0111: PRINT           "There are none at all available!
"
L0112: JE              G5d,#12 [FALSE] L0113
       STORE           G69,#03
       CALL_1S         G68 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0113
       STORE           G5b,G5c
       JUMP            L0084
L0113: JUMP            L0006
L0114: JG              G33,G34 [TRUE] RTRUE
       CALL_1S         R0036 -> L05
       JE              L05,"then" [TRUE] L0115
       JE              L05,"xcomma" [FALSE] L0133
L0115: JG              G33,G34 [FALSE] L0116
       LOADB           #1994,#01 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       STOREB          #1994,#01,(SP)+
       STORE           G59,#00
       RTRUE           
L0116: JE              G1b,G0c [FALSE] L0117
       STORE           L06,#00
       JUMP            L0118
L0117: SUB             G36,#01 -> L06
L0118: ADD             L06,#01 -> G5e
       SUB             G33,#02 -> G5f
       CALL_1S         R0036 -> L05
       JE              L05,"again","g" [FALSE] L0127
       STORE           L05,#00
L0119: JL              L05,L06 [FALSE] L0120
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#02 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#02 -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       INC             L05
       JUMP            L0119
L0120: STORE           L05,G5e
       JUMP            L0122
L0121: INC             L05
       INC             L06
L0122: JG              L05,G5f [TRUE] L0123
       MUL             #02,L05 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L06 -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       MUL             #02,L05 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L06 -> -(SP)
       ADD             #01,(SP)+ -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       JUMP            L0121
L0123: STORE           L05,G33
       JUMP            L0125
L0124: INC             L05
       INC             L06
L0125: JG              L05,G34 [TRUE] L0126
       MUL             #02,L05 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L06 -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       MUL             #02,L05 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L06 -> -(SP)
       ADD             #01,(SP)+ -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       JUMP            L0124
L0126: STOREB          #1994,#01,L06
       STORE           G59,#01
       RTRUE           
L0127: DEC             G33
       STORE           L05,#00
L0128: JL              L05,L06 [FALSE] L0129
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#02 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L05 -> -(SP)
       ADD             (SP)+,#02 -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       INC             L05
       JUMP            L0128
L0129: STORE           L05,G33
       JUMP            L0131
L0130: INC             L05
       INC             L06
L0131: JG              L05,G34 [TRUE] L0132
       MUL             #02,L05 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L06 -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       MUL             #02,L05 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       LOADW           #183a,(SP)+ -> -(SP)
       MUL             #02,L06 -> -(SP)
       ADD             #01,(SP)+ -> -(SP)
       STOREW          #1994,(SP)+,(SP)+
       JUMP            L0130
L0132: STOREB          #1994,#01,L06
       STORE           G59,#01
       RTRUE           
L0133: STORE           G5b,#02
       JUMP            L0084

Routine R0005, 1 local

       JE              L00,"one" [FALSE] L0001
       RTRUE           
L0001: JE              L00,"two" [FALSE] L0002
       RET             #02
L0002: JE              L00,"three" [FALSE] L0003
       RET             #03
L0003: JE              L00,"four" [FALSE] L0004
       RET             #04
L0004: JE              L00,"five" [FALSE] L0005
       RET             #05
L0005: JE              L00,"six" [FALSE] L0006
       RET             #06
L0006: JE              L00,"seven" [FALSE] L0007
       RET             #07
L0007: JE              L00,"eight" [FALSE] L0008
       RET             #08
L0008: JE              L00,"nine" [FALSE] L0009
       RET             #09
L0009: JE              L00,"ten" [FALSE] L0010
       RET             #0a
L0010: JE              L00,"eleven" [FALSE] L0011
       RET             #0b
L0011: JE              L00,"twelve" [FALSE] L0012
       RET             #0c
L0012: JE              L00,"thirteen" [FALSE] L0013
       RET             #0d
L0013: JE              L00,"fourteen" [FALSE] L0014
       RET             #0e
L0014: JE              L00,"fifteen" [FALSE] L0015
       RET             #0f
L0015: JE              L00,"sixteen" [FALSE] L0016
       RET             #10
L0016: JE              L00,"seventeen" [FALSE] L0017
       RET             #11
L0017: JE              L00,"eighteen" [FALSE] L0018
       RET             #12
L0018: JE              L00,"nineteen" [FALSE] L0019
       RET             #13
L0019: JE              L00,"twenty" [FALSE] L0020
       RET             #14
L0020: RFALSE          

Routine R0006, 4 locals

       STORE           G51,#00
       STORE           G52,#00
       STORE           G53,#00
       STORE           G54,#00
       STORE           L02,#01
L0001: JE              L02,#01 [FALSE] L0017
       CALL_1S         R0036 -> L01
       STORE           L02,#00
       JE              L01,"the" [FALSE] L0002
       STORE           L02,#01
L0002: JE              L01,"a","an","any" [TRUE] L0003
       JE              L01,"either","anything" [FALSE] L0004
L0003: STORE           G51,#01
       STORE           L02,#01
L0004: JE              L01,"another","other" [FALSE] L0005
       STORE           G51,#01
       STORE           L02,#01
       OR              G52,#01 -> G52
L0005: JE              L01,"my","this","these" [FALSE] L0006
       STORE           G51,#01
       STORE           L02,#01
       OR              G52,#02 -> G52
L0006: JE              L01,"that","those" [FALSE] L0007
       STORE           G51,#01
       STORE           L02,#01
       OR              G52,#04 -> G52
L0007: JE              L01,"its" [FALSE] L0008
       STORE           G51,#01
       STORE           L02,#01
       OR              G52,#10 -> G52
L0008: JE              L01,"his","your" [FALSE] L0009
       STORE           G51,#01
       STORE           L02,#01
       OR              G52,#20 -> G52
L0009: JE              L01,"lit","lighted" [FALSE] L0010
       STORE           G51,#01
       STORE           L02,#01
       OR              G52,#40 -> G52
L0010: JE              L01,"unlit" [FALSE] L0011
       STORE           G51,#01
       STORE           L02,#01
       OR              G52,#80 -> G52
L0011: JE              L01,"all","each","every" [TRUE] L0012
       JE              L01,"everythin" [FALSE] L0014
L0012: STORE           G51,#01
       STORE           L02,#01
       STORE           G53,#64
       JE              G6c,#01 [FALSE] L0013
       STORE           G6c,#02
L0013: OR              G52,#08 -> G52
L0014: JE              G55,#01 [FALSE] L0015
       CALL_2S         R0005 (L01) -> L03
       JG              L03,#01 [FALSE] L0015
       STORE           G54,#01
       STORE           G51,#01
       STORE           L02,#01
       STORE           G53,L03
       OR              G52,#08 -> G52
L0015: JE              L02,#01 [FALSE] L0016
       CALL_1S         R0036 -> -(SP)
       JE              (SP)+,"of" [TRUE] L0016
       DEC             G33
L0016: JUMP            L0001
L0017: DEC             G33
       JG              G53,#00 [FALSE] L0019
       JL              L00,#02 [TRUE] L0018
       JG              L00,#05 [FALSE] L0019
L0018: RET             #07
L0019: RFALSE          

Routine R0007, 1 local

       TEST_ATTR       L00,#00 [TRUE] RTRUE
       TEST_ATTR       L00,#16 [FALSE] RFALSE
       JE              G64,#03,#02,#05 [TRUE] RTRUE
       JE              G64,#04 [TRUE] RTRUE
       RFALSE          

Routine R0008, 11 locals

       STORE           L0a,#00
       STORE           L07,#01
       STORE           G65,#00
L0001: CALL_1S         R0036 -> L03
       DEC             G33
       JE              L03,"it","them" [FALSE] L0002
       STORE           G4b,L03
       STORE           G4c,G4d
       JZ              G4d [FALSE] L0002
       STORE           G5d,#09
       RFALSE          
L0002: JE              L03,"him" [FALSE] L0003
       STORE           G4b,L03
       STORE           G4c,G4e
       JZ              G4e [FALSE] L0003
       STORE           G5d,#09
       RFALSE          
L0003: JE              L03,"her" [FALSE] L0004
       STORE           G4b,L03
       STORE           G4c,G4f
       JZ              G4f [FALSE] L0004
       STORE           G5d,#09
       RFALSE          
L0004: JE              L03,"me","myself","self" [FALSE] L0005
       STORE           G4b,L03
       STORE           G4c,G0c
L0005: JE              L01,#07 [FALSE] L0009
       CALL_2S         R0040 (G33) -> L02
       JE              L02,#fc18 [TRUE] L0008
       JZ              G3f [FALSE] L0006
       STORE           G20,L02
       JUMP            L0007
L0006: STORE           G21,L02
L0007: STORE           G25,L02
       INC             G3f
L0008: CALL_1S         R0036 -> G24
       STORE           L08,#01
       JUMP            L0048
L0009: JE              L01,#08 [FALSE] L0013
       PUSH            G33
       INC             G33
       CALL_2S         R0040 ((SP)+) -> L02
       JE              L02,#fc18 [FALSE] L0010
       STORE           G5d,#03
       RFALSE          
L0010: PUSH            G3f
       INC             G3f
       JZ              (SP)+ [FALSE] L0011
       STORE           G20,L02
       JUMP            L0012
L0011: STORE           G21,L02
L0012: STORE           L08,#01
       JUMP            L0048
L0013: JL              L01,#30 [TRUE] L0019
       JL              L01,#50 [FALSE] L0019
       SUB             L01,#30 -> -(SP)
       LOADW           #255b,(SP)+ -> -(SP)
       CALL_1S         (SP)+ -> L02
       JL              L02,#00 [TRUE] RFALSE
       JZ              L02 [FALSE] L0014
       DEC             G3e
       RTRUE           
L0014: JE              L02,#01 [FALSE] L0017
       JZ              G3f [FALSE] L0015
       STORE           G20,G26
       JUMP            L0016
L0015: STORE           G21,G26
L0016: INC             G3f
L0017: JE              L02,#2710 [FALSE] L0018
       RET             L02
L0018: STORE           L08,L02
       JUMP            L0048
L0019: JL              L01,#50 [TRUE] L0021
       JL              L01,#80 [FALSE] L0021
       SUB             L01,#50 -> -(SP)
       LOADW           #255b,(SP)+ -> G67
       STORE           G69,#01
       CALL_1S         G67 -> L02
       JE              L02,#01 [FALSE] L0020
       STORE           L01,#02
       JUMP            L0021
L0020: STORE           L01,#00
L0021: STORE           G60,#00
       JL              L01,#10 [TRUE] L0022
       STORE           G60,L01
       STORE           L01,#00
L0022: STORE           G55,#01
       STORE           L09,G33
L0023: CALL_2S         R0006 (L01) -> L02
       JZ              L02 [TRUE] L0024
       STORE           G5d,L02
       RFALSE          
L0024: STORE           G42,G33
       JE              L01,#01 [TRUE] L0036
       LOADW           #189b,#00 -> L04
       CALL_VS         R0009 (G1c,G1b,L01) -> L02
       JE              L02,#2710 [FALSE] L0025
       RET             L02
L0025: JZ              L02 [FALSE] L0026
       CALL_1S         R0016 -> G5d
       JUMP            L0051
L0026: JE              L02,#01 [FALSE] L0032
       JZ              L0a [FALSE] L0027
       STORE           L0a,#01
       JUMP            L0031
L0027: LOADW           #189b,#00 -> L06
       STOREW          #189b,#00,L04
       ADD             L04,#01 -> L05
L0028: JG              L05,L06 [TRUE] L0031
       JE              L07,#01 [FALSE] L0029
       LOADW           #189b,L05 -> -(SP)
       CALL_2N         R0017 ((SP)+)
       JUMP            L0030
L0029: LOADW           #189b,L05 -> -(SP)
       CALL_2N         R0018 ((SP)+)
L0030: INC             L05
       JUMP            L0028
L0031: JUMP            L0036
L0032: JE              L01,#06 [FALSE] L0033
       CALL_2S         R0007 (L02) -> -(SP)
       JZ              (SP)+ [FALSE] L0033
       STORE           G5d,#0b
       JUMP            L0051
L0033: JZ              L0a [FALSE] L0034
       STORE           L08,L02
       JUMP            L0036
L0034: JE              L07,#01 [FALSE] L0035
       CALL_2N         R0017 (L02)
       JUMP            L0036
L0035: CALL_2N         R0018 (L02)
L0036: JE              L01,#01 [FALSE] L0041
       CALL_VS         R0009 (G1b,G1c,L01) -> L02
       JE              L02,#2710 [FALSE] L0037
       RET             L02
L0037: JZ              L02 [FALSE] L0038
       CALL_1S         R0016 -> G5d
       RET             L02
L0038: GET_PARENT      L02 -> L03
       JE              L03,G1b [TRUE] L0040
       JE              G28,#01 [FALSE] L0039
       STORE           G43,G42
       STORE           G5d,#06
       JUMP            L0051
L0039: STORE           G56,L02
L0040: STORE           L08,L02
L0041: ADD             G42,G46 -> G33
       CALL_1S         R0036 -> L03
       JE              L03,"and","but","except" [TRUE] L0042
       JE              L03,"xcomma" [FALSE] L0047
L0042: JL              L01,#02 [TRUE] L0043
       JL              L01,#06 [TRUE] L0044
L0043: STORE           G5d,#07
       JUMP            L0051
L0044: JE              L03,"but","except" [FALSE] L0045
       SUB             #01,L07 -> L07
L0045: JZ              L0a [FALSE] L0046
       STOREW          #189b,#00,#01
       STOREW          #189b,#01,L08
       STORE           L0a,#01
L0046: STORE           G65,#01
       STORE           G40,#00
       JUMP            L0001
L0047: DEC             G33
L0048: JE              L0a,#01 [FALSE] L0049
       STORE           L08,#00
       STORE           G3a,L01
       JUMP            L0050
L0049: JE              G51,#01 [FALSE] L0050
       AND             G52,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       JL              G53,#64 [FALSE] L0050
       JG              G53,#01 [FALSE] L0050
       STORE           G39,#01
       STORE           G38,G53
       STORE           G5d,#10
       JUMP            L0051
L0050: ADD             G3d,#02 -> -(SP)
       STOREW          L00,(SP)+,L08
       INC             G3d
       STOREW          #1a16,G3b,L08
       RTRUE           
L0051: JE              G55,#01 [FALSE] L0052
       JE              G54,#01 [FALSE] L0052
       STORE           G55,#00
       STORE           G33,L09
       JUMP            L0023
L0052: RFALSE          

Routine R0009, 11 locals

       STORE           G46,#00
       STORE           G44,#00
       STORE           G47,G33
       STORE           G62,#00
       CALL_VN         R0022 (L00,L01,L02)
       ADD             G47,G46 -> G33
       JZ              G44 [FALSE] L0001
       INC             G33
       RFALSE          
L0001: JG              G47,G34 [TRUE] L0004
       JE              G44,#01 [FALSE] L0002
       LOADW           #1a40,#00 -> L04
       RET             L04
L0002: JG              G33,G34 [TRUE] L0004
       CALL_1S         R0036 -> L04
       DEC             G33
       JE              L04,"and","xcomma","then" [TRUE] L0004
       JE              L04,"but","except" [TRUE] L0004
       JE              G50,#08 [TRUE] RFALSE
       JG              G50,#08 [FALSE] L0004
       CALL_1S         R0033 -> -(SP)
       JE              G50,(SP)+ [TRUE] L0003
       DEC             G33
       RFALSE          
L0003: DEC             G33
L0004: STORE           G45,#00
       JE              G44,#01 [FALSE] L0005
       LOADW           #1a40,#00 -> L04
L0005: JG              G44,#01 [FALSE] L0006
       CALL_2S         R0010 (L02) -> L04
       JE              L04,#ffff [TRUE] RFALSE
       JE              L04,#01 [TRUE] RTRUE
L0006: JZ              L04 [TRUE] L0009
       JE              G65,#01 [FALSE] L0007
       RET             L04
L0007: JZ              G40 [FALSE] L0008
       STORE           G40,G3b
L0008: STOREW          #1a16,G3b,L04
       RET             L04
L0009: JG              G47,G34 [FALSE] L0010
       JUMP            L0032
L0010: JE              L02,#06 [FALSE] L0011
       PRINT           "Who"
       JUMP            L0012
L0011: PRINT           "Which"
L0012: PRINT           " do you mean, "
       STORE           L05,G45
       STORE           L0a,#00
       STORE           L04,#01
L0013: JG              L04,G45 [TRUE] L0020
L0014: LOADW           #1ac0,L0a -> -(SP)
       JE              (SP)+,L04 [TRUE] L0015
       SUB             #00,L04 -> -(SP)
       LOADW           #1ac0,L0a -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0015
       INC             L0a
       JUMP            L0014
L0015: LOADW           #1a40,L0a -> L06
       LOADW           #1ac0,L0a -> -(SP)
       JG              (SP)+,#00 [FALSE] L0016
       CALL_2N         R0076 (L06)
       JUMP            L0017
L0016: CALL_2N         R0075 (L06)
L0017: SUB             L05,#01 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0018
       PRINT           ", "
L0018: SUB             L05,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0019
       PRINT           " or "
L0019: INC             L04
       JUMP            L0013
L0020: PRINT           "?
"
L0021: CALL_VS         R0003 (#191b,#1994) -> L09
       LOADW           #1994,#01 -> L03
       JE              L03,"all","both","everythin" [TRUE] L0022
       JE              L03,"every","each" [FALSE] L0026
L0022: JL              L02,#02 [TRUE] L0025
       JG              L02,#05 [TRUE] L0025
       LOADW           #189b,#00 -> L07
       STORE           L04,#00
L0023: JL              L04,G44 [FALSE] L0024
       ADD             L07,L04 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0024
       LOADW           #1a40,L04 -> L06
       ADD             L04,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       STOREW          #189b,(SP)+,L06
       INC             L04
       JUMP            L0023
L0024: ADD             L04,L07 -> -(SP)
       STOREW          #189b,#00,(SP)+
       RTRUE           
L0025: PRINT           "Sorry, you can only have one item here.  Which one
exactly?
"
       JUMP            L0021
L0026: LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0027
       CALL_VN         R0043 (#17c1,#191b)
       CALL_VN         R0043 (#183a,#1994)
       RET             #2710
L0027: LOADB           #183a,#01 -> L08
       ADD             L09,L08 -> -(SP)
       STOREB          #183a,#01,(SP)+
       ADD             L08,L09 -> L06
L0028: JG              L06,G47 [FALSE] L0029
       SUB             L06,L09 -> -(SP)
       CALL_VN         R0021 (L06,#183a,(SP)+)
       DEC             L06
       JUMP            L0028
L0029: STORE           L06,#01
L0030: JG              L06,L09 [TRUE] L0031
       ADD             G47,L06 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0021 ((SP)+,#1994,L06)
       INC             L06
       JUMP            L0030
L0031: RET             #2710
L0032: JE              L02,#06 [FALSE] L0033
       PRINT           "Whom"
       JUMP            L0034
L0033: PRINT           "What"
L0034: PRINT           " do you want"
       JE              G1b,G0c [TRUE] L0035
       PRINT           " "
       CALL_2N         R0076 (G1b)
L0035: PRINT           " to "
       CALL_VN         R0015 (#00,#01)
       PRINT           "?
"
       CALL_VS         R0003 (#191b,#1994) -> L09
       LOADW           #1994,#01 -> L03
       LOADB           L03,#06 -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0036
       CALL_VN         R0043 (#17c1,#191b)
       CALL_VN         R0043 (#183a,#1994)
       RET             #2710
L0036: LOADB           #183a,#01 -> L08
       JZ              G40 [FALSE] L0039
       STORE           L06,#01
L0037: JG              L06,L09 [TRUE] L0038
       ADD             L08,L06 -> -(SP)
       CALL_VN         R0021 ((SP)+,#1994,L06)
       INC             L06
       JUMP            L0037
L0038: JUMP            L0045
L0039: SUB             G3b,G40 -> L05
       STORE           L06,#01
L0040: JG              L06,L09 [TRUE] L0041
       ADD             L08,L06 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       CALL_VN         R0021 ((SP)+,#1994,L06)
       INC             L06
       JUMP            L0040
L0041: STORE           L05,G40
L0042: JL              L05,G3b [FALSE] L0045
       LOADW           #1a16,L05 -> -(SP)
       JL              (SP)+,#02 [TRUE] L0043
       LOADW           #1a16,L05 -> -(SP)
       JL              (SP)+,#2710 [FALSE] L0043
       STOREW          #1994,#01,"it"
       LOADW           #1a16,L05 -> G4d
       JUMP            L0044
L0043: LOADW           #1a16,L05 -> -(SP)
       SUB             (SP)+,#2710 -> -(SP)
       CALL_2S         R0034 ((SP)+) -> -(SP)
       STOREW          #1994,#01,(SP)+
L0044: ADD             L08,#01 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       SUB             (SP)+,G40 -> -(SP)
       CALL_VN         R0021 ((SP)+,#1994,#01)
       INC             L09
       INC             L05
       JUMP            L0042
L0045: ADD             L09,L08 -> -(SP)
       STOREB          #183a,#01,(SP)+
       RET             #2710

Routine R0010, 10 locals

       SUB             G44,#01 -> L02
       STORE           L04,#00
       LOADW           #1a40,#00 -> L05
       STORE           L01,#00
L0001: JG              L01,L02 [TRUE] L0013
       LOADW           #1a40,L01 -> L06
       TEST_ATTR       L06,#02 [TRUE] L0012
       STORE           L07,L06
L0002: GET_PARENT      L07 -> L07
       JE              L07,G1c,G1b,#00 [FALSE] L0002
       JZ              L00 [FALSE] L0004
       JE              L07,G1c [FALSE] L0004
       JZ              G60 [TRUE] L0003
       CALL_2S         R0020 (L06) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0004
L0003: INC             L04
       STORE           L05,L06
L0004: JE              L00,#01 [FALSE] L0005
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G1b [FALSE] L0005
       INC             L04
       STORE           L05,L06
L0005: JE              L00,#02 [FALSE] L0006
       JE              L07,G1c [FALSE] L0006
       INC             L04
       STORE           L05,L06
L0006: JE              L00,#03 [FALSE] L0007
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G1b [FALSE] L0007
       INC             L04
       STORE           L05,L06
L0007: JE              L00,#04,#05 [FALSE] L0011
       JE              G61,#ffff [FALSE] L0009
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G1b [FALSE] L0008
       INC             L04
       STORE           L05,L06
L0008: JUMP            L0011
L0009: JE              L00,#04 [FALSE] L0010
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G1b [FALSE] L0010
       JE              L06,G61 [TRUE] L0010
       INC             L04
       STORE           L05,L06
L0010: JE              L00,#05 [FALSE] L0011
       GET_PARENT      L06 -> -(SP)
       JE              (SP)+,G1b [FALSE] L0011
       JIN             L06,G61 [FALSE] L0011
       INC             L04
       STORE           L05,L06
L0011: JE              L00,#06 [FALSE] L0012
       CALL_2S         R0007 (L06) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0012
       INC             L04
       STORE           L05,L06
L0012: INC             L01
       JUMP            L0001
L0013: JE              L04,#01 [FALSE] L0014
       RET             L05
L0014: JE              L00,#06 [FALSE] L0015
       JZ              L04 [FALSE] L0015
       LOADW           #1a40,#00 -> -(SP)
       RET_POPPED      
L0015: JE              G51,#01 [FALSE] L0028
       AND             G52,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       JL              L00,#02 [TRUE] L0016
       JG              L00,#05 [FALSE] L0017
L0016: STORE           G5d,#07
       RET             #ffff
L0017: STORE           L01,#00
       STORE           G45,#01
       LOADW           #189b,#00 -> L09
       CALL_1S         R0013 -> L02
       JUMP            L0019
L0018: CALL_1S         R0013 -> L02
L0019: JE              L02,#ffff [TRUE] L0026
       JL              L01,G53 [FALSE] L0026
       ADD             L01,L09 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0026
       STORE           L08,#00
       TEST_ATTR       L02,#02 [TRUE] L0020
       TEST_ATTR       L02,#1a [TRUE] L0020
       STORE           L08,#01
L0020: JE              L00,#03,#04 [FALSE] L0021
       GET_PARENT      L02 -> -(SP)
       JE              (SP)+,G1b [TRUE] L0021
       STORE           L08,#00
L0021: CALL_VS         R0377 (L02,L08) -> L03
       JE              L03,#01 [FALSE] L0022
       STORE           L08,#01
       JUMP            L0023
L0022: JE              L03,#02 [FALSE] L0023
       STORE           L08,#00
L0023: JE              L08,#01 [FALSE] L0024
       INC             L01
       ADD             L01,L09 -> -(SP)
       STOREW          #189b,(SP)+,L02
       JUMP            L0025
L0024: STORE           L01,L01
L0025: JUMP            L0018
L0026: JL              L01,G53 [FALSE] L0027
       JL              G53,#64 [FALSE] L0027
       STORE           G5d,#10
       STORE           G38,G53
       LOADW           #189b,#00 -> G39
       RET             #ffff
L0027: ADD             L01,L09 -> -(SP)
       STOREW          #189b,#00,(SP)+
       STORE           G3a,L00
       RTRUE           
L0028: STORE           L01,#00
L0029: JL              L01,G44 [FALSE] L0030
       STOREW          #1ac0,L01,#00
       INC             L01
       JUMP            L0029
L0030: STORE           L06,#01
       STORE           L01,#00
L0031: JL              L01,G44 [FALSE] L0036
       LOADW           #1ac0,L01 -> -(SP)
       JZ              (SP)+ [FALSE] L0035
       PUSH            L06
       INC             L06
       STOREW          #1ac0,L01,(SP)+
       STORE           L08,#00
       ADD             L01,#01 -> L02
L0032: JL              L02,G44 [FALSE] L0034
       LOADW           #1ac0,L02 -> -(SP)
       JZ              (SP)+ [FALSE] L0033
       LOADW           #1a40,L02 -> -(SP)
       LOADW           #1a40,L01 -> -(SP)
       CALL_VS         R0014 ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0033
       STORE           L08,#01
       LOADW           #1ac0,L01 -> -(SP)
       STOREW          #1ac0,L02,(SP)+
L0033: INC             L02
       JUMP            L0032
L0034: JE              L08,#01 [FALSE] L0035
       SUB             #01,L06 -> -(SP)
       STOREW          #1ac0,L01,(SP)+
L0035: INC             L01
       JUMP            L0031
L0036: DEC             L06
       STORE           G45,L06
       JG              L06,#01 [FALSE] L0042
       JZ              G51 [FALSE] L0042
       STORE           L02,#00
       STORE           L04,#00
       STORE           L01,#00
L0037: JL              L01,G44 [FALSE] L0040
       LOADW           #1a40,L01 -> -(SP)
       CALL_VS         R0377 ((SP)+,#02) -> L03
       JE              L03,L02 [FALSE] L0038
       INC             L04
L0038: JG              L03,L02 [FALSE] L0039
       STORE           L02,L03
       STORE           L04,#01
       LOADW           #1a40,L01 -> L05
L0039: INC             L01
       JUMP            L0037
L0040: JE              L04,#01 [FALSE] L0041
       RET             L05
L0041: RFALSE          
L0042: JZ              G51 [FALSE] L0043
       STORE           G52,#00
L0043: JE              L06,#01 [FALSE] L0044
       STORE           G65,#01
L0044: CALL_1S         R0013 -> -(SP)
       RET_POPPED      

Routine R0011, 3 locals

       JE              G3a,#04,#05 [FALSE] L0006
       STORE           L01,#01
       STORE           L02,#00
L0001: LOADW           #189b,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0005
       JE              G3a,#04 [FALSE] L0002
       LOADW           #189b,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
L0002: JE              G3a,#05 [FALSE] L0004
       LOADW           #189b,L01 -> -(SP)
       JIN             (SP)+,L00 [FALSE] L0004
L0003: INC             L02
       LOADW           #189b,L01 -> -(SP)
       STOREW          #189b,L02,(SP)+
L0004: INC             L01
       JUMP            L0001
L0005: STOREW          #189b,#00,L02
L0006: JE              G3a,#02 [FALSE] L0014
       STORE           L01,#01
       STORE           L02,#00
L0007: LOADW           #189b,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0009
       GET_PARENT      G1b -> -(SP)
       LOADW           #189b,L01 -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0008
       INC             L02
L0008: INC             L01
       JUMP            L0007
L0009: JE              G6c,#02 [TRUE] L0010
       JG              L02,#00 [FALSE] L0014
L0010: STORE           L01,#01
       STORE           L02,#00
L0011: LOADW           #189b,#00 -> -(SP)
       JG              L01,(SP)+ [TRUE] L0013
       GET_PARENT      G1b -> -(SP)
       LOADW           #189b,L01 -> -(SP)
       GET_PARENT      (SP)+ -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0012
       INC             L02
       LOADW           #189b,L01 -> -(SP)
       STOREW          #189b,L02,(SP)+
L0012: INC             L01
       JUMP            L0011
L0013: STOREW          #189b,#00,L02
L0014: LOADW           #189b,#00 -> L01
       JZ              L01 [FALSE] L0015
       RET             #11
L0015: RFALSE          

Routine R0012, 7 locals

       AND             G52,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           L04,#28
L0001: AND             G52,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       ADD             L04,#28 -> L04
L0002: AND             G52,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       ADD             L04,#28 -> L04
L0003: AND             G52,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       ADD             L04,#28 -> L04
L0004: AND             G52,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       ADD             L04,#28 -> L04
L0005: AND             G52,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       ADD             L04,#28 -> L04
L0006: AND             G52,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       ADD             L04,#28 -> L04
L0007: STORE           L05,#1e
       STORE           L06,#14
       JE              G64,#01,#06 [FALSE] L0008
       STORE           L05,#14
       STORE           L06,#1e
L0008: STORE           L03,#00
L0009: JL              L03,G44 [FALSE] L0022
       LOADW           #1a40,L03 -> L02
       GET_PARENT      L02 -> L00
       STORE           L01,#00
       JE              L00,G1b [FALSE] L0010
       STORE           L01,L05
L0010: JE              L00,G1c [FALSE] L0011
       STORE           L01,L06
L0011: JZ              L01 [FALSE] L0012
       JE              L00,#06 [TRUE] L0012
       STORE           L01,#0a
L0012: AND             G52,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       JE              L02,G4d,G4e,G4f [TRUE] L0013
       ADD             L01,#28 -> L01
L0013: AND             G52,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       JE              L00,G1b [FALSE] L0014
       ADD             L01,#28 -> L01
L0014: AND             G52,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       JE              L00,G1c [FALSE] L0015
       ADD             L01,#28 -> L01
L0015: AND             G52,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       TEST_ATTR       L02,#09 [FALSE] L0016
       ADD             L01,#28 -> L01
L0016: AND             G52,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       TEST_ATTR       L02,#09 [TRUE] L0017
       ADD             L01,#28 -> L01
L0017: AND             G52,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       JE              L00,G4d [FALSE] L0018
       ADD             L01,#28 -> L01
L0018: AND             G52,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       TEST_ATTR       L00,#00 [FALSE] L0019
       CALL_2S         R0042 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0019
       ADD             L01,#28 -> L01
L0019: CALL_VS         R0377 (L02,#02) -> -(SP)
       ADD             L01,(SP)+ -> L01
       JL              L01,L04 [FALSE] L0020
       STOREW          #1a40,L03,#ffff
       JUMP            L0021
L0020: STOREW          #1ac0,L03,L01
L0021: INC             L03
       JUMP            L0009
L0022: STORE           G45,#02
       RTRUE           

Routine R0013, 4 locals

       JE              G45,#01 [TRUE] L0001
       CALL_1N         R0012
L0001: STORE           L00,#00
       STORE           L02,#ffff
       STORE           L03,#00
L0002: JL              L03,G44 [FALSE] L0004
       LOADW           #1a40,L03 -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       LOADW           #1ac0,L03 -> L01
       JG              L01,L02 [FALSE] L0003
       STORE           L02,L01
       STORE           L00,L03
L0003: INC             L03
       JUMP            L0002
L0004: JL              L02,#00 [FALSE] L0005
       RET             #ffff
L0005: LOADW           #1a40,L00 -> L03
       STOREW          #1a40,L00,#ffff
       RET             L03

Routine R0014, 9 locals

       JE              L00,L01 [TRUE] RTRUE
       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       GET_PARENT      L00 -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       GET_PARENT      L01 -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       GET_PROP        L00,#1f -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       GET_PROP        L01,#1f -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: GET_PROP        L01,#1f -> -(SP)
       GET_PROP        L00,#1f -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] RFALSE
       STORE           G48,#0105
       STORE           G49,L00
       STORE           G4a,L01
       STORE           L07,G33
       CALL_VS         R0048 (L00,#1f) -> L06
       STORE           G33,L07
       JE              L06,#ffff [TRUE] RTRUE
       JE              L06,#fffe [TRUE] RFALSE
L0002: GET_PROP_ADDR   L00,#01 -> L02
       GET_PROP_ADDR   L00,#01 -> Gef
       JZ              Gef [TRUE] L0003
       GET_PROP_LEN    Gef -> Gef
L0003: PUSH            Gef
       DIV             (SP)+,#02 -> L04
       GET_PROP_ADDR   L01,#01 -> L03
       GET_PROP_ADDR   L01,#01 -> Gef
       JZ              Gef [TRUE] L0004
       GET_PROP_LEN    Gef -> Gef
L0004: PUSH            Gef
       DIV             (SP)+,#02 -> L05
       STORE           L06,#00
L0005: JL              L06,L04 [FALSE] L0009
       STORE           L08,#00
       STORE           L07,#00
L0006: JL              L07,L05 [FALSE] L0008
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0007
       STORE           L08,#01
L0007: INC             L07
       JUMP            L0006
L0008: JZ              L08 [TRUE] RFALSE
       INC             L06
       JUMP            L0005
L0009: STORE           L07,#00
L0010: JL              L07,L05 [FALSE] L0014
       STORE           L08,#00
       STORE           L06,#00
L0011: JL              L06,L04 [FALSE] L0013
       LOADW           L03,L07 -> -(SP)
       LOADW           L02,L06 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0012
       STORE           L08,#01
L0012: INC             L06
       JUMP            L0011
L0013: JZ              L08 [TRUE] RFALSE
       INC             L07
       JUMP            L0010
L0014: RTRUE           

Routine R0015, 6 locals

       JZ              L00 [FALSE] L0005
       STORE           L02,G35
       STORE           L00,#01
       STORE           L05,#01
       JE              L02,"l" [FALSE] L0001
       PRINT           "look"
       JUMP            L0005
L0001: JE              L02,"z" [FALSE] L0002
       PRINT           "wait"
       JUMP            L0005
L0002: JE              L02,"x" [FALSE] L0003
       PRINT           "examine"
       JUMP            L0005
L0003: JE              L02,"i","inv" [FALSE] L0004
       PRINT           "inventory"
       JUMP            L0005
L0004: CALL_2S         R0374 (L02) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_ADDR      L02
L0005: SUB             G3b,L01 -> L03
       STORE           L04,L00
L0006: JG              L04,L03 [TRUE] L0012
       JE              L05,#01 [FALSE] L0007
       PRINT_CHAR      ' '
L0007: LOADW           #1a16,L04 -> L02
       JZ              L02 [FALSE] L0008
       PRINT           "those things"
       JUMP            L0011
L0008: JE              L02,#01 [FALSE] L0009
       PRINT           "that"
       JUMP            L0011
L0009: JL              L02,#2710 [TRUE] L0010
       SUB             L02,#2710 -> -(SP)
       CALL_2S         R0034 ((SP)+) -> L02
       PRINT_ADDR      L02
       JUMP            L0011
L0010: CALL_2N         R0076 (L02)
L0011: STORE           L05,#01
       INC             L04
       JUMP            L0006
L0012: RTRUE           

Routine R0016, 3 locals

       STORE           G43,G42
       JZ              G67 [TRUE] L0001
       STORE           G68,G67
       RET             #12
L0001: DEC             G33
       CALL_1S         R0036 -> L01
       STORE           L02,#04
       JE              L01,G4b [FALSE] L0002
       STORE           L02,#0e
L0002: GET_PARENT      G1b -> L00
       TEST_ATTR       L00,#18 [FALSE] L0003
       CALL_VS         R0031 (L00,L01) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       STORE           L02,#0d
L0003: JG              G5d,L02 [FALSE] L0004
       RET             G5d
L0004: RET             L02

Routine R0017, 3 locals

       LOADW           #189b,#00 -> L01
       JE              L01,#3f [FALSE] L0001
       STORE           G1a,#01
       RTRUE           
L0001: STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0003
       LOADW           #189b,L02 -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L02
       JUMP            L0002
L0003: INC             L01
       STOREW          #189b,L01,L00
       STOREW          #189b,#00,L01
       RTRUE           

Routine R0018, 5 locals

       LOADW           #189b,#00 -> L01
       STORE           L04,#00
       STORE           L02,#01
L0001: JG              L02,L01 [TRUE] L0005
       LOADW           #189b,L02 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0004
       STORE           L03,L02
L0002: JG              L03,L01 [TRUE] L0003
       ADD             L03,#01 -> -(SP)
       LOADW           #189b,(SP)+ -> -(SP)
       STOREW          #189b,L03,(SP)+
       INC             L03
       JUMP            L0002
L0003: DEC             L01
       PUSH            L01
       STOREW          #189b,#00,(SP)+
       RET             L04
L0004: INC             L02
       JUMP            L0001
L0005: STORE           L04,#09
       RET             L04

Routine R0019, 4 locals

L0001: LOADW           #189b,#00 -> L01
       STORE           L02,#01
L0002: JG              L02,L01 [TRUE] L0004
       LOADW           #189b,L02 -> L03
       TEST_ATTR       L03,L00 [TRUE] L0003
       CALL_2N         R0018 (L03)
       JUMP            L0001
L0003: INC             L02
       JUMP            L0002
L0004: RTRUE           

Routine R0020, 1 local

       JL              G60,#80 [TRUE] L0001
       SUB             G60,#80 -> -(SP)
       TEST_ATTR       L00,(SP)+ [TRUE] RTRUE
       RFALSE          
L0001: STORE           G22,L00
       SUB             G60,#10 -> -(SP)
       LOADW           #255b,(SP)+ -> -(SP)
       CALL_1S         (SP)+ -> -(SP)
       RET_POPPED      

Routine R0021, 5 locals

       MUL             L00,#02 -> -(SP)
       SUB             (SP)+,#01 -> L03
       MUL             L02,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       PUSH            L04
       INC             L04
       LOADW           L01,(SP)+ -> -(SP)
       PUSH            L03
       INC             L03
       STOREW          #183a,(SP)+,(SP)+
       LOADW           L01,L04 -> -(SP)
       STOREW          #183a,L03,(SP)+
       RTRUE           

Routine R0022, 4 locals

       STORE           L03,#00
       JZ              G67 [TRUE] L0001
       STORE           G69,#02
       CALL_1S         G67 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JE              G1b,L00,L01 [FALSE] L0002
       CALL_2S         R0372 (G1b) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: JE              L02,#05 [FALSE] L0004
       JE              G61,#ffff [TRUE] L0004
       CALL_2S         R0023 (G61) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VN         R0026 (G61,#00,L02)
L0003: JUMP            L0005
L0004: CALL_VN         R0026 (L00,L01,L02)
       CALL_VN         R0026 (L01,#00,L02)
L0005: RTRUE           

Routine R0023, 1 local

       TEST_ATTR       L00,#14 [TRUE] RTRUE
       TEST_ATTR       L00,#17 [TRUE] RTRUE
       TEST_ATTR       L00,#03 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] RTRUE
L0001: RFALSE          

Routine R0024, 1 local

       JE              G66,#00,#01 [TRUE] L0001
       CALL_2N         R0025 (L00)
       RTRUE           
L0001: STORE           G33,G47
       CALL_2N         R0030 (L00)
       STORE           G62,#01
       RTRUE           

Routine R0025, 3 locals

       STORE           L01,G66
       STORE           L02,G49
       STORE           Gef,G66
       JE              Gef,#03 [FALSE] L0003
       GET_PROP        L00,#0b -> -(SP)
       JE              (SP)+,#00,#ffff [FALSE] L0001
       RTRUE           
L0001: JZ              G49 [FALSE] L0002
       CALL_VS         R0048 (L00,#0b) -> G49
L0002: JUMP            L0011
L0003: JE              Gef,#04 [FALSE] L0006
       GET_PROP        L00,#0d -> -(SP)
       JE              (SP)+,#00,#ffff [FALSE] L0004
       RTRUE           
L0004: JZ              G49 [FALSE] L0005
       CALL_VS         R0048 (L00,#0d) -> G49
L0005: JUMP            L0011
L0006: JE              Gef,#02 [FALSE] L0008
       GET_PROP_ADDR   L00,#1c -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       RTRUE           
L0007: CALL_VN         R0046 (L00,#1c)
       JUMP            L0011
L0008: JE              Gef,#06 [FALSE] L0010
       JE              L00,G49 [FALSE] L0009
       STORE           G4a,#01
L0009: JUMP            L0011
L0010: JE              Gef,#05 [FALSE] L0011
       CALL_2N         G49 (L00)
       STORE           G49,L02
L0011: STORE           G66,L01
       RTRUE           

Routine R0026, 3 locals

       JZ              L00 [TRUE] RTRUE
       JE              L02,#04 [FALSE] L0001
       JE              L00,G61 [TRUE] RTRUE
L0001: JZ              G51 [FALSE] L0002
       JE              L00,G1c [FALSE] L0002
       JZ              G66 [FALSE] L0002
       JE              L02,#06 [TRUE] L0002
       CALL_2N         R0026 (#06)
L0002: GET_CHILD       L00 -> -(SP) [FALSE] L0003
L0003: STORE           L00,(SP)+
       JZ              L00 [TRUE] L0005
L0004: CALL_VN         R0027 (L00,L01,L02)
       GET_SIBLING     L00 -> L00 [TRUE] L0004
L0005: RTRUE           

Routine R0027, 6 locals

       JE              G66,#00,#01 [TRUE] L0001
       CALL_2N         R0025 (L00)
       JUMP            L0007
L0001: JG              G47,G34 [FALSE] L0002
       STORE           L03,G2f
       STORE           G2f,#00
       CALL_VN         R0029 (L00,#01)
       STORE           G2f,L03
       JUMP            L0007
L0002: STORE           G33,G47
       CALL_1S         R0032 -> L03
       JE              L03,#01 [FALSE] L0003
       JE              G4d,L00 [FALSE] L0003
       CALL_VN         R0029 (G4d,#01)
L0003: JE              L03,#02 [FALSE] L0004
       JE              G4e,L00 [FALSE] L0004
       CALL_VN         R0029 (G4e,#01)
L0004: JE              L03,#03 [FALSE] L0005
       JE              G4f,L00 [FALSE] L0005
       CALL_VN         R0029 (G4f,#01)
L0005: JE              L03,#04 [FALSE] L0006
       JE              G0c,L00 [FALSE] L0006
       CALL_VN         R0029 (G0c,#01)
L0006: DEC             G33
       CALL_2N         R0030 (L00)
L0007: GET_CHILD       L00 -> -(SP) [FALSE] L0008
L0008: JZ              (SP)+ [TRUE] L0009
       JE              L00,L01 [TRUE] L0009
       CALL_2S         R0023 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0009
       CALL_VN         R0026 (L00,#00,L02)
L0009: GET_PROP_ADDR   L00,#0c -> L04
       JZ              L04 [TRUE] L0013
       LOADW           L04,#00 -> -(SP)
       CALL_VS         R0044 ((SP)+,G18) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0010
       ADD             #02,L02 -> G6a
       CALL_VN         R0048 (L00,#0c)
       STORE           G6a,#00
       JUMP            L0013
L0010: GET_PROP_ADDR   L00,#0c -> Gef
       JZ              Gef [TRUE] L0011
       GET_PROP_LEN    Gef -> Gef
L0011: STORE           L05,Gef
       STORE           L03,#00
L0012: MUL             #02,L03 -> -(SP)
       JL              (SP)+,L05 [FALSE] L0013
       LOADW           L04,L03 -> -(SP)
       CALL_VN         R0027 ((SP)+,#00,L02)
       INC             L03
       JUMP            L0012
L0013: RTRUE           

Routine R0028, 1 local

       JL              G6a,#02 [TRUE] L0001
       SUB             G6a,#02 -> -(SP)
       CALL_VN         R0027 (L00,#00,(SP)+)
L0001: JE              G6a,#01 [FALSE] L0002
       CALL_2S         R0069 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       STORE           G6b,#01
L0002: RTRUE           

Routine R0029, 3 locals

       JZ              G60 [TRUE] L0001
       CALL_2S         R0020 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       RTRUE           
L0001: JL              L01,G46 [TRUE] RTRUE
       JG              L01,G46 [FALSE] L0002
       STORE           G46,L01
       STORE           G44,#00
       JUMP            L0004
L0002: MUL             #02,G44 -> -(SP)
       JL              (SP)+,#80 [FALSE] RTRUE
       STORE           L02,#00
L0003: JL              L02,G44 [FALSE] L0004
       LOADW           #1a40,L02 -> -(SP)
       JE              (SP)+,L00 [TRUE] RTRUE
       INC             L02
       JUMP            L0003
L0004: PUSH            G44
       INC             G44
       STOREW          #1a40,(SP)+,L00
       RTRUE           

Routine R0030, 5 locals

       JZ              G51 [TRUE] L0001
       LOADB           #183a,#01 -> -(SP)
       JG              G33,(SP)+ [FALSE] L0001
       CALL_VN         R0029 (L00,#00)
       RFALSE          
L0001: GET_PROP        L00,#1f -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       STORE           G48,#ffff
       STORE           L04,G33
       CALL_VS         R0048 (L00,#1f) -> L02
       JG              L02,#00 [FALSE] L0006
       ADD             L04,L02 -> G33
L0002: JE              G48,#0106 [FALSE] L0005
       JZ              G55 [FALSE] L0003
       JUMP            L0015
L0003: JZ              G51 [FALSE] L0004
       STORE           G51,#01
       STORE           G52,#00
       STORE           G53,#00
L0004: OR              G52,#08 -> G52
       JZ              G53 [FALSE] L0005
       STORE           G53,#64
L0005: CALL_VN         R0029 (L00,L02)
       RFALSE          
L0006: JZ              L02 [FALSE] L0007
       JUMP            L0015
L0007: CALL_1S         R0032 -> L03
       JE              L03,#01 [FALSE] L0008
       JE              L00,G4d [TRUE] L0011
L0008: JE              L03,#02 [FALSE] L0009
       JE              L00,G4e [TRUE] L0011
L0009: JE              L03,#03 [FALSE] L0010
       JE              L00,G4f [TRUE] L0011
L0010: JE              L03,#04 [FALSE] L0012
       JE              L00,G0c [FALSE] L0012
L0011: CALL_VN         R0029 (L00,#01)
       RFALSE          
L0012: DEC             G33
       STORE           L04,G33
       CALL_2S         R0378 (L00) -> L01
       JL              L01,#00 [FALSE] L0013
       INC             G33
L0013: JG              L01,#00 [FALSE] L0014
       STORE           L02,L01
       JUMP            L0002
L0014: JZ              L01 [TRUE] L0015
       CALL_VS         R0031 (L00,L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
L0015: JZ              G51 [TRUE] L0016
       CALL_VN         R0029 (L00,#00)
L0016: RFALSE          
L0017: JL              L01,#00 [FALSE] L0019
       STORE           L01,#01
L0018: CALL_1S         R0036 -> -(SP)
       CALL_VS         R0031 (L00,(SP)+) -> -(SP)
       JE              #00,(SP)+ [TRUE] L0019
       INC             L01
       JUMP            L0018
L0019: CALL_VN         R0029 (L00,L01)
       RTRUE           

Routine R0031, 5 locals

       JZ              L00 [TRUE] RFALSE
       GET_PROP_ADDR   L00,#01 -> L02
       GET_PROP_ADDR   L00,#01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L03
       STORE           L04,#00
L0002: JG              L04,L03 [TRUE] L0003
       LOADW           L02,L04 -> -(SP)
       JE              L01,(SP)+ [TRUE] RTRUE
       INC             L04
       JUMP            L0002
L0003: RFALSE          

Routine R0032, 1 local

       CALL_1S         R0036 -> L00
       JE              L00,"it","them" [FALSE] L0001
       RTRUE           
L0001: JE              L00,"him" [FALSE] L0002
       RET             #02
L0002: JE              L00,"her" [FALSE] L0003
       RET             #03
L0003: JE              L00,"me","myself","self" [FALSE] L0004
       RET             #04
L0004: JZ              L00 [TRUE] RFALSE
       LOADB           L00,#06 -> -(SP)
       AND             (SP)+,#80 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       RET             L00

Routine R0033, 2 locals

       CALL_1S         R0036 -> L01
       JZ              L01 [TRUE] RFALSE
       LOADB           L01,#06 -> L00
       AND             L00,#08 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       LOADB           L01,#08 -> -(SP)
       RET_POPPED      

Routine R0034, 2 locals

       STORE           L01,#2563
L0001: LOADW           L01,#01 -> -(SP)
       JE              L00,(SP)+ [FALSE] L0002
       LOADW           L01,#00 -> -(SP)
       RET_POPPED      
L0002: ADD             L01,#04 -> L01
       JUMP            L0001

orphan code fragment:

       STORE           L01,#2563
       CALL_2N         R0082 (#01)
       RET             L01

Routine R0036, 3 locals

       LOADB           #183a,#01 -> -(SP)
       JG              G33,(SP)+ [FALSE] L0001
       INC             G33
       RFALSE          
L0001: MUL             G33,#02 -> -(SP)
       SUB             (SP)+,#01 -> L00
       INC             G33
       LOADW           #183a,L00 -> L01
       JZ              L01 [FALSE] L0003
       MUL             G33,#04 -> -(SP)
       SUB             (SP)+,#03 -> L02
       LOADB           #183a,L02 -> -(SP)
       LOADB           #17c1,(SP)+ -> L00
       JE              L00,#2c [FALSE] L0002
       STORE           L01,"xcomma"
L0002: JE              L00,#2e [FALSE] L0003
       STORE           L01,"then"
L0003: RET             L01

Routine R0037, 0 locals

       LOADB           #183a,#01 -> -(SP)
       JG              G33,(SP)+ [FALSE] L0001
       INC             G33
       RET             #ffff
L0001: CALL_1S         R0036 -> -(SP)
       RET_POPPED      

Routine R0038, 1 local

       MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       LOADB           #183a,(SP)+ -> -(SP)
       ADD             #17c1,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0039, 1 local

       MUL             L00,#04 -> -(SP)
       LOADB           #183a,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0040, 10 locals

       STORE           L01,G33
       STORE           G33,L00
       CALL_1S         R0036 -> L02
       STORE           G33,L01
       CALL_2S         R0005 (L02) -> L02
       JL              L02,#01 [TRUE] L0001
       RET             L02
L0001: MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> L01
       LOADB           #183a,L01 -> L02
       ADD             L02,#17c1 -> L04
       SUB             L01,#01 -> -(SP)
       LOADB           #183a,(SP)+ -> L05
       CALL_VS         R0376 (L04,L05) -> L07
       JZ              L07 [TRUE] L0002
       RET             L07
L0002: JL              L05,#04 [TRUE] L0003
       STORE           L06,#03e8
L0003: JE              L05,#03 [FALSE] L0004
       STORE           L06,#64
L0004: JE              L05,#02 [FALSE] L0005
       STORE           L06,#0a
L0005: JE              L05,#01 [FALSE] L0006
       STORE           L06,#01
L0006: STORE           L07,#00
       STORE           L03,#00
       SUB             L05,#01 -> L05
       STORE           L03,#00
L0007: JG              L03,L05 [TRUE] L0019
       LOADB           L04,L03 -> L09
       JE              L09,#30 [FALSE] L0008
       STORE           L08,#00
       JUMP            L0018
L0008: JE              L09,#31 [FALSE] L0009
       STORE           L08,#01
       JUMP            L0018
L0009: JE              L09,#32 [FALSE] L0010
       STORE           L08,#02
       JUMP            L0018
L0010: JE              L09,#33 [FALSE] L0011
       STORE           L08,#03
       JUMP            L0018
L0011: JE              L09,#34 [FALSE] L0012
       STORE           L08,#04
       JUMP            L0018
L0012: JE              L09,#35 [FALSE] L0013
       STORE           L08,#05
       JUMP            L0018
L0013: JE              L09,#36 [FALSE] L0014
       STORE           L08,#06
       JUMP            L0018
L0014: JE              L09,#37 [FALSE] L0015
       STORE           L08,#07
       JUMP            L0018
L0015: JE              L09,#38 [FALSE] L0016
       STORE           L08,#08
       JUMP            L0018
L0016: JE              L09,#39 [FALSE] L0017
       STORE           L08,#09
       JUMP            L0018
L0017: RET             #fc18
L0018: MUL             L06,L08 -> -(SP)
       ADD             L07,(SP)+ -> L07
       DIV             L06,#0a -> L06
       INC             L03
       JUMP            L0007
L0019: JG              L05,#03 [FALSE] L0020
       STORE           L07,#2710
L0020: RET             L07

Routine R0041, 1 local

       TEST_ATTR       L00,#00 [FALSE] L0003
       JE              L00,G0c [TRUE] L0003
       CALL_2S         R0042 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       STORE           G4e,L00
       JUMP            L0002
L0001: STORE           G4f,L00
L0002: JUMP            L0004
L0003: STORE           G4d,L00
L0004: RTRUE           

Routine R0042, 1 local

       TEST_ATTR       L00,#07 [FALSE] RTRUE
       RFALSE          

Routine R0043, 4 locals

       LOADB           L00,#00 -> L03
       STORE           L02,#01
L0001: JG              L02,L03 [TRUE] L0002
       LOADB           L01,L02 -> -(SP)
       STOREB          L00,L02,(SP)+
       INC             L02
       JUMP            L0001
L0002: RTRUE           

Routine R0044, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0045, 1 local

       JZ              L00 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#01 [TRUE] L0002
       JG              L00,G18 [TRUE] L0002
       RTRUE           
L0002: CALL_VS         R0044 (L00,S001) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       RET             #03
L0003: CALL_VS         R0044 (L00,#0eb1) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0004
       RET             #02
L0004: RFALSE          

Routine R0046, 4 locals

       CALL_VS         R0382 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0001
       CALL_VS         R0048 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0380 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       CALL_VS         R0380 (L00,L01) -> -(SP)
       CALL_2S         R0045 ((SP)+) -> L03
       JE              L03,#00,#01 [FALSE] L0002
       CALL_VS         R0082 (#02,L00,L01) -> -(SP)
       RET_POPPED      
L0002: JE              L03,#03 [FALSE] L0004
       CALL_VS         R0380 (L00,L01) -> -(SP)
       PRINT_PADDR     (SP)+
       JZ              L02 [FALSE] L0003
       NEW_LINE        
L0003: RTRUE           
L0004: CALL_VS         R0048 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0047, 3 locals

       CALL_VS         R0380 (L00,L01) -> -(SP)
       CALL_2S         R0045 ((SP)+) -> L02
       JE              L02,#02 [FALSE] L0001
       CALL_VS         R0048 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0380 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0048, 8 locals

       JE              L00,#13 [FALSE] L0001
       JE              L01,#13 [TRUE] L0001
       STORE           L00,G0e
L0001: CALL_VS         R0380 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff,#00 [TRUE] RFALSE
       CALL_VS         R0381 (L00,L01) -> L03
       CALL_VS         R0382 (L00,L01) -> L04
       STORE           L06,Geb
       STORE           Geb,L00
       STORE           L07,Ge9
       JE              L01,#06 [FALSE] L0002
       STORE           Ge9,G2b
       JUMP            L0003
L0002: STORE           Ge9,G1d
L0003: STORE           L02,#00
L0004: DIV             L04,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0010
       LOADW           L03,L02 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0005
       STORE           Geb,L06
       STORE           Ge9,L07
       RFALSE          
L0005: LOADW           L03,L02 -> -(SP)
       CALL_2S         R0045 ((SP)+) -> L05
       JE              L05,#02 [FALSE] L0007
       LOADW           L03,L02 -> -(SP)
       CALL_1S         (SP)+ -> L05
       JZ              L05 [TRUE] L0006
       STORE           Geb,L06
       STORE           Ge9,L07
       RET             L05
L0006: JUMP            L0009
L0007: JE              L05,#03 [FALSE] L0008
       LOADW           L03,L02 -> -(SP)
       PRINT_ADDR      (SP)+
       NEW_LINE        
       JUMP            L0009
L0008: CALL_VN         R0082 (#03,L00,L01)
L0009: INC             L02
       JUMP            L0004
L0010: STORE           Geb,L06
       STORE           Ge9,L07
       RFALSE          

Routine R0049, 0 locals

       JE              G07,#ffff [FALSE] L0001
       STORE           G05,G0a
       STORE           G06,G0b
       JUMP            L0002
L0001: DIV             G07,#3c -> G05
       MOD             G07,#3c -> G06
L0002: RTRUE           

Routine R0050, 2 locals

       STORE           G07,L00
       STORE           G08,L01
       STORE           G09,#00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L01 -> G09
L0001: RTRUE           

Routine R0051, 1 local

       PRINT           "
[Your score has just gone "
       JG              G12,G0a [FALSE] L0001
       SUB             G12,G0a -> L00
       PRINT           "down"
       JUMP            L0002
L0001: SUB             G0a,G12 -> L00
       PRINT           "up"
L0002: PRINT           " by "
       CALL_2N         R0087 (L00)
       PRINT           " point"
       JG              L00,#01 [FALSE] L0003
       PRINT           "s"
L0003: PRINT           ".]
"
       RTRUE           

Routine R0052, 4 locals

       LOADW           #32,#00 -> G19
       STORE           G0c,#14
       SUB             #016d,#ff -> G18
       PUT_PROP        "yourself",#1d,#0005
       STORE           Geb,#05
       STORE           Gea,#05
       CALL_1S         R0325 -> L01
       STORE           G12,G0a
       INSERT_OBJ      G0c,G04
L0001: GET_PARENT      G04 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      G04 -> G04
       JUMP            L0001
L0002: GET_CHILD       G0c -> -(SP) [FALSE] L0003
L0003: STORE           L00,(SP)+
       JZ              L00 [TRUE] L0005
L0004: SET_ATTR        L00,#0c
       CLEAR_ATTR      L00,#02
       GET_SIBLING     L00 -> L00 [TRUE] L0004
L0005: JE              L01,#02 [TRUE] L0006
       CALL_1N         R0080
L0006: GET_PARENT      G0c -> -(SP)
       CALL_2S         R0068 ((SP)+) -> G0d
       JZ              G0d [FALSE] L0007
       STORE           G0e,G04
       STORE           G04,#13
L0007: CALL_2N         R0058 (#07)
       STORE           L00,#01
L0008: JG              L00,#64 [TRUE] L0009
       RANDOM          L00 -> L01
       INC             L00
       JUMP            L0008
L0009: JZ              G10 [FALSE] L0035
       STORE           Geb,#05
       STORE           Gea,#05
       JE              G0a,G12 [TRUE] L0011
       JE              G13,#01 [FALSE] L0010
       CALL_1N         R0051
L0010: STORE           G12,G0a
L0011: STOREW          #187b,#00,#00
       STOREW          #187b,#01,#00
       STOREW          #187b,#02,#00
       STOREW          #187b,#03,#00
       STORE           G2a,#00
       CALL_2N         R0004 (#187b)
       STORE           G22,#00
       STORE           G23,#00
       STORE           G1d,#00
       STORE           G27,#00
       STORE           G29,G28
       STORE           G28,#00
       LOADW           #187b,#00 -> G1d
       JE              G1d,#08,#09 [FALSE] L0013
       LOADW           #187b,#02 -> L00
       LOADW           #187b,#03 -> -(SP)
       STOREW          #187b,#02,(SP)+
       STOREW          #187b,#03,L00
       JE              G1d,#08 [FALSE] L0012
       STORE           G1d,#0a
       JUMP            L0013
L0012: STORE           G1d,#0b
L0013: JE              G1d,#05 [FALSE] L0014
       LOADW           #187b,#02 -> -(SP)
       JE              (SP)+,G0c [FALSE] L0014
       JE              G1b,G0c [TRUE] L0014
       STOREW          #187b,#02,G1b
       STORE           G1b,G0c
       STORE           G1d,#03
L0014: JE              G1d,#04 [FALSE] L0015
       LOADW           #187b,#02 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0015
       JE              G1b,G0c [FALSE] L0015
       LOADW           #187b,#02 -> G1b
       LOADW           #187b,#03 -> -(SP)
       STOREW          #187b,#02,(SP)+
       STOREW          #187b,#03,G0c
       STORE           G1d,#0a
L0015: JE              G1d,#03,#05,#02 [FALSE] L0016
       STORE           G24,G20
L0016: STORE           G1e,#00
       STORE           G1f,#00
       LOADW           #187b,#01 -> L00
       JL              L00,#01 [TRUE] L0017
       LOADW           #187b,#02 -> G1e
L0017: JL              L00,#02 [TRUE] L0018
       LOADW           #187b,#03 -> G1f
L0018: STORE           G22,G1e
       STORE           G23,G1f
       JE              G1e,#01 [FALSE] L0019
       STORE           G22,G20
L0019: JE              G1f,#01 [FALSE] L0021
       JE              G1e,#01 [FALSE] L0020
       STORE           G23,G21
       JUMP            L0021
L0020: STORE           G23,G20
L0021: JE              G1b,G0c [TRUE] L0024
       CALL_VS         R0048 (G0c,#12) -> L01
       JZ              L01 [FALSE] L0023
       CALL_VS         R0048 (G1b,#12) -> L01
       JZ              L01 [FALSE] L0023
       JE              G1d,#0109 [FALSE] L0022
       STOREW          #187b,#03,G1b
       STORE           G1b,G0c
       STORE           G1d,#02
       JUMP            L0016
L0022: CALL_VS         R0059 (G1b,#0104) -> -(SP)
       JZ              (SP)+ [FALSE] L0023
       CALL_VN         R0206 (#0104,#01,G1b)
L0023: JUMP            L0032
L0024: JZ              L00 [TRUE] L0025
       JZ              G1e [TRUE] L0026
L0025: CALL_1N         R0053
       JUMP            L0032
L0026: STORE           G27,#01
       LOADW           #189b,#00 -> L01
       JZ              L01 [FALSE] L0027
       CALL_VN         R0206 (#0107,#02)
       JUMP            L0011
L0027: JE              G1a,#01 [FALSE] L0028
       STORE           G1a,#00
       CALL_VN         R0206 (#0107,#01)
L0028: STORE           L00,G04
       STORE           L02,#01
L0029: JG              L02,L01 [TRUE] L0032
       JZ              G10 [TRUE] L0030
       JUMP            L0032
L0030: JE              G04,L00 [TRUE] L0031
       PRINT           "(Since something dramatic has happened, your list of
commands has been cut short.)
"
       JUMP            L0032
L0031: LOADW           #189b,L02 -> L03
       CALL_2N         R0041 (L03)
       CALL_2N         R0078 (L03)
       PRINT           ": "
       STORE           G1e,L03
       STORE           G22,L03
       CALL_1N         R0053
       STORE           G1e,#00
       STORE           G22,#00
       INC             L02
       JUMP            L0029
L0032: JE              G28,#01 [FALSE] L0033
       STORE           G2a,#01
L0033: JZ              G10 [FALSE] L0034
       JZ              G2a [FALSE] L0034
       CALL_1N         R0066
L0034: JUMP            L0009
L0035: JE              G10,#02 [TRUE] L0036
       CALL_1N         R0333
L0036: JZ              G10 [FALSE] L0037
       JUMP            L0011
L0037: PRINT           "

    "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "***"
       JE              G10,#01 [FALSE] L0038
       CALL_VN         R0206 (#0107,#03)
L0038: JE              G10,#02 [FALSE] L0039
       CALL_VN         R0206 (#0107,#04)
L0039: JG              G10,#02 [FALSE] L0040
       PRINT           " "
       CALL_1N         R0334
       PRINT           " "
L0040: PRINT           "***"
       SET_TEXT_STYLE  ROMAN
       PRINT           "


"
       CALL_1N         R0113
       CALL_1N         R0049
L0041: CALL_VN         R0206 (#0107,#05)
L0042: PRINT           "> "
       STORE           Gef,#00
       STORE           Gec,#17c1
       STOREB          Gec,#01,#00
       CALL_1N         R0327
       READ            Gec,#183a -> Gef
       LOADW           #183a,#01 -> L00
       JE              L00,"quit","q" [FALSE] L0043
       QUIT            
L0043: JE              L00,"restart" [FALSE] L0044
       RESTART         
L0044: JE              L00,"restore" [FALSE] L0045
       CALL_1N         R0104
       JUMP            L0041
L0045: JE              L00,"fullscore","full" [FALSE] L0046
       JZ              #0000 [FALSE] L0046
       NEW_LINE        
       CALL_1N         R0115
       JUMP            L0041
L0046: JE              G10,#02 [FALSE] L0047
       JE              L00,"amusing" [FALSE] L0047
       JZ              #01 [TRUE] L0047
       NEW_LINE        
       CALL_1N         R0361
       JUMP            L0041
L0047: JE              L00,"undo" [FALSE] L0052
       JZ              G2e [FALSE] L0048
       CALL_VN         R0206 (#0107,#06)
       JUMP            L0041
L0048: JE              G2e,#01 [FALSE] L0049
       JUMP            L0050
L0049: RESTORE_UNDO    -> L00
       JZ              L00 [FALSE] L0051
L0050: CALL_VN         R0206 (#0107,#07)
L0051: JUMP            L0041
L0052: CALL_VN         R0206 (#0107,#08)
       JUMP            L0042

Routine R0053, 0 locals

       JE              G2a,#01 [TRUE] L0001
       CALL_1S         R0056 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0001: LOADW           #2469,G1d -> -(SP)
       CALL_1N         (SP)+
L0002: RTRUE           

Routine R0054, 7 locals

       STORE           L05,G49
       STORE           L06,G4a
       STORE           G49,L00
       STORE           G4a,#00
       STORE           L02,G1b
       STORE           L03,G1c
       STORE           L04,G66
       STORE           G66,#06
       JZ              L01 [FALSE] L0001
       STORE           G1b,G0c
       JUMP            L0002
L0001: STORE           G1b,L01
L0002: STORE           G1c,G1b
L0003: GET_PARENT      G1c -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PARENT      G1c -> G1c
       JUMP            L0003
L0004: CALL_VN         R0022 (G04,G0c,#00)
       STORE           G66,L04
       STORE           G1b,L02
       STORE           G1c,L03
       STORE           G49,L05
       STORE           L05,G4a
       STORE           G4a,L06
       RET             L05

Routine R0055, 6 locals

       STORE           L02,G49
       STORE           L03,G66
       STORE           L04,G1b
       STORE           L05,G1c
       STORE           G49,L00
       JZ              L01 [FALSE] L0001
       STORE           G1b,G0c
       JUMP            L0002
L0001: STORE           G1b,L01
L0002: STORE           G1c,G1b
L0003: GET_PARENT      G1c -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       GET_PARENT      G1c -> G1c
       JUMP            L0003
L0004: STORE           G66,#05
       CALL_VN         R0022 (G1c,G1b,#00)
       STORE           G49,L02
       STORE           G66,L03
       STORE           G1b,L04
       STORE           G1c,L05
       RTRUE           

Routine R0056, 0 locals

       CALL_1S         R0369 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R0048 (G0c,#12) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JZ              G04 [TRUE] L0001
       CALL_VS         R0048 (G04,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: STORE           G66,#03
       STORE           G49,#00
       CALL_VN         R0022 (G04,G0c,#00)
       STORE           G66,#00
       JZ              G49 [FALSE] RTRUE
       JG              G1e,#01 [FALSE] L0002
       CALL_VS         R0048 (G1e,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: RFALSE          

Routine R0057, 0 locals

       STORE           G66,#04
       STORE           G49,#00
       CALL_VN         R0022 (G04,G0c,#00)
       STORE           G66,#00
       JZ              G49 [FALSE] RTRUE
       JZ              G04 [TRUE] L0001
       CALL_VS         R0048 (G04,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JG              G1e,#01 [FALSE] L0002
       CALL_VS         R0048 (G1e,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_1S         R0370 -> -(SP)
       RET_POPPED      

Routine R0058, 7 locals

       STORE           L03,G1e
       STORE           L04,G1f
       STORE           L05,G1d
       STORE           L06,Geb
       STORE           G1e,L01
       STORE           G1f,L02
       STORE           G22,L01
       STORE           G23,L02
       STORE           G1d,L00
       JE              G2a,#01 [TRUE] L0001
       CALL_1S         R0056 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0001: JL              G1d,#0100 [FALSE] L0002
       LOADW           #2469,G1d -> -(SP)
       CALL_1N         (SP)+
       STORE           Geb,L06
       STORE           G1e,L03
       STORE           G22,L03
       STORE           G1f,L04
       STORE           G23,L04
       STORE           G1d,L05
       RFALSE          
L0002: STORE           Geb,L06
       STORE           G1e,L03
       STORE           G22,L03
       STORE           G1f,L04
       STORE           G23,L04
       STORE           G1d,L05
       RTRUE           

Routine R0059, 2 locals

       STORE           G2b,L01
       CALL_VS         R0048 (L00,#06) -> -(SP)
       RET_POPPED      

Routine R0060, 7 locals

       INC             G70
L0001: STORE           G73,#00
       CALL_1S         L01 -> L03
       STORE           L04,G72
       PRINT           "--- "
       PRINT_PADDR     L04
       PRINT           " ---

"
       CALL_2S         R0045 (L00) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0002
       PRINT_PADDR     L00
       JUMP            L0003
L0002: CALL_1N         L00
L0003: PRINT           "
Type a number from 1 to "
       PRINT_NUM       L03
       PRINT           ", 0 to redisplay or press ENTER.
> "
       STORE           Gef,#00
       STORE           Gec,#17c1
       STOREB          Gec,#01,#00
       CALL_1N         R0327
       READ            Gec,#183a -> Gef
       LOADW           #183a,#01 -> L05
       JE              L05,"quit","q" [TRUE] L0004
       LOADB           #183a,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0004: DEC             G70
       JG              G70,#00 [TRUE] RFALSE
       JZ              G10 [FALSE] L0005
       CALL_2N         R0058 (#07)
       RTRUE           
L0005: RFALSE          
L0006: CALL_2S         R0040 (#01) -> L05
       JZ              L05 [FALSE] L0007
       JUMP            L0001
L0007: JL              L05,#01 [TRUE] L0008
       JG              L05,L03 [FALSE] L0009
L0008: JUMP            L0003
L0009: STORE           G73,L05
       CALL_1S         L02 -> L06
       JE              L06,#02 [FALSE] L0010
       JUMP            L0001
L0010: JE              L06,#03 [TRUE] RFALSE
       JUMP            L0003

Routine R0061, 11 locals

       JZ              G6f [FALSE] L0001
       CALL_VN         R0060 (L00,L01,L02)
       RFALSE          
L0001: INC             G70
       STORE           G73,#00
       CALL_1S         L01 -> L03
       STORE           L04,G72
       STORE           L05,G71
       STORE           L06,#07
L0002: STORE           L09,#00
       ERASE_WINDOW    #ffff
       ADD             L03,#07 -> L07
       SPLIT_WINDOW    L07
       LOADB           #00,#21 -> L07
       JZ              L07 [FALSE] L0003
       STORE           L07,#50
L0003: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#00 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,L05 -> L08
       SET_CURSOR      #01,L08
       PRINT_PADDR     L04
       SET_CURSOR      #02,#01
       STORE           Gef,L07
       JL              Gef,#00 [TRUE] L0007
L0006: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0006
L0007: SET_CURSOR      #02,#02
       PRINT           "N = next subject"
       SUB             L07,#0c -> L08
       SET_CURSOR      #02,L08
       PRINT           "P = previous"
       SET_CURSOR      #03,#01
       STORE           Gef,L07
       JL              Gef,#00 [TRUE] L0009
L0008: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0008
L0009: SET_CURSOR      #03,#02
       PRINT           "RETURN = read subject"
       SUB             L07,#11 -> L08
       SET_CURSOR      #03,L08
       JE              G70,#01 [FALSE] L0010
       PRINT           "  Q = resume game"
       JUMP            L0011
L0010: PRINT           "Q = previous menu"
L0011: SET_TEXT_STYLE  ROMAN
       SET_CURSOR      #05,#02
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       CALL_2S         R0045 (L00) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0012
       PRINT_PADDR     L00
       JUMP            L0013
L0012: CALL_1N         L00
L0013: JE              L06,L09 [TRUE] L0015
       JG              L09,#00 [FALSE] L0014
       SET_CURSOR      L09,#04
       PRINT           " "
L0014: SET_CURSOR      L06,#04
       PRINT           ">"
L0015: STORE           L09,L06
       READ_CHAR       #01,#00,#00 -> L0a
       JE              L0a,#4e,#6e,#82 [FALSE] L0017
       INC             L06
       ADD             #07,L03 -> -(SP)
       JE              L06,(SP)+ [FALSE] L0016
       STORE           L06,#07
L0016: JUMP            L0013
L0017: JE              L0a,#50,#70,#81 [FALSE] L0019
       DEC             L06
       JE              L06,#06 [FALSE] L0018
       ADD             #06,L03 -> L06
L0018: JUMP            L0013
L0019: JE              L0a,#51,#71,#1b [TRUE] L0020
       JE              L0a,#83 [FALSE] L0021
L0020: JUMP            L0028
L0021: JE              L0a,#0a,#0d,#84 [FALSE] L0027
       SET_WINDOW      #00
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       SUB             L06,#06 -> G73
       CALL_1N         L01
       ERASE_WINDOW    #ffff
       SPLIT_WINDOW    #01
       LOADB           #00,#21 -> L07
       JZ              L07 [FALSE] L0022
       STORE           L07,#50
L0022: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#00 [TRUE] L0024
L0023: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0023
L0024: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,G71 -> L08
       SET_CURSOR      #01,L08
       PRINT_PADDR     G72
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       NEW_LINE        
       CALL_1S         L02 -> L07
       JE              L07,#02 [FALSE] L0025
       JUMP            L0002
L0025: JE              L07,#03 [FALSE] L0026
       JUMP            L0028
L0026: PRINT           "
[Please press SPACE.]
"
       READ_CHAR       #01,#00,#00 -> L0a
       JUMP            L0002
L0027: JUMP            L0013
L0028: DEC             G70
       JG              G70,#00 [TRUE] RFALSE
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_CURSOR      #01,#01
       ERASE_WINDOW    #ffff
       SET_WINDOW      #00
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       JZ              G10 [FALSE] L0029
       CALL_2N         R0058 (#07)
       RTRUE           
L0029: RTRUE           

Routine R0062, 3 locals

       STORE           L02,#00
L0001: JL              L02,G74 [FALSE] L0004
       LOADW           #1741,L02 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       LOADB           #1781,L02 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0002
       CALL_VN         R0082 (#06,L00)
L0002: RFALSE          
L0003: INC             L02
       JUMP            L0001
L0004: STORE           L02,#00
L0005: JL              L02,G74 [FALSE] L0007
       LOADW           #1741,L02 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       JUMP            L0008
L0006: INC             L02
       JUMP            L0005
L0007: STORE           L02,G74
       INC             G74
       MUL             L02,#02 -> -(SP)
       JL              (SP)+,#40 [TRUE] L0008
       CALL_2N         R0082 (#04)
L0008: GET_PROP_ADDR   L00,#19 -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       CALL_VN         R0082 (#05,L00)
L0009: STOREW          #1741,L02,L00
       STOREB          #1781,L02,#01
       PUT_PROP        L00,#19,L01
       RTRUE           

Routine R0063, 2 locals

       STORE           L01,#00
L0001: JL              L01,G74 [FALSE] L0003
       LOADW           #1741,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       JUMP            L0004
L0002: INC             L01
       JUMP            L0001
L0003: RFALSE          
L0004: GET_PROP_ADDR   L00,#19 -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VN         R0082 (#05,L00)
L0005: STOREW          #1741,L01,#00
       PUT_PROP        L00,#19,#00
       RTRUE           

Routine R0064, 2 locals

       STORE           L01,#00
L0001: JL              L01,G74 [FALSE] L0004
       LOADW           #1741,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0003
       LOADB           #1781,L01 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VN         R0082 (#06,L00)
L0002: RFALSE          
L0003: INC             L01
       JUMP            L0001
L0004: STORE           L01,#00
L0005: JL              L01,G74 [FALSE] L0007
       LOADW           #1741,L01 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       JUMP            L0008
L0006: INC             L01
       JUMP            L0005
L0007: STORE           L01,G74
       INC             G74
       MUL             L01,#02 -> -(SP)
       JL              (SP)+,#40 [TRUE] L0008
       CALL_2N         R0082 (#04)
L0008: STOREW          #1741,L01,L00
       STOREB          #1781,L01,#02
       RTRUE           

Routine R0065, 2 locals

       STORE           L01,#00
L0001: JL              L01,G74 [FALSE] L0003
       LOADW           #1741,L01 -> -(SP)
       JE              (SP)+,L00 [FALSE] L0002
       JUMP            L0004
L0002: INC             L01
       JUMP            L0001
L0003: RFALSE          
L0004: STOREW          #1741,L01,#00
       RTRUE           

Routine R0066, 2 locals

       INC             G0b
       JE              G07,#ffff [TRUE] L0003
       JL              G08,#00 [TRUE] L0001
       ADD             G07,G08 -> G07
       JUMP            L0002
L0001: DEC             G09
       JZ              G09 [FALSE] L0002
       INC             G07
       SUB             #00,G08 -> G09
L0002: MOD             G07,#05a0 -> G07
L0003: STORE           L00,#00
L0004: JZ              G10 [FALSE] L0008
       JL              L00,G74 [FALSE] L0008
       LOADW           #1741,L00 -> L01
       JZ              L01 [TRUE] L0007
       LOADB           #1781,L00 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0005
       CALL_VN         R0048 (L01,#1b)
       JUMP            L0007
L0005: GET_PROP        L01,#19 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       CALL_2N         R0063 (L01)
       CALL_VN         R0048 (L01,#1b)
       JUMP            L0007
L0006: GET_PROP        L01,#19 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PUT_PROP        L01,#19,(SP)+
L0007: INC             L00
       JUMP            L0004
L0008: JZ              G10 [FALSE] L0009
       STORE           G66,#02
       STORE           G35,#00
       CALL_2N         R0025 (G04)
       CALL_VN         R0022 (G04,G0c,#00)
       STORE           G66,#00
L0009: JZ              G10 [FALSE] L0010
       CALL_1N         R0366
L0010: JZ              G10 [FALSE] L0014
       CALL_1N         R0067
       GET_CHILD       G0c -> -(SP) [FALSE] L0011
L0011: STORE           L00,(SP)+
       JZ              L00 [TRUE] L0014
L0012: TEST_ATTR       L00,#0c [TRUE] L0013
       SET_ATTR        L00,#0c
       TEST_ATTR       L00,#12 [FALSE] L0013
       ADD             G0a,#0004 -> G0a
       ADD             G15,#0004 -> G15
L0013: GET_SIBLING     L00 -> L00 [TRUE] L0012
L0014: RTRUE           

Routine R0067, 2 locals

       STORE           L01,G0d
       GET_PARENT      G0c -> -(SP)
       CALL_2S         R0068 ((SP)+) -> G0d
       JZ              L01 [FALSE] L0001
       JE              G0d,#01 [FALSE] L0001
       STORE           G04,G0e
       JZ              L00 [FALSE] L0001
       CALL_2N         R0058 (#07)
L0001: JE              L01,#01 [FALSE] L0002
       JZ              G0d [FALSE] L0002
       STORE           G0e,G04
       STORE           G04,#13
       JZ              L00 [FALSE] L0002
       CALL_1N         R0144
       CALL_VS         R0206 (#0107,#09) -> -(SP)
       RET_POPPED      
L0002: JZ              L01 [FALSE] L0003
       JZ              G0d [FALSE] L0003
       STORE           G04,#13
L0003: RTRUE           

Routine R0068, 2 locals

       JZ              L00 [TRUE] RFALSE
       TEST_ATTR       L00,#09 [TRUE] RTRUE
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: STORE           L01,(SP)+
       JZ              L01 [TRUE] L0003
L0002: CALL_2S         R0069 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       GET_SIBLING     L01 -> L01 [TRUE] L0002
L0003: TEST_ATTR       L00,#06 [TRUE] L0004
       CALL_2S         R0023 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
L0004: GET_PARENT      L00 -> -(SP)
       CALL_2S         R0068 ((SP)+) -> -(SP)
       RET_POPPED      
L0005: RFALSE          

Routine R0069, 3 locals

       JZ              L00 [TRUE] RFALSE
       TEST_ATTR       L00,#09 [TRUE] RTRUE
       TEST_ATTR       L00,#06 [TRUE] L0001
       CALL_2S         R0023 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0004
L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: STORE           L00,(SP)+
       JZ              L00 [TRUE] L0004
L0003: CALL_2S         R0069 (L00) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       GET_SIBLING     L00 -> L00 [TRUE] L0003
L0004: GET_PROP_ADDR   L00,#0c -> L02
       GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [TRUE] L0008
       LOADW           L02,#00 -> -(SP)
       JG              (SP)+,G18 [FALSE] L0005
       STORE           G6b,#00
       STORE           G6a,#01
       CALL_VN         R0048 (L00,#0c)
       STORE           G6a,#00
       JE              G6b,#01 [TRUE] RTRUE
       JUMP            L0008
L0005: STORE           L01,#00
L0006: GET_PROP_ADDR   L00,#0c -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: PUSH            Gef
       MUL             #02,L01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0008
       LOADW           L02,L01 -> -(SP)
       CALL_2S         R0069 ((SP)+) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       INC             L01
       JUMP            L0006
L0008: RFALSE          

Routine R0070, 1 local

       JZ              L00 [FALSE] L0001
       PRINT           "is unset"
       JUMP            L0002
L0001: PRINT           "means "
       CALL_2N         R0076 (L00)
L0002: RTRUE           

Routine R0071, 0 locals
    Action routine for:
        "nouns"

       PRINT           "At the moment, "it" "
       CALL_2N         R0070 (G4d)
       PRINT           ", "him" "
       CALL_2N         R0070 (G4e)
       JE              G0c,#14 [FALSE] L0001
       PRINT           " and"
       JUMP            L0002
L0001: PRINT           ","
L0002: PRINT           " "her" "
       CALL_2N         R0070 (G4f)
       JE              G0c,#14 [FALSE] L0003
       PRINT_RET       "."
L0003: PRINT           " and "me" means "
       PRINT_OBJ       G0c
       PRINT_RET       "."

Routine R0072, 3 locals

       GET_PROP_ADDR   L00,#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0082 (#07,L00) -> -(SP)
       RET_POPPED      
L0001: JE              G1b,G0c [FALSE] L0002
       STORE           G1b,L00
L0002: CLEAR_ATTR      G0c,#17
       CLEAR_ATTR      G0c,#02
       STORE           L02,L00
L0003: GET_PARENT      L02 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       TEST_ATTR       L02,#00 [FALSE] L0004
       SET_ATTR        L02,#17
L0004: GET_PARENT      L02 -> L02
       JUMP            L0003
L0005: JE              G0c,#14 [FALSE] L0006
       PUT_PROP        G0c,#1e,S023
L0006: PUT_PROP        G0c,#1a,G0e
       STORE           G0c,L00
       JE              G0c,#14 [FALSE] L0007
       PUT_PROP        G0c,#1e,#ffff
L0007: SET_ATTR        G0c,#17
       SET_ATTR        G0c,#02
       SET_ATTR        G0c,#00
       SET_ATTR        G0c,#10
       STORE           L02,G0c
L0008: GET_PARENT      L02 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       GET_PARENT      L02 -> L02
       JUMP            L0008
L0009: STORE           G04,L02
       GET_PROP        G0c,#1a -> G0e
       JZ              G0e [FALSE] L0010
       STORE           G0e,G04
L0010: GET_PARENT      G0c -> -(SP)
       CALL_2S         R0068 ((SP)+) -> G0d
       JZ              G0d [FALSE] L0011
       STORE           G04,#13
L0011: STORE           G0f,L01
       RTRUE           

Routine R0073, 2 locals

       SUB             L00,#01 -> -(SP)
       LOADW           #00,#05 -> -(SP)
       STOREW          (SP)+,(SP)+,L01
       RTRUE           

Routine R0074, 1 local

       LOADW           L00,#00 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0082 (#08) -> -(SP)
       RET_POPPED      
L0001: LOADW           L00,#00 -> -(SP)
       RANDOM          (SP)+ -> -(SP)
       LOADW           L00,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0075, 1 local

       TEST_ATTR       L00,#10 [TRUE] L0001
       CALL_VN         R0046 (L00,#16,#01)
       PRINT           " "
L0001: CALL_2N         R0078 (L00)
       RTRUE           

Routine R0076, 1 local

       TEST_ATTR       L00,#10 [TRUE] L0001
       PRINT           "the "
L0001: CALL_2N         R0078 (L00)
       RTRUE           

Routine R0077, 1 local

       TEST_ATTR       L00,#10 [TRUE] L0001
       PRINT           "The "
L0001: CALL_2N         R0078 (L00)
       RTRUE           

Routine R0078, 1 local

       JZ              L00 [FALSE] L0001
       PRINT           "nothing"
       RTRUE           
L0001: JG              L00,G18 [TRUE] L0002
       JL              L00,#00 [FALSE] L0005
L0002: CALL_2S         R0045 (L00) -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#02 [FALSE] L0003
       PRINT           "<routine "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT           "<string ""
       PRINT_PADDR     L00
       PRINT           "">"
       RTRUE           
L0004: PRINT           "<illegal object number "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0005: JE              L00,G0c [FALSE] L0006
       PRINT           "yourself"
       RTRUE           
L0006: GET_PROP_ADDR   L00,#1e -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VS         R0046 (L00,#1e,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0007: PRINT_OBJ       L00
       RTRUE           

Routine R0079, 1 local

       STORE           Gef,L00
       JE              Gef,#07 [FALSE] L0001
       PRINT           "north"
       JUMP            L0013
L0001: JE              Gef,#08 [FALSE] L0002
       PRINT           "south"
       JUMP            L0013
L0002: JE              Gef,#09 [FALSE] L0003
       PRINT           "east"
       JUMP            L0013
L0003: JE              Gef,#0a [FALSE] L0004
       PRINT           "west"
       JUMP            L0013
L0004: JE              Gef,#0b [FALSE] L0005
       PRINT           "northeast"
       JUMP            L0013
L0005: JE              Gef,#0d [FALSE] L0006
       PRINT           "northwest"
       JUMP            L0013
L0006: JE              Gef,#0c [FALSE] L0007
       PRINT           "southeast"
       JUMP            L0013
L0007: JE              Gef,#0e [FALSE] L0008
       PRINT           "southwest"
       JUMP            L0013
L0008: JE              Gef,#0f [FALSE] L0009
       PRINT           "up"
       JUMP            L0013
L0009: JE              Gef,#10 [FALSE] L0010
       PRINT           "down"
       JUMP            L0013
L0010: JE              Gef,#11 [FALSE] L0011
       PRINT           "in"
       JUMP            L0013
L0011: JE              Gef,#12 [FALSE] L0012
       PRINT           "out"
       JUMP            L0013
L0012: CALL_VS         R0082 (#09,L00) -> -(SP)
       RET_POPPED      
L0013: RTRUE           

Routine R0080, 1 local

       JZ              #4cb6 [TRUE] L0001
       SET_TEXT_STYLE  BOLDFACE
       PRINT_PADDR     S001
       SET_TEXT_STYLE  ROMAN
L0001: JZ              #4cb7 [TRUE] L0002
       PRINT_PADDR     S002
L0002: PRINT           "Release "
       LOADW           #00,#01 -> -(SP)
       AND             (SP)+,#03ff -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " / Serial number "
       STORE           L00,#12
L0003: JL              L00,#18 [FALSE] L0004
       LOADB           #00,L00 -> -(SP)
       PRINT_CHAR      (SP)+
       INC             L00
       JUMP            L0003
L0004: PRINT           " / Inform v"
       LOADB           #00,#3c -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3d -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3e -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3f -> Gef
       PRINT_CHAR      Gef
       PRINT           " Library "
       PRINT_PADDR     S004
       NEW_LINE        
       JG              G19,#00 [FALSE] L0005
       PRINT           "Standard interpreter "
       DIV             G19,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "."
       MOD             G19,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "
"
L0005: RTRUE           

Routine R0081, 0 locals
    Action routine for:
        "version"

       CALL_1N         R0080
       PRINT           "Interpreter "
       LOADB           #00,#1e -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " Version "
       LOADB           #00,#1f -> -(SP)
       PRINT_CHAR      (SP)+
       PRINT           " / "
       PRINT           "Library serial number "
       PRINT_PADDR     S003
       PRINT           "
"
       RTRUE           

Routine R0082, 3 locals

       PRINT           "** Library error "
       PRINT_NUM       L00
       PRINT           " ("
       PRINT_NUM       L01
       PRINT           ","
       PRINT_NUM       L02
       PRINT_RET       ") **"

Routine R0083, 0 locals

       JE              Ge9,#0c [FALSE] L0001
       JIN             "garden fork","briefcase" [FALSE] L0001
       PRINT_RET       "You can't close the briefcase with the fork sticking
out!"
L0001: RFALSE          

Routine R0084, 0 locals

       PRINT           "A small blank glass jar. "
       CALL_VN         R0058 (#0d,Geb)
       RTRUE           

Routine R0085, 0 locals

       JE              Ge9,#0e [FALSE] L0001
       PUT_PROP        Geb,#20,#00
       PRINT_RET       "Emptied."
L0001: JE              Ge9,#0f [FALSE] L0002
       CALL_VN         R0058 (#10,G23,Geb)
       RTRUE           
L0002: JE              Ge9,#0d [FALSE] L0006
       GET_PROP        Geb,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_RET       "It contains a few useless dregs of a clear liquid."
L0003: GET_PROP        Geb,#20 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0004
       PRINT_RET       "It is half full of a clear liquid."
L0004: GET_PROP        Geb,#20 -> -(SP)
       JE              (SP)+,#02 [FALSE] L0005
       PRINT_RET       "It is full of a clear liquid."
L0005: RFALSE          
L0006: JE              Ge9,#10 [FALSE] L0008
       JE              G23,#005d [FALSE] L0007
       PRINT_RET       "You should never mix chemicals in their own containers.
And anyway, if I let you do that I'd have no idea what anything was anymore."
L0007: RFALSE          
L0008: JE              Ge9,#0102 [FALSE] L0009
       CALL_VN         R0058 (#10,#16,G22)
       RTRUE           
L0009: JE              Ge9,#11 [FALSE] L0010
       PRINT_RET       "You daren't risk drinking the unknown liquid. After
all, it could be flat lemonade, and that would just be plain disgusting."
L0010: RFALSE          

Routine R0086, 0 locals

       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       PRINT           "Operation: Red-Chevette
Agent: 667

You might find that this comes in useful, I've heard it's more potent than it
looks.
"
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       RFALSE          

Routine R0087, 3 locals

       JZ              L00 [FALSE] L0001
       PRINT           "zero"
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       PRINT           "minus "
       SUB             #00,L00 -> L00
L0002: JL              L00,#03e8 [TRUE] L0003
       DIV             L00,#03e8 -> -(SP)
       CALL_2N         R0087 ((SP)+)
       PRINT           " thousand"
       MOD             L00,#03e8 -> L00
       STORE           L02,#01
L0003: JL              L00,#64 [TRUE] L0005
       JE              L02,#01 [FALSE] L0004
       PRINT           ", "
L0004: DIV             L00,#64 -> -(SP)
       CALL_2N         R0087 ((SP)+)
       PRINT           " hundred"
       MOD             L00,#64 -> L00
       STORE           L02,#01
L0005: JZ              L00 [TRUE] RFALSE
       JE              L02,#01 [FALSE] L0006
       PRINT           " and "
L0006: JL              L00,#0a [FALSE] L0007
       CALL_2N         R0088 (L00)
       RFALSE          
L0007: JL              L00,#14 [TRUE] L0016
       DIV             L00,#0a -> L01
       JE              L01,#02 [FALSE] L0008
       PRINT           "twenty"
L0008: JE              L01,#03 [FALSE] L0009
       PRINT           "thirty"
L0009: JE              L01,#04 [FALSE] L0010
       PRINT           "forty"
L0010: JE              L01,#05 [FALSE] L0011
       PRINT           "fifty"
L0011: JE              L01,#06 [FALSE] L0012
       PRINT           "sixty"
L0012: JE              L01,#07 [FALSE] L0013
       PRINT           "seventy"
L0013: JE              L01,#08 [FALSE] L0014
       PRINT           "eighty"
L0014: JE              L01,#09 [FALSE] L0015
       PRINT           "ninety"
L0015: MOD             L00,#0a -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       PRINT           "-"
       MOD             L00,#0a -> -(SP)
       CALL_2N         R0088 ((SP)+)
       RFALSE          
L0016: JE              L00,#0a [FALSE] L0017
       PRINT           "ten"
       RFALSE          
L0017: JE              L00,#0b [FALSE] L0018
       PRINT           "eleven"
       RFALSE          
L0018: JE              L00,#0c [FALSE] L0019
       PRINT           "twelve"
       RFALSE          
L0019: JE              L00,#0d [FALSE] L0020
       PRINT           "thirteen"
       RFALSE          
L0020: JE              L00,#0e [FALSE] L0021
       PRINT           "fourteen"
       RFALSE          
L0021: JE              L00,#0f [FALSE] L0022
       PRINT           "fifteen"
       RFALSE          
L0022: JE              L00,#10 [FALSE] L0023
       PRINT           "sixteen"
       RFALSE          
L0023: JE              L00,#11 [FALSE] L0024
       PRINT           "seventeen"
       RFALSE          
L0024: JE              L00,#12 [FALSE] L0025
       PRINT           "eighteen"
       RFALSE          
L0025: PRINT           "nineteen"
       RTRUE           

Routine R0088, 1 local

       JE              L00,#01 [FALSE] L0001
       PRINT           "one"
       RFALSE          
L0001: JE              L00,#02 [FALSE] L0002
       PRINT           "two"
       RFALSE          
L0002: JE              L00,#03 [FALSE] L0003
       PRINT           "three"
       RFALSE          
L0003: JE              L00,#04 [FALSE] L0004
       PRINT           "four"
       RFALSE          
L0004: JE              L00,#05 [FALSE] L0005
       PRINT           "five"
       RFALSE          
L0005: JE              L00,#06 [FALSE] L0006
       PRINT           "six"
       RFALSE          
L0006: JE              L00,#07 [FALSE] L0007
       PRINT           "seven"
       RFALSE          
L0007: JE              L00,#08 [FALSE] L0008
       PRINT           "eight"
       RFALSE          
L0008: JE              L00,#09 [FALSE] L0009
       PRINT           "nine"
       RFALSE          
L0009: RTRUE           

Routine R0089, 2 locals

       GET_SIBLING     L00 -> L00 [FALSE] L0001
L0001: JZ              G77 [TRUE] L0014
       AND             G76,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       JZ              L01 [FALSE] L0006
L0002: JZ              L00 [TRUE] L0005
       GET_PROP        L00,#0e -> -(SP)
       JE              (SP)+,G77 [FALSE] L0003
       TEST_ATTR       L00,#19 [TRUE] L0005
L0003: GET_SIBLING     L00 -> L00 [FALSE] L0004
L0004: JUMP            L0002
L0005: RET             L00
L0006: AND             G76,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
L0007: JZ              L00 [TRUE] L0010
       TEST_ATTR       L00,#02 [TRUE] L0008
       TEST_ATTR       L00,#11 [TRUE] L0008
       GET_PROP        L00,#0e -> -(SP)
       JE              (SP)+,G77 [TRUE] L0010
L0008: GET_SIBLING     L00 -> L00 [FALSE] L0009
L0009: JUMP            L0007
L0010: RET             L00
L0011: JZ              L00 [TRUE] L0013
       GET_PROP        L00,#0e -> -(SP)
       JE              (SP)+,G77 [TRUE] L0013
       GET_SIBLING     L00 -> L00 [FALSE] L0012
L0012: JUMP            L0011
L0013: RET             L00
L0014: AND             G76,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       JZ              L01 [FALSE] L0018
L0015: JZ              L00 [TRUE] L0017
       TEST_ATTR       L00,#19 [TRUE] L0017
       GET_SIBLING     L00 -> L00 [FALSE] L0016
L0016: JUMP            L0015
L0017: RET             L00
L0018: AND             G76,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0022
L0019: JZ              L00 [TRUE] L0022
       TEST_ATTR       L00,#02 [TRUE] L0020
       TEST_ATTR       L00,#11 [FALSE] L0022
L0020: GET_SIBLING     L00 -> L00 [FALSE] L0021
L0021: JUMP            L0019
L0022: RET             L00

Routine R0090, 1 local

       AND             G76,#20 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       AND             G76,#10 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       TEST_ATTR       L00,#17 [TRUE] RTRUE
       TEST_ATTR       L00,#14 [TRUE] RTRUE
       TEST_ATTR       L00,#03 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] RTRUE
L0001: RFALSE          

Routine R0091, 2 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: JZ              (SP)+ [TRUE] L0002
       CALL_2S         R0090 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0002: GET_CHILD       L01 -> -(SP) [FALSE] L0003
L0003: JZ              (SP)+ [TRUE] L0004
       CALL_2S         R0090 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0004: AND             G76,#84 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       TEST_ATTR       L00,#1a [TRUE] L0005
       TEST_ATTR       L01,#1a [TRUE] RFALSE
L0005: TEST_ATTR       L01,#1a [TRUE] L0006
       TEST_ATTR       L00,#1a [TRUE] RFALSE
L0006: TEST_ATTR       L00,#09 [TRUE] L0007
       TEST_ATTR       L01,#09 [TRUE] RFALSE
L0007: TEST_ATTR       L01,#09 [TRUE] L0008
       TEST_ATTR       L00,#09 [TRUE] RFALSE
L0008: CALL_VS         R0014 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0092, 2 locals

L0001: GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0002: JZ              (SP)+ [TRUE] L0008
       GET_PROP        L00,#0e -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0003
L0003: JE              (SP)+,L01 [TRUE] L0005
       GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: INSERT_OBJ      (SP)+,"outside"
       JUMP            L0007
L0005: GET_CHILD       L00 -> -(SP) [FALSE] L0006
L0006: INSERT_OBJ      (SP)+,"inside"
L0007: JUMP            L0001
L0008: GET_CHILD       "inside" -> -(SP) [FALSE] L0009
L0009: JZ              (SP)+ [TRUE] L0011
       GET_CHILD       "inside" -> -(SP) [FALSE] L0010
L0010: INSERT_OBJ      (SP)+,L00
       JUMP            L0008
L0011: GET_CHILD       "outside" -> -(SP) [FALSE] L0012
L0012: JZ              (SP)+ [TRUE] L0014
       GET_CHILD       "outside" -> -(SP) [FALSE] L0013
L0013: INSERT_OBJ      (SP)+,L00
       JUMP            L0011
L0014: RTRUE           

Routine R0093, 4 locals

L0001: STORE           L01,L00
       JUMP            L0003
L0002: GET_SIBLING     L01 -> L01 [FALSE] L0003
L0003: JZ              L01 [TRUE] L0013
       GET_PROP        L01,#0e -> L02
       JZ              L02 [TRUE] L0012
       GET_SIBLING     L01 -> L01 [FALSE] L0004
L0004: JZ              L01 [TRUE] L0006
       GET_PROP        L01,#0e -> -(SP)
       JE              (SP)+,L02 [FALSE] L0006
       GET_SIBLING     L01 -> L01 [FALSE] L0005
L0005: JUMP            L0004
L0006: JZ              L01 [TRUE] RFALSE
       GET_SIBLING     L01 -> L03 [FALSE] L0007
L0007: JUMP            L0009
L0008: GET_SIBLING     L03 -> L03 [FALSE] L0009
L0009: JZ              L03 [TRUE] L0012
       GET_PROP        L03,#0e -> -(SP)
       JE              (SP)+,L02 [FALSE] L0011
       GET_PARENT      L00 -> -(SP)
       CALL_VN         R0092 ((SP)+,L02)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0010
L0010: JUMP            L0001
L0011: JUMP            L0008
L0012: JUMP            L0002
L0013: RTRUE           

Routine R0094, 3 locals

       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0001
L0001: JE              L00,(SP)+ [FALSE] L0002
       CALL_2N         R0093 (L00)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0002
L0002: STORE           G76,L01
       AND             L01,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
L0003: JZ              L00 [TRUE] L0005
       TEST_ATTR       L00,#19 [TRUE] L0005
       GET_SIBLING     L00 -> L00 [FALSE] L0004
L0004: JUMP            L0003
L0005: JUMP            L0010
L0006: AND             G76,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0010
L0007: JZ              L00 [TRUE] L0010
       TEST_ATTR       L00,#02 [TRUE] L0008
       TEST_ATTR       L00,#11 [FALSE] L0010
L0008: GET_SIBLING     L00 -> L00 [FALSE] L0009
L0009: JUMP            L0007
L0010: JZ              L00 [TRUE] RFALSE
       STORE           G7a,#00
       CALL_VN         R0095 (L00,L02)
       RTRUE           

Routine R0095, 15 locals

       JG              L01,#00 [FALSE] L0002
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> -(SP) [FALSE] L0001
L0001: JE              L00,(SP)+ [FALSE] L0002
       CALL_2N         R0093 (L00)
       GET_PARENT      L00 -> -(SP)
       GET_CHILD       (SP)+ -> L00 [FALSE] L0002
L0002: ADD             #1ac0,L02 -> L03
       ADD             #1a40,L02 -> L04
       STORE           L05,L00
       STORE           L06,#00
       JUMP            L0004
L0003: CALL_VS         R0089 (L05,L01) -> L05
       INC             L06
L0004: JZ              L05 [TRUE] L0006
       ADD             L06,L02 -> -(SP)
       JL              (SP)+,#80 [FALSE] L0006
       STOREB          L03,L06,#00
       GET_PROP        L05,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       INC             L07
L0005: JUMP            L0003
L0006: AND             G76,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       JE              L06,#01 [FALSE] L0007
       PRINT           " is"
       JUMP            L0008
L0007: PRINT           " are"
L0008: AND             G76,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       PRINT           ":
"
       JUMP            L0010
L0009: PRINT_CHAR      ' '
L0010: SUB             G76,#0400 -> G76
L0011: ADD             L02,L06 -> -(SP)
       ADD             (SP)+,#01 -> L02
       JL              L07,#02 [FALSE] L0012
       JUMP            L0063
L0012: STORE           L0b,#01
       STORE           L05,L00
       STORE           L07,#00
       JUMP            L0014
L0013: CALL_VS         R0089 (L05,L01) -> L05
       INC             L07
L0014: JL              L07,L06 [FALSE] L0020
       LOADB           L03,L07 -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       STOREB          L03,L07,L0b
       STOREB          L04,L0b,#01
       CALL_VS         R0089 (L05,L01) -> L09
       ADD             L07,#01 -> L0a
       JUMP            L0016
L0015: CALL_VS         R0089 (L09,L01) -> L09
       INC             L0a
L0016: JZ              L09 [TRUE] L0018
       JL              L0a,L06 [FALSE] L0018
       LOADB           L03,L0a -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       GET_PROP        L05,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       GET_PROP        L09,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       CALL_VS         R0091 (L05,L09) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0017
       LOADB           L04,L0b -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       STOREB          L04,L0b,(SP)+
       STOREB          L03,L0a,L0b
L0017: JUMP            L0015
L0018: INC             L0b
L0019: JUMP            L0013
L0020: DEC             L0b
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       JUMP            L0022
L0021: INC             L05
       INC             L0d
L0022: JG              L05,L0b [TRUE] L0026
L0023: LOADB           L03,L07 -> -(SP)
       JE              (SP)+,L05 [TRUE] L0024
       SUB             #00,L05 -> -(SP)
       LOADB           L03,L07 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0024
       INC             L07
       CALL_VS         R0089 (L06,L01) -> L06
       JUMP            L0023
L0024: LOADB           L04,L05 -> L0a
       GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,#00,G77 [TRUE] L0025
       GET_PROP        L06,#0e -> -(SP)
       CALL_2S         R0045 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0025
       GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,L0e [FALSE] L0025
       DEC             L0d
L0025: GET_PROP        L06,#0e -> L0e
       JUMP            L0021
L0026: DEC             L0d
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       STORE           L0e,#00
       JUMP            L0028
L0027: INC             L05
       DEC             L0d
L0028: JL              L0d,#00 [TRUE] L0062
L0029: LOADB           L03,L07 -> -(SP)
       JE              (SP)+,L05 [TRUE] L0030
       SUB             #00,L05 -> -(SP)
       LOADB           L03,L07 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0030
       INC             L07
       CALL_VS         R0089 (L06,L01) -> L06
       JUMP            L0029
L0030: GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,#00,G77 [TRUE] L0051
       GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,L0e [FALSE] L0031
       INC             L0d
       JUMP            L0061
L0031: CALL_VS         R0089 (L06,L01) -> L08
       JZ              L08 [TRUE] L0032
       GET_PROP        L06,#0e -> -(SP)
       GET_PROP        L08,#0e -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0033
L0032: JUMP            L0051
L0033: GET_PROP        L06,#0e -> -(SP)
       CALL_2S         R0045 ((SP)+) -> L08
       JE              L08,#02,#03 [FALSE] L0051
       STORE           L0c,L06
       STORE           G79,#01
       STORE           L09,L07
       STORE           L0a,L05
L0034: JL              L0a,L0b [FALSE] L0038
       GET_PROP        L06,#0e -> -(SP)
       GET_PROP        L0c,#0e -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0038
       INC             L0a
L0035: LOADB           L03,L09 -> -(SP)
       JE              (SP)+,L0a [TRUE] L0036
       SUB             #00,L0a -> -(SP)
       LOADB           L03,L09 -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0036
       INC             L09
       CALL_VS         R0089 (L0c,L01) -> L0c
       JUMP            L0035
L0036: GET_PROP        L06,#0e -> -(SP)
       GET_PROP        L0c,#0e -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0037
       INC             G79
L0037: JUMP            L0034
L0038: JE              G79,#01 [FALSE] L0039
       JUMP            L0051
L0039: AND             G76,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0041
       ADD             L01,G7a -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#00 [TRUE] L0041
L0040: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0040
L0041: JE              L08,#03 [FALSE] L0045
       STORE           L0c,#00
       STORE           L09,#00
L0042: JL              L09,G79 [FALSE] L0043
       ADD             L09,L05 -> -(SP)
       LOADB           L04,(SP)+ -> -(SP)
       ADD             L0c,(SP)+ -> L0c
       INC             L09
       JUMP            L0042
L0043: CALL_2N         R0087 (L0c)
       PRINT           " "
       GET_PROP        L06,#0e -> -(SP)
       PRINT_PADDR     (SP)+
       AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       PRINT           " ("
L0044: AND             G76,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0045
       PRINT           ":
"
L0045: STORE           L0c,G76
       JE              L08,#03 [TRUE] L0046
       STORE           G75,#01
       STORE           G49,L06
       ADD             L01,G7a -> G4a
       CALL_VS         R0048 (L06,#0e) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0046
       JUMP            L0049
L0046: GET_PROP        L06,#0e -> G77
       STORE           G78,L06
       INC             G7a
       CALL_VN         R0095 (L06,L01,L02)
       DEC             G7a
       STORE           G77,#00
       STORE           G78,#00
       JE              L08,#03 [FALSE] L0048
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0047
       PRINT           ")"
L0047: JUMP            L0049
L0048: STORE           G75,#02
       STORE           G49,L06
       ADD             L01,G7a -> G4a
       CALL_VN         R0048 (L06,#0e)
L0049: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       AND             G76,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0050
       NEW_LINE        
L0050: STORE           G76,L0c
       GET_PROP        L06,#0e -> L0e
       JUMP            L0059
L0051: CALL_VS         R0096 (L06,L01) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0052
       JUMP            L0061
L0052: LOADB           L04,L05 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0056
       AND             G76,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0053
       CALL_2N         R0078 (L06)
       JUMP            L0055
L0053: AND             G76,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0054
       CALL_2N         R0076 (L06)
       JUMP            L0055
L0054: CALL_2N         R0075 (L06)
L0055: JUMP            L0058
L0056: AND             G76,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0057
       PRINT           "the "
L0057: LOADB           L04,L05 -> -(SP)
       CALL_2N         R0087 ((SP)+)
       PRINT           " "
       CALL_VN         R0046 (L06,#10,#01)
L0058: CALL_VN         R0097 (L06,L01,L02)
L0059: AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0061
       JE              L0d,#01 [FALSE] L0060
       PRINT           " and "
L0060: JG              L0d,#01 [FALSE] L0061
       PRINT           ", "
L0061: JUMP            L0027
L0062: RTRUE           
L0063: STORE           L0b,L06
       STORE           L05,#01
       STORE           L06,L00
       JUMP            L0065
L0064: CALL_VS         R0089 (L06,L01) -> L06
       INC             L05
       INC             L0d
L0065: JG              L05,L0b [TRUE] L0067
       GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,#00,G77 [TRUE] L0066
       GET_PROP        L06,#0e -> -(SP)
       CALL_2S         R0045 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0066
       GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,L0e [FALSE] L0066
       DEC             L0d
L0066: GET_PROP        L06,#0e -> L0e
       JUMP            L0064
L0067: STORE           L05,#01
       STORE           L06,L00
       STORE           L0e,#00
       JUMP            L0069
L0068: CALL_VS         R0089 (L06,L01) -> L06
       INC             L05
L0069: JG              L05,L0d [TRUE] L0091
       GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,#00,G77 [TRUE] L0083
       GET_PROP        L06,#0e -> -(SP)
       JE              (SP)+,L0e [FALSE] L0070
       DEC             L05
       JUMP            L0090
L0070: CALL_VS         R0089 (L06,L01) -> L07
       JZ              L07 [TRUE] L0071
       GET_PROP        L06,#0e -> -(SP)
       GET_PROP        L07,#0e -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0072
L0071: JUMP            L0083
L0072: GET_PROP        L06,#0e -> -(SP)
       CALL_2S         R0045 ((SP)+) -> L07
       JE              L07,#02,#03 [FALSE] L0083
       AND             G76,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0074
       ADD             L01,G7a -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#00 [TRUE] L0074
L0073: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0073
L0074: JE              L07,#03 [FALSE] L0077
       STORE           L0c,L06
       STORE           L09,#00
L0075: CALL_VS         R0089 (L0c,L01) -> L0c
       INC             L09
       GET_PROP        L06,#0e -> -(SP)
       GET_PROP        L0c,#0e -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0075
       CALL_2N         R0087 (L09)
       PRINT           " "
       GET_PROP        L06,#0e -> -(SP)
       PRINT_PADDR     (SP)+
       AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0076
       PRINT           " ("
L0076: AND             G76,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0077
       PRINT           ":
"
L0077: STORE           L0c,G76
       JE              L07,#03 [TRUE] L0078
       STORE           G75,#01
       STORE           G49,L06
       ADD             L01,G7a -> G4a
       CALL_VS         R0048 (L06,#0e) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0078
       JUMP            L0081
L0078: GET_PROP        L06,#0e -> G77
       STORE           G78,L06
       INC             G7a
       CALL_VN         R0095 (L06,L01,L02)
       DEC             G7a
       STORE           G77,#00
       STORE           G78,#00
       JE              L07,#03 [FALSE] L0080
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0079
       PRINT           ")"
L0079: JUMP            L0081
L0080: STORE           G75,#02
       STORE           G49,L06
       ADD             L01,G7a -> G4a
       CALL_VN         R0048 (L06,#0e)
L0081: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0082
       AND             G76,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0082
       NEW_LINE        
L0082: STORE           G76,L0c
       GET_PROP        L06,#0e -> L0e
       JUMP            L0088
L0083: CALL_VS         R0096 (L06,L01) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0084
       JUMP            L0090
L0084: AND             G76,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0085
       CALL_2N         R0078 (L06)
       JUMP            L0087
L0085: AND             G76,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0086
       CALL_2N         R0076 (L06)
       JUMP            L0087
L0086: CALL_2N         R0075 (L06)
L0087: CALL_VN         R0097 (L06,L01,L02)
L0088: AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0090
       SUB             L0d,#01 -> -(SP)
       JE              L05,(SP)+ [FALSE] L0089
       PRINT           " and "
L0089: SUB             L0d,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0090
       PRINT           ", "
L0090: JUMP            L0068
L0091: RTRUE           

Routine R0096, 3 locals

       AND             G76,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       ADD             L01,G7a -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#00 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: AND             G76,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       GET_PROP        L00,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           G75,#01
       CALL_VS         R0046 (L00,#0f,#01) -> L02
       JE              L02,#01 [FALSE] L0003
       AND             G76,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       NEW_LINE        
L0003: RET             L02

Routine R0097, 8 locals

       AND             G76,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       STORE           L07,#00
       TEST_ATTR       L00,#09 [FALSE] L0001
       TEST_ATTR       G04,#09 [TRUE] L0001
       ADD             L07,#01 -> L07
L0001: TEST_ATTR       L00,#03 [FALSE] L0002
       TEST_ATTR       L00,#0e [TRUE] L0002
       ADD             L07,#02 -> L07
L0002: TEST_ATTR       L00,#03 [FALSE] L0005
       TEST_ATTR       L00,#0e [TRUE] L0003
       TEST_ATTR       L00,#17 [FALSE] L0005
L0003: GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [FALSE] L0005
       ADD             L07,#04 -> L07
L0005: JE              L07,#01 [FALSE] L0006
       PRINT           " (providing light)"
L0006: JE              L07,#02 [FALSE] L0007
       PRINT           " (which is closed)"
L0007: JE              L07,#03 [FALSE] L0008
       PRINT           " (closed and providing light)"
L0008: JE              L07,#04 [FALSE] L0009
       PRINT           " (which is empty)"
L0009: JE              L07,#05 [FALSE] L0010
       PRINT           " (empty and providing light)"
L0010: JE              L07,#06 [FALSE] L0011
       PRINT           " (which is closed and empty)"
L0011: JE              L07,#07 [FALSE] L0012
       PRINT           " (closed, empty and providing light)"
L0012: AND             G76,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       GET_PROP        L00,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       STORE           G75,#02
       CALL_VS         R0048 (L00,#0f) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       AND             G76,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       NEW_LINE        
L0013: RTRUE           
L0014: TEST_ATTR       L00,#09 [FALSE] L0015
       TEST_ATTR       L00,#1a [FALSE] L0015
       PRINT           " (providing light and being worn"
       STORE           L04,#01
       JUMP            L0017
L0015: TEST_ATTR       L00,#09 [FALSE] L0016
       PRINT           " (providing light"
       STORE           L04,#01
L0016: TEST_ATTR       L00,#1a [FALSE] L0017
       PRINT           " (being worn"
       STORE           L04,#01
L0017: TEST_ATTR       L00,#03 [FALSE] L0028
       TEST_ATTR       L00,#0f [FALSE] L0025
       JE              L04,#01 [FALSE] L0018
       PRINT           " and "
       JUMP            L0019
L0018: PRINT           " (which is "
L0019: TEST_ATTR       L00,#0e [FALSE] L0022
       PRINT           "open"
       GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: JZ              (SP)+ [FALSE] L0021
       PRINT           " but empty"
L0021: JUMP            L0023
L0022: PRINT           "closed"
L0023: TEST_ATTR       L00,#0a [FALSE] L0024
       TEST_ATTR       L00,#0b [FALSE] L0024
       PRINT           " and locked"
L0024: STORE           L04,#01
       JUMP            L0028
L0025: GET_CHILD       L00 -> -(SP) [FALSE] L0026
L0026: JZ              (SP)+ [FALSE] L0028
       JE              L04,#01 [FALSE] L0027
       PRINT           " and empty"
       JUMP            L0028
L0027: PRINT           " (which is empty)"
L0028: JE              L04,#01 [FALSE] L0029
       PRINT           ")"
L0029: AND             G76,#0800 -> -(SP)
       JZ              (SP)+ [FALSE] L0034
       GET_CHILD       L00 -> -(SP) [FALSE] L0030
L0030: JZ              (SP)+ [TRUE] L0033
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0032
L0031: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0031
L0032: STORE           Gee,(SP)+
       STORE           L05,Gef
L0033: JUMP            L0038
L0034: GET_CHILD       L00 -> -(SP) [FALSE] L0035
L0035: STORE           L06,(SP)+
       JZ              L06 [TRUE] L0038
L0036: TEST_ATTR       L06,#02 [TRUE] L0037
       INC             L05
L0037: GET_SIBLING     L06 -> L06 [TRUE] L0036
L0038: AND             G76,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0040
       JG              L05,#00 [FALSE] L0040
       AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0039
       PRINT           " containing "
L0039: STORE           L03,#01
L0040: AND             G76,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0051
       JG              L05,#00 [FALSE] L0051
       TEST_ATTR       L00,#14 [FALSE] L0045
       AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       AND             G76,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0041
       PRINT           " (on "
       JUMP            L0042
L0041: PRINT           ", on top of "
L0042: TEST_ATTR       L00,#00 [FALSE] L0043
       PRINT           "whom "
       JUMP            L0044
L0043: PRINT           "which "
L0044: STORE           L03,#01
L0045: TEST_ATTR       L00,#03 [FALSE] L0051
       TEST_ATTR       L00,#0e [TRUE] L0046
       TEST_ATTR       L00,#17 [FALSE] L0051
L0046: AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       AND             G76,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0047
       PRINT           " (in "
       JUMP            L0048
L0047: PRINT           ", inside "
L0048: TEST_ATTR       L00,#00 [FALSE] L0049
       PRINT           "whom "
       JUMP            L0050
L0049: PRINT           "which "
L0050: STORE           L03,#01
L0051: JE              L03,#01 [FALSE] L0053
       AND             G76,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0053
       JG              L05,#01 [FALSE] L0052
       PRINT           "are "
       JUMP            L0053
L0052: PRINT           "is "
L0053: AND             G76,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0054
       NEW_LINE        
L0054: JE              L03,#01 [FALSE] L0056
       ADD             L01,#01 -> -(SP)
       GET_CHILD       L00 -> -(SP) [FALSE] L0055
L0055: CALL_VN         R0095 ((SP)+,(SP)+,L02)
L0056: JE              L03,#01 [FALSE] L0057
       AND             G76,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0057
       PRINT           ")"
L0057: RTRUE           

Routine R0098, 5 locals

       STORE           L00,#15
L0001: JG              L00,G18 [TRUE] L0009
       GET_PROP_ADDR   L00,#18 -> L04
       JZ              L04 [TRUE] L0008
       TEST_ATTR       L00,#07 [TRUE] L0008
       LOADW           L04,#00 -> -(SP)
       CALL_2S         R0045 ((SP)+) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0003
       LOADW           L04,#00 -> -(SP)
       CALL_1S         (SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INSERT_OBJ      L00,G04
L0002: JUMP            L0008
L0003: GET_PROP_ADDR   L00,#18 -> Gef
       JZ              Gef [TRUE] L0004
       GET_PROP_LEN    Gef -> Gef
L0004: STORE           L01,Gef
       STORE           L02,#00
L0005: DIV             L01,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0008
       LOADW           L04,L02 -> L03
       JE              L03,G04 [TRUE] L0006
       JIN             L03,G04 [FALSE] L0007
L0006: INSERT_OBJ      L00,G04
L0007: INC             L02
       JUMP            L0005
L0008: INC             L00
       JUMP            L0001
L0009: RTRUE           

Routine R0099, 2 locals

       INSERT_OBJ      G0c,L00
L0001: GET_PARENT      L00 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       GET_PARENT      L00 -> L00
       JUMP            L0001
L0002: STORE           G04,L00
       STORE           G0e,G04
       CALL_2N         R0067 (#01)
       JZ              L01 [FALSE] L0003
       CALL_2N         R0058 (#07)
L0003: JE              L01,#01 [FALSE] L0004
       CALL_1N         R0144
       CALL_1N         R0145
L0004: JE              L01,#02 [FALSE] L0005
       CALL_2N         R0146 (#01)
L0005: RTRUE           

Routine R0100, 1 local

       CALL_VN         R0058 (#00,L00)
       CALL_2N         R0058 (#07)
       RTRUE           

Routine R0101, 1 local

L0001: STORE           Gec,#17c1
       STOREB          Gec,#01,#00
       CALL_1N         R0327
       READ            Gec,#183a -> Gef
       LOADW           #183a,#01 -> L00
       JE              L00,"yes","y" [TRUE] RTRUE
       JE              L00,"no","n" [TRUE] RFALSE
       CALL_VN         R0206 (#12,#01)
       PRINT           "> "
       JUMP            L0001

orphan code fragment:

       RTRUE           

Routine R0102, 0 locals
    Action routine for:
        "die"

       CALL_VN         R0206 (#12,#02)
       CALL_1S         R0101 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       QUIT            
L0001: RTRUE           

Routine R0103, 0 locals
    Action routine for:
        "restart"

       CALL_VN         R0206 (#13,#01)
       CALL_1S         R0101 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RESTART         
       CALL_VN         R0206 (#13,#02)
L0001: RTRUE           

Routine R0104, 0 locals
    Action routine for:
        "restore"

       RESTORE         -> Gef
       JE              Gef,#02 [TRUE] L0001
       CALL_VS         R0206 (#14,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0206 (#14,#02)
       RTRUE           

Routine R0105, 0 locals
    Action routine for:
        "save"

       SAVE            -> Gef
       JZ              Gef [FALSE] L0001
       CALL_VS         R0206 (#15,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0206 (#15,#02)
       RTRUE           

Routine R0106, 0 locals
    Action routine for:
        "verify"

       VERIFY          [TRUE] L0001
       JUMP            L0002
L0001: CALL_VS         R0206 (#16,#01) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0206 (#16,#02)
       RTRUE           

Routine R0107, 0 locals
    Action routine for:
        "script"
        "script on"

       JE              G11,#01 [FALSE] L0001
       CALL_VS         R0206 (#17,#01) -> -(SP)
       RET_POPPED      
L0001: STORE           G11,#01
       LOADW           #00,#08 -> -(SP)
       OR              (SP)+,#01 -> -(SP)
       STOREW          #00,#08,(SP)+
       CALL_VN         R0206 (#17,#02)
       CALL_1N         R0081
       RTRUE           

Routine R0108, 0 locals
    Action routine for:
        "script off"
        "noscript"

       JZ              G11 [FALSE] L0001
       CALL_VS         R0206 (#18,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0206 (#18,#02)
       STORE           G11,#00
       LOADW           #00,#08 -> -(SP)
       AND             (SP)+,#fffe -> -(SP)
       STOREW          #00,#08,(SP)+
       RTRUE           

Routine R0109, 0 locals
    Action routine for:
        "notify on"

       STORE           G13,#01
       CALL_2N         R0206 (#19)
       RTRUE           

Routine R0110, 0 locals
    Action routine for:
        "notify off"

       STORE           G13,#00
       CALL_2N         R0206 (#1a)
       RTRUE           

Routine R0111, 3 locals
    Action routine for:
        "places"

       CALL_2N         R0206 (#1b)
       STORE           L00,#14
L0001: JG              L00,G18 [TRUE] L0003
       TEST_ATTR       L00,#18 [FALSE] L0002
       INC             L01
L0002: INC             L00
       JUMP            L0001
L0003: STORE           L00,#14
L0004: JG              L00,G18 [TRUE] L0008
       TEST_ATTR       L00,#18 [FALSE] L0007
       CALL_2N         R0078 (L00)
       INC             L02
       JE              L02,L01 [FALSE] L0005
       PRINT_RET       "."
L0005: SUB             L01,#01 -> -(SP)
       JE              L02,(SP)+ [FALSE] L0006
       PRINT           " and "
       JUMP            L0007
L0006: PRINT           ", "
L0007: INC             L00
       JUMP            L0004
L0008: RTRUE           

Routine R0112, 3 locals
    Action routine for:
        "objects"

       CALL_VN         R0206 (#1c,#01)
       STORE           L00,#14
L0001: JG              L00,G18 [TRUE] L0012
       TEST_ATTR       L00,#0c [FALSE] L0011
       STORE           L02,#01
       CALL_2N         R0076 (L00)
       GET_PARENT      L00 -> L01
       JE              L01,G0c [FALSE] L0004
       TEST_ATTR       L00,#1a [FALSE] L0002
       PRINT           "   (worn)"
       JUMP            L0003
L0002: PRINT           "   (held)"
L0003: JUMP            L0010
L0004: TEST_ATTR       L01,#00 [FALSE] L0005
       PRINT           "   (given away)"
       JUMP            L0010
L0005: TEST_ATTR       L01,#18 [FALSE] L0006
       PRINT           "   (in "
       CALL_2N         R0078 (L01)
       PRINT           ")"
       JUMP            L0010
L0006: TEST_ATTR       L01,#06 [FALSE] L0007
       PRINT           "   (in "
       CALL_2N         R0076 (L01)
       PRINT           ")"
       JUMP            L0010
L0007: TEST_ATTR       L01,#03 [FALSE] L0008
       PRINT           "   (inside "
       CALL_2N         R0078 (L01)
       PRINT           ")"
       JUMP            L0010
L0008: TEST_ATTR       L01,#14 [FALSE] L0009
       PRINT           "   (on "
       CALL_2N         R0078 (L01)
       PRINT           ")"
       JUMP            L0010
L0009: PRINT           "   (lost)"
L0010: NEW_LINE        
L0011: INC             L00
       JUMP            L0001
L0012: JZ              L02 [FALSE] L0013
       CALL_VN         R0206 (#1c,#02)
L0013: RTRUE           

Routine R0113, 0 locals
    Action routine for:
        "score"

       CALL_2N         R0206 (#1d)
       CALL_1N         R0331
       RTRUE           

Routine R0114, 2 locals

       PRINT           "  "
       STORE           L01,L00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L00 -> L01
       MUL             L01,#0a -> L01
L0001: JL              L01,#0a [FALSE] L0002
       PRINT           "   "
       JUMP            L0004
L0002: JL              L01,#64 [FALSE] L0003
       PRINT           "  "
       JUMP            L0004
L0003: JL              L01,#03e8 [FALSE] L0004
       PRINT           " "
L0004: PRINT_NUM       L00
       PRINT           " "
       RTRUE           

Routine R0115, 1 local
    Action routine for:
        "full"
        "full score"

       CALL_1N         R0113
       JZ              G0a [TRUE] RFALSE
       JZ              #00 [FALSE] RFALSE
       NEW_LINE        
       CALL_VN         R0206 (#1e,#01)
       STORE           L00,#00
L0001: JL              L00,#15 [FALSE] L0003
       LOADB           #1b75,L00 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       LOADB           #1b60,L00 -> -(SP)
       CALL_2N         R0114 ((SP)+)
       CALL_2N         R0330 (L00)
L0002: INC             L00
       JUMP            L0001
L0003: JZ              G15 [TRUE] L0004
       CALL_2N         R0114 (G15)
       CALL_VN         R0206 (#1e,#02)
L0004: JZ              G14 [TRUE] L0005
       CALL_2N         R0114 (G14)
       CALL_VN         R0206 (#1e,#03)
L0005: NEW_LINE        
       CALL_2N         R0114 (G0a)
       CALL_VN         R0206 (#1e,#04)
       RTRUE           

Routine R0116, 0 locals
    Action routine for:
        "i wide"

       STORE           G7b,#1c
       CALL_2N         R0058 (#1f)
       RTRUE           

Routine R0117, 0 locals
    Action routine for:
        "i tall"

       STORE           G7b,#17
       CALL_2N         R0058 (#1f)
       RTRUE           

Routine R0118, 0 locals
    Action routine for:
        "carry inventory"
        "i"

       GET_CHILD       G0c -> -(SP) [FALSE] L0001
L0001: JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0206 (#1f,#01) -> -(SP)
       RET_POPPED      
L0002: JZ              G7b [FALSE] L0003
       CALL_2N         R0058 (#20)
       RTRUE           
L0003: CALL_VN         R0206 (#1f,#02)
       AND             G7b,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       PRINT           ":
"
       JUMP            L0005
L0004: PRINT           " "
L0005: GET_CHILD       G0c -> -(SP) [FALSE] L0006
L0006: CALL_VN         R0094 ((SP)+,G7b,#01)
       AND             G7b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT           ".
"
L0007: CALL_1N         R0057
       RTRUE           

Routine R0119, 0 locals
    Action routine for:
        "carry MULTI"
        "pick up MULTI"
        "pick MULTI up"
        "remove MULTI"
        "peel NOUN"
        "peel off NOUN"

       JZ              G29 [TRUE] L0001
       GET_PARENT      G22 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0003
L0001: JE              G04,#13 [FALSE] L0002
       CALL_2S         R0120 (G0e) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JUMP            L0003
L0002: CALL_2S         R0120 (G04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0003: CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G28,G29
       JE              G28,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#01,#01)
       RTRUE           

Routine R0120, 5 locals

       JE              G22,G0c [FALSE] L0001
       CALL_VS         R0206 (#01,#02) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#00 [FALSE] L0002
       CALL_VS         R0206 (#01,#03,G22) -> -(SP)
       RET_POPPED      
L0002: GET_PARENT      G0c -> -(SP)
       JE              (SP)+,G22 [FALSE] L0003
       CALL_VS         R0206 (#01,#04,G22) -> -(SP)
       RET_POPPED      
L0003: GET_PARENT      G22 -> L01
       JE              L01,G0c [FALSE] L0004
       CALL_VS         R0206 (#01,#05) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       L01,#03 [TRUE] L0005
       TEST_ATTR       L01,#14 [FALSE] L0007
L0005: STORE           L04,L01
       STORE           L03,G1d
       STORE           G1d,#0101
       CALL_VS         R0048 (L01,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       STORE           G1d,L03
       RTRUE           
L0006: STORE           G1d,L03
L0007: JE              L01,L00 [TRUE] L0013
       JZ              L01 [TRUE] L0013
       TEST_ATTR       L01,#03 [TRUE] L0010
       TEST_ATTR       L01,#14 [TRUE] L0010
       TEST_ATTR       L01,#00 [FALSE] L0008
       CALL_VS         R0206 (#01,#06,L01) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       L01,#17 [FALSE] L0009
       CALL_VS         R0206 (#01,#07,L01) -> -(SP)
       RET_POPPED      
L0009: CALL_VS         R0206 (#01,#08) -> -(SP)
       RET_POPPED      
L0010: TEST_ATTR       L01,#03 [FALSE] L0011
       TEST_ATTR       L01,#0e [TRUE] L0011
       CALL_VS         R0206 (#01,#09,L01) -> -(SP)
       RET_POPPED      
L0011: GET_PARENT      L01 -> L01
       JE              L01,G0c [FALSE] L0012
       STORE           L01,L00
L0012: JUMP            L0007
L0013: TEST_ATTR       G22,#11 [FALSE] L0014
       CALL_VS         R0206 (#01,#0a) -> -(SP)
       RET_POPPED      
L0014: TEST_ATTR       G22,#13 [FALSE] L0015
       CALL_VS         R0206 (#01,#0b) -> -(SP)
       RET_POPPED      
L0015: STORE           L03,#00
       GET_CHILD       G0c -> -(SP) [FALSE] L0016
L0016: STORE           L02,(SP)+
       JZ              L02 [TRUE] L0019
L0017: TEST_ATTR       L02,#1a [TRUE] L0018
       INC             L03
L0018: GET_SIBLING     L02 -> L02 [TRUE] L0017
L0019: CALL_VS         R0047 (G0c,#1d) -> -(SP)
       JL              L03,(SP)+ [TRUE] L0028
       JZ              #01 [TRUE] L0027
       GET_PARENT      "briefcase" -> -(SP)
       JE              (SP)+,G0c [TRUE] L0020
       CALL_VS         R0206 (#01,#0c) -> -(SP)
       RET_POPPED      
L0020: STORE           L02,#00
       GET_CHILD       G0c -> -(SP) [FALSE] L0021
L0021: STORE           L03,(SP)+
       JZ              L03 [TRUE] L0024
L0022: JE              L03,#15 [TRUE] L0023
       TEST_ATTR       L03,#1a [TRUE] L0023
       TEST_ATTR       L03,#09 [TRUE] L0023
       STORE           L02,L03
L0023: GET_SIBLING     L03 -> L03 [TRUE] L0022
L0024: JZ              L02 [TRUE] L0025
       CALL_VN         R0206 (#01,#0d,L02)
       STORE           G7c,#01
       CALL_VN         R0058 (#21,L02,#15)
       STORE           G7c,#00
       JIN             L02,"briefcase" [FALSE] RTRUE
       JUMP            L0026
L0025: CALL_VS         R0206 (#01,#0c) -> -(SP)
       RET_POPPED      
L0026: JUMP            L0028
L0027: CALL_VS         R0206 (#01,#0c) -> -(SP)
       RET_POPPED      
L0028: INSERT_OBJ      G22,G0c
       JZ              L04 [TRUE] L0030
       STORE           L03,G1d
       STORE           G1d,#0101
       CALL_VS         R0048 (L04,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       STORE           G1d,L03
       RTRUE           
L0029: STORE           G1d,L03
L0030: RFALSE          

Routine R0121, 1 local
    Action routine for:
        "put down MULTIHELD"
        "put MULTIHELD down"
        "discard MULTIHELD"

       GET_PARENT      G22 -> L00
       JE              L00,G04 [FALSE] L0001
       CALL_VS         R0206 (#22,#01) -> -(SP)
       RET_POPPED      
L0001: JE              L00,G0c [TRUE] L0002
       CALL_VS         R0206 (#22,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G22,#1a [FALSE] L0003
       CALL_VN         R0206 (#22,#03,G22)
       CALL_VN         R0058 (#23,G22)
       TEST_ATTR       G22,#1a [TRUE] RTRUE
L0003: GET_PARENT      G0c -> -(SP)
       INSERT_OBJ      G22,(SP)+
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VS         R0206 (#22,#04) -> -(SP)
       RET_POPPED      

Routine R0122, 1 local
    Action routine for:
        "carry MULTIINSIDE from NOUN"
        "carry MULTIINSIDE off NOUN"
        "remove MULTIINSIDE from NOUN"

       GET_PARENT      G22 -> L00
       TEST_ATTR       L00,#03 [FALSE] L0001
       TEST_ATTR       L00,#0e [TRUE] L0001
       CALL_VS         R0206 (#06,#01) -> -(SP)
       RET_POPPED      
L0001: JE              L00,G23 [TRUE] L0002
       CALL_VS         R0206 (#06,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       L00,#00 [FALSE] L0003
       CALL_VS         R0206 (#01,#06,L00) -> -(SP)
       RET_POPPED      
L0003: CALL_2S         R0120 (G23) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       STORE           G1d,#01
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G1d,#06
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VS         R0206 (#06,#04) -> -(SP)
       RET_POPPED      

Routine R0123, 2 locals

L0001: JZ              L01 [TRUE] L0002
       JE              L00,L01 [TRUE] RTRUE
       GET_PARENT      L01 -> L01
       JUMP            L0001
L0002: RFALSE          

Routine R0124, 0 locals
    Action routine for:
        "put MULTIEXCEPT on NOUN"
        "put MULTIEXCEPT onto NOUN"
        "discard MULTIEXCEPT on NOUN"
        "discard MULTIEXCEPT onto NOUN"

       STORE           G7d,#24
       JE              G23,#10 [FALSE] L0001
       CALL_VN         R0058 (#22,G22)
       RFALSE          
L0001: GET_PARENT      G22 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0002
       CALL_VS         R0206 (#24,#01,G22) -> -(SP)
       RET_POPPED      
L0002: JG              G23,#01 [FALSE] L0004
       STORE           G1d,#0102
       CALL_VS         R0048 (G23,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           G1d,#24
       RTRUE           
L0003: STORE           G1d,#24
L0004: CALL_VS         R0123 (G22,G23) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0005
       CALL_VS         R0206 (#24,#02) -> -(SP)
       RET_POPPED      
L0005: TEST_ATTR       G23,#14 [TRUE] L0006
       CALL_VS         R0206 (#24,#03,G23) -> -(SP)
       RET_POPPED      
L0006: GET_PARENT      G23 -> -(SP)
       JE              (SP)+,G0c [FALSE] L0007
       CALL_VS         R0206 (#24,#04) -> -(SP)
       RET_POPPED      
L0007: TEST_ATTR       G22,#1a [FALSE] L0008
       CALL_VN         R0206 (#24,#05)
       CALL_VN         R0058 (#23,G22)
       TEST_ATTR       G22,#1a [TRUE] RTRUE
L0008: CALL_VS         R0047 (G23,#1d) -> -(SP)
       STORE           Gef,#00
       GET_CHILD       G23 -> -(SP) [FALSE] L0010
L0009: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0009
L0010: STORE           Gee,(SP)+
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0011
       CALL_VS         R0206 (#24,#06,G23) -> -(SP)
       RET_POPPED      
L0011: INSERT_OBJ      G22,G23
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JG              G23,#01 [FALSE] L0013
       STORE           G1d,#0102
       CALL_VS         R0048 (G23,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       STORE           G1d,#24
       RTRUE           
L0012: STORE           G1d,#24
L0013: JE              G7c,#01 [TRUE] RTRUE
       JE              G27,#01 [FALSE] L0014
       CALL_VS         R0206 (#24,#07) -> -(SP)
       RET_POPPED      
L0014: CALL_VN         R0206 (#24,#08,G22)
       RTRUE           

Routine R0125, 0 locals
    Action routine for:
        "put MULTIEXCEPT in NOUN"
        "put MULTIEXCEPT inside NOUN"
        "put MULTIEXCEPT into NOUN"
        "insert MULTIEXCEPT in NOUN"
        "insert MULTIEXCEPT into NOUN"
        "discard MULTIEXCEPT in NOUN"
        "discard MULTIEXCEPT into NOUN"
        "discard MULTIEXCEPT down NOUN"
        "pour HELD in NOUN"
        "pour HELD into NOUN"

       STORE           G7d,#21
       JE              G23,#10 [FALSE] L0001
       CALL_VN         R0058 (#22,G22)
       RTRUE           
L0001: GET_PARENT      G22 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0002
       CALL_VS         R0206 (#21,#01) -> -(SP)
       RET_POPPED      
L0002: JG              G23,#01 [FALSE] L0004
       STORE           G1d,#0102
       CALL_VS         R0048 (G23,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           G1d,#21
       RTRUE           
L0003: STORE           G1d,#21
L0004: TEST_ATTR       G23,#03 [TRUE] L0005
       CALL_VS         R0206 (#21,#02) -> -(SP)
       RET_POPPED      
L0005: TEST_ATTR       G23,#0e [TRUE] L0006
       CALL_VS         R0206 (#21,#03) -> -(SP)
       RET_POPPED      
L0006: CALL_VS         R0123 (G22,G23) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0007
       CALL_VS         R0206 (#21,#05) -> -(SP)
       RET_POPPED      
L0007: TEST_ATTR       G22,#1a [FALSE] L0008
       CALL_VN         R0206 (#21,#06)
       CALL_VN         R0058 (#23,G22)
       TEST_ATTR       G22,#1a [TRUE] RTRUE
L0008: CALL_VS         R0047 (G23,#1d) -> -(SP)
       STORE           Gef,#00
       GET_CHILD       G23 -> -(SP) [FALSE] L0010
L0009: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0009
L0010: STORE           Gee,(SP)+
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0011
       CALL_VS         R0206 (#21,#07,G23) -> -(SP)
       RET_POPPED      
L0011: INSERT_OBJ      G22,G23
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JG              G23,#01 [FALSE] L0013
       STORE           G1d,#0102
       CALL_VS         R0048 (G23,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       STORE           G1d,#21
       RTRUE           
L0012: STORE           G1d,#21
L0013: JE              G7c,#01 [TRUE] RTRUE
       JE              G27,#01 [FALSE] L0014
       CALL_VS         R0206 (#21,#08) -> -(SP)
       RET_POPPED      
L0014: CALL_VN         R0206 (#21,#09,G22)
       RTRUE           

Routine R0126, 5 locals
    Action routine for:
        "transfer NOUN to NOUN"
        "clear NOUN to NOUN"

       STORE           L01,#22
       TEST_ATTR       G23,#03 [FALSE] L0001
       STORE           L01,#21
       JUMP            L0002
L0001: TEST_ATTR       G23,#14 [FALSE] L0002
       STORE           L01,#24
L0002: GET_PARENT      G22 -> L00
       JE              L00,G0c [TRUE] L0007
L0003: JZ              L00 [TRUE] L0006
       TEST_ATTR       L00,#0e [TRUE] L0004
       CALL_VS         R0206 (#25,#01) -> -(SP)
       RET_POPPED      
L0004: GET_PARENT      L00 -> L00
       JE              L00,G0c [FALSE] L0005
       JUMP            L0007
L0005: JUMP            L0003
L0006: CALL_VS         R0206 (#25,#02) -> -(SP)
       RET_POPPED      
L0007: JIN             G22,G0c [TRUE] L0012
       GET_PARENT      G22 -> L04
       TEST_ATTR       L04,#03 [TRUE] L0008
       TEST_ATTR       L04,#14 [FALSE] L0010
L0008: STORE           L03,L04
       STORE           L02,G1d
       STORE           G1d,#0101
       CALL_VS         R0048 (L04,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           G1d,L02
       RTRUE           
L0009: STORE           G1d,L02
L0010: INSERT_OBJ      G22,G0c
       JZ              L03 [TRUE] L0012
       STORE           L02,G1d
       STORE           G1d,#0101
       CALL_VS         R0048 (L03,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       STORE           G1d,L02
       RTRUE           
L0011: STORE           G1d,L02
L0012: JE              L01,#22 [FALSE] L0013
       CALL_VN         R0058 (#22,G22)
       RTRUE           
L0013: JE              L01,#21 [FALSE] L0014
       CALL_VN         R0058 (#21,G22,G23)
       RTRUE           
L0014: JE              L01,#24 [FALSE] L0015
       CALL_VN         R0058 (#24,G22,G23)
       RTRUE           
L0015: RTRUE           

Routine R0127, 0 locals
    Action routine for:
        "empty NOUN"
        "empty out NOUN"
        "empty NOUN out"

       STORE           G23,#10
       CALL_1N         R0128
       RTRUE           

Routine R0128, 2 locals
    Action routine for:
        "empty NOUN to NOUN"
        "empty NOUN into NOUN"
        "empty NOUN on NOUN"
        "empty NOUN onto NOUN"

       TEST_ATTR       G22,#03 [TRUE] L0001
       CALL_VS         R0206 (#0f,#01,G22) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#0e [TRUE] L0002
       CALL_VS         R0206 (#0f,#02,G22) -> -(SP)
       RET_POPPED      
L0002: JE              G23,#10 [TRUE] L0004
       TEST_ATTR       G23,#03 [TRUE] L0003
       CALL_VS         R0206 (#0f,#01,G23) -> -(SP)
       RET_POPPED      
L0003: TEST_ATTR       G23,#0e [TRUE] L0004
       CALL_VS         R0206 (#0f,#02,G23) -> -(SP)
       RET_POPPED      
L0004: GET_CHILD       G22 -> L00 [FALSE] L0005
L0005: JZ              L00 [FALSE] L0006
       CALL_VS         R0206 (#0f,#03,G22) -> -(SP)
       RET_POPPED      
L0006: JZ              L00 [TRUE] L0008
       GET_SIBLING     L00 -> L01 [FALSE] L0007
L0007: CALL_2N         R0078 (L00)
       PRINT           ": "
       CALL_VN         R0058 (#25,L00,G23)
       STORE           L00,L01
       JUMP            L0006
L0008: RTRUE           

Routine R0129, 0 locals
    Action routine for:
        "feed HELD to CREATURE"
        "feed over HELD to CREATURE"

       GET_PARENT      G22 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0001
       CALL_VS         R0206 (#0a,#01,G22) -> -(SP)
       RET_POPPED      
L0001: JE              G23,G0c [FALSE] L0002
       CALL_VS         R0206 (#0a,#02,G22) -> -(SP)
       RET_POPPED      
L0002: CALL_VS         R0059 (G23,#0a) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0206 (#0a,#03,G23)
       RTRUE           

Routine R0130, 0 locals
    Action routine for:
        "feed CREATURE HELD"

       CALL_VN         R0058 (#0a,G23,G22)
       RTRUE           

Routine R0131, 0 locals
    Action routine for:
        "display HELD to CREATURE"

       GET_PARENT      G22 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0001
       CALL_VS         R0206 (#0b,#01,G22) -> -(SP)
       RET_POPPED      
L0001: JE              G23,G0c [FALSE] L0002
       CALL_VN         R0058 (#26,G22)
       RTRUE           
L0002: CALL_VS         R0059 (G23,#0b) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0206 (#0b,#02,G23)
       RTRUE           

Routine R0132, 0 locals
    Action routine for:
        "display CREATURE HELD"

       CALL_VN         R0058 (#0b,G23,G22)
       RTRUE           

Routine R0133, 1 local
    Action routine for:
        "carry in NOUN"
        "carry into NOUN"
        "carry on NOUN"
        "stand on NOUN"
        "go NOUN"
        "go into NOUN"
        "go in NOUN"
        "go inside NOUN"
        "go through NOUN"
        "cross NOUN"
        "lie on NOUN"
        "lie in NOUN"
        "lie inside NOUN"

       TEST_ATTR       G22,#04 [FALSE] L0001
       CALL_VN         R0058 (#00,G22)
       RTRUE           
L0001: GET_PARENT      G0c -> L00
       JE              L00,G04 [TRUE] L0002
       CALL_VS         R0206 (#27,#01,L00) -> -(SP)
       RET_POPPED      
L0002: GET_PARENT      G22 -> L00
       JE              L00,#06 [FALSE] L0003
       CALL_VN         R0058 (#00,G22)
       RTRUE           
L0003: TEST_ATTR       G22,#06 [TRUE] L0004
       CALL_VS         R0206 (#27,#02) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       G22,#03 [FALSE] L0005
       TEST_ATTR       G22,#0e [TRUE] L0005
       CALL_VS         R0206 (#27,#03,G22) -> -(SP)
       RET_POPPED      
L0005: JE              L00,G04 [TRUE] L0006
       CALL_VS         R0206 (#27,#04) -> -(SP)
       RET_POPPED      
L0006: INSERT_OBJ      G0c,G22
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#27,#05,G22)
       CALL_2N         R0140 (G22)
       RTRUE           

Routine R0134, 0 locals
    Action routine for:
        "carry off NOUN"

       GET_PARENT      G0c -> -(SP)
       JE              (SP)+,G22 [FALSE] L0001
       CALL_2N         R0058 (#28)
       RTRUE           
L0001: CALL_VN         R0206 (#29,#01,G22)
       RTRUE           

Routine R0135, 1 local
    Action routine for:
        "carry out"
        "carry off"
        "carry up"
        "stand"
        "stand up"
        "exit"

       GET_PARENT      G0c -> L00
       JE              L00,G04 [TRUE] L0001
       JE              G04,#13 [FALSE] L0004
       JE              L00,G0e [FALSE] L0004
L0001: GET_PROP        G04,#12 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       JE              G04,#13 [FALSE] L0003
       GET_PROP        G0e,#12 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
L0002: CALL_VN         R0058 (#00,#11)
       RTRUE           
L0003: CALL_VS         R0206 (#28,#01) -> -(SP)
       RET_POPPED      
L0004: TEST_ATTR       L00,#03 [FALSE] L0005
       TEST_ATTR       L00,#0e [TRUE] L0005
       CALL_VS         R0206 (#28,#02,L00) -> -(SP)
       RET_POPPED      
L0005: JE              G04,#13 [FALSE] L0006
       INSERT_OBJ      G0c,G0e
       JUMP            L0007
L0006: INSERT_OBJ      G0c,G04
L0007: CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#28,#03,L00)
       CALL_2N         R0146 (#01)
       RTRUE           

Routine R0136, 0 locals
    Action routine for:
        "go"

       CALL_2N         R0206 (#2a)
       RTRUE           

Routine R0137, 0 locals
    Action routine for:
        "cross"
        "in"

       CALL_VN         R0058 (#00,#12)
       RTRUE           

Routine R0138, 6 locals
    Action routine for:
        "go NOUN [parse 0]"

       STORE           L04,#00
       GET_PARENT      G0c -> L00
       JE              G04,#13 [TRUE] L0001
       JE              L00,G04 [FALSE] L0002
L0001: JE              G04,#13 [FALSE] L0007
       JE              L00,G0e [TRUE] L0007
L0002: STORE           L01,G04
       JE              G04,#13 [FALSE] L0003
       STORE           G04,G0e
L0003: CALL_VS         R0048 (L00,#04) -> L02
       JE              L02,#03 [TRUE] L0004
       STORE           G04,L01
L0004: JE              L02,#01 [FALSE] L0005
       STORE           L04,L00
       GET_PARENT      L00 -> L00
       JUMP            L0007
L0005: JZ              L02 [FALSE] L0006
       CALL_VN         R0206 (#00,#01,L00)
L0006: RTRUE           
L0007: GET_PROP        G22,#0a -> L05
       CALL_2S         R0045 (L05) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0008
       CALL_VS         R0048 (G22,#0a) -> L05
L0008: CALL_VS         R0380 (L00,L05) -> L01
       CALL_2S         R0045 (L01) -> L02
       JE              L02,#03 [FALSE] L0009
       PRINT_PADDR     L01
       NEW_LINE        
       RFALSE          
L0009: JE              L02,#02 [FALSE] L0010
       CALL_VS         R0048 (L00,L05) -> L01
       JE              L01,#01 [TRUE] RTRUE
L0010: JZ              L02 [TRUE] L0011
       JZ              L01 [FALSE] L0013
L0011: GET_PROP        L00,#17 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_VN         R0046 (L00,#17)
L0012: RFALSE          
L0013: TEST_ATTR       L01,#04 [FALSE] L0021
       TEST_ATTR       L01,#02 [FALSE] L0014
       CALL_VS         R0206 (#00,#02) -> -(SP)
       RET_POPPED      
L0014: TEST_ATTR       L01,#0e [TRUE] L0017
       JE              G22,#0f [FALSE] L0015
       CALL_VS         R0206 (#00,#03,L01) -> -(SP)
       RET_POPPED      
L0015: JE              G22,#10 [FALSE] L0016
       CALL_VS         R0206 (#00,#04,L01) -> -(SP)
       RET_POPPED      
L0016: CALL_VS         R0206 (#00,#05,L01) -> -(SP)
       RET_POPPED      
L0017: GET_PROP        L01,#07 -> -(SP)
       CALL_2S         R0045 ((SP)+) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0018
       CALL_VS         R0048 (L01,#07) -> L01
       JUMP            L0019
L0018: GET_PROP        L01,#07 -> L01
L0019: JZ              L01 [FALSE] L0020
       CALL_VS         R0206 (#00,#06,L01) -> -(SP)
       RET_POPPED      
L0020: JE              L01,#01 [TRUE] RTRUE
L0021: JZ              L04 [FALSE] L0022
       INSERT_OBJ      G0c,L01
       JUMP            L0023
L0022: INSERT_OBJ      L04,L01
L0023: CALL_2S         R0068 (L01) -> L03
       JZ              L03 [TRUE] L0024
       STORE           G04,L01
       STORE           G0d,#01
       JUMP            L0026
L0024: JE              G04,#13 [FALSE] L0025
       CALL_1N         R0332
L0025: STORE           G0e,L01
       STORE           G04,#13
       STORE           G0d,#00
L0026: CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_2N         R0146 (#01)
       RTRUE           

Routine R0139, 3 locals

       GET_PARENT      G0c -> -(SP)
       JE              L00,(SP)+ [TRUE] RFALSE
       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: STORE           L01,(SP)+
       JZ              L01 [TRUE] L0004
L0002: TEST_ATTR       L01,#02 [TRUE] L0003
       TEST_ATTR       L01,#11 [TRUE] L0003
       STORE           L02,#01
L0003: GET_SIBLING     L01 -> L01 [TRUE] L0002
L0004: JZ              L02 [TRUE] RFALSE
       CALL_VN         R0206 (#07,#04,L00)
       RTRUE           

Routine R0140, 9 locals

       GET_CHILD       L00 -> -(SP) [FALSE] L0001
L0001: STORE           L03,(SP)+
       JZ              L03 [TRUE] L0003
L0002: CLEAR_ATTR      L03,#19
       GET_SIBLING     L03 -> L03 [TRUE] L0002
L0003: STORE           L05,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0004
L0004: STORE           L03,(SP)+
       JZ              L03 [TRUE] L0016
L0005: TEST_ATTR       L03,#02 [TRUE] L0015
       GET_PARENT      G0c -> -(SP)
       JE              L03,(SP)+ [TRUE] L0015
       TEST_ATTR       L03,#11 [TRUE] L0013
       SET_ATTR        L03,#19
       INC             L05
       STORE           L04,#13
       STORE           L08,#00
       TEST_ATTR       L03,#04 [FALSE] L0006
       TEST_ATTR       L03,#0e [TRUE] L0006
       STORE           L04,#08
       STORE           L08,#01
L0006: TEST_ATTR       L03,#15 [FALSE] L0007
       TEST_ATTR       L03,#0d [TRUE] L0007
       STORE           L04,#08
       STORE           L08,#01
L0007: TEST_ATTR       L03,#03 [FALSE] L0008
       TEST_ATTR       L03,#0e [TRUE] L0008
       GET_PROP_ADDR   L03,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       STORE           L04,#08
       STORE           L08,#01
L0008: TEST_ATTR       L03,#0c [FALSE] L0009
       GET_PROP        L03,#15 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0009
       JE              L08,#01 [FALSE] L0012
L0009: GET_PROP        L03,#15 -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0010
       CALL_VS         R0048 (L03,#15) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       STORE           L07,#01
       CLEAR_ATTR      L03,#19
       DEC             L05
       JUMP            L0012
L0010: CALL_VS         R0380 (L03,L04) -> L06
       JZ              L06 [TRUE] L0012
       NEW_LINE        
       CALL_VN         R0046 (L03,L04)
       STORE           L07,#01
       CLEAR_ATTR      L03,#19
       DEC             L05
       TEST_ATTR       L03,#14 [FALSE] L0012
       GET_CHILD       L03 -> -(SP) [FALSE] L0011
L0011: JZ              (SP)+ [TRUE] L0012
       CALL_2N         R0139 (L03)
L0012: JUMP            L0015
L0013: TEST_ATTR       L03,#14 [FALSE] L0015
       GET_CHILD       L03 -> -(SP) [FALSE] L0014
L0014: JZ              (SP)+ [TRUE] L0015
       CALL_2N         R0139 (L03)
L0015: GET_SIBLING     L03 -> L03 [TRUE] L0005
L0016: JZ              L05 [FALSE] L0017
       RFALSE          
L0017: JZ              L01 [TRUE] L0020
       NEW_LINE        
       JE              L07,#01 [FALSE] L0018
       STORE           L01,L02
L0018: PRINT_PADDR     L01
       PRINT           " "
       GET_CHILD       L00 -> -(SP) [FALSE] L0019
L0019: CALL_VN         R0094 ((SP)+,#0ad8)
       RET             L05
L0020: JE              L07,#01 [FALSE] L0021
       CALL_VN         R0206 (#07,#05,L00)
       JUMP            L0022
L0021: CALL_VN         R0206 (#07,#06,L00)
L0022: RTRUE           

Routine R0141, 0 locals
    Action routine for:
        "brief"

       STORE           G16,#01
       PRINT_PADDR     S001
       CALL_2N         R0206 (#2b)
       RTRUE           

Routine R0142, 0 locals
    Action routine for:
        "long"

       STORE           G16,#02
       PRINT_PADDR     S001
       CALL_2N         R0206 (#2c)
       RTRUE           

Routine R0143, 0 locals
    Action routine for:
        "short"

       STORE           G16,#03
       PRINT_PADDR     S001
       CALL_2N         R0206 (#2d)
       RTRUE           

Routine R0144, 1 local

       STORE           L00,G04
       JE              L00,G17 [TRUE] L0002
       GET_PROP        L00,#13 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0046 (L00,#13)
L0001: CALL_1N         R0367
       CALL_1N         R0098
       STORE           G17,L00
L0002: RTRUE           

Routine R0145, 0 locals

       TEST_ATTR       G04,#18 [TRUE] L0001
       SET_ATTR        G04,#18
       TEST_ATTR       G04,#12 [FALSE] L0001
       ADD             G0a,#05 -> G0a
       ADD             G14,#05 -> G14
L0001: RTRUE           

Routine R0146, 3 locals
    Action routine for:
        "l"

       GET_PARENT      G0c -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0082 (#0a) -> -(SP)
       RET_POPPED      
L0001: CALL_1N         R0144
       NEW_LINE        
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0078 (G04)
       SET_TEXT_STYLE  ROMAN
       GET_PARENT      G0c -> L01
       JE              G04,#13 [TRUE] L0004
       JE              L01,G04 [TRUE] L0004
       TEST_ATTR       L01,#14 [FALSE] L0002
       PRINT           " ("
       CALL_VN         R0206 (#07,#01)
       PRINT           " "
       JUMP            L0003
L0002: PRINT           " ("
       CALL_VN         R0206 (#07,#02)
       PRINT           " "
L0003: CALL_2N         R0076 (L01)
       PRINT           ")"
       STORE           L02,L01
L0004: JE              G0f,#01 [FALSE] L0005
       PRINT           " ("
       CALL_VN         R0206 (#07,#03)
       PRINT           " "
       PRINT_OBJ       G0c
       PRINT           ")"
L0005: NEW_LINE        
       JL              G16,#03 [FALSE] L0009
       JE              L00,#01 [FALSE] L0006
       JE              G16,#02 [TRUE] L0006
       TEST_ATTR       G04,#18 [TRUE] L0009
L0006: GET_PROP        G04,#15 -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0007
       CALL_VN         R0048 (G04,#15)
       JUMP            L0009
L0007: GET_PROP        G04,#14 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       CALL_VN         R0082 (#0b,G04)
       JUMP            L0009
L0008: CALL_VN         R0046 (G04,#14)
L0009: JE              L02,G04 [TRUE] L0010
       CALL_2N         R0140 (G04)
L0010: CALL_2N         R0140 (L02)
       CALL_1N         R0368
       CALL_1N         R0145
       STORE           G1d,#07
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0147, 1 local
    Action routine for:
        "l at NOUN"
        "check NOUN"
        "read NOUN"

       JE              G04,#13 [FALSE] L0001
       CALL_VS         R0206 (#26,#01) -> -(SP)
       RET_POPPED      
L0001: GET_PROP        G22,#14 -> L00
       JZ              L00 [FALSE] L0004
       TEST_ATTR       G22,#03 [FALSE] L0002
       CALL_VN         R0058 (#0d,G22)
       RTRUE           
L0002: TEST_ATTR       G22,#15 [FALSE] L0003
       CALL_VN         R0206 (#26,#03,G22)
       RFALSE          
L0003: CALL_VS         R0206 (#26,#02,G22) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0046 (G22,#14)
       TEST_ATTR       G22,#15 [FALSE] L0005
       CALL_VN         R0206 (#26,#03,G22)
L0005: CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0148, 0 locals
    Action routine for:
        "l under NOUN"

       JE              G04,#13 [FALSE] L0001
       CALL_VS         R0206 (#2e,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0206 (#2e,#02)
       RTRUE           

Routine R0149, 2 locals
    Action routine for:
        "l inside NOUN"
        "l in NOUN"
        "l into NOUN"
        "l through NOUN"
        "search NOUN"

       JE              G04,#13 [FALSE] L0001
       CALL_VS         R0206 (#0d,#01) -> -(SP)
       RET_POPPED      
L0001: GET_CHILD       G22 -> -(SP) [FALSE] L0002
L0002: STORE           L00,(SP)+
       JZ              L00 [TRUE] L0005
L0003: TEST_ATTR       L00,#02 [TRUE] L0004
       STORE           L01,#01
L0004: GET_SIBLING     L00 -> L00 [TRUE] L0003
L0005: TEST_ATTR       G22,#14 [FALSE] L0007
       JZ              L01 [FALSE] L0006
       CALL_VS         R0206 (#0d,#02,G22) -> -(SP)
       RET_POPPED      
L0006: CALL_VS         R0206 (#0d,#03,G22) -> -(SP)
       RET_POPPED      
L0007: TEST_ATTR       G22,#03 [TRUE] L0008
       CALL_VS         R0206 (#0d,#04) -> -(SP)
       RET_POPPED      
L0008: TEST_ATTR       G22,#17 [TRUE] L0009
       TEST_ATTR       G22,#0e [TRUE] L0009
       CALL_VS         R0206 (#0d,#05) -> -(SP)
       RET_POPPED      
L0009: CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           Gef,#00
       GET_CHILD       G22 -> -(SP) [FALSE] L0011
L0010: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0010
L0011: STORE           Gee,(SP)+
       STORE           L00,Gef
       JZ              L01 [FALSE] L0012
       CALL_VS         R0206 (#0d,#06,G22) -> -(SP)
       RET_POPPED      
L0012: CALL_VN         R0206 (#0d,#07,G22)
       RTRUE           

Routine R0150, 0 locals
    Action routine for:
        "open NOUN with HELD"
        "unlock NOUN with HELD"

       TEST_ATTR       G22,#0a [TRUE] L0001
       CALL_VS         R0206 (#2f,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#0b [TRUE] L0002
       CALL_VS         R0206 (#2f,#02) -> -(SP)
       RET_POPPED      
L0002: GET_PROP        G22,#09 -> -(SP)
       JE              (SP)+,G23 [TRUE] L0003
       CALL_VS         R0206 (#2f,#03) -> -(SP)
       RET_POPPED      
L0003: CLEAR_ATTR      G22,#0b
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#2f,#04,G22)
       RTRUE           

Routine R0151, 0 locals
    Action routine for:
        "lock NOUN with HELD"

       TEST_ATTR       G22,#0a [TRUE] L0001
       CALL_VS         R0206 (#30,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#0b [FALSE] L0002
       CALL_VS         R0206 (#30,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G22,#0e [FALSE] L0003
       CALL_VS         R0206 (#30,#03) -> -(SP)
       RET_POPPED      
L0003: GET_PROP        G22,#09 -> -(SP)
       JE              (SP)+,G23 [TRUE] L0004
       CALL_VS         R0206 (#30,#04) -> -(SP)
       RET_POPPED      
L0004: SET_ATTR        G22,#0b
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#30,#05,G22)
       RTRUE           

Routine R0152, 0 locals
    Action routine for:
        "rotate NOUN on"
        "rotate on NOUN"
        "switch NOUN"
        "switch NOUN on"
        "switch on NOUN"

       TEST_ATTR       G22,#15 [TRUE] L0001
       CALL_VS         R0206 (#31,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#0d [FALSE] L0002
       CALL_VS         R0206 (#31,#02) -> -(SP)
       RET_POPPED      
L0002: SET_ATTR        G22,#0d
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#31,#03,G22)
       RTRUE           

Routine R0153, 0 locals
    Action routine for:
        "close off NOUN"
        "rotate NOUN off"
        "rotate off NOUN"
        "switch NOUN off"
        "switch off NOUN"

       TEST_ATTR       G22,#15 [TRUE] L0001
       CALL_VS         R0206 (#32,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#0d [TRUE] L0002
       CALL_VS         R0206 (#32,#02) -> -(SP)
       RET_POPPED      
L0002: CLEAR_ATTR      G22,#0d
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#32,#03,G22)
       RTRUE           

Routine R0154, 0 locals
    Action routine for:
        "open NOUN"

       TEST_ATTR       G22,#0f [TRUE] L0001
       CALL_VS         R0206 (#33,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#0b [FALSE] L0002
       CALL_VS         R0206 (#33,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G22,#0e [FALSE] L0003
       CALL_VS         R0206 (#33,#03) -> -(SP)
       RET_POPPED      
L0003: SET_ATTR        G22,#0e
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       TEST_ATTR       G22,#03 [FALSE] L0005
       TEST_ATTR       G22,#17 [TRUE] L0005
       GET_CHILD       G22 -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [TRUE] L0005
       CALL_VS         R0206 (#33,#04,G22) -> -(SP)
       RET_POPPED      
L0005: CALL_VN         R0206 (#33,#05,G22)
       RTRUE           

Routine R0155, 0 locals
    Action routine for:
        "close NOUN"
        "close up"

       TEST_ATTR       G22,#0f [TRUE] L0001
       CALL_VS         R0206 (#0c,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#0e [TRUE] L0002
       CALL_VS         R0206 (#0c,#02) -> -(SP)
       RET_POPPED      
L0002: CLEAR_ATTR      G22,#0e
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#0c,#03,G22)
       RTRUE           

Routine R0156, 0 locals
    Action routine for:
        "carry off ATTRIBUTE(26)"
        "remove HELD"
        "disrobe HELD"

       TEST_ATTR       G22,#1a [TRUE] L0001
       CALL_VS         R0206 (#23,#01) -> -(SP)
       RET_POPPED      
L0001: CLEAR_ATTR      G22,#1a
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#23,#02,G22)
       RTRUE           

Routine R0157, 0 locals
    Action routine for:
        "don HELD"
        "put on HELD"

       TEST_ATTR       G22,#01 [TRUE] L0001
       CALL_VS         R0206 (#34,#01) -> -(SP)
       RET_POPPED      
L0001: GET_PARENT      G22 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0002
       CALL_VS         R0206 (#34,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G22,#1a [FALSE] L0003
       CALL_VS         R0206 (#34,#03) -> -(SP)
       RET_POPPED      
L0003: SET_ATTR        G22,#1a
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#34,#04,G22)
       RTRUE           

Routine R0158, 0 locals
    Action routine for:
        "eat HELD"

       TEST_ATTR       G22,#05 [TRUE] L0001
       CALL_VS         R0206 (#35,#01) -> -(SP)
       RET_POPPED      
L0001: REMOVE_OBJ      G22
       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G7c,#01 [TRUE] RTRUE
       CALL_VN         R0206 (#35,#02,G22)
       RTRUE           

Routine R0159, 0 locals
    Action routine for:
        "y"

       CALL_2N         R0206 (#36)
       RTRUE           

Routine R0160, 0 locals
    Action routine for:
        "no"

       CALL_2N         R0206 (#37)
       RTRUE           

Routine R0161, 0 locals
    Action routine for:
        "burn NOUN"
        "burn NOUN with HELD"

       CALL_2N         R0206 (#38)
       RTRUE           

Routine R0162, 0 locals
    Action routine for:
        "pray"

       CALL_2N         R0206 (#39)
       RTRUE           

Routine R0163, 0 locals
    Action routine for:
        "awake"
        "awake up"

       CALL_2N         R0206 (#3a)
       RTRUE           

Routine R0164, 0 locals
    Action routine for:
        "awake CREATURE"
        "awake CREATURE up"
        "awake up CREATURE"

       CALL_VS         R0059 (G22,#3b) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_2N         R0206 (#3b)
       RTRUE           

Routine R0165, 0 locals
    Action routine for:
        "think"

       CALL_2N         R0206 (#3c)
       RTRUE           

Routine R0166, 0 locals
    Action routine for:
        "smell"
        "smell NOUN"

       CALL_2N         R0206 (#3d)
       RTRUE           

Routine R0167, 0 locals
    Action routine for:
        "hear"
        "hear NOUN"
        "hear to NOUN"

       CALL_2N         R0206 (#3e)
       RTRUE           

Routine R0168, 0 locals
    Action routine for:
        "taste NOUN"

       CALL_2N         R0206 (#3f)
       RTRUE           

Routine R0169, 0 locals
    Action routine for:
        "dig NOUN"
        "dig NOUN with HELD"

       CALL_2N         R0206 (#40)
       RTRUE           

Routine R0170, 0 locals
    Action routine for:
        "chop NOUN"

       CALL_2N         R0206 (#41)
       RTRUE           

Routine R0171, 0 locals
    Action routine for:
        "hop"

       CALL_2N         R0206 (#42)
       RTRUE           

Routine R0172, 0 locals
    Action routine for:
        "hop over NOUN"

       CALL_2N         R0206 (#43)
       RTRUE           

Routine R0173, 0 locals
    Action routine for:
        "attach NOUN"
        "attach NOUN to NOUN"

       CALL_2N         R0206 (#44)
       RTRUE           

Routine R0174, 0 locals
    Action routine for:
        "drink NOUN"

       CALL_2N         R0206 (#11)
       RTRUE           

Routine R0175, 0 locals
    Action routine for:
        "sorry"

       CALL_2N         R0206 (#45)
       RTRUE           

Routine R0176, 0 locals
    Action routine for:
        "damn"
        "damn SPECIAL"

       CALL_2N         R0206 (#46)
       RTRUE           

Routine R0177, 0 locals
    Action routine for:
        "bother"
        "bother SPECIAL"

       CALL_2N         R0206 (#47)
       RTRUE           

Routine R0178, 0 locals
    Action routine for:
        "dive"

       CALL_2N         R0206 (#48)
       RTRUE           

Routine R0179, 0 locals
    Action routine for:
        "swing NOUN"
        "swing on NOUN"

       CALL_2N         R0206 (#49)
       RTRUE           

Routine R0180, 0 locals
    Action routine for:
        "blow HELD"

       CALL_2N         R0206 (#4a)
       RTRUE           

Routine R0181, 0 locals
    Action routine for:
        "clean NOUN"

       CALL_2N         R0206 (#4b)
       RTRUE           

Routine R0182, 0 locals
    Action routine for:
        "adjust NOUN"

       CALL_2N         R0206 (#4c)
       RTRUE           

Routine R0183, 0 locals
    Action routine for:
        "adjust NOUN to SPECIAL"

       CALL_2N         R0206 (#4d)
       RTRUE           

Routine R0184, 0 locals
    Action routine for:
        "wave"

       CALL_2N         R0206 (#4e)
       RTRUE           

Routine R0185, 0 locals
    Action routine for:
        "buy NOUN"

       CALL_2N         R0206 (#4f)
       RTRUE           

Routine R0186, 0 locals
    Action routine for:
        "sing"

       CALL_2N         R0206 (#50)
       RTRUE           

Routine R0187, 0 locals
    Action routine for:
        "climb NOUN"
        "climb up NOUN"
        "climb over NOUN"

       CALL_2N         R0206 (#51)
       RTRUE           

Routine R0188, 0 locals
    Action routine for:
        "nap"

       CALL_2N         R0206 (#52)
       RTRUE           

Routine R0189, 0 locals
    Action routine for:
        "l up TEXT [parse 1] in NOUN"
        "consult NOUN about TEXT [parse 2]"
        "consult NOUN on TEXT [parse 2]"
        "read about TEXT [parse 1] in NOUN"
        "read TEXT [parse 1] in NOUN"

       CALL_VN         R0206 (#53,#01,G22)
       RTRUE           

Routine R0190, 0 locals
    Action routine for:
        "feel NOUN"

       JE              G22,G0c [FALSE] L0001
       CALL_VS         R0206 (#54,#03) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#00 [FALSE] L0002
       CALL_VS         R0206 (#54,#01) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0206 (#54,#02)
       RTRUE           

Routine R0191, 0 locals
    Action routine for:
        "wave NOUN"

       GET_PARENT      G22 -> -(SP)
       JE              (SP)+,G0c [TRUE] L0001
       CALL_VS         R0206 (#55,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0206 (#55,#02,G22)
       RTRUE           

Routine R0192, 0 locals
    Action routine for:
        "drag NOUN"

       TEST_ATTR       G22,#13 [FALSE] L0001
       CALL_VS         R0206 (#56,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#11 [FALSE] L0002
       CALL_VS         R0206 (#56,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G22,#00 [FALSE] L0003
       CALL_VS         R0206 (#56,#04) -> -(SP)
       RET_POPPED      
L0003: CALL_VN         R0206 (#56,#03)
       RTRUE           

Routine R0193, 0 locals
    Action routine for:
        "clear NOUN"

       TEST_ATTR       G22,#13 [FALSE] L0001
       CALL_VS         R0206 (#57,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#11 [FALSE] L0002
       CALL_VS         R0206 (#57,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G22,#00 [FALSE] L0003
       CALL_VS         R0206 (#56,#04) -> -(SP)
       RET_POPPED      
L0003: CALL_VN         R0206 (#57,#03)
       RTRUE           

Routine R0194, 0 locals
    Action routine for:
        "rotate NOUN"

       TEST_ATTR       G22,#13 [FALSE] L0001
       CALL_VS         R0206 (#58,#01) -> -(SP)
       RET_POPPED      
L0001: TEST_ATTR       G22,#11 [FALSE] L0002
       CALL_VS         R0206 (#58,#02) -> -(SP)
       RET_POPPED      
L0002: TEST_ATTR       G22,#00 [FALSE] L0003
       CALL_VS         R0206 (#56,#04) -> -(SP)
       RET_POPPED      
L0003: CALL_VN         R0206 (#58,#03)
       RTRUE           

Routine R0195, 0 locals
    Action routine for:
        "wait"

       CALL_1S         R0057 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       CALL_2N         R0206 (#59)
       RTRUE           

Routine R0196, 0 locals
    Action routine for:
        "clear NOUN NOUN"

       CALL_VN         R0206 (#5a,#01)
       RTRUE           

Routine R0197, 1 local

       GET_PARENT      G23 -> -(SP)
       JE              (SP)+,#06 [TRUE] L0001
       CALL_VS         R0206 (#5a,#02) -> -(SP)
       RET_POPPED      
L0001: JE              G23,#0f,#10 [FALSE] L0002
       CALL_VS         R0206 (#5a,#03) -> -(SP)
       RET_POPPED      
L0002: CALL_1N         R0057
       STORE           L00,G22
       INSERT_OBJ      L00,G0c
       CALL_VN         R0058 (#00,G23)
       JE              G04,#13 [FALSE] L0003
       INSERT_OBJ      L00,G0e
       JUMP            L0004
L0003: INSERT_OBJ      L00,G04
L0004: RTRUE           

Routine R0198, 0 locals
    Action routine for:
        "squash NOUN"

       TEST_ATTR       G22,#00 [FALSE] L0001
       CALL_VS         R0206 (#5b,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0206 (#5b,#02)
       RTRUE           

Routine R0199, 0 locals
    Action routine for:
        "discard HELD at NOUN"
        "discard HELD against NOUN"

       JG              G23,#01 [FALSE] L0002
       STORE           G1d,#0103
       CALL_VS         R0048 (G23,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G1d,#5c
       RTRUE           
L0001: STORE           G1d,#5c
L0002: TEST_ATTR       G23,#00 [TRUE] L0003
       CALL_VS         R0206 (#5c,#01) -> -(SP)
       RET_POPPED      
L0003: CALL_VS         R0059 (G23,#5c) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0206 (#5c,#02)
       RTRUE           

Routine R0200, 0 locals
    Action routine for:
        "attack NOUN"

       TEST_ATTR       G22,#00 [FALSE] L0001
       CALL_VS         R0059 (G22,#5d) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0001: CALL_2N         R0206 (#5d)
       RTRUE           

Routine R0201, 0 locals
    Action routine for:
        "embrace CREATURE"

       CALL_VS         R0059 (G22,#5e) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JE              G22,G0c [FALSE] L0001
       CALL_VS         R0206 (#54,#03) -> -(SP)
       RET_POPPED      
L0001: CALL_2N         R0206 (#5e)
       RTRUE           

Routine R0202, 0 locals
    Action routine for:
        "answer TEXT [parse 2] to CREATURE"

       CALL_VS         R0059 (G23,#02) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_2N         R0206 (#02)
       RTRUE           

Routine R0203, 0 locals
    Action routine for:
        "tell CREATURE about TEXT [parse 2]"

       JE              G22,G0c [FALSE] L0001
       CALL_2S         R0206 (#05) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0059 (G22,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0206 (#05,#02)
       RTRUE           

Routine R0204, 0 locals
    Action routine for:
        "ask CREATURE about TEXT [parse 2]"

       CALL_VS         R0059 (G22,#03) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_2N         R0206 (#03)
       RTRUE           

Routine R0205, 0 locals
    Action routine for:
        "ask CREATURE for NOUN"

       JE              G22,G0c [FALSE] L0001
       CALL_2N         R0058 (#1f)
       RTRUE           
L0001: CALL_VN         R0206 (#0104,#01,G22)
       RTRUE           

Routine R0206, 4 locals

       STORE           L03,Ge9
       STORE           Ge9,L00
       JZ              L01 [FALSE] L0001
       STORE           L01,#01
L0001: CALL_VN         R0207 (L01,L02)
       STORE           Ge9,L03
       RTRUE           

Routine R0207, 3 locals

       STORE           L02,G1d
       JE              Ge9,#0108 [FALSE] L0001
       PRINT           "
>"
       RTRUE           
L0001: JE              Ge9,#0107 [FALSE] L0020
       JE              L00,#01 [FALSE] L0002
       PRINT_RET       "(considering the first sixteen objects only)
"
L0002: JE              L00,#02 [FALSE] L0003
       PRINT_RET       "Nothing to do!"
L0003: JE              L00,#03 [FALSE] L0004
       PRINT           " You have died "
       RTRUE           
L0004: JE              L00,#04 [FALSE] L0005
       PRINT           " You have won "
       RTRUE           
L0005: JE              L00,#05 [FALSE] L0008
       PRINT           "
Would you like to RESTART, RESTORE a saved game"
       JZ              #01 [TRUE] L0006
       PRINT           ", give the FULL score for that game"
L0006: JE              G10,#02 [FALSE] L0007
       JZ              #01 [TRUE] L0007
       PRINT           ", see some suggestions for AMUSING things to do"
L0007: PRINT_RET       " or QUIT?"
L0008: JE              L00,#06 [FALSE] L0009
       PRINT_RET       "[Your interpreter does not provide "undo".  Sorry!]"
L0009: JE              L00,#07 [FALSE] L0010
       PRINT_RET       ""Undo" failed.  [Not all interpreters provide it.]"
L0010: JE              L00,#08 [FALSE] L0011
       PRINT_RET       "Please give one of the answers above."
L0011: JE              L00,#09 [FALSE] L0012
       PRINT_RET       "
It is now pitch dark in here!"
L0012: JE              L00,#0a [FALSE] L0013
       PRINT_RET       "I beg your pardon?"
L0013: JE              L00,#0b [FALSE] L0014
       PRINT_RET       "[You can't "undo" what hasn't been done!]"
L0014: JE              L00,#0c [FALSE] L0015
       PRINT_RET       "[Can't "undo" twice in succession. Sorry!]"
L0015: JE              L00,#0d [FALSE] L0016
       PRINT_RET       "[Previous turn undone.]"
L0016: JE              L00,#0e [FALSE] L0017
       PRINT_RET       "Sorry, that can't be corrected."
L0017: JE              L00,#0f [FALSE] L0018
       PRINT_RET       "Think nothing of it."
L0018: JE              L00,#10 [FALSE] L0019
       PRINT_RET       ""Oops" can only correct a single word."
L0019: RTRUE           
L0020: JE              Ge9,#0104 [FALSE] L0021
       CALL_2N         R0077 (L01)
       PRINT_RET       " has better things to do."
L0021: JE              Ge9,#12 [FALSE] L0023
       JE              L00,#01 [FALSE] L0022
       PRINT           "Please answer yes or no."
       RTRUE           
L0022: PRINT           "Are you sure you want to quit? "
       RTRUE           
L0023: JE              Ge9,#13 [FALSE] L0025
       JE              L00,#01 [FALSE] L0024
       PRINT           "Are you sure you want to restart? "
       RTRUE           
L0024: PRINT_RET       "Failed."
L0025: JE              Ge9,#14 [FALSE] L0027
       JE              L00,#01 [FALSE] L0026
       PRINT_RET       "Restore failed."
L0026: PRINT_RET       "Ok."
L0027: JE              Ge9,#15 [FALSE] L0029
       JE              L00,#01 [FALSE] L0028
       PRINT_RET       "Save failed."
L0028: PRINT_RET       "Ok."
L0029: JE              Ge9,#16 [FALSE] L0031
       JE              L00,#01 [FALSE] L0030
       PRINT_RET       "The game file has verified as intact."
L0030: PRINT_RET       "The game file did not verify properly, and may be
corrupted (or you may be running it on a very primitive interpreter which is
unable properly to perform the test)."
L0031: JE              Ge9,#17 [FALSE] L0033
       JE              L00,#01 [FALSE] L0032
       PRINT_RET       "Transcripting is already on."
L0032: PRINT_RET       "Start of a transcript of"
L0033: JE              Ge9,#18 [FALSE] L0035
       JE              L00,#01 [FALSE] L0034
       PRINT_RET       "Transcripting is already off."
L0034: PRINT_RET       "
End of transcript."
L0035: JE              Ge9,#19 [FALSE] L0036
       PRINT_RET       "Score notification on."
L0036: JE              Ge9,#1a [FALSE] L0037
       PRINT_RET       "Score notification off."
L0037: JE              Ge9,#1b [FALSE] L0038
       PRINT           "You have visited: "
       RTRUE           
L0038: JE              Ge9,#1c [FALSE] L0040
       JE              L00,#01 [FALSE] L0039
       PRINT_RET       "Objects you have handled:
"
L0039: PRINT_RET       "None."
L0040: JE              Ge9,#1d [FALSE] L0044
       JZ              G10 [FALSE] L0041
       PRINT           "You have so far scored "
       JUMP            L0042
L0041: PRINT           "In that game you scored "
L0042: PRINT_NUM       G0a
       PRINT           " out of a possible "
       PRINT_NUM       #3c
       PRINT           ", in "
       PRINT_NUM       G0b
       PRINT           " turn"
       JG              G0b,#01 [FALSE] L0043
       PRINT           "s"
L0043: RTRUE           
L0044: JE              Ge9,#1e [FALSE] L0050
       JE              L00,#01 [FALSE] L0047
       JZ              G10 [FALSE] L0045
       PRINT           "The score is "
       JUMP            L0046
L0045: PRINT           "The score was "
L0046: PRINT_RET       "made up as follows:
"
L0047: JE              L00,#02 [FALSE] L0048
       PRINT_RET       "finding sundry items"
L0048: JE              L00,#03 [FALSE] L0049
       PRINT_RET       "visiting various places"
L0049: PRINT           "total (out of "
       PRINT_NUM       #3c
       PRINT_RET       ")"
L0050: JE              Ge9,#1f [FALSE] L0052
       JE              L00,#01 [FALSE] L0051
       PRINT_RET       "You are carrying nothing."
L0051: PRINT           "You are carrying"
       RTRUE           
L0052: JE              Ge9,#01 [FALSE] L0067
       JE              L00,#01 [FALSE] L0053
       PRINT_RET       "Taken."
L0053: JE              L00,#02 [FALSE] L0054
       PRINT_RET       "You are always self-possessed."
L0054: JE              L00,#03 [FALSE] L0055
       PRINT           "I don't suppose "
       CALL_2N         R0076 (L01)
       PRINT_RET       " would care for that."
L0055: JE              L00,#04 [FALSE] L0058
       PRINT           "You'd have to get "
       TEST_ATTR       L01,#14 [FALSE] L0056
       PRINT           "off "
       JUMP            L0057
L0056: PRINT           "out of "
L0057: CALL_2N         R0076 (L01)
       PRINT_RET       " first."
L0058: JE              L00,#05 [FALSE] L0059
       PRINT_RET       "You already have that."
L0059: JE              L00,#06 [FALSE] L0060
       PRINT           "That seems to belong to "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0060: JE              L00,#07 [FALSE] L0061
       PRINT           "That seems to be a part of "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0061: JE              L00,#08 [FALSE] L0062
       PRINT_RET       "That isn't available."
L0062: JE              L00,#09 [FALSE] L0063
       CALL_2N         R0077 (L01)
       PRINT_RET       " is not open."
L0063: JE              L00,#0a [FALSE] L0064
       PRINT_RET       "That's hardly portable."
L0064: JE              L00,#0b [FALSE] L0065
       PRINT_RET       "That's fixed in place."
L0065: JE              L00,#0c [FALSE] L0066
       PRINT_RET       "You're carrying too many things already."
L0066: PRINT           "(putting "
       CALL_2N         R0076 (L01)
       PRINT           " into "
       CALL_2N         R0076 (#15)
       PRINT_RET       " to make room)"
L0067: JE              Ge9,#22 [FALSE] L0071
       JE              L00,#01 [FALSE] L0068
       PRINT_RET       "Already on the floor."
L0068: JE              L00,#02 [FALSE] L0069
       PRINT_RET       "You haven't got that."
L0069: JE              L00,#03 [FALSE] L0070
       PRINT           "(first taking "
       CALL_2N         R0076 (L01)
       PRINT_RET       " off)"
L0070: PRINT_RET       "Dropped."
L0071: JE              Ge9,#06 [FALSE] L0074
       JE              L00,#01 [FALSE] L0072
       PRINT_RET       "It is unfortunately closed."
L0072: JE              L00,#02 [FALSE] L0073
       PRINT_RET       "But it isn't there now."
L0073: PRINT_RET       "Removed."
L0074: JE              Ge9,#24 [FALSE] L0082
       JE              L00,#01 [FALSE] L0075
       PRINT           "You need to be holding "
       CALL_2N         R0076 (L01)
       PRINT_RET       " before you can put it on top of something else."
L0075: JE              L00,#02 [FALSE] L0076
       PRINT_RET       "You can't put something on top of itself."
L0076: JE              L00,#03 [FALSE] L0077
       PRINT           "Putting things on "
       CALL_2N         R0076 (L01)
       PRINT_RET       " would achieve nothing."
L0077: JE              L00,#04 [FALSE] L0078
       PRINT_RET       "You lack the dexterity."
L0078: JE              L00,#05 [FALSE] L0079
       PRINT_RET       "(first taking it off)
"
L0079: JE              L00,#06 [FALSE] L0080
       PRINT           "There is no more room on "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0080: JE              L00,#07 [FALSE] L0081
       PRINT_RET       "Done."
L0081: PRINT           "You put "
       CALL_2N         R0076 (L01)
       PRINT           " on "
       CALL_2N         R0076 (G23)
       PRINT_RET       "."
L0082: JE              Ge9,#21 [FALSE] L0091
       JE              L00,#01 [FALSE] L0083
       PRINT_RET       "You need to be holding it before you can put it into
something else."
L0083: JE              L00,#02 [FALSE] L0084
       PRINT_RET       "That can't contain things."
L0084: JE              L00,#03 [FALSE] L0085
       PRINT_RET       "Alas, it is closed."
L0085: JE              L00,#04 [FALSE] L0086
       PRINT_RET       "You'll need to take it off first."
L0086: JE              L00,#05 [FALSE] L0087
       PRINT_RET       "You can't put something inside itself."
L0087: JE              L00,#06 [FALSE] L0088
       PRINT_RET       "(first taking it off)
"
L0088: JE              L00,#07 [FALSE] L0089
       PRINT           "There is no more room in "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0089: JE              L00,#08 [FALSE] L0090
       PRINT_RET       "Done."
L0090: PRINT           "You put "
       CALL_2N         R0076 (L01)
       PRINT           " into "
       CALL_2N         R0076 (G23)
       PRINT_RET       "."
L0091: JE              Ge9,#25 [FALSE] L0093
       JE              L00,#01 [FALSE] L0092
       PRINT_RET       "That isn't in your possession."
L0092: PRINT_RET       "First pick that up."
L0093: JE              Ge9,#0f [FALSE] L0096
       JE              L00,#01 [FALSE] L0094
       CALL_2N         R0077 (L01)
       PRINT_RET       " can't contain things."
L0094: JE              L00,#02 [FALSE] L0095
       CALL_2N         R0077 (L01)
       PRINT_RET       " is closed."
L0095: CALL_2N         R0077 (L01)
       PRINT_RET       " is empty already."
L0096: JE              Ge9,#0a [FALSE] L0099
       JE              L00,#01 [FALSE] L0097
       PRINT           "You aren't holding "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0097: JE              L00,#02 [FALSE] L0098
       PRINT           "You juggle "
       CALL_2N         R0076 (L01)
       PRINT_RET       " for a while, but don't achieve much."
L0098: CALL_2N         R0077 (L01)
       PRINT_RET       " doesn't seem interested."
L0099: JE              Ge9,#0b [FALSE] L0101
       JE              L00,#01 [FALSE] L0100
       PRINT           "You aren't holding "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0100: CALL_2N         R0077 (L01)
       PRINT_RET       " is unimpressed."
L0101: JE              Ge9,#27 [FALSE] L0110
       JE              L00,#01 [FALSE] L0104
       PRINT           "But you're already "
       TEST_ATTR       L01,#14 [FALSE] L0102
       PRINT           "on "
       JUMP            L0103
L0102: PRINT           "in "
L0103: CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0104: JE              L00,#02 [FALSE] L0105
       PRINT_RET       "That's not something you can enter."
L0105: JE              L00,#03 [FALSE] L0106
       PRINT           "You can't get into the closed "
       CALL_2N         R0078 (L01)
       PRINT_RET       "."
L0106: JE              L00,#04 [FALSE] L0107
       PRINT_RET       "You can only get into something on the floor."
L0107: PRINT           "You get "
       TEST_ATTR       L01,#14 [FALSE] L0108
       PRINT           "onto "
       JUMP            L0109
L0108: PRINT           "into "
L0109: CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0110: JE              Ge9,#29 [FALSE] L0111
       PRINT           "But you aren't on "
       CALL_2N         R0076 (L01)
       PRINT_RET       " at the moment."
L0111: JE              Ge9,#28 [FALSE] L0116
       JE              L00,#01 [FALSE] L0112
       PRINT_RET       "But you aren't in anything at the moment."
L0112: JE              L00,#02 [FALSE] L0113
       PRINT           "You can't get out of the closed "
       CALL_2N         R0078 (L01)
       PRINT_RET       "."
L0113: PRINT           "You get "
       TEST_ATTR       L01,#14 [FALSE] L0114
       PRINT           "off "
       JUMP            L0115
L0114: PRINT           "out of "
L0115: CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0116: JE              Ge9,#2a [FALSE] L0117
       PRINT_RET       "You'll have to say which compass direction to go in."
L0117: JE              Ge9,#00 [FALSE] L0125
       JE              L00,#01 [FALSE] L0120
       PRINT           "You'll have to get "
       TEST_ATTR       L01,#14 [FALSE] L0118
       PRINT           "off "
       JUMP            L0119
L0118: PRINT           "out of "
L0119: CALL_2N         R0076 (L01)
       PRINT_RET       " first."
L0120: JE              L00,#02 [FALSE] L0121
       PRINT_RET       "You can't go that way."
L0121: JE              L00,#03 [FALSE] L0122
       PRINT           "You are unable to climb "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0122: JE              L00,#04 [FALSE] L0123
       PRINT           "You are unable to descend "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0123: JE              L00,#05 [FALSE] L0124
       PRINT           "You can't, since "
       CALL_2N         R0076 (L01)
       PRINT_RET       " is in the way."
L0124: PRINT           "You can't, since "
       CALL_2N         R0076 (L01)
       PRINT_RET       " leads nowhere."
L0125: JE              Ge9,#2b [FALSE] L0126
       PRINT_RET       " is now in its normal "brief" printing mode, which
gives long descriptions of places never before visited and short descriptions
otherwise."
L0126: JE              Ge9,#2c [FALSE] L0127
       PRINT_RET       " is now in its "verbose" mode, which always gives long
descriptions of locations (even if you've been there before)."
L0127: JE              Ge9,#2d [FALSE] L0128
       PRINT_RET       " is now in its "superbrief" mode, which always gives
short descriptions of locations (even if you haven't been there before)."
L0128: JE              Ge9,#07 [FALSE] L0141
       JE              L00,#01 [FALSE] L0129
       PRINT           "on"
       RFALSE          
L0129: JE              L00,#02 [FALSE] L0130
       PRINT           "in"
       RFALSE          
L0130: JE              L00,#03 [FALSE] L0131
       PRINT           "as"
       RFALSE          
L0131: JE              L00,#04 [FALSE] L0133
       PRINT           "
On "
       CALL_2N         R0076 (L01)
       GET_CHILD       L01 -> -(SP) [FALSE] L0132
L0132: CALL_VN         R0094 ((SP)+,#0cd8)
       PRINT_RET       "."
L0133: JE              L01,G04 [TRUE] L0136
       TEST_ATTR       L01,#14 [FALSE] L0134
       PRINT           "
On "
       JUMP            L0135
L0134: PRINT           "
In "
L0135: CALL_2N         R0076 (L01)
       PRINT           " you"
       JUMP            L0137
L0136: PRINT           "
You"
L0137: PRINT           " can "
       JE              L00,#05 [FALSE] L0138
       PRINT           "also "
L0138: PRINT           "see "
       GET_CHILD       L01 -> -(SP) [FALSE] L0139
L0139: CALL_VN         R0094 ((SP)+,#0ad8)
       JE              L01,G04 [TRUE] L0140
       PRINT_RET       "."
L0140: PRINT_RET       " here."
L0141: JE              Ge9,#26 [FALSE] L0145
       JE              L00,#01 [FALSE] L0142
       PRINT_RET       "Darkness, noun.  An absence of light to see by."
L0142: JE              L00,#02 [FALSE] L0143
       PRINT           "You see nothing special about "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0143: CALL_2N         R0077 (L01)
       PRINT           " is currently switched "
       TEST_ATTR       L01,#0d [FALSE] L0144
       PRINT_RET       "on."
L0144: PRINT_RET       "off."
       RTRUE           
L0145: JE              Ge9,#2e [FALSE] L0147
       JE              L00,#01 [FALSE] L0146
       PRINT_RET       "But it's dark."
L0146: PRINT_RET       "You find nothing of interest."
L0147: JE              Ge9,#0d [FALSE] L0156
       JE              L00,#01 [FALSE] L0148
       PRINT_RET       "But it's dark."
L0148: JE              L00,#02 [FALSE] L0149
       PRINT           "There is nothing on "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0149: JE              L00,#03 [FALSE] L0151
       PRINT           "On "
       CALL_2N         R0076 (L01)
       GET_CHILD       L01 -> -(SP) [FALSE] L0150
L0150: CALL_VN         R0094 ((SP)+,#0c48)
       PRINT_RET       "."
L0151: JE              L00,#04 [FALSE] L0152
       PRINT_RET       "You find nothing of interest."
L0152: JE              L00,#05 [FALSE] L0153
       PRINT_RET       "You can't see inside, since it is closed."
L0153: JE              L00,#06 [FALSE] L0154
       CALL_2N         R0077 (L01)
       PRINT_RET       " is empty."
L0154: PRINT           "In "
       CALL_2N         R0076 (L01)
       GET_CHILD       L01 -> -(SP) [FALSE] L0155
L0155: CALL_VN         R0094 ((SP)+,#0c48)
       PRINT_RET       "."
L0156: JE              Ge9,#2f [FALSE] L0160
       JE              L00,#01 [FALSE] L0157
       PRINT_RET       "That doesn't seem to be something you can unlock."
L0157: JE              L00,#02 [FALSE] L0158
       PRINT_RET       "It's unlocked at the moment."
L0158: JE              L00,#03 [FALSE] L0159
       PRINT_RET       "That doesn't seem to fit the lock."
L0159: PRINT           "You unlock "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0160: JE              Ge9,#30 [FALSE] L0165
       JE              L00,#01 [FALSE] L0161
       PRINT_RET       "That doesn't seem to be something you can lock."
L0161: JE              L00,#02 [FALSE] L0162
       PRINT_RET       "It's locked at the moment."
L0162: JE              L00,#03 [FALSE] L0163
       PRINT_RET       "First you'll have to close it."
L0163: JE              L00,#04 [FALSE] L0164
       PRINT_RET       "That doesn't seem to fit the lock."
L0164: PRINT           "You lock "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0165: JE              Ge9,#31 [FALSE] L0168
       JE              L00,#01 [FALSE] L0166
       PRINT_RET       "That's not something you can switch."
L0166: JE              L00,#02 [FALSE] L0167
       PRINT_RET       "That's already on."
L0167: PRINT           "You switch "
       CALL_2N         R0076 (L01)
       PRINT_RET       " on."
L0168: JE              Ge9,#32 [FALSE] L0171
       JE              L00,#01 [FALSE] L0169
       PRINT_RET       "That's not something you can switch."
L0169: JE              L00,#02 [FALSE] L0170
       PRINT_RET       "That's already off."
L0170: PRINT           "You switch "
       CALL_2N         R0076 (L01)
       PRINT_RET       " off."
L0171: JE              Ge9,#33 [FALSE] L0178
       JE              L00,#01 [FALSE] L0172
       PRINT_RET       "That's not something you can open."
L0172: JE              L00,#02 [FALSE] L0173
       PRINT_RET       "It seems to be locked."
L0173: JE              L00,#03 [FALSE] L0174
       PRINT_RET       "It's already open."
L0174: JE              L00,#04 [FALSE] L0177
       PRINT           "You open "
       CALL_2N         R0076 (L01)
       PRINT           ", revealing "
       GET_CHILD       L01 -> -(SP) [FALSE] L0175
L0175: CALL_VS         R0094 ((SP)+,#0848) -> -(SP)
       JZ              (SP)+ [FALSE] L0176
       PRINT_RET       "nothing."
L0176: PRINT_RET       "."
L0177: PRINT           "You open "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0178: JE              Ge9,#0c [FALSE] L0181
       JE              L00,#01 [FALSE] L0179
       PRINT_RET       "That's not something you can close."
L0179: JE              L00,#02 [FALSE] L0180
       PRINT_RET       "It's already closed."
L0180: PRINT           "You close "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0181: JE              Ge9,#23 [FALSE] L0183
       JE              L00,#01 [FALSE] L0182
       PRINT_RET       "You're not wearing that."
L0182: PRINT           "You take off "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0183: JE              Ge9,#34 [FALSE] L0187
       JE              L00,#01 [FALSE] L0184
       PRINT_RET       "You can't wear that!"
L0184: JE              L00,#02 [FALSE] L0185
       PRINT_RET       "You're not holding that!"
L0185: JE              L00,#03 [FALSE] L0186
       PRINT_RET       "You're already wearing that!"
L0186: PRINT           "You put on "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0187: JE              Ge9,#35 [FALSE] L0189
       JE              L00,#01 [FALSE] L0188
       PRINT_RET       "That's plainly inedible."
L0188: PRINT           "You eat "
       CALL_2N         R0076 (L01)
       PRINT_RET       ".  Not bad."
L0189: JE              Ge9,#36,#37 [FALSE] L0190
       PRINT_RET       "That was a rhetorical question."
L0190: JE              Ge9,#38 [FALSE] L0191
       PRINT_RET       "This dangerous act would achieve little."
L0191: JE              Ge9,#39 [FALSE] L0192
       PRINT_RET       "Nothing practical results from your prayer."
L0192: JE              Ge9,#3a [FALSE] L0193
       PRINT_RET       "The dreadful truth is, this is not a dream."
L0193: JE              Ge9,#3b [FALSE] L0194
       PRINT_RET       "That seems unnecessary."
L0194: JE              Ge9,#5e [FALSE] L0195
       PRINT_RET       "Keep your mind on the game."
L0195: JE              Ge9,#3c [FALSE] L0196
       PRINT_RET       "What a good idea."
L0196: JE              Ge9,#3d [FALSE] L0197
       PRINT_RET       "You smell nothing unexpected."
L0197: JE              Ge9,#3e [FALSE] L0198
       PRINT_RET       "You hear nothing unexpected."
L0198: JE              Ge9,#3f [FALSE] L0199
       PRINT_RET       "You taste nothing unexpected."
L0199: JE              Ge9,#54 [FALSE] L0202
       JE              L00,#01 [FALSE] L0200
       PRINT_RET       "Keep your hands to yourself!"
L0200: JE              L00,#03 [FALSE] L0201
       PRINT_RET       "If you think that'll help."
L0201: PRINT_RET       "You feel nothing unexpected."
L0202: JE              Ge9,#40 [FALSE] L0203
       PRINT_RET       "Digging would achieve nothing here."
L0203: JE              Ge9,#41 [FALSE] L0204
       PRINT_RET       "Cutting that up would achieve little."
L0204: JE              Ge9,#42 [FALSE] L0205
       PRINT_RET       "You jump on the spot, fruitlessly."
L0205: JE              Ge9,#43,#44 [FALSE] L0206
       PRINT_RET       "You would achieve nothing by this."
L0206: JE              Ge9,#11 [FALSE] L0207
       PRINT_RET       "There's nothing suitable to drink here."
L0207: JE              Ge9,#10 [FALSE] L0208
       PRINT_RET       "But there's no water here to carry."
L0208: JE              Ge9,#45 [FALSE] L0209
       PRINT_RET       "Oh, don't apologise."
L0209: JE              Ge9,#46 [FALSE] L0210
       PRINT_RET       "Real adventurers do not use such language."
L0210: JE              Ge9,#47 [FALSE] L0211
       PRINT_RET       "Quite."
L0211: JE              Ge9,#5d [FALSE] L0212
       PRINT_RET       "Violence isn't the answer to this one."
L0212: JE              Ge9,#48 [FALSE] L0213
       PRINT_RET       "There's not enough water to swim in."
L0213: JE              Ge9,#49 [FALSE] L0214
       PRINT_RET       "There's nothing sensible to swing here."
L0214: JE              Ge9,#4a [FALSE] L0215
       PRINT_RET       "You can't usefully blow that."
L0215: JE              Ge9,#4b [FALSE] L0216
       PRINT_RET       "You achieve nothing by this."
L0216: JE              Ge9,#4c [FALSE] L0217
       PRINT_RET       "No, you can't set that."
L0217: JE              Ge9,#4d [FALSE] L0218
       PRINT_RET       "No, you can't set that to anything."
L0218: JE              Ge9,#4e [FALSE] L0219
       PRINT_RET       "You wave, feeling foolish."
L0219: JE              Ge9,#55 [FALSE] L0221
       JE              L00,#01 [FALSE] L0220
       PRINT_RET       "But you aren't holding that."
L0220: PRINT           "You look ridiculous waving "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0221: JE              Ge9,#56,#57,#58 [FALSE] L0225
       JE              L00,#01 [FALSE] L0222
       PRINT_RET       "It is fixed in place."
L0222: JE              L00,#02 [FALSE] L0223
       PRINT_RET       "You are unable to."
L0223: JE              L00,#04 [FALSE] L0224
       PRINT_RET       "That would be less than courteous."
L0224: PRINT_RET       "Nothing obvious happens."
L0225: JE              Ge9,#5a [FALSE] L0228
       JE              L00,#01 [FALSE] L0226
       PRINT_RET       "Is that the best you can think of?"
L0226: JE              L00,#02 [FALSE] L0227
       PRINT_RET       "That's not a direction."
L0227: PRINT_RET       "Not that way you can't."
L0228: JE              Ge9,#5b [FALSE] L0230
       JE              L00,#01 [FALSE] L0229
       PRINT_RET       "Keep your hands to yourself."
L0229: PRINT_RET       "You achieve nothing by this."
L0230: JE              Ge9,#5c [FALSE] L0232
       JE              L00,#01 [FALSE] L0231
       PRINT_RET       "Futile."
L0231: PRINT_RET       "You lack the nerve when it comes to the crucial
moment."
L0232: JE              Ge9,#05 [FALSE] L0234
       JE              L00,#01 [FALSE] L0233
       PRINT_RET       "You talk to yourself a while."
L0233: PRINT_RET       "This provokes no reaction."
L0234: JE              Ge9,#02,#03 [FALSE] L0235
       PRINT_RET       "There is no reply."
L0235: JE              Ge9,#4f [FALSE] L0236
       PRINT_RET       "Nothing is on sale."
L0236: JE              Ge9,#50 [FALSE] L0237
       PRINT_RET       "Your singing is abominable."
L0237: JE              Ge9,#51 [FALSE] L0238
       PRINT_RET       "I don't think much is to be achieved by that."
L0238: JE              Ge9,#59 [FALSE] L0239
       PRINT_RET       "Time passes."
L0239: JE              Ge9,#52 [FALSE] L0240
       PRINT_RET       "You aren't feeling especially drowsy."
L0240: JE              Ge9,#53 [FALSE] L0241
       PRINT           "You discover nothing of interest in "
       CALL_2N         R0076 (L01)
       PRINT_RET       "."
L0241: RTRUE           

Routine R0208, 0 locals

       JE              Ge9,#22 [FALSE] L0001
       TEST_ATTR       G22,#1d [FALSE] L0001
       INC             G02
       PRINT_RET       "You feel guilty about having despoiled the countryside.
Litter-bugs only have a few chances before they are caught red-handed."
L0001: RFALSE          

Routine R0209, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       PUT_PROP        "Old Tom",#1a,#00
       PUT_PROP        "Old Dick",#1a,#00
       PUT_PROP        "Old Harry",#1a,#00
       RFALSE          
L0001: JE              Ge9,#4f [FALSE] L0002
       PRINT_RET       "The barman is absent so you cannot buy anything."
L0002: RFALSE          

Routine R0210, 0 locals

       JE              Ge9,#03 [FALSE] L0003
       STORE           Gef,G23
       JE              Gef,"santer","jacques" [FALSE] L0001
       PRINT_RET       "The old man snorts and turns away, annoyed."
L0001: JE              Gef,"beer","sikstons","peculiar" [FALSE] L0002
       PRINT_RET       ""It's Sikstons' lad. 'Cheap, Cheerful, and Best Served
Chilled.' If tha' want a pint, go and tek one, as the barman's not around.""
L0002: PRINT_RET       ""I've no idea what tha' mean, lad.""
L0003: JE              Ge9,#5f [FALSE] L0004
       CALL_VN         R0058 (#5e,Geb)
       RTRUE           
L0004: RFALSE          

Routine R0211, 0 locals

       JE              Ge9,#26 [FALSE] L0001
       STORE           G00,#04
L0001: RFALSE          

Routine R0212, 0 locals

       JE              Ge9,#3d [FALSE] L0001
       PRINT_RET       "Pooooh!"
L0001: RFALSE          

Routine R0213, 0 locals

       JE              Ge9,#03 [FALSE] L0004
       STORE           Gef,G23
       JE              Gef,"cows","cow" [FALSE] L0002
       GET_PROP        Geb,#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PUT_PROP        Geb,#1a,#01
L0001: RTRUE           
L0002: JE              Gef,"bse","disease","mad" [FALSE] L0003
       PRINT_RET       ""You'll have to ask Dick about that, lad.""
L0003: JE              Gef,"devil","satan" [FALSE] L0004
       PRINT_RET       ""Now then, you'd have to be asking Old Harry about
that, wouldn't you?" chuckles Tom."
L0004: RFALSE          

Routine R0214, 0 locals

       JE              Ge9,#03 [FALSE] L0001
       JZ              #01 [TRUE] RTRUE
L0001: RFALSE          

Routine R0215, 0 locals

       GET_PROP        Geb,#1a -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#01 [FALSE] L0001
       PUT_PROP        Geb,#1a,#02
       PRINT_RET       ""Aye lad, I can tell thee something about cows.""
L0001: JE              Gef,#02 [FALSE] L0002
       PUT_PROP        Geb,#1a,#03
       PRINT_RET       ""They can be big or small, depending which ones tha'
look at," Tom explains excitedly."
L0002: JE              Gef,#03 [FALSE] L0003
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       ""And they're black an' white," says Dick, adding, by
way of explanation, "and sometimes brown.""
L0003: RFALSE          

Routine R0216, 2 locals

       JE              Ge9,#03 [FALSE] L0008
       STORE           Gef,G23
       JE              Gef,"cows","cow" [FALSE] L0001
       PRINT_RET       ""You'll have to ask Tom about that, lad.""
L0001: JE              Gef,"devil","satan" [FALSE] L0002
       PRINT_RET       ""Now then, you'd have to be asking Old Harry about
that, wouldn't you?" chuckles Tom."
L0002: JE              Gef,"bse","mad","disease" [FALSE] L0004
       GET_PROP        Geb,#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PUT_PROP        Geb,#1a,#01
L0003: RTRUE           
L0004: STORE           G33,G2c
       CALL_1S         R0036 -> L00
       CALL_1S         R0036 -> L01
       JE              L00,"red-chev" [TRUE] L0006
       JE              L00,"red" [FALSE] L0005
       JE              L01,"chevette" [TRUE] L0006
L0005: JE              L00,"chevette" [FALSE] L0007
L0006: INSERT_OBJ      "can of beer",G0c
       CALL_2N         R0329 (#0b)
       PRINT_RET       "Old Dick winks and smiles at you. "I think this young
man deserves some reward for his effort," he says. "'E's obviously an 'ard
working young'un. 'Ere, have a can of Sikston's on me." He hands you an
aluminium can and then turns back to his pint."
L0007: RFALSE          
L0008: JE              Ge9,#02,#05 [FALSE] L0011
       STORE           G33,G2c
       CALL_1S         R0036 -> L00
       CALL_1S         R0036 -> L01
       JE              L00,"red-chev" [TRUE] L0010
       JE              L00,"red" [FALSE] L0009
       JE              L01,"chevette" [TRUE] L0010
L0009: JE              L00,"chevette" [FALSE] L0011
L0010: INSERT_OBJ      "can of beer",G0c
       CALL_2N         R0329 (#0b)
       PRINT_RET       "Old Dick winks and smiles at you. "I think this young
man deserves some reward for his effort," he says. "'E's obviously an 'ard
working young'un. 'Ere, have a can of Sikston's on me." He hands you an
aluminium can and then turns back to his pint."
L0011: RFALSE          

Routine R0217, 0 locals

       GET_PROP        Geb,#1a -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#01 [FALSE] L0001
       PUT_PROP        Geb,#1a,#02
       PRINT_RET       ""Oh aye, I know what tha' mean, lad.""
L0001: JE              Gef,#02 [FALSE] L0002
       PUT_PROP        Geb,#1a,#03
       PRINT_RET       ""You mean destruction of nerve cells by rogue prion
proteins leading to gradual deterioration of the brain and nervous system,"
says Dick quickly."
L0002: JE              Gef,#03 [FALSE] L0003
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       ""Was that what tha' wanted to know, lad? Them
scientists call it Bovine Spongiform Encephalopathy, but we call it Old 'arry's
Game. I tell thee lad, its the devil behind them there mad cows an' I don't
mean Jacques Santer.""
L0003: RFALSE          

Routine R0218, 2 locals

       JE              Ge9,#03 [FALSE] L0008
       STORE           Gef,G23
       JE              Gef,"cows","cow" [FALSE] L0001
       PRINT_RET       ""You'll have to ask Tom about that, lad.""
L0001: JE              Gef,"devil","satan" [FALSE] L0003
       GET_PROP        Geb,#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PUT_PROP        Geb,#1a,#01
L0002: RTRUE           
L0003: JE              Gef,"bse","mad","disease" [FALSE] L0004
       PRINT_RET       ""You'll have to ask Dick about that, lad.""
L0004: STORE           G33,G2c
       CALL_1S         R0036 -> L00
       CALL_1S         R0036 -> L01
       JE              L00,"red-chev" [TRUE] L0006
       JE              L00,"red" [FALSE] L0005
       JE              L01,"chevette" [TRUE] L0006
L0005: JE              L00,"chevette" [FALSE] L0007
L0006: PRINT_RET       ""I know just what tha' mean lad," he whispers urgently.
"Go and speak to Mr. Robertson across the way, but don't worry yourself if he
gets angry; he's a sheep in wolf's clothing really." Harry's red eyes twinkle
as he turns back to his pint."
L0007: RFALSE          
L0008: JE              Ge9,#02,#05 [FALSE] L0011
       STORE           G33,G2c
       CALL_1S         R0036 -> L00
       CALL_1S         R0036 -> L01
       JE              L00,"red-chev" [TRUE] L0010
       JE              L00,"red" [FALSE] L0009
       JE              L01,"chevette" [TRUE] L0010
L0009: JE              L00,"chevette" [FALSE] L0011
L0010: PRINT_RET       ""I know just what tha' mean lad," he whispers urgently.
"Go and speak to Mr. Robertson across the way, but don't worry yourself if he
gets angry; he's a sheep in wolf's clothing really." Harry's red eyes twinkle
as he turns back to his pint."
L0011: RFALSE          

Routine R0219, 0 locals

       GET_PROP        Geb,#1a -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#01 [FALSE] L0001
       PUT_PROP        Geb,#1a,#02
       PRINT_RET       ""There's more to things to say about him than there are
men in this pub," advises Old Harry sagely."
L0001: JE              Gef,#02 [FALSE] L0002
       PUT_PROP        Geb,#1a,#03
       PRINT_RET       ""Only a fool would mess with him," he continues, "and
don't I just know it.""
L0002: JE              Gef,#03 [FALSE] L0003
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       ""But remember lad, as this is the only advice I'll give
thee." He summons himself for the revelation."Although it may sound cliched,"
he whispers, "Old Nick can never change the colour of his eyes, even if he's
staring thee in the face.""
L0003: RFALSE          

Routine R0220, 0 locals

       JE              Ge9,#33 [FALSE] L0001
       REMOVE_OBJ      "can of beer"
       INSERT_OBJ      "empty can of beer",G04
       PRINT_RET       "You yank sharply on the ring-pull which comes off
easily in your hand. After a brief sub-second the over-enthusiastic widget
kicks into action and froth and foam spurts from the can as if it were a
volcano. In shock you drop the can and its remaining contents spill onto the
floor."
L0001: RFALSE          

Routine R0221, 0 locals

       JE              Ge9,#60 [FALSE] L0001
       INSERT_OBJ      "brass key",G04
       CALL_2N         R0329 (#0c)
       PRINT_RET       "You shake the can and something falls out onto the
floor."
L0001: JE              Ge9,#0e [FALSE] L0002
       CALL_VN         R0058 (#60,Geb)
       RTRUE           
L0002: RFALSE          

Routine R0222, 0 locals

       PRINT           "A winding country road threads its way between old
stone cottages and barns. Daffodils and snowdrops spring from the grass verges,
adding a dash of colour to the grey walls and roofs. To your north, the sign of
'The Green Calf' "
       GET_PROP        "rain clouds",#1a -> -(SP)
       JG              (SP)+,#14 [TRUE] L0001
       PRINT           "rocks violently in the gale,"
       JUMP            L0002
L0001: PRINT           "swings in the sunshine,"
L0002: PRINT_RET       " beckoning locals and tourists alike to pop in for a
drink. There is a small garden to the south of the road which is attached,
unsurprisingly, to a small house."

Routine R0223, 0 locals

       JE              G04,#0034 [FALSE] L0001
       RET             #08
L0001: RET             #0b

Routine R0224, 0 locals

       JE              G04,#0034 [FALSE] L0001
       RET             #22
L0001: RET             #0034

Routine R0225, 0 locals

       JE              G04,#0034 [FALSE] L0001
       PRINT_RET       "The farm gate to the south-west stands open. You really
should shut it or anything could happen."
L0001: PRINT_RET       "An open wooden gate leads into a farmyard to the
north-east."

Routine R0226, 0 locals

       JE              G04,#0034 [FALSE] L0001
       PRINT_RET       "The farm gate to the south-west is safely shut."
L0001: PRINT_RET       "A short gravel track leads up to a wooden gate to your
north-east."

Routine R0227, 0 locals

       JE              Ge9,#51 [FALSE] L0004
       TEST_ATTR       "wooden gate",#0e [TRUE] L0003
       PRINT           "You hop over the closed gate...
"
       JE              G04,#22 [FALSE] L0001
       CALL_2N         R0099 (#0034)
       RTRUE           
L0001: JE              G04,#0034 [FALSE] L0002
       CALL_2N         R0099 (#22)
       RTRUE           
L0002: JUMP            L0004
L0003: PRINT_RET       "The gate is open, so you could always just walk through
it, couldn't you?"
L0004: RFALSE          

Routine R0228, 0 locals

       JE              Ge9,#27 [FALSE] L0001
       PRINT_RET       "There's very little point getting in the car - you've
got a job to do! But you might like to have a look in the boot..."
L0001: JE              Ge9,#0d [FALSE] L0002
       PRINT_RET       "The inside of your own car is familiar to you already."
L0002: JE              Ge9,#01 [FALSE] L0003
       PRINT_RET       "It's a tad heavy to pick up."
L0003: JE              Ge9,#57 [FALSE] L0004
       PRINT_RET       "You did remember to put the handbrake off, even if you
did lock yourself out!"
L0004: RFALSE          

Routine R0229, 0 locals

       JE              Ge9,#30 [FALSE] L0001
       SET_ATTR        "boot",#0b
       SET_ATTR        Geb,#0b
       RFALSE          
L0001: JE              Ge9,#2f [FALSE] L0002
       CLEAR_ATTR      "boot",#0b
       CLEAR_ATTR      Geb,#0b
L0002: RFALSE          

Routine R0230, 0 locals

       JE              Ge9,#30 [FALSE] L0001
       SET_ATTR        "boot",#0b
       RFALSE          
L0001: JE              Ge9,#2f [FALSE] L0002
       CLEAR_ATTR      "boot",#0b
L0002: RFALSE          

Routine R0231, 0 locals

       JE              Ge9,#0102 [FALSE] L0001
       JE              G22,#15,#002a [FALSE] L0001
       PRINT_RET       "That's far too big to fit in the coat pockets."
L0001: RFALSE          

Routine R0232, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       JE              G22,#08 [FALSE] L0001
       GET_PROP        Geb,#1a -> -(SP)
       CALL_VN         R0062 (#0033,(SP)+)
L0001: RFALSE          

Routine R0233, 0 locals

       JE              Ge9,#00 [FALSE] L0002
       JE              G22,#07 [FALSE] L0001
       GET_PROP        "angry farmer",#19 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       PUT_PROP        Geb,#1a,(SP)+
       CALL_2N         R0063 (#0033)
L0001: RFALSE          
L0002: JE              Ge9,#3d [FALSE] L0003
       PRINT_RET       "You breath in the sweet mingling fragrance of flowers
and best Yorkshire potatoes."
L0003: RFALSE          

Routine R0234, 0 locals

       GET_PROP        "angry farmer",#19 -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#08 [FALSE] L0001
       INSERT_OBJ      "angry farmer",Geb
       PRINT_RET       "
The owner of the house looks out at you, suspiciously."
L0001: JE              Gef,#07 [FALSE] L0002
       PRINT_RET       "
The farmer taps firmly on the window and shouts something unintelligible."
L0002: JE              Gef,#06 [FALSE] L0003
       PRINT_RET       "
There is a creak as the window eases open and a rifle barrel sneaks through the
crack."
L0003: JE              Gef,#05 [FALSE] L0004
       PRINT_RET       "
The farmer shouts "Get out of my garden or tha'll get what thee deserve!""
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_RET       "
"I'll count to four!" he shouts."
L0005: JE              Gef,#03 [FALSE] L0006
       PRINT_RET       "
"One...""
L0006: JE              Gef,#02 [FALSE] L0007
       PRINT_RET       "
"Two...""
L0007: JE              Gef,#01 [FALSE] L0008
       PRINT_RET       "
"Three...""
L0008: JE              Gef,#00 [FALSE] L0009
       PRINT_RET       "
"Four...!""
L0009: RFALSE          

Routine R0235, 0 locals

       JE              Ge9,#26,#0d [FALSE] L0002
       TEST_ATTR       "toy pistol",#0c [TRUE] L0001
       INSERT_OBJ      "toy pistol","Garden"
L0001: CALL_2N         R0329 (#00)
       PRINT           "In amongst the bushes you find a garish pink toy
pistol. You can well imagine that it would come in useful here - there is a
direct shot straight across the street.
"
       PUT_PROP        Geb,#04,#ffff
       RTRUE           
L0002: RFALSE          

Routine R0236, 0 locals

       PRINT           "The pistol is an uninspiring shade of washed-out pink,
but makes up for it with the battery-powered sound effects generator tagged on
to the handle. Its pea-sized water tank is currently "
       GET_PROP        Geb,#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT           "empty. 
"
L0001: GET_PROP        Geb,#1a -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       PRINT           "full of a clear fluid. 
"
L0002: GET_PROP        Geb,#1a -> -(SP)
       JE              (SP)+,#02 [FALSE] L0003
       PRINT           "full of water. 
"
L0003: RFALSE          

Routine R0237, 0 locals

       JE              Ge9,#10 [FALSE] L0008
       CALL_VS         R0383 (G23,#20) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       GET_PROP        Geb,#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       JE              G23,#16 [FALSE] L0002
       GET_PROP        "glass jar",#20 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0002
       TEST_ATTR       "glass jar",#0e [FALSE] L0001
       PUT_PROP        Geb,#1a,#01
       STORE           Gef,#16
       STORE           Gee,#20
       GET_PROP        Gef,Gee -> Ged
       DEC             Ged
       PUT_PROP        Gef,Gee,Ged
       CALL_2N         R0329 (#03)
       PRINT_RET       "You fill the pistol from the jar."
L0001: PRINT_RET       "The glass jar is closed."
L0002: JE              G23,#005d [FALSE] L0003
       GET_PROP        "kettle",#20 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       PUT_PROP        Geb,#1a,#02
       STORE           Gef,#005d
       STORE           Gee,#20
       GET_PROP        Gef,Gee -> Ged
       DEC             Ged
       PUT_PROP        Gef,Gee,Ged
       CALL_2N         R0329 (#03)
       PRINT_RET       "You fill the pistol with water."
L0003: JUMP            L0005
L0004: PRINT_RET       "The pistol is already full."
L0005: JUMP            L0007
L0006: PRINT_RET       "That's not something you can fill the pistol with."
L0007: RFALSE          
L0008: JE              Ge9,#0102 [FALSE] L0009
       CALL_VN         R0058 (#10,#2c,G22)
       RTRUE           
L0009: JE              Ge9,#33 [FALSE] L0010
       PRINT_RET       "You can't open the pistol, but you could perhaps open
the attached sound effects generator."
L0010: JE              Ge9,#0e [FALSE] L0011
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       "Emptied."
L0011: JE              Ge9,#0f [FALSE] L0012
       PRINT_RET       "You cannot easily empty the toy pistol into anything,
as it has no spout."
L0012: JE              Ge9,#0d [FALSE] L0013
       CALL_VN         R0058 (#26,Geb)
       RTRUE           
L0013: JE              Ge9,#61 [FALSE] L0029
       GET_PROP        Geb,#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0014
       PRINT_RET       "You pull the trigger but nothing comes out."
L0014: STORE           Gef,G23
       JE              Gef,#16 [FALSE] L0017
       GET_PROP        Geb,#1a -> -(SP)
       JE              (SP)+,#01 [FALSE] L0015
       STORE           Gef,#16
       STORE           Gee,#20
       GET_PROP        Gef,Gee -> Ged
       INC             Ged
       PUT_PROP        Gef,Gee,Ged
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       "You fire the contents of the pistol back into the jar."
L0015: GET_PROP        Geb,#1a -> -(SP)
       JE              (SP)+,#02 [FALSE] L0016
       PRINT_RET       "It would be stupid to mix water with whatever the
substance in the jar is: anything could happen!"
L0016: JUMP            L0029
L0017: JE              Gef,#004b,#004d [FALSE] L0021
       GET_PROP        Geb,#1a -> -(SP)
       JE              (SP)+,#01 [FALSE] L0019
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#4b [FALSE] L0018
       SET_ATTR        "note",#08
       PRINT_RET       "You fire the pistol at the cross, the shining arc of
liquid hitting the pin, dissolving it to nothing."
L0018: PRINT_RET       "Unfortunately you miss."
       JUMP            L0020
L0019: PRINT_RET       "You miss your target by more than a metre."
L0020: JUMP            L0029
L0021: JE              Gef,#0033 [FALSE] L0022
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The liquid squirts feebly towards the farmer who just
gets even more angry."
L0022: JE              Gef,#004c [FALSE] L0028
       GET_PROP        Geb,#1a -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#01 [FALSE] L0026
       GET_PROP        "pictogram",#1a -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#08 [TRUE] L0023
       JG              Gef,#0a [TRUE] L0023
       PUT_PROP        Geb,#1a,#00
       CALL_2N         R0065 (#004c)
       CALL_2N         R0329 (#13)
       REMOVE_OBJ      "pictogram"
       CALL_VN         R0062 (#004a,#14)
       STORE           G00,#05
       PRINT_RET       "You raise the pistol and squirt a shining arc through
the air towards your adversary. The liquid, despite your bad aim, hits it right
between the eyes, in true David and Goliath tradition. The head of the demonic
Denzil erupts in fire and smoke, the body crumbling dramatically into ash.
You're sure there should be some brimstone in there somewhere, but your probing
nostrils fail to deliver and you miss the experience of a lifetime. 

Denzil's final roar ("I'll sue...") reverberates around the cavern, as these
things do. The whole chamber suddenly begins to shake, rocks tumbling from the
ceiling. You had better make the safety of the farmyard or your number is
surely up."
L0023: JL              Gef,#05 [TRUE] L0024
       JG              Gef,#07 [TRUE] L0024
       PUT_PROP        Geb,#1a,#00
       PUT_PROP        "pictogram",#1a,#04
       PRINT_RET       "You fire a shining arc of the liquid straight at your
adversary. The twisting, living wall seems to die and fall back flat, but you
feel that you have not destroyed it for good."
L0024: JL              Gef,#01 [TRUE] L0025
       JG              Gef,#04 [TRUE] L0025
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The liquid hits the wall hard, but has little effect on
the pictogram."
L0025: JUMP            L0027
L0026: JE              Gef,#02 [FALSE] L0027
       PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The liquid squirts feebly towards the pictogram but has
little effect upon it."
L0027: JUMP            L0029
L0028: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The liquid squirts feebly out of the pistol and into
the ground."
L0029: RFALSE          

Routine R0238, 0 locals

       JE              Ge9,#0102 [FALSE] L0006
       JE              G22,#002e [TRUE] L0001
       JE              G22,#006b [FALSE] L0005
L0001: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0003
L0002: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0002
L0003: STORE           Gee,(SP)+
       PUSH            Gef
       JG              (SP)+,#00 [FALSE] L0004
       PRINT_RET       "There's already a battery in there."
L0004: RFALSE          
L0005: PRINT_RET       "You can't put that in a battery compartment!"
L0006: RFALSE          

Routine R0239, 0 locals

       JE              Ge9,#57 [FALSE] L0005
       JIN             "watch battery","sound-effects generator" [FALSE] L0004
       TEST_ATTR       "sound-effects generator",#0e [TRUE] L0004
       JE              G04,#22 [FALSE] L0002
       JIN             "chickens",G04 [FALSE] L0002
       TEST_ATTR       "wooden gate",#0e [FALSE] L0001
       INSERT_OBJ      "chickens","Farmyard"
       CLEAR_ATTR      "wooden gate",#0e
       PUT_PROP        "chickens",#1a,#00
       PRINT_RET       "Mooooooooooo! Mooooooooooo!

The chickens start in fright and flee back to the farmyard. You secure the gate
tightly behind them. Despite having disturbed the countryside with the loud
noise, you forgive yourself as you have saved the chickens from almost certain
death."
L0001: PRINT_RET       "Mooooooooooo! Mooooooooooo!

The chickens start in fright and flee back to the farmyard. Sadly the gate is
shut and they are left in the road, still exposed and vulnerable. It was a good
try, though."
L0002: PRINT           "Mooooooooooo! Mooooooooooo!
"
       CALL_VS         R0384 (G04,#18) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             G03
       PRINT_RET       "
The noise reverberates around the surrounding hills, and you feel a pang of
guilt at having disturbed the peace and quiet of the valley."
L0003: RTRUE           
L0004: PRINT_RET       "Nothing happens."
L0005: RFALSE          

Routine R0240, 0 locals

       JE              Ge9,#57 [FALSE] L0005
       JIN             "watch battery","sound-effects generator" [FALSE] L0004
       TEST_ATTR       "sound-effects generator",#0e [TRUE] L0004
       JE              G04,#22 [FALSE] L0002
       JIN             "chickens",G04 [FALSE] L0002
       TEST_ATTR       "wooden gate",#0e [FALSE] L0001
       INSERT_OBJ      "chickens","Farmyard"
       CLEAR_ATTR      "wooden gate",#0e
       PUT_PROP        "chickens",#1a,#00
       PRINT_RET       "Baaaaaaaaaaa! Baaaaaaaaaa

The chickens start in fright and flee back to the farmyard. You secure the gate
tightly behind them. Despite having disturbed the countryside with the loud
noise, you forgive yourself as you have saved the chickens from almost certain
death."
L0001: PRINT_RET       "Baaaaaaaaaaa! Baaaaaaaaaa!

The chickens start in fright and flee back to the farmyard. Sadly the gate is
shut and they are left in the road, still exposed and vulnerable. It was a good
try, though."
L0002: PRINT           "Baaaaaaaaaaa! Baaaaaaaaaa!
"
       CALL_VS         R0384 (G04,#18) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             G03
       PRINT_RET       "
The noise reverberates around the surrounding hills, and you feel a pang of
guilt at having disturbed the peace and quiet of the valley."
L0003: RTRUE           
L0004: PRINT_RET       "Nothing happens."
L0005: RFALSE          

Routine R0241, 0 locals

       JE              Ge9,#57 [FALSE] L0007
       JIN             "watch battery","sound-effects generator" [FALSE] L0006
       TEST_ATTR       "sound-effects generator",#0e [TRUE] L0006
       JE              G04,#22 [FALSE] L0002
       JIN             "chickens",G04 [FALSE] L0002
       TEST_ATTR       "wooden gate",#0e [FALSE] L0001
       INSERT_OBJ      "chickens","Farmyard"
       CLEAR_ATTR      "wooden gate",#0e
       PUT_PROP        "chickens",#1a,#00
       PRINT_RET       "Woof! Woof! Woof!

The chickens start in fright and flee back to the farmyard. You secure the gate
tightly behind them. Despite having disturbed the countryside with the loud
noise, you forgive yourself as you have saved the chickens from almost certain
death."
L0001: PRINT_RET       "Woof! Woof! Woof!

The chickens start in fright and flee back to the farmyard. Sadly the gate is
shut and they are left in the road, still exposed and vulnerable. It was a good
try, though."
L0002: JE              G04,#0058 [FALSE] L0003
       TEST_ATTR       "border collie",#08 [FALSE] L0003
       CLEAR_ATTR      "border collie",#08
       CALL_2N         R0064 (#005a)
       CALL_2N         R0329 (#04)
       PRINT           "Woof! Woof! Woof!

The collie gets very excited and jumps up from the mat, leaping in a canine
frenzy at the gun.
"
       JUMP            L0004
L0003: PRINT           "Woof! Woof! Woof!
"
L0004: CALL_VS         R0384 (G04,#18) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       INC             G03
       PRINT_RET       "
The noise reverberates around the surrounding hills, and you feel a pang of
guilt at having disturbed the peace and quiet of the valley."
L0005: RTRUE           
L0006: PRINT_RET       "Nothing happens."
L0007: RFALSE          

Routine R0242, 0 locals

       JE              G04,#29 [FALSE] L0001
       STORE           G10,#01
L0001: PRINT_RET       "The farmer, having warned you quite enough, blasts you
sky-high with his rifle."

Routine R0243, 0 locals

       PRINT_RET       "The farmer shouts several expletives and then shuts
up."

Routine R0244, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       GET_PROP        "Altar Chamber",#19 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0001
       STORE           G10,#02
       CALL_2N         R0329 (#14)
       PRINT_RET       "The barn collapses behind you in a cloud of dust. You
have rescued humanity from Satan and also saved your own skin."
L0001: RFALSE          

Routine R0245, 0 locals

       JE              Ge9,#3d [FALSE] L0001
       PRINT_RET       "You try not to inhale too much of the potent farmyard
air. Bracing is an understatement. Sickening is closer to the truth."
L0001: RFALSE          

Routine R0246, 0 locals

       TEST_ATTR       Geb,#0c [FALSE] L0001
       PRINT           "
A crumpled leaflet, heartlessly discarded by yourself just moments ago, "
L0001: TEST_ATTR       Geb,#0c [TRUE] L0002
       PRINT           "
A crumpled leaflet, presumably discarded by a passing tourist, "
L0002: TEST_ATTR       G04,#1c [TRUE] L0003
       PRINT_RET       "lies here."
L0003: GET_PROP        "rain clouds",#1a -> -(SP)
       JG              (SP)+,#14 [TRUE] L0004
       PRINT_RET       "bounces crazily around beneath the force of the gale."
L0004: PRINT_RET       "blows back and forth in the gentle summer breeze."

Routine R0247, 2 locals

       JE              Ge9,#53 [FALSE] L0011
       STORE           G33,G2c
       CALL_1S         R0036 -> L00
       CALL_1S         R0036 -> L01
       STORE           Gef,L00
       JE              Gef,"country","code" [FALSE] L0001
       PRINT           "The main points of the country code are, according to
the leaflet:

"
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       PRINT           "- Guard against all risk of fire.
"
       PRINT           "- Leave gates as you find them.
"
       PRINT           "- Keep dogs under close control.
"
       PRINT           "- Keep to public footpaths.
"
       PRINT           "- Take your litter home.
"
       PRINT           "- Make no unnecessary noise.
"
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       PRINT_RET       "
The leaflet goes on to explain how anyone breaking the code in Skebdale faces
punishment by the Skebdale flying squad, an elite group of park wardens who
punish criminals quickly and efficiently."
L0001: JE              Gef,"devil" [FALSE] L0002
       PRINT_RET       "Devil worship in Skebdale? How could you ever even
imagine that it could take place?"
L0002: JE              Gef,"sheep","breeds","varieties" [FALSE] L0003
       PRINT_RET       "Apparently there are three main varieties of sheep
found in Skebdale: the hardy Skebdale Mountain Sheep, the fatter, more
cautious, Skebdale-Milton Keynes Cross, and, finally, the newly-bred Fliglot.
There are individual paragraphs on each breed."
L0003: JE              Gef,"weather","forecast","forecasti" [FALSE] L0004
       PRINT_RET       "The leaflet describes very briefly the nature of
weather forecasts in Skebdale:

"Weather forecasts in Skebdale are impossible because, since the 1960's, the
weather has been totally unpredictable, erratic and mostly wet. Even the most
talented meteorologists in the world do not know why.""
L0004: JE              Gef,"fliglot" [FALSE] L0005
       CALL_1N         R0250
       RTRUE           
L0005: JE              Gef,"milton","milton-k","keynes" [TRUE] L0006
       JE              Gef,"cross" [FALSE] L0007
L0006: CALL_1N         R0248
       RTRUE           
L0007: JE              Gef,"mountain" [FALSE] L0008
       CALL_1N         R0249
       RTRUE           
L0008: JE              Gef,"skebdale" [FALSE] L0011
       JE              G2d,#01 [FALSE] L0009
       CALL_1N         R0249
       RTRUE           
L0009: STORE           Gef,L01
       JE              Gef,"mountain","" [FALSE] L0010
       CALL_1N         R0249
       RTRUE           
L0010: JE              Gef,"milton","milton-k" [FALSE] L0011
       CALL_1N         R0248
       RTRUE           
L0011: RFALSE          

Routine R0248, 0 locals

       PRINT_RET       "The Skebdale Milton-Keynes Cross was a result of
cross-breeding in the mid-nineteenth century (before the invention of ethics).
It created a sheep ideally suited to living on the flat flood plain of Skebdale
Beck. The Milton is possibly the exact opposite of the Skebdale mountain sheep.
It is a low slung sheep which hugs the ground for warmth and protection, it's
layers of fat and wool insulating it from temperatures lower than 30 degrees. A
farmer's dream, it grazes slowly and steadily, producing perfectly mown
stretches of grass, and yielding high quantities of wool, milk, and fat. The
famous cricket pitch in Skebdale was brought to such a high degree of
perfection due to a groundsman's brilliant idea. By releasing several Miltons
at the right time and angle around the pitch, he created a perfect overlapping
hexagonal cut, something very rarely seen on cricket pitches. It was this flash
of inspiration that originally brought fame to Skebdale and resulted in the
booming tourist industry that now flourishes there.

The name of the sheep is not, in fact, derived from the town, but from the 19th
century creators of the sheep, Mr. Milton and Mr. Keynes. (It is a little known
fact that the town is actually named after the sheep, not the village of the
same name. The developers were so impressed with the concept of a large,
artificially created, easily manageable sheep, that they decided to apply
exactly the same principles to town planning.)"

Routine R0249, 0 locals

       PRINT_RET       "The Skebdale Mountain Sheep is an ancient breed,
adapted to cope with grazing on steep moorland. It is world famous for its most
unusual trait: the pair of legs on one side of any sheep are shorter than the
pair on the other. This allows the sheep to walk around the mountain while
remaining upright. There are two distinct strains: those with a left-leg bias,
and those with a right-leg bias. Obviously interbreeding is impossible between
the two strains of sheep due to simple geographical problems. This means that
the two strains have drifted apart to form differing sub-species. The left-leg
variety are the more common as they graze with the prevailing wind around the
hills in Skebdale. The right-leg  variety, however, tend to end up grazing
against the wind. This means they graze more slowly as they must cope with more
air resistance, and they have hence become the rarer breed. To overcome these
aerodynamic difficulties the right-leg variety developed closer, shorter, more
tight-knit coats that allowed them to move faster. However, in order to
counterbalance the resulting heat loss, they have evolved thin, concentrated
layers of fat beneath their skin.

The Skebdale sheep has never spread further than a few hills in Skebdale as it
is perfectly suited to the slope angle of Skebdale Pike. The leg-bias makes
migration difficult and unrewarding, so the Skebdale Mountain Sheep remains an
isolated and extraordinary specimen."

Routine R0250, 0 locals

       PRINT_RET       "The Fliglot was an experimental sheep first released in
early June 1966. Bred by the now infamous farmers-cum-genetic-engineers Liz and
Ned Brown, of Fliglot Farm, Skebdale, it had a short black coat, two straight,
sharp horns, prominent hooves and a pointed swishy tail. Comments at the time
likened it to a goat rather than a sheep, but it quite happily bred with the
other breeds in Skebdale to produce a small flock of Fliglots. However, they
were extremely lazy and unproductive, and also quite violent. In the late 1970s
they broke free of their field in South Skebdale. There was a brief spurt of
mysterious disappearances in the village the same week, accompanied by heavy
storms. At the end of the week the Fliglots returned to their pen and peace
returned to the village. Since then the sheep have been regarded as a good luck
omen and guarded against escape at all costs."

Routine R0251, 0 locals

       JIN             Geb,"Farmyard" [FALSE] L0001
       PRINT_RET       "
A group of clucking chickens peck their way around the farmyard, desperately
searching for grain."
L0001: JIN             Geb,"Country Lane" [FALSE] L0002
       PRINT_RET       "
The chickens are scattered across the road, sounding out every last nook and
cranny for nourishment. You had better get them back into the farmyard before
they're run over by a bus full of ramblers."
L0002: RFALSE          

Routine R0252, 0 locals

       JE              Ge9,#3e [FALSE] L0001
       PRINT_RET       "All you can hear is the constant, annoying cluck of
hungry chickens."
L0001: RFALSE          

Routine R0253, 0 locals

       JE              Ge9,#03,#05,#02 [TRUE] L0001
       JE              Ge9,#0104 [FALSE] L0002
L0001: PRINT_RET       "The chickens don't speak English."
L0002: RFALSE          

Routine R0254, 0 locals

       TEST_ATTR       "wooden gate",#0e [FALSE] L0001
       JE              G04,#34 [FALSE] L0001
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#3c [FALSE] L0001
       INSERT_OBJ      "chickens","Country Lane"
       PRINT_RET       "
The chickens wander out through the farm gate in their never-ending quest for
nourishment."
L0001: JE              G04,#22 [FALSE] L0002
       STORE           Gef,#36
       STORE           Gee,#1a
       GET_PROP        Gef,Gee -> Ged
       INC             Ged
       PUT_PROP        Gef,Gee,Ged
       RANDOM          #0f -> -(SP)
       GET_PROP        "chickens",#1a -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       JG              (SP)+,#14 [FALSE] L0002
       STORE           G10,#05
       PRINT_RET       "A bus sweeps down the dale like a steel monster,
carrying a consignment of little old ladies towards the Vale of York. The
chickens are helpless before the harbinger of death. All that remains are a few
brown feathers, slowly drifting to earth..."
L0002: RFALSE          

Routine R0255, 0 locals

       JE              Ge9,#00 [FALSE] L0004
       JE              G22,#0f [FALSE] L0003
       JIN             G0c,"roof" [FALSE] L0001
       PRINT           "By standing on the tractor you can just reach the ledge
and haul yourself over the brink...
"
       CALL_2N         R0329 (#11)
       CALL_2N         R0099 (#003e)
       RTRUE           
L0001: JIN             G0c,"Barn" [FALSE] L0002
       TEST_ATTR       "rope ladder",#08 [FALSE] L0002
       PRINT           "You climb skilfully up the ladder.
"
       JUMP            L0003
L0002: PRINT_RET       "The haystack is far too steep to climb unaided.
However, you can almost, but not quite, reach a tiny ledge about a metre above
your head."
L0003: RFALSE          
L0004: JE              Ge9,#3d [FALSE] L0005
       PRINT_RET       "The barn is filled with the dry, dusty scent of parched
hay."
L0005: RFALSE          

Routine R0256, 0 locals

       GET_PROP        "Altar Chamber",#19 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0001
       PRINT_RET       "
The barn roof starts to collapse, bales of hay tumbling from the stack above
you."
L0001: RFALSE          

Routine R0257, 0 locals

       JE              Ge9,#51 [FALSE] L0001
       INSERT_OBJ      G0c,"roof"
       PRINT_RET       "You climb up the tractor onto its roof."
L0001: JE              Ge9,#31 [FALSE] L0002
       PRINT_RET       "You turn the key in the ignition but the tractor does
not respond."
L0002: RFALSE          

Routine R0258, 0 locals

       JE              Ge9,#33 [FALSE] L0001
       PRINT_RET       "You open the tractor, revealing a fairly ordinary
cockpit with controls and an ignition."
L0001: JE              Ge9,#0d [FALSE] L0003
       TEST_ATTR       "envelope",#0c [TRUE] L0002
       INSERT_OBJ      "envelope","tractor"
       SET_ATTR        "envelope",#0c
       CALL_2N         R0329 (#0e)
       PRINT_RET       "You perform a fingertip search of the tractor cockpit,
discovering a sleek, beige envelope underneath the steering column."
L0002: RFALSE          
L0003: JE              Ge9,#2f [FALSE] L0004
       CALL_2N         R0329 (#0d)
L0004: RFALSE          

Routine R0259, 0 locals

       JE              Ge9,#51 [FALSE] L0001
       CALL_VN         R0058 (#51,#38)
       RTRUE           
L0001: RFALSE          

Routine R0260, 0 locals

       JE              Ge9,#51 [FALSE] L0001
       CALL_VN         R0058 (#00,#0f)
       RTRUE           
L0001: JE              Ge9,#38 [FALSE] L0002
       STORE           G10,#06
       PRINT_RET       "You produce a box of matches from your pocket and set
fire to the haystack. It goes up a treat: you have to retreat to the far side
of the barn to escape the flames."
L0002: RFALSE          

Routine R0261, 0 locals

       JE              Ge9,#26 [FALSE] L0001
       STORE           G00,#03
L0001: RFALSE          

Routine R0262, 0 locals

       TEST_ATTR       "envelope",#0e [TRUE] L0001
       PRINT_RET       "A sleek beige envelope, tightly sealed."
L0001: PRINT_RET       "A ragged envelope, torn open at the seams and useless."

Routine R0263, 0 locals

       JE              Ge9,#33 [FALSE] L0001
       PRINT_RET       "The flap is obviously secured with some sort of
superglue as you cannot tear it open at all."
L0001: JE              Ge9,#62 [FALSE] L0003
       JE              G04,#0054 [FALSE] L0002
       GET_PROP        "kettle",#1a -> -(SP)
       JG              (SP)+,#14 [FALSE] L0002
       TEST_ATTR       Geb,#0e [TRUE] L0002
       SET_ATTR        "envelope",#0e
       INSERT_OBJ      "postcard",G04
       CALL_2N         R0329 (#10)
       PRINT_RET       "You hold the envelope in the flow of steam from the
kettle, and the glue melts away. A slip of card falls out onto the floor."
L0002: RFALSE          
L0003: JE              Ge9,#63 [FALSE] L0004
       JE              G23,#005d [FALSE] L0004
       GET_PROP        "kettle",#1a -> -(SP)
       JG              (SP)+,#14 [FALSE] L0004
       CALL_VN         R0058 (#62,#3b)
       RTRUE           
L0004: RFALSE          

Routine R0264, 0 locals

       PRINT           "A strong rope ladder, twined around several bales on
the edge of the ledge. It is out of reach."
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "It has been unrolled and leads from the ledge down to
the barn floor."
L0001: NEW_LINE        
       RTRUE           

Routine R0265, 0 locals

       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "
A long rope ladder, safely twined around several hay bales, leads downwards
from the ledge to the barn floor."
L0001: PRINT_RET       "
A furled rope ladder is attached to some bales at one side of the ledge, out of
reach."

Routine R0266, 0 locals

       JE              Ge9,#64 [FALSE] L0002
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "You can't reach high enough to roll it up to the
ledge."
L0001: PRINT_RET       "It's already rolled up, you fool."
       RFALSE          
L0002: JE              Ge9,#65 [FALSE] L0004
       TEST_ATTR       Geb,#08 [TRUE] L0003
       PRINT_RET       "Unfortunately you can't reach it."
L0003: PRINT_RET       "It's already unrolled, you fool."
       RFALSE          
L0004: JE              Ge9,#51 [FALSE] L0005
       CALL_VN         R0058 (#00,#0f)
       RTRUE           
L0005: RFALSE          

Routine R0267, 0 locals

       JE              Ge9,#00 [FALSE] L0015
       JE              G22,#0a [FALSE] L0013
       STORE           Gef,#00
       GET_CHILD       G0c -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: STORE           Gee,(SP)+
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0010
       STORE           Gef,#00
       GET_CHILD       G0c -> -(SP) [FALSE] L0004
L0003: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0003
L0004: STORE           Gee,(SP)+
       PUSH            Gef
       JE              (SP)+,#02 [FALSE] L0005
       JIN             "sou'wester",G0c [FALSE] L0005
       TEST_ATTR       "sou'wester",#1a [FALSE] L0005
       JIN             "white coat",G0c [FALSE] L0005
       TEST_ATTR       "white coat",#1a [TRUE] L0010
L0005: STORE           Gef,#00
       GET_CHILD       G0c -> -(SP) [FALSE] L0007
L0006: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0006
L0007: STORE           Gee,(SP)+
       PUSH            Gef
       JE              (SP)+,#01 [FALSE] L0012
       GET_CHILD       G0c -> -(SP) [FALSE] L0008
L0008: JE              (SP)+,#0055,#27 [FALSE] L0012
       GET_CHILD       G0c -> -(SP) [FALSE] L0009
L0009: TEST_ATTR       (SP)+,#1a [FALSE] L0012
L0010: JIN             "sou'wester",G0c [FALSE] L0011
       SET_ATTR        "sou'wester",#09
L0011: JUMP            L0013
L0012: PRINT_RET       "You can't squeeze down the tunnel while holding
anything, as you need your hands free to move."
L0013: JE              G22,#10 [FALSE] L0015
       TEST_ATTR       "rope ladder",#08 [TRUE] L0014
       PRINT_RET       "It's too far to jump and you're scared of heights
anyway."
L0014: PRINT           "You climb skilfully down the ladder.
"
L0015: RFALSE          

Routine R0268, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       JE              G22,#0e [FALSE] L0001
       CLEAR_ATTR      "sou'wester",#09
L0001: RFALSE          

Routine R0269, 0 locals

       GET_PROP        "Altar Chamber",#19 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0001
       PRINT_RET       "
The ground shakes violently as the whole haystack threatens to collapse."
L0001: RFALSE          

Routine R0270, 0 locals

       PRINT           "A strong rope ladder, twined around several bales on
the edge of the ledge. "
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "It has been unrolled and leads from the ledge down to
the barn floor."
L0001: NEW_LINE        
       RTRUE           

Routine R0271, 0 locals

       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "
A long rope ladder, safely twined around several hay bales, leads downwards
from the ledge to the barn floor."
L0001: PRINT_RET       "
A furled rope ladder is attached to some bales at one side of the ledge."

Routine R0272, 0 locals

       JE              Ge9,#64 [FALSE] L0002
       TEST_ATTR       "rope ladder",#08 [FALSE] L0001
       CLEAR_ATTR      "rope ladder",#08
       REMOVE_OBJ      "rope ladder"
       PRINT_RET       "You roll the ladder back up."
L0001: PRINT_RET       "It's already rolled up, you fool."
       RFALSE          
L0002: JE              Ge9,#65 [FALSE] L0004
       TEST_ATTR       "rope ladder",#08 [TRUE] L0003
       SET_ATTR        "rope ladder",#08
       INSERT_OBJ      "rope ladder","Barn"
       PRINT_RET       "You unroll the ladder which just reaches the ground."
L0003: PRINT_RET       "It's already unrolled, you fool."
       RFALSE          
L0004: JE              Ge9,#51 [FALSE] L0005
       CALL_VN         R0058 (#00,#10)
       RTRUE           
L0005: RFALSE          

Routine R0273, 0 locals

       GET_PROP        "Altar Chamber",#19 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0001
       PRINT_RET       "
The ground shakes violently as the chamber threatens to collapse."
L0001: RFALSE          

Routine R0274, 0 locals

       GET_PROP        "Altar Chamber",#19 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0001
       PRINT_RET       "
You'd better get yourself out of this hole."
L0001: RFALSE          

Routine R0275, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       PUT_PROP        "pictogram",#1a,#00
L0001: RFALSE          

Routine R0276, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       CALL_2N         R0065 (#004c)
L0001: RFALSE          

Routine R0277, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       PRINT           "You stumble from the labyrinthine passages into...
"
       STORE           G00,#02
       CALL_2N         R0329 (#12)
L0001: RFALSE          

Routine R0278, 0 locals

       JE              G04,#3e,#37,#4a [TRUE] L0001
       CALL_VS         R0384 (G04,#40) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0384 (G04,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
L0001: STORE           G10,#01
       PRINT_RET       "The ground shakes violently and you are thrown to the
ground as the altar chamber collapses, taking with it the barn and haystack,
which slide into the earth."
L0002: RFALSE          

Routine R0279, 0 locals

       JE              Ge9,#3d [FALSE] L0001
       PRINT_RET       "The smell of hot blood and burning flesh fills the
highly charged atmosphere of this horrific chamber."
L0001: JE              Ge9,#3e [FALSE] L0002
       PRINT_RET       "You can almost here faint chanting and distant
obscenities over the dry crackle of the torches."
L0002: RFALSE          

Routine R0280, 0 locals

       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "The note says simply:

"Gone to meet Brian Owen at the Pit of Acheron. Should be back for lunch.
Ciao.""
L0001: PRINT_RET       "You can't read it from down on the floor."

Routine R0281, 0 locals

       JE              Ge9,#01 [FALSE] L0001
       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT_RET       "You can't reach the note from the floor."
L0001: RFALSE          

Routine R0282, 0 locals

       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "
A small note lies on the cold flagstones."
L0001: PRINT_RET       "
Instead, a small note has been attached to the bottom of the cross with a
drawing pin."

Routine R0283, 0 locals

       PRINT           "
From the far side of the chamber, high up on one wall, an enormous, abstract
black and red pictogram stares down at you. "
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT_RET       "It has returned to normal since your last visit."
L0001: NEW_LINE        
       RTRUE           

Routine R0284, 0 locals

       RANDOM          #64 -> -(SP)
       JG              (SP)+,#46 [FALSE] L0001
       CALL_2N         R0064 (Geb)
L0001: RFALSE          

Routine R0285, 0 locals

       JE              Ge9,#26 [FALSE] L0001
       CALL_2N         R0064 (Geb)
L0001: RFALSE          

Routine R0286, 0 locals

       STORE           Gef,Geb
       STORE           Gee,#1a
       GET_PROP        Gef,Gee -> Ged
       PUSH            Ged
       INC             Ged
       PUT_PROP        Gef,Gee,Ged
       STORE           Gef,(SP)+
       JE              Gef,#01 [FALSE] L0001
       PRINT_RET       "
You feel uneasy, as if the pictogram is watching your every move."
L0001: JE              Gef,#03 [FALSE] L0002
       PRINT_RET       "
You feel unable to stop yourself turning and staring into the swirling eyes of
the pictogram."
L0002: JE              Gef,#05 [FALSE] L0003
       SET_ATTR        Geb,#08
       PRINT_RET       "An irresistible surge of terror rises within you as the
face of the pictogram twists and seems to force its way out of the wall. You
try to shut your eyes to it, but your only option seems to be flight. You have
little time to escape as the power of the evil has almost rooted you to the
spot."
L0003: JE              Gef,#06 [FALSE] L0004
       PRINT_RET       "The primitive drawing continues to wrench itself into
reality in a series of horrific jerks and contortions."
L0004: JE              Gef,#07 [FALSE] L0005
       PRINT_RET       "As the scene comes to life before you a wind whips
around the chamber, statues are blown over and torches threaten to go out. The
evil figure emerging from the wall roars in anger at your intrusion."
L0005: JE              Gef,#08 [FALSE] L0006
       PRINT_RET       "The figure of a cow, decked in blood and gore, begins
to take shape from the writhing pictogram and screams a dire warning. "Access
Denied! Access Denied! Unauthorised personnel in building!" You start to
petrify with fear."
L0006: JE              Gef,#09 [FALSE] L0007
       PRINT_RET       "An involuntary scream rips your throat open as the
devilish figure pops from the canvas like a satanical morph. "Trespassers will
be prosecuted....." screams the phantom of the pit as it totters about on its
hind-legs, wreathed in smoke and flames. These demonic vassals never were very
good at co-ordination, were they?"
L0007: JE              Gef,#0a [FALSE] L0008
       STORE           G10,#01
       PRINT_RET       ""I will destroy you!!!" The demon raises a hoof and a
ball of fiery flame (isn't it all) cannons towards you. You are engulfed
utterly, perish utterly, and generally cease to exist."
L0008: RFALSE          

Routine R0287, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       GET_PROP        Geb,#1a -> -(SP)
       JG              (SP)+,#07 [FALSE] L0001
       PRINT_RET       "You are rooted to the spot, unable to move, by the evil
force determined to destroy you."
L0001: RFALSE          

Routine R0288, 0 locals

       JE              Ge9,#01 [FALSE] L0001
       INSERT_OBJ      "socket","Hall"
       SET_ATTR        "socket",#08
       PRINT           "You take the sou'wester, revealing an electric socket
underneath.
"
       PUT_PROP        Geb,#05,#ffff
       RTRUE           
L0001: RFALSE          

Routine R0289, 0 locals

       JE              Ge9,#0102 [FALSE] L0004
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: STORE           Gee,(SP)+
       PUSH            Gef
       JL              (SP)+,#04 [FALSE] L0003
       INSERT_OBJ      G22,Geb
       PRINT           "You balance "
       CALL_2N         R0076 (G22)
       PRINT_RET       " on the welly rack."
L0003: PRINT_RET       "There isn't any space left on the rack."
L0004: RFALSE          

Routine R0290, 0 locals

       TEST_ATTR       Geb,#08 [TRUE] L0001
       PRINT_RET       "
Laid out in front of the fireplace is a thick hearth-rug, covered in dog hair."
L0001: PRINT_RET       "
A rolled up rug lies on the floor next to the fireplace."

orphan code fragment:

       RFALSE          

Routine R0291, 0 locals

       JE              Ge9,#56,#57,#58 [FALSE] L0001
       PRINT_RET       "The mat seems to be fixed down at one end."
L0001: JE              Ge9,#64 [FALSE] L0004
       TEST_ATTR       Geb,#08 [TRUE] L0003
       TEST_ATTR       "border collie",#08 [TRUE] L0002
       SET_ATTR        Geb,#08
       INSERT_OBJ      "trap door","Lounge"
       CLEAR_ATTR      "trap door",#0c
       CALL_2N         R0329 (#05)
       PRINT_RET       "You roll up the hearth-rug, revealing beneath a small
wooden trapdoor."
L0002: PRINT_RET       "You can't roll it up while the dog's on it."
L0003: PRINT_RET       "It is already rolled up."
L0004: JE              Ge9,#65 [FALSE] L0005
       CLEAR_ATTR      Geb,#08
       REMOVE_OBJ      "trap door"
       PRINT_RET       "You roll up the rug, hiding the trapdoor."
L0005: JE              Ge9,#01 [FALSE] L0006
       PRINT_RET       "It's a bit to bulky to carry around with you."
L0006: JE              Ge9,#3d [FALSE] L0007
       PRINT_RET       "A combination of wine, dog urine, and ash."
L0007: JE              Ge9,#2e [FALSE] L0008
       PRINT_RET       "You can't easily look under the rug - its a little too
bulky for that."
L0008: RFALSE          

Routine R0292, 0 locals

       PRINT           "A sleek, speckled, black and white border collie. "
       TEST_ATTR       Geb,#08 [FALSE] L0001
       PRINT           "The archetypal sheepdog, it is laid out flat after a
hard night spent sleeping."
L0001: PRINT_RET       ""

Routine R0293, 0 locals

       TEST_ATTR       "border collie",#08 [FALSE] L0001
       PRINT_RET       "
Curled up on the rug there is, of course, a dog."
L0001: GET_PARENT      "border collie" -> -(SP)
       JE              (SP)+,#58 [FALSE] L0002
       PRINT_RET       "
The border collie pads around the lounge, poking its nose into corners and
sniffing at suspect piles of reeking fabric."
L0002: GET_PARENT      "border collie" -> -(SP)
       JE              (SP)+,#54 [FALSE] L0003
       PRINT_RET       "
The collie paces restlessly up and down the hall."
L0003: GET_PARENT      "border collie" -> -(SP)
       JE              (SP)+,#34 [FALSE] L0005
       GET_PROP        "rain clouds",#1a -> -(SP)
       JL              (SP)+,#14 [FALSE] L0004
       PRINT_RET       "
The sheepdog is huddled safely beneath a rusting muckspreader, sheltered from
the storm."
L0004: PRINT_RET       "
The sheepdog lies on the sun-warmed concrete, panting gently."
L0005: GET_PARENT      "border collie" -> -(SP)
       JE              (SP)+,#37 [FALSE] L0006
       PRINT_RET       "
The sheepdog scampers back and forth along the base of the haystack, sniffing
at cracks and whimpering."
L0006: GET_PARENT      "border collie" -> -(SP)
       JE              (SP)+,#22 [FALSE] L0007
       PRINT_RET       "
The border collie is intent upon relieving itself, so does so against one of
your beautifully polished hubcaps."
L0007: RFALSE          

Routine R0294, 0 locals

       JE              Ge9,#5d,#5e,#3b [TRUE] L0001
       JE              Ge9,#5c [FALSE] L0002
L0001: PRINT_RET       "The collie, moving like lightning, tries to bite your
hand off, but you withdraw just in time."
L0002: JE              Ge9,#5f [FALSE] L0003
       PRINT_RET       "You sooth the border collie who seems to become much
more friendly."
L0003: JE              Ge9,#0a [FALSE] L0004
       PRINT_RET       "The border collie will have none of it."
L0004: JE              Ge9,#03,#05,#02 [FALSE] L0005
       PRINT_RET       "The collie couldn't care less."
L0005: RFALSE          

Routine R0295, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       PRINT_RET       "The border collie seems less likely to move than he did
before."
L0001: JE              Ge9,#0109 [FALSE] L0002
       PRINT_RET       "He sleeps on oblivious."
L0002: RFALSE          

Routine R0296, 3 locals

       RANDOM          #64 -> L00
       GET_PARENT      Geb -> L02
       GET_PARENT      "border collie" -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#58 [FALSE] L0002
       JG              L00,#50 [FALSE] L0001
       STORE           L01,#54
L0001: JUMP            L0011
L0002: JE              Gef,#54 [FALSE] L0004
       JG              L00,#4b [FALSE] L0003
       STORE           L01,#34
L0003: JUMP            L0011
L0004: JE              Gef,#34 [FALSE] L0008
       JG              L00,#50 [FALSE] L0005
       STORE           L01,#54
L0005: JL              L00,#19 [FALSE] L0006
       STORE           L01,#37
L0006: JG              L00,#37 [FALSE] L0007
       JL              L00,#46 [FALSE] L0007
       TEST_ATTR       "wooden gate",#0e [FALSE] L0007
       STORE           L01,#22
L0007: JUMP            L0011
L0008: JE              Gef,#22 [FALSE] L0010
       JG              L00,#4b [FALSE] L0009
       STORE           L01,#34
L0009: JUMP            L0011
L0010: JE              Gef,#37 [FALSE] L0011
       JG              L00,#50 [FALSE] L0011
       STORE           L01,#34
L0011: JG              L01,#00 [FALSE] L0013
       INSERT_OBJ      "border collie",L01
       JE              G04,L01 [FALSE] L0012
       PRINT           "
The border collie trots towards you from "
       CALL_VN         R0046 (L02,#21)
L0012: JE              G04,L02 [FALSE] L0013
       PRINT           "
The border collie pads off towards "
       CALL_VN         R0046 (L01,#21)
L0013: RFALSE          

Routine R0297, 0 locals

       JE              Ge9,#33 [FALSE] L0001
       PRINT_RET       "There is nothing for you to grip the trapdoor with, so
you are left scrabbling futilely along the thin crack at its rim."
L0001: JE              Ge9,#2f [FALSE] L0003
       TEST_ATTR       Geb,#0e [FALSE] L0002
       PRINT_RET       "The trapdoor is already open."
L0002: JE              G23,#2a [FALSE] L0003
       SET_ATTR        Geb,#0e
       CALL_2N         R0329 (#06)
       PRINT_RET       "The prongs of the fork fit perfectly into the holes and
you easily manage to lever the trapdoor open."
L0003: RFALSE          

Routine R0298, 0 locals

       PRINT           "A blue plastic electric kettle, which "
       GET_PROP        Geb,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT           "is empty. "
       JUMP            L0005
L0001: GET_PROP        Geb,#1a -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#00 [TRUE] L0002
       JG              Gef,#0a [TRUE] L0002
       PRINT           "contains a little cold water. I shouldn't waste it:
after all, there is a water shortage in Skebdale at the moment. "
       JUMP            L0005
L0002: JL              Gef,#0b [TRUE] L0003
       JG              Gef,#14 [TRUE] L0003
       PRINT           "contains a little warm water, and is gently steaming. "
       JUMP            L0005
L0003: JL              Gef,#15 [TRUE] L0004
       JG              Gef,#1e [TRUE] L0004
       PRINT           "contains a little hot water, and is steaming furiously.
"
       JUMP            L0005
L0004: JL              Gef,#1f [TRUE] L0005
       JG              Gef,#28 [TRUE] L0005
       PRINT           "contains a little boiling water, and is still steaming.
"
L0005: PRINT_RET       "Its black power wire leads to a white three-pin plug."

Routine R0299, 0 locals

       GET_PROP        Geb,#20 -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       TEST_ATTR       Geb,#0d [FALSE] L0002
       GET_PROP        Geb,#1a -> -(SP)
       JL              (SP)+,#20 [FALSE] L0001
       GET_PROP        Geb,#1a -> -(SP)
       ADD             (SP)+,#02 -> -(SP)
       PUT_PROP        Geb,#1a,(SP)+
       JUMP            L0002
L0001: CLEAR_ATTR      "kettle",#0d
       JE              G04,#54 [FALSE] L0002
       PRINT_RET       "The kettle, having boiled, switches itself off, and the
red indicator light dies."
L0002: TEST_ATTR       Geb,#0d [TRUE] L0003
       GET_PROP        Geb,#1a -> -(SP)
       JG              (SP)+,#01 [FALSE] L0003
       GET_PROP        Geb,#1a -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PUT_PROP        Geb,#1a,(SP)+
L0003: GET_PROP        Geb,#1a -> -(SP)
       JG              (SP)+,#14 [FALSE] L0004
       INSERT_OBJ      "steam","kettle"
       JUMP            L0005
L0004: REMOVE_OBJ      "steam"
L0005: RFALSE          

Routine R0300, 0 locals

       JE              Ge9,#66 [FALSE] L0006
       JE              G04,#54 [FALSE] L0001
       TEST_ATTR       "socket",#08 [TRUE] L0002
L0001: PRINT_RET       "There's no socket here."
L0002: GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#15,G0c [FALSE] L0003
       PRINT_RET       "You'll have to put the kettle down first."
L0003: GET_PARENT      Geb -> -(SP)
       JE              (SP)+,G04 [FALSE] L0004
       PRINT_RET       "The cable won't stretch from the ground."
L0004: GET_PARENT      Geb -> -(SP)
       JE              (SP)+,#56 [FALSE] L0005
       SET_ATTR        "plug",#08
       CALL_2N         R0329 (#0f)
       PRINT_RET       "You plug the kettle in."
L0005: RFALSE          
L0006: JE              Ge9,#67 [FALSE] L0008
       TEST_ATTR       "plug",#08 [FALSE] L0007
       CLEAR_ATTR      "plug",#08
L0007: PRINT_RET       "You unplug the kettle."
L0008: JE              Ge9,#31 [FALSE] L0011
       TEST_ATTR       "plug",#08 [TRUE] L0009
       PRINT_RET       "The kettle isn't plugged in, so nothing happens."
L0009: GET_PROP        Geb,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       PRINT_RET       "Surely even you aren't stupid enough to switch on an
empty electric kettle?"
L0010: RFALSE          
L0011: JE              Ge9,#0e [FALSE] L0012
       PUT_PROP        Geb,#20,#00
       PRINT_RET       "Emptied."
L0012: JE              Ge9,#0f [FALSE] L0013
       CALL_VN         R0058 (#10,G23,Geb)
       RTRUE           
L0013: JE              Ge9,#68 [FALSE] L0014
       CALL_VN         R0058 (#0e,Geb)
       RTRUE           
L0014: JE              Ge9,#10,#0102 [FALSE] L0015
       PRINT_RET       "That would achieve little."
L0015: JE              Ge9,#01 [FALSE] L0018
       TEST_ATTR       "plug",#08 [FALSE] L0017
       GET_PROP        "kettle",#1a -> -(SP)
       JG              (SP)+,#0f [FALSE] L0016
       PRINT_RET       "Although made of plastic, the kettle is still far too
hot to pick up."
L0016: CLEAR_ATTR      "plug",#08
       PRINT           "You unplug the kettle. "
L0017: RFALSE          
L0018: JE              Ge9,#11 [FALSE] L0019
       PRINT_RET       "Who knows where that water's been?"
L0019: JE              Ge9,#0d [FALSE] L0020
       CALL_VN         R0058 (#26,Geb)
       RTRUE           
L0020: RFALSE          

Routine R0301, 0 locals

       JE              Ge9,#31 [FALSE] L0001
       PRINT_RET       "You switch the kettle on. A little red light above the
switch jumps into life to show you it is working."
L0001: JE              Ge9,#32 [FALSE] L0002
       PRINT_RET       "You switch the kettle off, and the indicator light
dies."
L0002: RFALSE          

Routine R0302, 0 locals

       JE              Ge9,#33 [FALSE] L0001
       PRINT_RET       "You'll have to find a screwdriver first."
L0001: JE              Ge9,#66 [FALSE] L0002
       CALL_VN         R0058 (#66,#5d)
       RTRUE           
L0002: JE              Ge9,#67 [FALSE] L0003
       CALL_VN         R0058 (#67,#5d)
       RTRUE           
L0003: RFALSE          

Routine R0303, 0 locals

       JE              Ge9,#34 [FALSE] L0001
       PRINT_RET       "You try and pull the glove on, but it is too small for
either of your well-built hands."
L0001: JE              Ge9,#69 [FALSE] L0002
       GET_PARENT      "rubber glove" -> -(SP)
       INSERT_OBJ      "rubber glove",(SP)+
       REMOVE_OBJ      "rubber glove"
       CALL_2N         R0329 (#08)
       PRINT_RET       "You turn the glove inside out."
L0002: RFALSE          

Routine R0304, 0 locals

       JE              Ge9,#34 [FALSE] L0001
       PRINT_RET       "You try and pull the glove on, but it is too small for
either of your well-built hands."
L0001: JE              Ge9,#69 [FALSE] L0002
       GET_PARENT      "rubber glove" -> -(SP)
       INSERT_OBJ      "rubber glove",(SP)+
       REMOVE_OBJ      "rubber glove"
       PRINT_RET       "You turn the glove the right way out."
L0002: RFALSE          

Routine R0305, 0 locals

       JE              Ge9,#01 [FALSE] L0001
       PRINT_RET       "You grapple futilely with the steam, but it condenses
all over your fingers."
L0001: JE              Ge9,#0102 [FALSE] L0003
       JE              G22,#3b [FALSE] L0002
       CALL_VN         R0058 (#62,#3b)
       RTRUE           
L0002: PRINT_RET       "Nothing obvious happens."
L0003: RFALSE          

Routine R0306, 0 locals

       PRINT           "The lock is the traditional turning type, with eight
letters arranged evenly around the dial:
"
       CALL_1N         R0308
       PRINT_RET       "
There is a small black button underneath the uppermost letter."

Routine R0307, 0 locals

       JE              Ge9,#6a [FALSE] L0002
       GET_PROP        Geb,#1a -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       PUT_PROP        Geb,#1a,(SP)+
       GET_PROP        Geb,#1a -> -(SP)
       JG              (SP)+,#07 [FALSE] L0001
       PUT_PROP        Geb,#1a,#00
L0001: PRINT           "You turn the dial one notch anticlockwise.
"
       CALL_1N         R0308
       RTRUE           
L0002: JE              Ge9,#6b [FALSE] L0004
       GET_PROP        Geb,#1a -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PUT_PROP        Geb,#1a,(SP)+
       GET_PROP        Geb,#1a -> -(SP)
       JL              (SP)+,#00 [FALSE] L0003
       PUT_PROP        Geb,#1a,#07
L0003: PRINT           "You turn the dial one notch clockwise.
"
       CALL_1N         R0308
       RTRUE           
L0004: JE              Ge9,#58 [FALSE] L0005
       PRINT_RET       "Which way?"
L0005: RFALSE          

Routine R0308, 0 locals

       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_TEXT_STYLE  BOLDFACE
       NEW_LINE        
       STORE           Gef,#09
       JL              Gef,#00 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#07 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       STORE           Gef,#09
       JL              Gef,#00 [TRUE] L0004
L0003: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0003
L0004: PRINT           "o"
       NEW_LINE        
       STORE           Gef,#06
       JL              Gef,#00 [TRUE] L0006
L0005: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0005
L0006: GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#06 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           "  |  "
       GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#00 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       STORE           Gef,#08
       JL              Gef,#00 [TRUE] L0008
L0007: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0007
L0008: PRINT           "\|/"
       NEW_LINE        
       STORE           Gef,#03
       JL              Gef,#00 [TRUE] L0010
L0009: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0009
L0010: GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#05 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           "-----+-----"
       GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#01 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       STORE           Gef,#08
       JL              Gef,#00 [TRUE] L0012
L0011: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0011
L0012: PRINT           "/|\"
       NEW_LINE        
       STORE           Gef,#06
       JL              Gef,#00 [TRUE] L0014
L0013: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0013
L0014: GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#04 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       PRINT           "  |  "
       GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#02 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       STORE           Gef,#09
       JL              Gef,#00 [TRUE] L0016
L0015: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0015
L0016: PRINT           "|"
       NEW_LINE        
       STORE           Gef,#09
       JL              Gef,#00 [TRUE] L0018
L0017: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0017
L0018: GET_PROP        "dial",#1a -> -(SP)
       LOADW           #1b9f,#03 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       PRINT_PADDR     (SP)+
       NEW_LINE        
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_TEXT_STYLE  ROMAN
       RTRUE           

Routine R0309, 0 locals

       PRINT           "The small black button is small and black. Agreed? I'm
sorry it couldn't be big and red, but I'm sick of cliches.
"
       STORE           G00,#01
       RFALSE          

Routine R0310, 0 locals

       JE              Ge9,#57 [FALSE] L0013
       GET_PROP        Geb,#1a -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#00 [FALSE] L0002
       GET_PROP        "dial",#1a -> -(SP)
       JE              (SP)+,#07 [FALSE] L0001
       PUT_PROP        Geb,#1a,#01
       PRINT_RET       "The door beeps once."
L0001: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The door emits a long, low pitched beep."
L0002: JE              Gef,#01 [FALSE] L0004
       GET_PROP        "dial",#1a -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PUT_PROP        Geb,#1a,#02
       PRINT_RET       "The door beeps twice."
L0003: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The door emits a long, low pitched beep."
L0004: JE              Gef,#02 [FALSE] L0006
       GET_PROP        "dial",#1a -> -(SP)
       JE              (SP)+,#06 [FALSE] L0005
       PUT_PROP        Geb,#1a,#03
       PRINT_RET       "The door beeps three times."
L0005: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The door emits a long, low pitched beep."
L0006: JE              Gef,#03 [FALSE] L0008
       GET_PROP        "dial",#1a -> -(SP)
       JE              (SP)+,#01 [FALSE] L0007
       PUT_PROP        Geb,#1a,#04
       PRINT_RET       "The door beeps four times."
L0007: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The door emits a long, low pitched beep."
L0008: JE              Gef,#04 [FALSE] L0010
       GET_PROP        "dial",#1a -> -(SP)
       JE              (SP)+,#05 [FALSE] L0009
       PUT_PROP        Geb,#1a,#05
       PRINT_RET       "The door beeps five times."
L0009: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The door emits a long, low pitched beep."
L0010: JE              Gef,#05 [FALSE] L0012
       GET_PROP        "dial",#1a -> -(SP)
       JE              (SP)+,#03 [FALSE] L0011
       PUT_PROP        Geb,#1a,#06
       SET_ATTR        "enormous door",#0e
       CLEAR_ATTR      "enormous door",#0b
       CALL_2N         R0329 (#07)
       PRINT_RET       "Triumphantly, the door beeps six times, and, on its
final glorious 'Bleeeep', the door clicks and swings wide open."
L0011: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The door emits a long, low pitched beep."
L0012: PUT_PROP        Geb,#1a,#00
       PRINT_RET       "The door emits a long, low pitched beep."
L0013: RFALSE          

Routine R0311, 0 locals

       PRINT           "A particular article, marked in bright blue highlighter
pen, catches your eye. The headline reads simply:

"
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_TEXT_STYLE  BOLDFACE
       SET_TEXT_STYLE  EMPHASIS
       PRINT           "DAIRY FARMERS BREED COW WITH SIX UDDERS

"
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_TEXT_STYLE  ROMAN
       PRINT           ""Liz and Ned Brown from Yorkshire yesterday announced a
triumph of genetic engineering - a cow able to produce six times more milk than
an ordinary heifer..."

You remember the story, but you also remember that you didn't believe it at the
time.
"
       RFALSE          

Routine R0312, 0 locals

       JE              Ge9,#01 [FALSE] L0001
       PRINT_RET       "The drawing pins are firmly stuck into the board, so
you cannot force your hygienically short nails between the two."
L0001: RFALSE          

Routine R0313, 0 locals

       PRINT_RET       "
Some sort of sci-fi gadget sits on the main lab bench."

Routine R0314, 0 locals

       JE              Ge9,#31 [FALSE] L0001
       TEST_ATTR       "sci-fi gadget",#08 [TRUE] L0001
       PRINT_RET       ""Request fingerprint recognition before computer access
allowance." A small light-sensitive pad on the gadget flashes briefly and then
goes dark again."
L0001: RFALSE          

Routine R0315, 0 locals

       JE              Ge9,#31 [FALSE] L0001
       PRINT_RET       "The computer hums into life, its hard disc whirring as
it downloads its highly complex and user-unfriendly operating system. The
speaker jumps into life with a high-pitched computerised voice:

"Welcome to MacroSift Sowester, the latest in voice-operated computing. My name
is Sharon, and I have been programmed to scan and recognise any object placed
in my main bay. Have a nice day!""
L0001: JE              Ge9,#32 [FALSE] L0002
       PRINT_RET       ""Goodnight user. Have a nice evening!""
L0002: RFALSE          

Routine R0316, 0 locals

       JE              Ge9,#05 [FALSE] L0002
       TEST_ATTR       Geb,#0d [FALSE] L0001
       PRINT_RET       ""I am programmed only to scan objects, idle gossip does
not interest me.""
L0001: RFALSE          
L0002: JE              Ge9,#03 [FALSE] L0004
       TEST_ATTR       Geb,#0d [FALSE] L0003
       PRINT_RET       ""I do not provide data storage facilities, CD-ROMs are
far too expensive these days. However, I am happy to scan the object in the
main bay for your pleasure and satisfaction, on request.""
L0003: RFALSE          
L0004: JE              Ge9,#02 [FALSE] L0005
       TEST_ATTR       Geb,#0d [FALSE] L0005
       PRINT_RET       ""Thankyou for your information. It has been logged in
my virtual memory and will be forgotten as soon as I can find the time to get
rid of it.""
L0005: RFALSE          

Routine R0317, 0 locals

       JE              Ge9,#6c [FALSE] L0017
       TEST_ATTR       Geb,#0d [FALSE] L0016
       STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: STORE           Gee,(SP)+
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0003
       PRINT_RET       ""No objects in main bay.""
L0003: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0005
L0004: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0004
L0005: STORE           Gee,(SP)+
       PUSH            Gef
       JG              (SP)+,#01 [FALSE] L0006
       PRINT_RET       ""Too many objects present.""
L0006: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0008
L0007: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0007
L0008: STORE           Gee,(SP)+
       PUSH            Gef
       JE              (SP)+,#01 [FALSE] L0015
       GET_CHILD       Geb -> -(SP) [FALSE] L0009
L0009: JE              (SP)+,G22 [TRUE] L0010
       JZ              G22 [FALSE] L0014
L0010: PRINT           "A tinted glass barrier slides down and several lights
flash inside the gadget. The screen is pulled back up as it reads out the
result:

"
       GET_CHILD       Geb -> -(SP) [FALSE] L0011
L0011: JE              (SP)+,#16 [FALSE] L0012
       CALL_2N         R0329 (#0a)
       PRINT_RET       ""Object is silver nitrate solution.""
L0012: PRINT           ""Object is "
       GET_CHILD       Geb -> -(SP) [FALSE] L0013
L0013: CALL_2N         R0075 ((SP)+)
       PRINT_RET       ".""
       JUMP            L0015
L0014: PRINT_RET       ""Specified object not present in main bay.""
L0015: JUMP            L0017
L0016: PRINT_RET       "The gadget does not respond, probably because it is
switched off."
L0017: RFALSE          

Routine R0318, 0 locals

       JE              Ge9,#57 [FALSE] L0001
       PRINT_RET       ""Print unauthorised.""
L0001: JE              Ge9,#0100,#0102 [FALSE] L0004
       PRINT           "You hold "
       CALL_2N         R0076 (G22)
       PRINT           " against the pad.
"
       STORE           Gef,G22
       JE              Gef,#5f [FALSE] L0002
       PRINT_RET       ""Clean rubber detected. Print unauthorised.""
L0002: JE              Gef,#60 [FALSE] L0003
       SET_ATTR        "sci-fi gadget",#08
       CALL_2N         R0329 (#09)
       PRINT_RET       ""Print authorised. Access awarded to Elizabeth Brown."

A fairly gullible computer, isn't it? Especially considering the print was the
wrong way round..."
L0003: PRINT_RET       ""No print detected.""
L0004: RFALSE          

Routine R0319, 0 locals

       JE              Ge9,#0102 [FALSE] L0006
       JE              G22,#2e [TRUE] L0001
       JE              G22,#006b [FALSE] L0005
L0001: STORE           Gef,#00
       GET_CHILD       Geb -> -(SP) [FALSE] L0003
L0002: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0002
L0003: STORE           Gee,(SP)+
       PUSH            Gef
       JG              (SP)+,#00 [FALSE] L0004
       PRINT_RET       "There's already a battery in there."
L0004: RFALSE          
L0005: PRINT_RET       "You can't put that in a battery compartment!"
L0006: JE              Ge9,#57 [FALSE] L0009
       GET_PARENT      "watch battery" -> -(SP)
       JE              (SP)+,Geb [FALSE] L0008
       TEST_ATTR       Geb,#0e [TRUE] L0008
       JE              G04,#22 [FALSE] L0008
       TEST_ATTR       "boot",#0b [FALSE] L0007
       CLEAR_ATTR      "boot",#0b
       CLEAR_ATTR      "Volvo",#0b
       CALL_2N         R0329 (#02)
       PRINT_RET       "The car merrily beeps out the theme tune to the Wombles
in four-part harmony, its lights flashing in time to the music, and there is
then a half-hearted click as the doors unlock."
L0007: SET_ATTR        "boot",#0b
       SET_ATTR        "Volvo",#0b
       PRINT_RET       "The doors lock."
       JUMP            L0009
L0008: PRINT_RET       "You hammer the button to no avail - there must be
something wrong with the control."
L0009: RFALSE          

Routine R0320, 0 locals

       JE              Ge9,#0c [FALSE] L0001
       JIN             "watch battery",Geb [FALSE] L0001
       CALL_2N         R0329 (#01)
L0001: RFALSE          

Routine R0321, 0 locals

       GET_PROP        "rain clouds",#1a -> -(SP)
       JL              (SP)+,#14 [FALSE] L0001
       PRINT_RET       "
Towering black cumulonimbus clouds pour forth vast quantities of tiny, hard
hailstones onto Skebdale."
L0001: RTRUE           

orphan code fragment:

       RFALSE          

Routine R0322, 0 locals

       GET_PROP        "rain clouds",#1a -> -(SP)
       JG              (SP)+,#00 [FALSE] L0001
       STORE           Gef,#6d
       STORE           Gee,#1a
       GET_PROP        Gef,Gee -> Ged
       DEC             Ged
       PUT_PROP        Gef,Gee,Ged
L0001: TEST_ATTR       G04,#1b [TRUE] L0002
       TEST_ATTR       G04,#1c [FALSE] L0016
L0002: GET_PROP        "rain clouds",#1a -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#37 [FALSE] L0003
       PRINT_RET       "
There is a sudden flash of lightning and a distant rumble of thunder, warning
of impending gloom."
L0003: JE              Gef,#28 [FALSE] L0004
       PRINT_RET       "
The wind picks up and the sky darkens as black rain-clouds appear on the
western horizon."
L0004: JE              Gef,#1e [FALSE] L0005
       PRINT_RET       "
Black cumulonimbus clouds tower over Skebdale to the north-west."
L0005: JE              Gef,#19 [FALSE] L0006
       PRINT_RET       "
A shadow falls over Skebdale as the clouds sweep in..."
L0006: JE              Gef,#16 [FALSE] L0009
       TEST_ATTR       G04,#1b [FALSE] L0007
       PRINT_RET       "
A few hailstones, the vanguard of the storm, patter gently on the windows."
L0007: TEST_ATTR       G04,#1c [FALSE] L0008
       PRINT_RET       "
Hailstones begin to fall to earth, melting on contact with the warm earth."
L0008: JUMP            L0016
L0009: JL              Gef,#10 [TRUE] L0012
       JG              Gef,#14 [TRUE] L0012
       TEST_ATTR       G04,#1b [FALSE] L0010
       PRINT_RET       "
The full brunt of the weather batters against the doors and windows, making you
glad that you are safe inside."
L0010: TEST_ATTR       G04,#1c [FALSE] L0011
       PRINT_RET       "
Sheets of hail lash down from the heavens, driven by a roaring westerly."
L0011: JUMP            L0016
L0012: JL              Gef,#02 [TRUE] L0015
       JG              Gef,#0f [TRUE] L0015
       TEST_ATTR       G04,#1c [FALSE] L0013
       PRINT_RET       "
The storm continues to batter unrelenting upon Skebdale."
L0013: TEST_ATTR       G04,#1b [FALSE] L0014
       PRINT_RET       "
The storm continues at full force outside."
L0014: JUMP            L0016
L0015: JE              Gef,#01 [FALSE] L0016
       RANDOM          #32 -> -(SP)
       ADD             #64,(SP)+ -> -(SP)
       PUT_PROP        "rain clouds",#1a,(SP)+
       PRINT_RET       "
The unusually violent storm suddenly dies and Skebdale is silent and peaceful
once more."
L0016: RFALSE          

Routine R0323, 0 locals

       JE              Ge9,#01 [FALSE] L0001
       PRINT_RET       "It's hard to pick up an accumulation of water vapour
half a mile above your head."
L0001: RFALSE          

Routine R0324, 0 locals

       JG              G02,#02 [FALSE] L0001
       STORE           G10,#03
L0001: JG              G03,#02 [FALSE] L0002
       STORE           G10,#04
L0002: RFALSE          

Routine R0325, 0 locals

       STORE           G04,#22
       INSERT_OBJ      "remote control",G0c
       INSERT_OBJ      "faxed note",G0c
       INSERT_OBJ      "briefcase","boot"
       CALL_2N         R0064 (#6e)
       CALL_2N         R0064 (#5d)
       CALL_2N         R0064 (#6d)
       CALL_1N         R0326
       PRINT_RET       "





This is the job that all men in white coats dream of...a potential epidemic.
The details were sparse but menacing - mysterious, unexplained deaths in the
isolated Dales village of Skebdale. The authorities had no choice but to send
you, their most experienced environmental health agent, to check things out.
Unfortunately it looks more like a job for Bond than for Herriot...
"

Routine R0326, 1 local

       ERASE_WINDOW    #ffff
       PRINT           "












"
       LOADB           #00,#21 -> L00
       JZ              L00 [FALSE] L0001
       STORE           L00,#50
L0001: SUB             L00,#32 -> -(SP)
       DIV             (SP)+,#02 -> L00
       SET_TEXT_STYLE  BOLDFACE
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       STORE           Gef,L00
       JL              Gef,#00 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: PRINT           "                     BSE
"
       SET_TEXT_STYLE  ROMAN
       PRINT           "

"
       STORE           Gef,L00
       JL              Gef,#00 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: PRINT           "          [Press SPACE if you dare...]
"
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       CALL_VS         R0379 (#1d,#1bbf) -> Gef
L0006: READ_CHAR       #01,#00,#00 -> L00
       JE              L00,#20,#0a,#0d [FALSE] L0006
       ERASE_WINDOW    #ffff
       RTRUE           

Routine R0327, 1 local

       SPLIT_WINDOW    #02
       SET_WINDOW      #01
       SET_TEXT_STYLE  REVERSE
       LOADB           #00,#21 -> L00
       JZ              L00 [FALSE] L0001
       STORE           L00,#50
L0001: SET_CURSOR      #01,#01
       STORE           Gef,L00
       JL              Gef,#00 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: SET_CURSOR      #02,#01
       STORE           Gef,L00
       JL              Gef,#00 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: SET_CURSOR      #01,#02
       CALL_2N         R0078 (G04)
       SET_CURSOR      #01,#3c
       PRINT           "Turns: "
       PRINT_NUM       G0b
       SET_CURSOR      #02,#3c
       PRINT           "Score: "
       PRINT_NUM       G0a
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       RTRUE           

Routine R0328, 0 locals

       JG              G00,#00 [FALSE] L0006
       JZ              G01 [FALSE] L0006
       LOADB           #1737,G00 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       STORE           Gef,G00
       JE              Gef,#01 [FALSE] L0001
       CALL_VS         R0379 (#32,#1bcd) -> Gef
       JUMP            L0005
L0001: JE              Gef,#02 [FALSE] L0002
       CALL_VS         R0379 (#1f,#1bd7) -> Gef
       JUMP            L0005
L0002: JE              Gef,#03 [FALSE] L0003
       CALL_VS         R0379 (#1e,#1bdf) -> Gef
       JUMP            L0005
L0003: JE              Gef,#04 [FALSE] L0004
       CALL_VS         R0379 (#29,#1be7) -> Gef
       JUMP            L0005
L0004: JE              Gef,#05 [FALSE] L0005
       CALL_VS         R0379 (#23,#1bf1) -> Gef
L0005: STOREB          #1737,G00,#01
L0006: STORE           G00,#00
       RTRUE           

Routine R0329, 1 local

       LOADB           #1b75,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       STOREB          #1b75,L00,#01
       LOADB           #1b60,L00 -> -(SP)
       ADD             G0a,(SP)+ -> G0a
L0001: RTRUE           

Routine R0330, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "finding a toy pistol."
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_RET       "changing a battery."
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "unlocking your own car."
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_RET       "loading a child's toy."
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_RET       "waking up a border collie."
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_RET       "rolling up a rug."
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_RET       "opening a trap-door."
L0007: JE              Gef,#07 [FALSE] L0008
       PRINT_RET       "overcoming a combination lock."
L0008: JE              Gef,#08 [FALSE] L0009
       PRINT_RET       "turning a rubber glove inside out."
L0009: JE              Gef,#09 [FALSE] L0010
       PRINT_RET       "fiddling a thick computer."
L0010: JE              Gef,#0a [FALSE] L0011
       PRINT_RET       "finding out the contents of the bottle."
L0011: JE              Gef,#0b [FALSE] L0012
       PRINT_RET       "making contact with agent 398-MugWug."
L0012: JE              Gef,#0c [FALSE] L0013
       PRINT_RET       "finding out what cans of beer are really for."
L0013: JE              Gef,#0d [FALSE] L0014
       PRINT_RET       "unlocking a tractor."
L0014: JE              Gef,#0e [FALSE] L0015
       PRINT_RET       "finding a sealed envelope."
L0015: JE              Gef,#0f [FALSE] L0016
       PRINT_RET       "plugging in an electric kettle."
L0016: JE              Gef,#10 [FALSE] L0017
       PRINT_RET       "steaming the envelope open."
L0017: JE              Gef,#11 [FALSE] L0018
       PRINT_RET       "reaching the ledge."
L0018: JE              Gef,#12 [FALSE] L0019
       PRINT_RET       "successfully navigating the maze."
L0019: JE              Gef,#13 [FALSE] L0020
       PRINT_RET       "destroying a litigious personification of evil."
L0020: JE              Gef,#14 [FALSE] L0021
       PRINT_RET       "surviving intact, along with your ego."
L0021: RTRUE           

Routine R0331, 0 locals

       PRINT           ", earning you the rank of "
       JL              G0a,#3c [TRUE] L0001
       PRINT_RET       "Saviour of the World."
L0001: JL              G0a,#32 [TRUE] L0002
       PRINT_RET       "Vet of the Year."
L0002: JL              G0a,#28 [TRUE] L0003
       PRINT_RET       "Silke the Psychic Sow."
L0003: JL              G0a,#1e [TRUE] L0004
       PRINT_RET       "Fred the frenetic Fresian."
L0004: JL              G0a,#14 [TRUE] L0005
       PRINT_RET       "Hetty the heifer."
L0005: JL              G0a,#0a [TRUE] L0006
       PRINT_RET       "Daisy the dyslexic dairy cow."
L0006: PRINT_RET       "Secretary of State for Agriculture."

Routine R0332, 0 locals

       RANDOM          #05 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       STORE           G10,#01
       PRINT_RET       "You lose your footing among the bales and slip, setting
off an avalanche of hay. You are buried alive, but not for long..."
L0001: RTRUE           

Routine R0333, 0 locals

       JE              G10,#03,#04 [TRUE] L0001
       JE              G10,#05,#06 [FALSE] L0006
L0001: PRINT           "
Suddenly the flying squad is upon you. Unmarked cars screech to a halt at your
feet, amphibious vehicles roll up, dripping slime, from the mere, sending ducks
flapping into the air, and Apache helicopters swoop down from the Pike,
missiles trained on your slightest movement. You are arrested, tried, found
guilty of "
       STORE           Gef,G10
       JE              Gef,#03 [FALSE] L0002
       PRINT           "countryside despoilment"
       JUMP            L0005
L0002: JE              Gef,#04 [FALSE] L0003
       PRINT           "disturbing the peace and quiet of Skebdale"
       JUMP            L0005
L0003: JE              Gef,#05 [FALSE] L0004
       PRINT           "leaving a gate wrongfully open"
       JUMP            L0005
L0004: JE              Gef,#06 [FALSE] L0005
       PRINT           "arson"
L0005: PRINT_RET       " and locked up in Broadmoor for an indefinite period of
time decided by some fascist Tory minister in the Home Office. In short, you
are well out of it.

"
L0006: RTRUE           

Routine R0334, 0 locals

       STORE           Gef,G10
       JE              Gef,#03,#04,#05 [TRUE] L0001
       JE              Gef,#06 [FALSE] L0002
L0001: PRINT           "You have failed abysmally."
L0002: RTRUE           

Routine R0335, 0 locals

       JZ              G73 [FALSE] L0001
       STORE           G71,#0b
       STORE           G72,S147
       RET             #06
L0001: JE              G73,#01 [FALSE] L0002
       STORE           G71,#0c
       STORE           G72,S148
L0002: JE              G73,#02 [FALSE] L0003
       STORE           G71,#08
       STORE           G72,S149
L0003: JE              G73,#03 [FALSE] L0004
       STORE           G71,#08
       STORE           G72,S150
L0004: JE              G73,#04 [FALSE] L0005
       STORE           G71,#06
       STORE           G72,S151
L0005: JE              G73,#05 [FALSE] L0006
       STORE           G71,#08
       STORE           G72,S152
L0006: JE              G73,#06 [FALSE] L0007
       STORE           G71,#0b
       STORE           G72,S153
L0007: RTRUE           

Routine R0336, 0 locals

       JZ              G73 [FALSE] L0001
       STORE           G71,#0b
       STORE           G72,S154
       RET             #04
L0001: JE              G73,#01 [FALSE] L0002
       STORE           G71,#04
       STORE           G72,S155
L0002: JE              G73,#02 [FALSE] L0003
       STORE           G71,#05
       STORE           G72,S156
L0003: JE              G73,#03 [FALSE] L0004
       STORE           G71,#03
       STORE           G72,S157
L0004: JE              G73,#04 [FALSE] L0005
       STORE           G71,#05
       STORE           G72,S158
L0005: RTRUE           

Routine R0337, 0 locals

       JE              G73,#01 [FALSE] L0001
       PRINT           "BSE is, as you might have worked out, an adventure game
of sorts. The plot is distinctly shaky and the puzzles extremely unlikely, but
it probably just scrapes through as interactive fiction.

The main character plays the part of some sort of secret agent/vet/health
inspector (I said the plot was shaky, didn't I?), and her task is to
investigate a mysterious outbreak of BSE or mad cow disease (for any foreigners
and/or zombies this is a uniquely British cattle disease caused, basically, by
gross stupidity) in the Yorkshire valley of Skebdale in the central Pennines.

However, the player should soon discover that there is far more to it than that
alone, and will end up running around Skebdale village like a headless chicken.
The alternative is to languish in the local pub, where, to keep your mind on
the game (or for simplicity of coding, to be honest) the barman has
mysteriously disappeared, and beer is unavailable. There you can chat briefly
to the men at the bar about such "
       PRINT           "pressing subjects as the merits of the local beer, but
you will not find them particularly lucid (see above).

It is also surprising how much is hidden around the mundane farmyards. Meet a
genuine Yorkshire sheepdog in all its enthusiasm, and try on one of those
classic sou'westers. One brief word of warning though: Follow the Country Code!
If you don't know it, you'll probably find it lying around...
"
L0001: JE              G73,#02 [FALSE] L0002
       CALL_VN         R0061 (S159,#450d,#47f2)
       RET             #02
L0002: JE              G73,#03 [FALSE] L0003
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Coding: Christopher Smith

"
       SET_TEXT_STYLE  ROMAN
       PRINT           "Lively, vivacious, intelligent, extrovert; all words
which fail to describe Christopher, aged 15. He is certainly not the best
programmer in the world, however the length and complexity of his coding, even
for the most simple of problems, must surely single him out as a future
Microsoft programmer. "
       PRINT           "If you find his games witty and humorous, get a life.
Go and read something decent, or, if this proves too expensive, write something
better yourself. Do not praise him, he will only get smug.

"
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Playtesting: Robert Smith

"
       SET_TEXT_STYLE  ROMAN
       PRINT           "Robert Smith, aged 18, has just completed his A-levels
in far too many subjects. He is probably not the most efficient playtester but
certainly romps home with a gold medal for most smug. "
       PRINT           "However, he has been helpful in allowing me to see the
game from an intellectual perspective different from my own (although we would
disagree over which one is higher).

"
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Modelling, Advice, and Support: Samuel Smith

"
       SET_TEXT_STYLE  ROMAN
       PRINT           "Samuel Smith was born in North Yorkshire, and having
served for a brief, high-ranking period in the army, moved to Great Broughton
where he retired to concentrate on his life-long love of hill-walking. He
spends most of his time eating, sleeping, and thinking about life. In short, he
is happy in his old age.

"
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Beta Testing

"
       SET_TEXT_STYLE  ROMAN
       PRINT           "Also thanks to Neil Brown, Martin Braun and
Dr.D.J.Picton for sending in bug reports to the address below.

"
       PRINT           "This adventure game was written for the 1996 Acorn User
Interactive Fiction Competition, and by an extraordinary fluke, won! "The
Wedding" by the aforementioned Neil Brown came second, and is, in my opinion,
exactly 42 times more enjoyable than BSE. Download it. Download it "
       SET_TEXT_STYLE  EMPHASIS
       PRINT           "now."
       SET_TEXT_STYLE  ROMAN
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "

Versions

"
       SET_TEXT_STYLE  ROMAN
       PRINT           "Version 1 - Acorn User release, issue 12/96. More
bug-riddled than a termite mound.
Version 2 - First internet release.
Version 3 - Loads of bugs changed into different, less obvious ones, and a few
actually fixed."
       PRINT           "

Any bug reports should be e-mailed to my brother at:
"
       PRINT           "        mros2@hermes.cam.ac.uk
"
       PRINT           "These will eventually find their way to me and I may
get around to amending the problems and re-releasing the game.
"
L0003: JE              G73,#04 [FALSE] L0004
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Legal Note

"
       SET_TEXT_STYLE  ROMAN
       PRINT           "BSE is copyright (c) Chris Smith 1996, but is freely
distributable provided no profit is made from it except to cover cost of
distribution, and provided that it is not modified in any way.

Any resemblance to real persons or bovines is purely coincidental.
"
L0004: RTRUE           

Routine R0338, 0 locals

       JE              G73,#01 [FALSE] L0001
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "The Formation of Skebdale
"
       SET_TEXT_STYLE  ROMAN
       PRINT_RET       "According to local legend, Skebdale was formed during
the last great Ice Age as a result of the grinding action of glacial migraines.
This may have lost something in the translation,but the evidence is still there
to be seen: a terminal migraine blocks Skebdale Beck downstream of the village,
forming the small (yet not insubstantial) lake of Skebmere. The locals have
always said that it is a headache to walk around the lake. This is probably not
irony."
L0001: JE              G73,#02 [FALSE] L0002
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Early History
"
       SET_TEXT_STYLE  ROMAN
       PRINT_RET       "Skebdale was first populated in the seventh century by
a group of monks, who built a wooden monastery on the site. The mere was
stocked with a variety of fish from the humble stickleback to the fierce pike.
The monks successfully farmed the lower slopes of the valley, and, due to their
habit of strip farming which confined their sheep to narrow strips of land
across the hillsides, caused the evolution of the famous Skebdale Mountain
Sheep."
L0002: JE              G73,#03 [FALSE] L0003
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "The Harrowing of the North
"
       SET_TEXT_STYLE  ROMAN
       PRINT_RET       "William the Conqueror's army arrived at Skebmere in
1070, with the firm intention of harrowing Skebdale as much as possible. They
set to it with a will and a way, and by the time the soldiers left they had
harrowed the whole of the flood plain using the monastery's single ox and
plough. This was a task which the few monks had never been able to achieve by
themselves, but in the newly ploughed soil they were able to plant vegetables
galore. This opening up of horticulture in Skebdale led to the large expansion
of the monastery in the 12th century."
L0003: JE              G73,#04 [FALSE] L0004
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "The Wars of the Roses
"
       SET_TEXT_STYLE  ROMAN
       PRINT_RET       "Skebdale was often in the thick of the Wars of the
Roses. The monks launched a gallant attempt to win the coveted "Britain in
Bloom" contest. The whole of Skebdale's slopes were planted with thick banks of
roses. The monks were clever though. By planting red roses at the west end of
the dale and white roses at the eastern end, they gained a series of 5.9s and
6.0s from both the Yorkist and Lancastrian judging panels, handing Skebdale the
title. That winter the Skebdale sheep developed an acquired taste for dead
roses..."
L0004: JE              G73,#05 [FALSE] L0005
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "The Dissolution of the Monasteries
"
       SET_TEXT_STYLE  ROMAN
       PRINT_RET       "When Henry VIII dissolved the monasteries in his
morning coffee there was panic in Skebdale. Monks were forced to give up their
ordinary living habits, and, having been cast naked into the wilderness, they
popped down to M&S for some new ones. Choosing a rather natty polka dot habit
design with double-chevron hood, they set out on a Pilgrimage of Disgrace to
London, where they founded Ye Olde Monstere Ravinge Loonie Partie. Henry
certainly found his morning coffee quite bitter: they fiercely contested the
Reformation and were eventually beheaded."
L0005: JE              G73,#06 [FALSE] L0006
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "The Civil War
"
       SET_TEXT_STYLE  ROMAN
       PRINT           "The Battle of Skebdale is little known but was one of
the most crushing battles of the English Civil War, in that neither side won. A
group of Cavaliers (sponsored by Lord Vauxhall) were camped in the valley near
to Skebdale Village when a party of Roundheads from the New Model Army
(sponsored by Sir Leg O'Land) swept into their camp at dawn. The fight was long
and bitter but was brought to an end when a pacifistic farmer ordered all of
his sheep, flocked on the hillside above, to turn around. The leg-bias of the
sheep meant that they all fell over and rolled rapidly down the hillside like a
woollen avalanche. Both armies were utterly defeated, the few survivors limping
into Skebmere to nurse their wounds.
"
L0006: RTRUE           

Routine R0339, 0 locals
    Action routine for:
        "furl up NOUN"
        "furl NOUN"

       PRINT_RET       "Haven't you anything better to waste your time on?"

Routine R0340, 0 locals
    Action routine for:
        "unfurl NOUN"

       PRINT_RET       "It is isn't rolled up, so how can you unroll it?"

Routine R0341, 0 locals
    Action routine for:
        "pat NOUN"

       PRINT_RET       "That would achieve little."

Routine R0342, 0 locals
    Action routine for:
        "point HELD at NOUN"

       PRINT_RET       "You achieve nothing by this, but gain a certain degree
of personal satisfaction in the undertaking."

Routine R0343, 0 locals
    Action routine for:
        "pour HELD"

       PRINT_RET       "That's a bit of a pour attempt."

Routine R0344, 0 locals
    Action routine for:
        "fire HELD at NOUN"
        "fire HELD into NOUN"
        "fire HELD in NOUN"

       PRINT_RET       "That's not a gun."

Routine R0345, 0 locals
    Action routine for:
        "fire NOUN with HELD"

       CALL_VN         R0058 (#61,G23,G22)
       RTRUE           

Routine R0346, 0 locals
    Action routine for:
        "fire NOUN"

       PRINT_RET       "[Use "shoot firearm at object" to shoot at things.]"

Routine R0347, 0 locals
    Action routine for:
        "rotate NOUN anticlock"
        "rotate NOUN left"

       TEST_ATTR       G22,#13 [FALSE] L0001
       PRINT_RET       "It is fixed in place."
L0001: TEST_ATTR       G22,#11 [FALSE] L0002
       PRINT_RET       "You are unable to."
L0002: PRINT_RET       "Nothing obvious happens."

Routine R0348, 0 locals
    Action routine for:
        "rotate NOUN clockwise"
        "rotate NOUN right"

       TEST_ATTR       G22,#13 [FALSE] L0001
       PRINT_RET       "It is fixed in place."
L0001: TEST_ATTR       G22,#11 [FALSE] L0002
       PRINT_RET       "You are unable to."
L0002: PRINT_RET       "Nothing obvious happens."

Routine R0349, 0 locals
    Action routine for:
        "plug in NOUN"
        "plug NOUN in"
        "plug NOUN into NOUN"
        "plug NOUN in NOUN"

       PRINT_RET       "You can't plug that here."

Routine R0350, 0 locals
    Action routine for:
        "unplug NOUN"

       PRINT_RET       "It's not plugged in."

Routine R0351, 0 locals
    Action routine for:
        "steam NOUN"
        "steam NOUN open"
        "steam open NOUN"

       PRINT_RET       "There's not enough steam around here to steam anything
like that."

Routine R0352, 0 locals
    Action routine for:
        "quotes"
        "quotes on"

       STORE           G01,#00
       PRINT_RET       "[ Quotes turned on.]"

Routine R0353, 0 locals
    Action routine for:
        "quotes off"

       STORE           G01,#01
       PRINT_RET       "[ Quotes turned off.]"

Routine R0354, 0 locals
    Action routine for:
        "rattle HELD"

       PRINT_RET       "You apply a shake equivalent to 6.4 on the Richter
scale, but nothing happens."

Routine R0355, 0 locals
    Action routine for:
        "fill NOUN"
        "fill NOUN with HELD"
        "fill NOUN from HELD"

       PRINT_RET       "There's not enough liquid here to fill anything."

Routine R0356, 0 locals
    Action routine for:
        "scan"
        "scan NOUN"

       PRINT_RET       "You don't have a scanner yourself."

Routine R0357, 0 locals
    Action routine for:
        "rotate NOUN inside-o"
        "rotate NOUN inside out"
        "reverse NOUN"

       PRINT_RET       "You can't easily turn that inside out."

Routine R0358, 0 locals
    Action routine for:
        "carry HELD up to NOUN"
        "carry HELD against NOUN"
        "carry HELD on NOUN"
        "clear HELD against NOUN"
        "clear HELD on NOUN"
        "clear HELD against NOUN"
        "clear HELD on NOUN"

       JG              G23,#01 [FALSE] L0002
       STORE           G1d,#0100
       CALL_VS         R0048 (G23,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G1d,#6d
       RTRUE           
L0001: STORE           G1d,#6d
L0002: PRINT_RET       "Nothing obvious happens."

Routine R0359, 0 locals
    Action routine for:
        "carry HELD above NOUN"

       PRINT_RET       "Nothing obvious happens."

Routine R0360, 0 locals
    Action routine for:
        "help"

       CALL_VN         R0061 (S160,#4523,#4533)
       RTRUE           

Routine R0361, 0 locals

       JE              G0a,#3c [FALSE] L0001
       PRINT           "A few allegedly amusing facts about BSE...

The note in the Altar Chamber can be reached and read - just try to destroy the
demonic pin using the toy pistol. Don't expect to understand the contents
though!

If you hadn't worked it out, the Demonic vassal at the end was called Denzil.
His earthly creators, Liz and Ned Brown, who bred him in the genetics lab
downstairs, named him after themselves, but with the names turned around.

Likewise if you hadn't worked it out, Samuel Smith, the 'Model' in the
Discredits on the help menu, is a dog, and the border collie was modelled on
him to a certain extent.
"
       JUMP            L0002
L0001: PRINT_RET       "You only get 'Amusing' if you score full points!
Sorry!"
L0002: RTRUE           

Routine R0362, 0 locals
    Action routine for:
        "win"

       PRINT_RET       "You'll have to do that by yourself!"

Routine R0363, 0 locals
    Parsing routine for:
        "go NOUN [parse 0]"

       JIN             G22,"compass" [TRUE] RTRUE
       RFALSE          

Routine R0364, 1 local
    Parsing routine for:
        "consult NOUN about TEXT [parse 2]"
        "consult NOUN on TEXT [parse 2]"
        "answer TEXT [parse 2] to CREATURE"
        "tell CREATURE about TEXT [parse 2]"
        "ask CREATURE about TEXT [parse 2]"

       STORE           G2c,G33
L0001: CALL_1S         R0037 -> L00
       JE              L00,#ffff [TRUE] L0002
       JE              L00,"to" [FALSE] L0001
       JE              G64,#02 [FALSE] L0001
L0002: DEC             G33
       SUB             G33,G2c -> G2d
       JZ              G2d [FALSE] L0003
       RET             #ffff
L0003: JE              G64,#03,#02,#05 [FALSE] L0005
       STORE           L00,G33
       STORE           G33,G2c
       CALL_1S         R0036 -> G26
       JE              G26,"the" [FALSE] L0004
       JG              G2d,#01 [FALSE] L0004
       CALL_1S         R0036 -> G26
L0004: STORE           G33,L00
       RTRUE           
L0005: RFALSE          

Routine R0365, 1 local
    Parsing routine for:
        "l up TEXT [parse 1] in NOUN"
        "read about TEXT [parse 1] in NOUN"
        "read TEXT [parse 1] in NOUN"

       STORE           G2c,G33
L0001: CALL_1S         R0037 -> L00
       JE              L00,"in",#ffff [FALSE] L0001
       JE              L00,#ffff [FALSE] L0002
       RET             #ffff
L0002: DEC             G33
       SUB             G33,G2c -> G2d
       JZ              G2d [FALSE] L0003
       RET             #ffff
L0003: RFALSE          

Routine R0366, 0 locals

       RFALSE          

Routine R0367, 0 locals

       RFALSE          

Routine R0368, 0 locals

       RFALSE          

Routine R0369, 0 locals

       RFALSE          

Routine R0370, 0 locals

       RFALSE          

Routine R0371, 0 locals

       RFALSE          

Routine R0372, 1 local

       RFALSE          

Routine R0373, 1 local

       RFALSE          

Routine R0374, 1 local

       RFALSE          

Routine R0375, 1 local

       RFALSE          

Routine R0376, 2 locals

       RFALSE          

Routine R0377, 2 locals

       RFALSE          

Routine R0378, 1 local

       STORE           L00,L00
       RET             #ffff

Routine R0379, 8 locals

       LOADW           L01,#00 -> L02
       ADD             L02,#06 -> -(SP)
       SPLIT_WINDOW    (SP)+
       SET_WINDOW      #01
       LOADB           #00,#21 -> L03
       JZ              L03 [FALSE] L0001
       STORE           L03,#50
L0001: SUB             L03,L00 -> -(SP)
       DIV             (SP)+,#02 -> L04
       SET_TEXT_STYLE  REVERSE
       SUB             L04,#02 -> L03
       STORE           L05,#05
       STORE           L06,#01
       SET_CURSOR      #04,L03
       ADD             L00,#04 -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#00 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: SET_CURSOR      L05,L03
       ADD             L00,#04 -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#00 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: SET_CURSOR      L05,L04
       LOADW           L01,L06 -> L07
       JZ              L07 [TRUE] L0006
       PRINT_PADDR     L07
L0006: INC             L05
       INC             L06
       JG              L06,L02 [FALSE] L0003
       SET_CURSOR      L05,L03
       ADD             L00,#04 -> -(SP)
       STORE           Gef,(SP)+
       JL              Gef,#00 [TRUE] L0008
L0007: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0007
L0008: BUFFER_MODE     #01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       SPLIT_WINDOW    #01
       OUTPUT_STREAM   #ffff
       PRINT           "[ "
       STORE           L06,#01
L0009: LOADW           L01,L06 -> L03
       JZ              L03 [TRUE] L0010
       PRINT_PADDR     L03
L0010: INC             L06
       JG              L06,L02 [FALSE] L0011
       PRINT           "]

"
       JUMP            L0012
L0011: PRINT           "
  "
       JZ              #00 [TRUE] L0009
L0012: OUTPUT_STREAM   OUTPUT_ENABLE
       RTRUE           

Routine R0380, 3 locals

       CALL_VS         R0381 (L00,L01) -> L02
       JZ              L02 [FALSE] L0002
       JL              L01,#01 [TRUE] L0001
       JL              L01,#40 [FALSE] L0001
       GET_PROP        L00,L01 -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0385 (S161,L00,L01)
       RTRUE           
L0002: LOADW           L02,#00 -> -(SP)
       RET_POPPED      

Routine R0381, 5 locals

       JL              L01,#40 [FALSE] L0001
       JG              L01,#00 [FALSE] L0001
       GET_PROP_ADDR   L00,L01 -> -(SP)
       RET_POPPED      
L0001: GET_PROP_ADDR   L00,#03 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L01,#01ff -> -(SP)
       LOADW           #14b3,(SP)+ -> L04
       GET_PROP_ADDR   L04,#03 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0384 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       AND             L01,#7e00 -> -(SP)
       DIV             (SP)+,#0200 -> L01
       GET_PROP        L04,#03 -> L02
L0002: JG              L01,#00 [FALSE] L0003
       DEC             L01
       LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0002
L0003: ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0004: JIN             L00,"Class" [FALSE] L0005
       JL              L01,#40 [TRUE] RFALSE
       JL              L01,#48 [FALSE] RFALSE
L0005: JE              Geb,L00 [FALSE] L0006
       OR              L01,#8000 -> L03
L0006: GET_PROP        L00,#03 -> L02
L0007: LOADW           L02,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       LOADW           L02,#00 -> -(SP)
       JE              (SP)+,L01,L03 [FALSE] L0008
       ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0008: LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0007
L0009: RFALSE          

Routine R0382, 3 locals

       JL              L01,#40 [FALSE] L0002
       JG              L01,#00 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       RET_POPPED      
L0002: CALL_VS         R0381 (L00,L01) -> L02
       JZ              L02 [TRUE] RFALSE
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       RET_POPPED      

Routine R0383, 2 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #016d,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0004
L0001: JE              L01,#46,#47,#45 [FALSE] RFALSE
       CALL_2S         R0386 (L00) -> -(SP)
       STORE           Gef,(SP)+
       JE              Gef,#02 [FALSE] L0002
       JE              L01,#45 [TRUE] RTRUE
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       JE              L01,#46,#47 [TRUE] RTRUE
L0003: RFALSE          
L0004: JL              L01,#40 [FALSE] L0005
       GET_PROP_ADDR   L00,L01 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          
L0005: CALL_VS         R0381 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JL              L01,#48 [FALSE] L0006
       JIN             L00,"Class" [TRUE] RTRUE
L0006: RFALSE          

Routine R0384, 5 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #016d,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0002
L0001: JE              L01,#03,#04 [FALSE] RFALSE
       SUB             L01,#01 -> -(SP)
       CALL_2S         R0386 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] RTRUE
       RFALSE          
L0002: STORE           Gef,L01
       JE              Gef,#01 [FALSE] L0003
       JG              L00,#04 [FALSE] RTRUE
       JIN             L00,"Class" [TRUE] RTRUE
       RFALSE          
L0003: JE              Gef,#02 [FALSE] L0004
       JG              L00,#04 [FALSE] RFALSE
       JIN             L00,"Class" [TRUE] RFALSE
       RTRUE           
L0004: JE              Gef,#03,#04 [FALSE] L0005
       RFALSE          
L0005: JIN             L01,"Class" [TRUE] L0006
       CALL_VN         R0385 (S162,L01,#ffff)
       RFALSE          
L0006: GET_PROP_ADDR   L00,#02 -> L03
       JZ              L03 [TRUE] RFALSE
       GET_PROP_ADDR   L00,#02 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: STORE           L04,Gef
       STORE           L02,#00
L0008: DIV             L04,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0009
       LOADW           L03,L02 -> -(SP)
       JE              (SP)+,L01 [TRUE] RTRUE
       INC             L02
       JUMP            L0008
L0009: RFALSE          

Routine R0385, 5 locals

       PRINT           "
** Run-time error: "
       JIN             L01,"Class" [FALSE] L0001
       PRINT           "Class "
L0001: PRINT_OBJ       L01
       PRINT           " (object number "
       PRINT_NUM       L01
       PRINT           ") "
       JL              L02,#00 [FALSE] L0002
       PRINT           "is not of class "
       SUB             #00,L02 -> -(SP)
       CALL_2N         R0078 ((SP)+)
       JUMP            L0004
L0002: PRINT           " has no property "
       CALL_2N         R0001 (L02)
       STORE           L04,#14c7
       LOADW           L04,#00 -> L03
       JL              L02,#00 [TRUE] L0003
       JL              L02,L03 [TRUE] L0004
L0003: PRINT           " (and nor has any other object)"
L0004: PRINT           " to "
       PRINT_PADDR     L00
       PRINT           " **
"
       RTRUE           

Routine R0386, 1 local

       JZ              L00 [TRUE] RFALSE
       JL              L00,#01 [TRUE] L0001
       SUB             #016d,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] RTRUE
L0001: CALL_VS         R0387 (L00,S001) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       RET             #03
L0002: CALL_VS         R0387 (L00,#0eb1) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       RET             #02
L0003: RFALSE          

Routine R0387, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

[End of code]

[Start of text]

S001: "BSE"
S002: "
An Interactive Epidemic
Copyright (c) 1996 by Chris Smith.
Type 'help' for...er...help.
Type 'quotes on/off' to toggle box quotations, in case they obscure text.
"
S003: "960429"
S004: "6/1"
S005: "a"
S006: "You can't go that way."
S007: "the"
S008: "the"
S009: "the"
S010: "the"
S011: "the"
S012: "the"
S013: "the"
S014: "the"
S015: "the"
S016: "the"
S017: "the"
S018: "the"
S019: "Darkness"
S020: "It is pitch dark, and you can't see a thing."
S021: "As good-looking as ever."
S022: "Nameless item"
S023: "your former self"
S024: "A fat, capacious briefcase, with plenty of space for notebook computers,
personal organisers and other useless gimmicks."
S025: "This single-roomed inn is dominated by a long bar, topped with perfectly
polished wood. The shelves behind the bar are stacked to breaking point with
sparkling glasses and inviting bottles. A single beer pump protrudes forlornly
from the bar at one end, but it is, unfortunately, un-manned, so you will have
to cope without a drink. A well-oiled wooden door leads south-east into the
street.

Old Tom, Old Dick, and Old Harry sit around the beer pump, whispering
conspiratorially."
S026: "A hunched old man in a tweed jacket and flat cap, smoking his pipe and
supping his pint."
S027: "A hunched old man in a tweed jacket and almost flat cap, smoking his
pint and supping his pipe."
S028: "The sealed can declares itself as:

 >>SIKSTONS' EXTREMELY PECULIAR<<"
S029: "The open and apparently empty can declares itself as:

 >>SIKSTONS' EXTREMELY PECULIAR<<"
S030: "an"
S031: "A small, complex brass key with a label tied to it."
S032: "A grubby piece of paper with a message scrawled on it:

Red Chevette: This Case opens here."
S033: "the road."
S034: "The gate is covered in several layers of peeling white gloss. Nailed to
the middle bar is a wooden notice announcing "Fliglot Farm - No Entry"."
S035: "The pub's sign depicts a light brown calf in a lush meadow, the grass
growing up around it and seeming to merge with it's feet. As you stare at it
the grass seems to wave in the breeze as the sign swings, but you blink and the
illusion disappears."
S036: "Dented from countless brushes with marauding cattle, your car looks
three times its age. In fact it is fitted out with all mod cons, including an
electric sunroof, in-car CD player, and remote locking system. (The latter
comes in very useful when escaping from marauding cattle.)"
S037: "Your car, a battered blue Volvo estate, is slewed across the grass
verge, two wheels in the ditch."
S038: "A spacious boot, almost big enough to hold a marauding bullock."
S039: "The statutory mantle worn by psychiatrists and mad laboratory
technicians. It has two conveniently large pockets."
S040: "Your key fob takes the form of a small model bull with a
disproportionately large ring through its nose. Wound around the ring are your
house and car keys, and a few other useful items."
S041: "A beautiful Yorkshire garden, full of mouth-watering fruits such as
parsnips, marrows and broccoli. This is more a vegetable garden than anything
else, but the border beds have been liberally scattered with a variety of hardy
perennials. To the east you can see a small unthreatening farmer's cottage."
S042: "You can't get inside the house."
S043: "The six-pronged garden fork seems to be quite expensive. The handle is
made of some sort of exotic, dark wood, and just below the triangular hand-hold
there is a small silver plaque, inscribed simply with a single ornamented
letter D."
S044: "A garden fork has been rammed disrespectfully into a steaming compost
heap in one corner of the garden."
S045: "The odd prickly bush or two - you've never really found gardening
interesting."
S046: "The generator consists of a panel on the gun's handle. It has a small
battery compartment and three buttons - blue, green, and yellow."
S047: "A small, round, lithium watch-battery, in its first flush of youth."
S048: "A round button, just waiting to be pressed."
S049: "He never bothers to prosecute trespassers: he has far better methods."
S050: "This wide rectangle of concrete is littered with the chaotic fallout of
everyday dairy farming. And its brown! The stark windows of the farmhouse stare
accusingly down into the yard from the north, and, to the east, the roof of the
main barn is outlined against the rising sun."
S051: "the farmyard."
S052: "The leaflet has been torn, mud-bespattered, and generally maltreated,
and as such you can make out very little, but it seems to cover topics as wide
ranging as sheep varieties, weather forecasting and the country code. It also
includes a badly typeset advert for a badly typeset computer game called 'LSE'
by Shirc Shimt."
S053: "A group of ordinary farmyard chickens, including the obligatory cockerel
with show-off red comb."
S054: "Most of the space in the east end of the farms high stone barn is taken
up by a huge haystack of rectangular bales, each of which is held together with
tough, plastic twine. Around the double doors rusty farm equipment, almost
inevitably infected with a potent range of bacteria, microbes, protozoa and
agriculture ministers, lies derelict and unused."
S055: "The haystack is in the way!"
S056: "the main barn."
S057: "A red and white tractor is parked next to the haystack."
S058: "The tractor was presumably new once (most things were), but its paint
has started to peel off, with bubbles of rust forming all over the bodywork.
The makers mark on the side reads simply 'Case International'."
S059: "The tractor's cabin roof, about as boring as they come."
S060: "A stack of hay, towering vertically upwards. Half-way up, just out of
reach, there is a small ledge."
S061: "an"
S062: "Sitting on the tractor's seat is a beige envelope."
S063: "A post-card showing a rolling vista of Yorkshire countryside, taken from
Skebdale Pike. A few unintelligible notes and messages have been scrawled on
the back in slightly smudged fountain pen:

message to red-chevette the cows are flying you will find guidance from the
circle that blocks your way follow the name of satan through the twisting way
he has joined with the animals the devil is daisy, daisy is Denzil destroy it
you will find the proof on the border of sleep you must remember to use silver
bullets"
S064: "You have to stoop on this tiny ledge in the side of the haystack,
cunningly roofed over with bales. Your vertigo quickly kicks in and the barn
floor seems to be a million miles away: downwards.

A thin dark passage leads westwards into the bales."
S065: "Thin, twisting passages lead off in all directions through the
haystack."
S066: "I'd get out of here if I was you."
S067: "A fallen hay bale blocks your way. I'm afraid this is a dead end."
S068: "There's only one way out, and that's where you came from."
S069: "This room is Gothic horror at its best. Dry, wooden torches burn
brightly in their rusty iron brackets, sending a flickering orange light
flashing around the high, vaulted stone rafters and dull granite flagstones.
The walls are daubed with unsightly scenes of scarlet terror and cruelty, and,
at the centre of this hexagonal cathedral of doom, a gigantic inverted cross
hangs in space, suspended by a criss-crossing web of thin, spider-like ropes
which lead ever upwards into the enormous arched roof. Sinister shadows are
cast onto the floor from the grotesque, twisted statuettes which stand on their
dark pedestals, seeming to writhe in the torchlight. Where the hell is this
place...

Any moment now you expect a nice man with horns and hooves to jump from the
shadows and discuss the afterlife, but, fortunately, there seem to be none of
those in today."
S070: "It depicts simply the head of a cow - but no ordinary heifer. Its ears
are long and pointed, its eyes narrow, and its nostrils wide and flaring-red.
The mouth is half-open in a Satanic grin, exposing double rows of carnivorous
teeth. You dread to look for fear of being ensnared in the deep, swirling,
whirling eyes..."
S071: "It's over-riding feature is that it is the wrong way up. However, just
for the record, it is made from two gigantic oak beams held together by two
enormously thick selotape straps."
S072: "The farm's hallway serves its purpose well. In other words, its the way
in. It leads up to a dark staircase, the northern end flanked by two low,
wooden doorframes. Along the west wall, there is a row of three or four wooden
pegs, underneath which is a delapidated welly rack."
S073: "You don't want to disturb the inhabitants privacy too much, and besides,
your scared of the dark."
S074: "You don't want to disturb the inhabitants privacy too much, and besides,
your scared of the dark."
S075: "the farm hallway."
S076: "A bright yellow floppy sou'wester hangs from one of the pegs, clashing
badly with the corridor's decor."
S077: "The sou'wester is dazzlingly yellow. Glowingly mustard-hued, no less."
S078: "A welly rack, made out of tough plastic-coated wire, screwed firmly into
the wall about a foot from the floor."
S079: "Built into the west wall under the pegs is an electric socket."
S080: "The farmhouse's lounge closely resembles a bomb site. An old sofa,
covered in ragged blankets and thin cushions, is positioned opposite a large TV
and a wide, open fireplace. The window, hung with clashing flowery curtains,
faces out onto the farmyard. A door in the east wall leads out to the hall."
S081: "the lounge."
S082: "The rug is even thicker than an agriculture minister."
S083: "Nothing but a square, boring trapdoor. There is no handle, only a row of
six small holes along one edge."
S084: "A dark staircase leads downwards from the open trapdoor."
S085: "There is a small trapdoor in front of the fireplace."
S086: "Painted in an uninspiring shade of pastel cream-gunk, the farmhouse
kitchen has evolved over time into a mixture of modern and ancient appliances
jumbled against the walls. Decorated with stains ranging from champagne to
tomato ketchup, the ceiling has obviously seen country life in all its glory."
S087: "The only way out is back west into the lounge."
S088: "Sitting on a table is a bright blue electric kettle."
S089: "A single rubber glove lies discarded upon the draining board."
S090: "A white rubber glove, turned inside out. The insides are stained by
leakages and a slow build up of dirt."
S091: "Hot, wet, and steamy."
S092: "This low, earth-hewn passage is cramped and dirty. Held up by crude
wooden props, it looks none too stable. The tunnel is quite short, only about
twenty metres in length. At the south-east end is the short stone staircase
which leads up to the trapdoor, while to the north-west is an enormous door."
S093: "An enormous, circular door, no doubt made of some extremely unlikely
space age metal which can only be cut using a knife blade forged in the core of
a red giant. Or something like that. There, right in the centre, is one of
those lock-cum-handle thingummybobs that you get on all good bank vaults."
S094: "The enormous door is more firmly shut than the main air-lock on Space
Shuttle Paranoia."
S095: "The enormous door hangs invitingly but threateningly open."
S096: "Z"
S097: "S"
S098: "L"
S099: "W"
S100: "I"
S101: "N"
S102: "D"
S103: "E"
S104: "Z"
S105: "S"
S106: "L"
S107: "W"
S108: "I"
S109: "N"
S110: "D"
S111: "E"
S112: "A shining white laboratory decked out with rows of pristine benches and
tables. Shelves full of ridiculous sounding biochemicals line the walls. The
room is windowless and lit only by fluorescent bulbs on the ceiling.

You can leave by the door to the south."
S113: "A wooden pinboard on one wall is covered in clippings from various
respected publications."
S114: "You can't have a proper adventure game these days without some special
sci-fi gadget. In this case it resembles a microwave oven. It also sports a row
of LEDs so it can flash them back and forth as it speaks in its predictably
sarcastic monotone. Whoever built this one was well au fait with current trends
and even painted a smiley face on the speaker. Lovely."
S115: "A dark grey light-sensing pad on one side of the gadget."
S116: "A beautifully styled black handset with an invitingly red button in the
middle. A small panel on the back allows you to change the battery."
S117: "A small, round, lithium watch-battery, charred almost out of recognition
and presumably run-down."
S118: "Your instructions from head office, scribbled untidily and faxed to you
without regard for legibility. Peering at the note you can only make out a few
words:

Reference: DCK 817S
Operation: Red-Chevette

Task: Agent 398-MUGWUG reports serious epidemic risk in Skebdale region of
Yorkshire. Agent claims cross-over risk of BSE without beef consumption. Use
operation codeword to gain contact, he will be lying low in disguise.

If possible also investigate allegations of widespread devil worship in
Skebdale area. Agent reports possible links."
S119: "some"
S120: "They're big, black, and horrible."
S121: "I never saw a Purple Cow,"
S122: "  I never hope to see one;"
S123: "But I can tell you, anyhow,"
S124: "  I'd rather see than be one!"
S125: ""
S126: "-- Gelett Burgess"
S127: ""When I am dead, I hope it may be said:"
S128: "'His sins were scarlet, but his books were read.'""
S129: ""
S130: "-- Hilaire Belloc"
S131: "By Thor!...By Odin!...By Gum..."
S132: ""
S133: "-- from Asterix and the Normans"
S134: "So that's what hay looks like."
S135: ""
S136: "-- Queen Mary"
S137: "Real people, as solid and ruddy and calm,"
S138: "As a London bus in the rain!"
S139: ""
S140: "-- Wendy Cope (Pastoral)"
S141: "Ah, yes! I wrote the 'Purple Cow' -"
S142: "  I'm sorry, now, I wrote it!"
S143: "But I can tell you anyhow,"
S144: "  I'll kill you if you quote it!"
S145: ""
S146: "-- Gelett Burgess"
S147: "The History of Skebdale"
S148: "The Geographical Headache"
S149: "Founding Fathers"
S150: "A Harrowing Tale"
S151: "Flower Power"
S152: "Dissolving Monks"
S153: "The Avalanche of Sheep"
S154: "A Medical Report on BSE"
S155: "Guidance"
S156: "Information"
S157: "Credits"
S158: "Legalities"
S159: "History of Skebdale up to 1650 - a Rough Guide

     The Formation of Skebdale
     Early History
     The Harrowing of the North
     The Wars of the Roses
     The Dissolution of the Monasteries
     The Civil War"
S160: "You have entered the misinformation superhighway...

     Misguidance
     Misinformation
     Discredits
     Illegalities
"
S161: "read"
S162: "apply 'ofclass' for"
S163: ""name""
S164: ""create""
S165: ""recreate""
S166: ""destroy""
S167: ""remaining""
S168: ""copy""
S169: ""call""
S170: ""print""
S171: ""print_to_array""
S172: ""before""
S173: ""after""
S174: ""life""
S175: ""n_to/door_to""
S176: ""s_to/when_closed/when_off""
S177: ""e_to/with_key""
S178: ""w_to/door_dir""
S179: ""ne_to/react_before""
S180: ""se_to/add_to_scope""
S181: ""nw_to/react_after""
S182: ""sw_to/list_together""
S183: ""u_to/invent""
S184: ""d_to/plural""
S185: ""in_to/grammar""
S186: ""out_to/orders""
S187: ""initial/when_open/when_on""
S188: ""description""
S189: ""describe""
S190: ""article""
S191: ""cant_go""
S192: ""found_in""
S193: ""time_left""
S194: ""number""
S195: ""time_out/daemon""
S196: ""each_turn""
S197: ""capacity""
S198: ""short_name""
S199: ""parse_name""
S200: ""liquid""
S201: ""move_name""

[End of text]

[End of file]
