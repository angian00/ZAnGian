Resident data ends at 6a30, program starts at 6a30, file ends at 21a18

Starting analysis pass at address 6a30

End of analysis pass, low address = 6a30, high address = 174de

[Start of code]

Main routine R0001, 0 locals

       CALL_VS         R0002 -> Gef
       QUIT            

Routine R0002, 0 locals

       CALL_VN         R0462 (#0016,#004b)
       RTRUE           

Routine R0003, 0 locals

       CALL_VS         R0467 (G00,#0048) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0462 (G00,#0048,Geb) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: CALL_VS         R0462 (Geb,#0048) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VN         R0285 (#00,#07,Geb)
       RFALSE          

Routine R0004, 0 locals

       RTRUE           

Routine R0005, 1 local

       CALL_VS         R0483 (L00,#00) -> -(SP)
       PULL            Gef
       JE              Gef,#61,#65,#69 [TRUE] L0001
       JE              Gef,#6f,#75,#41 [TRUE] L0001
       JE              Gef,#45,#49,#4f [TRUE] L0001
       JE              Gef,#55 [FALSE] L0002
L0001: RTRUE           
L0002: RFALSE          

Routine R0006, 1 local

       STORE           Gef,L00
       JE              Gef,#07 [FALSE] L0001
       PRINT           "north"
       JUMP            L0013
L0001: JE              Gef,#08 [FALSE] L0002
       PRINT           "south"
       JUMP            L0013
L0002: JE              Gef,#09 [FALSE] L0003
       PRINT           "east"
       JUMP            L0013
L0003: JE              Gef,#0a [FALSE] L0004
       PRINT           "west"
       JUMP            L0013
L0004: JE              Gef,#0b [FALSE] L0005
       PRINT           "northeast"
       JUMP            L0013
L0005: JE              Gef,#0c [FALSE] L0006
       PRINT           "northwest"
       JUMP            L0013
L0006: JE              Gef,#0d [FALSE] L0007
       PRINT           "southeast"
       JUMP            L0013
L0007: JE              Gef,#0e [FALSE] L0008
       PRINT           "southwest"
       JUMP            L0013
L0008: JE              Gef,#0f [FALSE] L0009
       PRINT           "up"
       JUMP            L0013
L0009: JE              Gef,#10 [FALSE] L0010
       PRINT           "down"
       JUMP            L0013
L0010: JE              Gef,#11 [FALSE] L0011
       PRINT           "in"
       JUMP            L0013
L0011: JE              Gef,#12 [FALSE] L0012
       PRINT           "out"
       JUMP            L0013
L0012: CALL_VS         R0151 (#09,L00) -> -(SP)
       RET_POPPED      
L0013: RTRUE           

Routine R0007, 2 locals

       JZ              L00 [FALSE] L0001
       PRINT           "zero"
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       PRINT           "minus "
       SUB             #00,L00 -> L00
L0002: JL              L00,#03e8 [TRUE] L0003
       DIV             L00,#03e8 -> -(SP)
       CALL_2N         R0007 ((SP)+)
       PRINT           " thousand"
       MOD             L00,#03e8 -> L00
       STORE           L01,#01
L0003: JL              L00,#64 [TRUE] L0005
       JE              L01,#01 [FALSE] L0004
       PRINT           ", "
L0004: DIV             L00,#64 -> -(SP)
       CALL_2N         R0007 ((SP)+)
       PRINT           " hundred"
       MOD             L00,#64 -> L00
       STORE           L01,#01
L0005: JZ              L00 [TRUE] RFALSE
       JE              L01,#01 [FALSE] L0006
       PRINT           " and "
L0006: STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0007
       PRINT           "one"
       JUMP            L0034
L0007: JE              Gef,#02 [FALSE] L0008
       PRINT           "two"
       JUMP            L0034
L0008: JE              Gef,#03 [FALSE] L0009
       PRINT           "three"
       JUMP            L0034
L0009: JE              Gef,#04 [FALSE] L0010
       PRINT           "four"
       JUMP            L0034
L0010: JE              Gef,#05 [FALSE] L0011
       PRINT           "five"
       JUMP            L0034
L0011: JE              Gef,#06 [FALSE] L0012
       PRINT           "six"
       JUMP            L0034
L0012: JE              Gef,#07 [FALSE] L0013
       PRINT           "seven"
       JUMP            L0034
L0013: JE              Gef,#08 [FALSE] L0014
       PRINT           "eight"
       JUMP            L0034
L0014: JE              Gef,#09 [FALSE] L0015
       PRINT           "nine"
       JUMP            L0034
L0015: JE              Gef,#0a [FALSE] L0016
       PRINT           "ten"
       JUMP            L0034
L0016: JE              Gef,#0b [FALSE] L0017
       PRINT           "eleven"
       JUMP            L0034
L0017: JE              Gef,#0c [FALSE] L0018
       PRINT           "twelve"
       JUMP            L0034
L0018: JE              Gef,#0d [FALSE] L0019
       PRINT           "thirteen"
       JUMP            L0034
L0019: JE              Gef,#0e [FALSE] L0020
       PRINT           "fourteen"
       JUMP            L0034
L0020: JE              Gef,#0f [FALSE] L0021
       PRINT           "fifteen"
       JUMP            L0034
L0021: JE              Gef,#10 [FALSE] L0022
       PRINT           "sixteen"
       JUMP            L0034
L0022: JE              Gef,#11 [FALSE] L0023
       PRINT           "seventeen"
       JUMP            L0034
L0023: JE              Gef,#12 [FALSE] L0024
       PRINT           "eighteen"
       JUMP            L0034
L0024: JE              Gef,#13 [FALSE] L0025
       PRINT           "nineteen"
       JUMP            L0034
L0025: JL              Gef,#14 [TRUE] L0034
       JG              Gef,#63 [TRUE] L0034
       DIV             L00,#0a -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0026
       PRINT           "twenty"
       JUMP            L0033
L0026: JE              Gef,#03 [FALSE] L0027
       PRINT           "thirty"
       JUMP            L0033
L0027: JE              Gef,#04 [FALSE] L0028
       PRINT           "forty"
       JUMP            L0033
L0028: JE              Gef,#05 [FALSE] L0029
       PRINT           "fifty"
       JUMP            L0033
L0029: JE              Gef,#06 [FALSE] L0030
       PRINT           "sixty"
       JUMP            L0033
L0030: JE              Gef,#07 [FALSE] L0031
       PRINT           "seventy"
       JUMP            L0033
L0031: JE              Gef,#08 [FALSE] L0032
       PRINT           "eighty"
       JUMP            L0033
L0032: JE              Gef,#09 [FALSE] L0033
       PRINT           "ninety"
L0033: MOD             L00,#0a -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       PRINT           "-"
       MOD             L00,#0a -> -(SP)
       CALL_2N         R0007 ((SP)+)
L0034: RTRUE           

Routine R0008, 3 locals

       MOD             L00,#0c -> L02
       JZ              L02 [FALSE] L0001
       STORE           L02,#0c
L0001: JL              L02,#0a [FALSE] L0002
       PRINT           " "
L0002: PRINT_NUM       L02
       PRINT           ":"
       DIV             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       MOD             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       DIV             L00,#0c -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       PRINT           " pm"
       JUMP            L0004
L0003: PRINT           " am"
L0004: RTRUE           

Routine R0009, 1 local

       STORE           Gef,L00
       JE              Gef,"i","inv","inventory" [FALSE] L0001
       PRINT           "take inventory"
       JUMP            L0005
L0001: JE              Gef,"l" [FALSE] L0002
       PRINT           "look"
       JUMP            L0005
L0002: JE              Gef,"x" [FALSE] L0003
       PRINT           "examine"
       JUMP            L0005
L0003: JE              Gef,"z" [FALSE] L0004
       PRINT           "wait"
       JUMP            L0005
L0004: RFALSE          
L0005: RTRUE           

Routine R0010, 1 local

       JE              L00,"look","go","push" [TRUE] RTRUE
       JE              L00,"walk" [TRUE] RTRUE
       RFALSE          

Routine R0011, 1 local

       JE              L00,"long","short",S020 OR "normal" [TRUE] RTRUE
       JE              L00,"brief","full","verbose" [TRUE] RTRUE
       RFALSE          

Routine R0012, 1 local

       JE              L00,G16 [FALSE] L0001
       PRINT           "you"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#1e [FALSE] L0004
       PRINT           "those"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#00 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1c [FALSE] L0009
       PRINT           "her"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1d [TRUE] L0013
L0012: PRINT           "him"
       RTRUE           
L0013: PRINT           "that"
       RTRUE           

Routine R0013, 1 local

       JE              L00,G16 [FALSE] L0001
       PRINT           "yourself"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#1e [FALSE] L0004
       PRINT           "them"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#00 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1c [FALSE] L0009
       PRINT           "her"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1d [TRUE] L0013
L0012: PRINT           "him"
       RTRUE           
L0013: PRINT           "it"
       RTRUE           

Routine R0014, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#1e [TRUE] L0004
L0003: JE              L00,G16 [FALSE] L0005
L0004: PRINT           "are"
       JUMP            L0006
L0005: PRINT           "is"
L0006: RTRUE           

Routine R0015, 1 local

       JE              L00,G16 [FALSE] L0001
       PRINT           "You"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#1e [FALSE] L0004
       PRINT           "Those"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#00 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1c [FALSE] L0009
       PRINT           "She"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1d [TRUE] L0013
L0012: PRINT           "He"
       RTRUE           
L0013: PRINT           "That"
       RTRUE           

Routine R0016, 1 local

       JE              L00,G16 [FALSE] L0001
       PRINT           "You're"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#1e [FALSE] L0004
       PRINT           "They're"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#00 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1c [FALSE] L0009
       PRINT           "She's"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1d [TRUE] L0013
L0012: PRINT           "He's"
       RTRUE           
L0013: PRINT           "That's"
       RTRUE           

Routine R0017, 2 locals

       JE              Ge9,#01,#02 [FALSE] L0001
       PRINT_RET       "There is no reply."
L0001: JE              Ge9,#03 [FALSE] L0002
       PRINT_PADDR     S045
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#04 [FALSE] L0003
       PRINT           "You can't usefully blow "
       CALL_2N         R0012 (L01)
       PRINT_RET       "."
L0003: JE              Ge9,#05 [FALSE] L0004
       PRINT_PADDR     S046
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#06 [FALSE] L0005
       PRINT_RET       "Nothing is on sale."
L0005: JE              Ge9,#07 [FALSE] L0006
       PRINT_PADDR     S047
       NEW_LINE        
       RTRUE           
L0006: JE              Ge9,#08 [FALSE] L0010
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0007
       CALL_2N         R0016 (L01)
       PRINT_RET       " not something you can close."
L0007: JE              Gef,#02 [FALSE] L0008
       CALL_2N         R0016 (L01)
       PRINT_RET       " already closed."
L0008: JE              Gef,#03 [FALSE] L0009
       PRINT           "You close "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0009: RTRUE           
L0010: JE              Ge9,#09 [FALSE] L0012
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0011
       PRINT_RET       "[Command recording off.]"
L0011: RTRUE           
L0012: JE              Ge9,#0a [FALSE] L0014
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0013
       PRINT_RET       "[Command recording on.]"
L0013: RTRUE           
L0014: JE              Ge9,#0b [FALSE] L0016
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0015
       PRINT_RET       "[Replaying commands.]"
L0015: RTRUE           
L0016: JE              Ge9,#0c [FALSE] L0017
       PRINT_PADDR     S048
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0017: JE              Ge9,#0d [FALSE] L0018
       PRINT           "Cutting "
       CALL_2N         R0012 (L01)
       PRINT_RET       " up would achieve little."
L0018: JE              Ge9,#0e [FALSE] L0019
       PRINT_PADDR     S049
       NEW_LINE        
       RTRUE           
L0019: JE              Ge9,#0f [FALSE] L0022
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0020
       PRINT           "You're not wearing "
       CALL_2N         R0012 (L01)
       PRINT_RET       "."
L0020: JE              Gef,#02 [FALSE] L0021
       PRINT           "You take off "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0021: RTRUE           
L0022: JE              Ge9,#10 [FALSE] L0023
       PRINT_PADDR     S050
       NEW_LINE        
       RTRUE           
L0023: JE              Ge9,#11 [FALSE] L0032
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0028
       JG              #01,L01 [TRUE] L0024
       JG              L01,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#03,L01)
       JUMP            L0026
L0025: TEST_ATTR       L01,#1e [FALSE] L0026
       CALL_2N         R0138 (L01)
       PRINT           " are "
       JUMP            L0027
L0026: CALL_2N         R0138 (L01)
       PRINT           " is "
L0027: PRINT_RET       "already here."
L0028: JE              Gef,#02 [FALSE] L0029
       PRINT           "You haven't got "
       CALL_2N         R0012 (L01)
       PRINT_RET       "."
L0029: JE              Gef,#03 [FALSE] L0030
       PRINT           "(first taking "
       CALL_2N         R0137 (L01)
       PRINT_RET       " off)"
L0030: JE              Gef,#04 [FALSE] L0031
       PRINT_RET       "Dropped."
L0031: RTRUE           
L0032: JE              Ge9,#12 [FALSE] L0035
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0033
       CALL_2N         R0016 (L01)
       PRINT_RET       " plainly inedible."
L0033: JE              Gef,#02 [FALSE] L0034
       PRINT           "You eat "
       CALL_2N         R0137 (L01)
       PRINT_RET       ". Not bad."
L0034: RTRUE           
L0035: JE              Ge9,#13 [FALSE] L0040
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0036
       CALL_2N         R0138 (L01)
       PRINT_RET       " can't contain things."
L0036: JE              Gef,#02 [FALSE] L0037
       CALL_2N         R0138 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       " closed."
L0037: JE              Gef,#03 [FALSE] L0038
       CALL_2N         R0138 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       " empty already."
L0038: JE              Gef,#04 [FALSE] L0039
       PRINT_PADDR     S051
       NEW_LINE        
       RTRUE           
L0039: RTRUE           
L0040: JE              Ge9,#14 [FALSE] L0073
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0045
       PRINT           "But you're already "
       JG              #01,L01 [TRUE] L0041
       JG              L01,#0114 [FALSE] L0042
L0041: CALL_VN         R0470 (#03,L01)
       JUMP            L0043
L0042: TEST_ATTR       L01,#14 [FALSE] L0043
       PRINT           "on "
       JUMP            L0044
L0043: PRINT           "in "
L0044: CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0045: JE              Gef,#02 [FALSE] L0053
       JG              #01,L01 [TRUE] L0046
       JG              L01,#0114 [FALSE] L0047
L0046: CALL_VN         R0470 (#03,L01)
       JUMP            L0048
L0047: TEST_ATTR       L01,#1e [FALSE] L0048
       PRINT           "They're"
       JUMP            L0049
L0048: PRINT           "That's"
L0049: PRINT           " not something you can "
       STORE           Gef,G82
       JE              Gef,"stand" [FALSE] L0050
       PRINT_RET       "stand on."
L0050: JE              Gef,"sit" [FALSE] L0051
       PRINT_RET       "sit down on."
L0051: JE              Gef,"lie" [FALSE] L0052
       PRINT_RET       "lie down on."
L0052: PRINT_RET       "enter."
       JUMP            L0072
L0053: JE              Gef,#03 [FALSE] L0054
       PRINT           "You can't get into the closed "
       CALL_2N         R0139 (L01)
       PRINT_RET       "."
L0054: JE              Gef,#04 [FALSE] L0055
       PRINT_PADDR     S052
       NEW_LINE        
       RTRUE           
L0055: JE              Gef,#05 [FALSE] L0060
       PRINT           "You get "
       JG              #01,L01 [TRUE] L0056
       JG              L01,#0114 [FALSE] L0057
L0056: CALL_VN         R0470 (#03,L01)
       JUMP            L0058
L0057: TEST_ATTR       L01,#14 [FALSE] L0058
       PRINT           "onto "
       JUMP            L0059
L0058: PRINT           "into "
L0059: CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0060: JE              Gef,#06 [FALSE] L0065
       PRINT           "(getting "
       JG              #01,L01 [TRUE] L0061
       JG              L01,#0114 [FALSE] L0062
L0061: CALL_VN         R0470 (#03,L01)
       JUMP            L0063
L0062: TEST_ATTR       L01,#14 [FALSE] L0063
       PRINT           "off "
       JUMP            L0064
L0063: PRINT           "out of "
L0064: CALL_2N         R0137 (L01)
       PRINT_RET       ")"
L0065: JE              Gef,#07 [FALSE] L0072
       JG              #01,L01 [TRUE] L0066
       JG              L01,#0114 [FALSE] L0067
L0066: CALL_VN         R0470 (#03,L01)
       JUMP            L0068
L0067: TEST_ATTR       L01,#14 [FALSE] L0068
       PRINT           "(getting onto "
       CALL_2N         R0137 (L01)
       PRINT_RET       ")
"
L0068: JG              #01,L01 [TRUE] L0069
       JG              L01,#0114 [FALSE] L0070
L0069: CALL_VN         R0470 (#03,L01)
       JUMP            L0071
L0070: TEST_ATTR       L01,#04 [FALSE] L0071
       PRINT           "(getting into "
       CALL_2N         R0137 (L01)
       PRINT_RET       ")
"
L0071: PRINT           "(entering "
       CALL_2N         R0137 (L01)
       PRINT_RET       ")
"
L0072: RTRUE           
L0073: JE              Ge9,#15 [FALSE] L0080
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0074
       PRINT_PADDR     S053
       NEW_LINE        
       RTRUE           
L0074: JE              Gef,#02 [FALSE] L0075
       PRINT           "You see nothing special about "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0075: JE              Gef,#03 [FALSE] L0079
       CALL_2N         R0138 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT           " currently switched "
       JG              #01,L01 [TRUE] L0076
       JG              L01,#0114 [FALSE] L0077
L0076: CALL_VN         R0470 (#03,L01)
       JUMP            L0078
L0077: TEST_ATTR       L01,#0d [FALSE] L0078
       PRINT_RET       "on."
L0078: PRINT_RET       "off."
L0079: RTRUE           
L0080: JE              Ge9,#16 [FALSE] L0093
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0081
       PRINT_PADDR     S054
       NEW_LINE        
       RTRUE           
L0081: JE              Gef,#02 [FALSE] L0082
       PRINT           "You can't get out of the closed "
       CALL_2N         R0139 (L01)
       PRINT_RET       "."
L0082: JE              Gef,#03 [FALSE] L0087
       PRINT           "You get "
       JG              #01,L01 [TRUE] L0083
       JG              L01,#0114 [FALSE] L0084
L0083: CALL_VN         R0470 (#03,L01)
       JUMP            L0085
L0084: TEST_ATTR       L01,#14 [FALSE] L0085
       PRINT           "off "
       JUMP            L0086
L0085: PRINT           "out of "
L0086: CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0087: JE              Gef,#04 [FALSE] L0092
       PRINT           "But you aren't "
       JG              #01,L01 [TRUE] L0088
       JG              L01,#0114 [FALSE] L0089
L0088: CALL_VN         R0470 (#03,L01)
       JUMP            L0090
L0089: TEST_ATTR       L01,#14 [FALSE] L0090
       PRINT           "on "
       JUMP            L0091
L0090: PRINT           "in "
L0091: CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0092: RTRUE           
L0093: JE              Ge9,#17 [FALSE] L0094
       PRINT_PADDR     S055
       NEW_LINE        
       RTRUE           
L0094: JE              Ge9,#18 [FALSE] L0101
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0097
       JZ              G17 [TRUE] L0095
       PRINT           "The score was "
       JUMP            L0096
L0095: PRINT           "The score is "
L0096: PRINT_RET       "made up as follows:
"
L0097: JE              Gef,#02 [FALSE] L0098
       PRINT_RET       "finding sundry items"
L0098: JE              Gef,#03 [FALSE] L0099
       PRINT_RET       "visiting various places"
L0099: JE              Gef,#04 [FALSE] L0100
       PRINT           "total (out of "
       PRINT_NUM       #015e
       PRINT_RET       ")"
L0100: RTRUE           
L0101: JE              Ge9,#19 [FALSE] L0102
       PRINT           "But you aren't on "
       CALL_2N         R0137 (L01)
       PRINT_RET       " at the moment."
L0102: JE              Ge9,#1a [FALSE] L0110
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0103
       PRINT           "You aren't holding "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0103: JE              Gef,#02 [FALSE] L0104
       PRINT           "You juggle "
       CALL_2N         R0137 (L01)
       PRINT_PADDR     S056
       NEW_LINE        
       RTRUE           
L0104: JE              Gef,#03 [FALSE] L0109
       CALL_2N         R0138 (L01)
       JG              #01,L01 [TRUE] L0105
       JG              L01,#0114 [FALSE] L0106
L0105: CALL_VN         R0470 (#03,L01)
       JUMP            L0107
L0106: TEST_ATTR       L01,#1e [FALSE] L0107
       PRINT           " don't"
       JUMP            L0108
L0107: PRINT           " doesn't"
L0108: PRINT_RET       " seem interested."
L0109: RTRUE           
L0110: JE              Ge9,#1b [FALSE] L0124
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0115
       PRINT           "You'll have to get "
       JG              #01,L01 [TRUE] L0111
       JG              L01,#0114 [FALSE] L0112
L0111: CALL_VN         R0470 (#03,L01)
       JUMP            L0113
L0112: TEST_ATTR       L01,#14 [FALSE] L0113
       PRINT           "off "
       JUMP            L0114
L0113: PRINT           "out of "
L0114: CALL_2N         R0137 (L01)
       PRINT_RET       " first."
L0115: JE              Gef,#02 [FALSE] L0116
       CALL_2N         R0489 (S028)
       NEW_LINE        
       RTRUE           
L0116: JE              Gef,#03 [FALSE] L0117
       PRINT           "You are unable to climb "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0117: JE              Gef,#04 [FALSE] L0118
       PRINT           "You are unable to descend by "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0118: JE              Gef,#05 [FALSE] L0119
       PRINT           "You can't, since "
       CALL_2N         R0137 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       " in the way."
L0119: JE              Gef,#06 [FALSE] L0123
       PRINT           "You can't, since "
       CALL_2N         R0137 (L01)
       JG              #01,L01 [TRUE] L0120
       JG              L01,#0114 [FALSE] L0121
L0120: CALL_VN         R0470 (#03,L01)
       JUMP            L0122
L0121: TEST_ATTR       L01,#1e [FALSE] L0122
       PRINT_RET       " lead nowhere."
L0122: PRINT_RET       " leads nowhere."
L0123: RTRUE           
L0124: JE              Ge9,#1c [FALSE] L0134
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0125
       PRINT           "You need to be holding "
       CALL_2N         R0137 (L01)
       PRINT           " before you can put "
       CALL_2N         R0013 (L01)
       PRINT_RET       " into something else."
L0125: JE              Gef,#02 [FALSE] L0126
       CALL_2N         R0015 (L01)
       PRINT_RET       " can't contain things."
L0126: JE              Gef,#03 [FALSE] L0127
       CALL_2N         R0138 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       " closed."
L0127: JE              Gef,#04 [FALSE] L0128
       PRINT           "You'll need to take "
       CALL_2N         R0013 (L01)
       PRINT_RET       " off first."
L0128: JE              Gef,#05 [FALSE] L0129
       PRINT_PADDR     S057
       NEW_LINE        
       RTRUE           
L0129: JE              Gef,#06 [FALSE] L0130
       PRINT           "(first taking "
       CALL_2N         R0013 (L01)
       PRINT_RET       " off)
"
L0130: JE              Gef,#07 [FALSE] L0131
       PRINT           "There is no more room in "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0131: JE              Gef,#08 [FALSE] L0132
       PRINT_RET       "Done."
L0132: JE              Gef,#09 [FALSE] L0133
       PRINT           "You put "
       CALL_2N         R0137 (L01)
       PRINT           " into "
       CALL_2N         R0137 (G36)
       PRINT_RET       "."
L0133: RTRUE           
L0134: JE              Ge9,#1d [FALSE] L0139
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0135
       PRINT_RET       "You are carrying nothing."
L0135: JE              Gef,#02 [FALSE] L0136
       PRINT           "You are carrying"
       JUMP            L0138
L0136: JE              Gef,#03 [FALSE] L0137
       PRINT           ":
"
       JUMP            L0138
L0137: JE              Gef,#04 [FALSE] L0138
       PRINT           ".
"
L0138: RTRUE           
L0139: JE              Ge9,#1e [FALSE] L0140
       PRINT_PADDR     S058
       NEW_LINE        
       RTRUE           
L0140: JE              Ge9,#1f,#20 [FALSE] L0141
       PRINT_PADDR     S059
       NEW_LINE        
       RTRUE           
L0141: JE              Ge9,#21 [FALSE] L0142
       PRINT_RET       "Keep your mind on the game."
L0142: JE              Ge9,#22 [FALSE] L0143
       PRINT_RET       "You hear nothing unexpected."
L0143: JE              Ge9,#1006 [FALSE] L0166
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0144
       PRINT           " (providing light)"
       JUMP            L0165
L0144: JE              Gef,#02 [FALSE] L0145
       PRINT           " (which "
       CALL_2N         R0014 (L01)
       PRINT           " closed)"
       JUMP            L0165
L0145: JE              Gef,#03 [FALSE] L0146
       PRINT           " (closed and providing light)"
       JUMP            L0165
L0146: JE              Gef,#04 [FALSE] L0147
       PRINT           " (which "
       CALL_2N         R0014 (L01)
       PRINT           " empty)"
       JUMP            L0165
L0147: JE              Gef,#05 [FALSE] L0148
       PRINT           " (empty and providing light)"
       JUMP            L0165
L0148: JE              Gef,#06 [FALSE] L0149
       PRINT           " (which "
       CALL_2N         R0014 (L01)
       PRINT           " closed and empty)"
       JUMP            L0165
L0149: JE              Gef,#07 [FALSE] L0150
       PRINT_PADDR     S060
       JUMP            L0165
L0150: JE              Gef,#08 [FALSE] L0151
       PRINT           " (providing light and being worn"
       JUMP            L0165
L0151: JE              Gef,#09 [FALSE] L0152
       PRINT           " (providing light"
       JUMP            L0165
L0152: JE              Gef,#0a [FALSE] L0153
       PRINT           " (being worn"
       JUMP            L0165
L0153: JE              Gef,#0b [FALSE] L0154
       PRINT           " (which "
       CALL_2N         R0014 (L01)
       PRINT           " "
       JUMP            L0165
L0154: JE              Gef,#0c [FALSE] L0155
       PRINT           "open"
       JUMP            L0165
L0155: JE              Gef,#0d [FALSE] L0156
       PRINT           "open but empty"
       JUMP            L0165
L0156: JE              Gef,#0e [FALSE] L0157
       PRINT           "closed"
       JUMP            L0165
L0157: JE              Gef,#0f [FALSE] L0158
       PRINT           "closed and locked"
       JUMP            L0165
L0158: JE              Gef,#10 [FALSE] L0159
       PRINT           " and empty"
       JUMP            L0165
L0159: JE              Gef,#11 [FALSE] L0160
       PRINT           " (which "
       CALL_2N         R0014 (L01)
       PRINT           " empty)"
       JUMP            L0165
L0160: JE              Gef,#12 [FALSE] L0161
       PRINT           " containing "
       JUMP            L0165
L0161: JE              Gef,#13 [FALSE] L0162
       PRINT           " (on "
       JUMP            L0165
L0162: JE              Gef,#14 [FALSE] L0163
       PRINT           ", on top of "
       JUMP            L0165
L0163: JE              Gef,#15 [FALSE] L0164
       PRINT           " (in "
       JUMP            L0165
L0164: JE              Gef,#16 [FALSE] L0165
       PRINT           ", inside "
L0165: RTRUE           
L0166: JE              Ge9,#23 [FALSE] L0167
       PRINT_PADDR     S061
       NEW_LINE        
       RTRUE           
L0167: JE              Ge9,#24 [FALSE] L0168
       PRINT_PADDR     S062
       NEW_LINE        
       RTRUE           
L0168: JE              Ge9,#25 [FALSE] L0169
       PRINT_PADDR     S063
       NEW_LINE        
       RTRUE           
L0169: JE              Ge9,#26 [FALSE] L0183
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0174
       JG              #01,L01 [TRUE] L0170
       JG              L01,#0114 [FALSE] L0171
L0170: CALL_VN         R0470 (#03,L01)
       JUMP            L0172
L0171: TEST_ATTR       L01,#1e [FALSE] L0172
       PRINT           "They don't "
       JUMP            L0173
L0172: PRINT           "That doesn't "
L0173: PRINT_PADDR     S064
       NEW_LINE        
       RTRUE           
L0174: JE              Gef,#02 [FALSE] L0175
       CALL_2N         R0016 (L01)
       PRINT_RET       " locked at the moment."
L0175: JE              Gef,#03 [FALSE] L0176
       PRINT           "First you'll have to close "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0176: JE              Gef,#04 [FALSE] L0181
       JG              #01,L01 [TRUE] L0177
       JG              L01,#0114 [FALSE] L0178
L0177: CALL_VN         R0470 (#03,L01)
       JUMP            L0179
L0178: TEST_ATTR       L01,#1e [FALSE] L0179
       PRINT           "Those don't "
       JUMP            L0180
L0179: PRINT           "That doesn't "
L0180: PRINT_RET       "seem to fit the lock."
L0181: JE              Gef,#05 [FALSE] L0182
       PRINT           "You lock "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0182: RTRUE           
L0183: JE              Ge9,#00 [FALSE] L0206
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0184
       PRINT           " (on "
       CALL_2N         R0137 (L01)
       PRINT           ")"
       JUMP            L0205
L0184: JE              Gef,#02 [FALSE] L0185
       PRINT           " (in "
       CALL_2N         R0137 (L01)
       PRINT           ")"
       JUMP            L0205
L0185: JE              Gef,#03 [FALSE] L0186
       PRINT           " (as "
       CALL_2N         R0490 (L01)
       PRINT           ")"
       JUMP            L0205
L0186: JE              Gef,#04 [FALSE] L0191
       PRINT           "
On "
       CALL_2N         R0137 (L01)
       ADD             #0008,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       JG              #05,L01 [TRUE] L0187
       JG              L01,#0114 [TRUE] L0187
       JIN             L01,"Class" [FALSE] L0188
L0187: CALL_VN         R0470 (#06,L01)
       STORE           Gee,#02
       JUMP            L0189
L0188: STORE           Gee,L01
L0189: GET_CHILD       Gee -> -(SP) [FALSE] L0190
L0190: CALL_VN         R0158 ((SP)+,(SP)+)
       PRINT_RET       "."
L0191: JE              Gef,#05,#06 [FALSE] L0204
       JE              L01,G00 [TRUE] L0196
       JG              #01,L01 [TRUE] L0192
       JG              L01,#0114 [FALSE] L0193
L0192: CALL_VN         R0470 (#03,L01)
       JUMP            L0194
L0193: TEST_ATTR       L01,#14 [FALSE] L0194
       PRINT           "
On "
       JUMP            L0195
L0194: PRINT           "
In "
L0195: CALL_2N         R0137 (L01)
       PRINT           " you"
       JUMP            L0197
L0196: PRINT           "
You"
L0197: PRINT           " can "
       JE              L00,#05 [FALSE] L0198
       PRINT           "also "
L0198: PRINT           "see "
       ADD             #0008,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       ADD             (SP)+,#0200 -> -(SP)
       JG              #05,L01 [TRUE] L0199
       JG              L01,#0114 [TRUE] L0199
       JIN             L01,"Class" [FALSE] L0200
L0199: CALL_VN         R0470 (#06,L01)
       STORE           Gee,#02
       JUMP            L0201
L0200: STORE           Gee,L01
L0201: GET_CHILD       Gee -> -(SP) [FALSE] L0202
L0202: CALL_VN         R0158 ((SP)+,(SP)+)
       JE              L01,G00 [TRUE] L0203
       PRINT_RET       "."
L0203: PRINT_RET       " here."
       JUMP            L0205
L0204: JE              Gef,#07 [FALSE] L0205
       PRINT_PADDR     S065
       NEW_LINE        
       RTRUE           
L0205: RTRUE           
L0206: JE              Ge9,#27 [FALSE] L0209
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0207
       PRINT_RET       "But it's dark."
L0207: JE              Gef,#02 [FALSE] L0208
       PRINT_RET       "You find nothing of interest."
L0208: RTRUE           
L0209: JE              Ge9,#28 [FALSE] L0210
       PRINT_RET       "Quite."
L0210: JE              Ge9,#1007 [FALSE] L0279
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0211
       PRINT_PADDR     S066
       NEW_LINE        
       RTRUE           
L0211: JE              Gef,#02 [FALSE] L0212
       PRINT_RET       "Nothing to do!"
L0212: JE              Gef,#03 [FALSE] L0213
       PRINT           " You have died "
       JUMP            L0278
L0213: JE              Gef,#04 [FALSE] L0214
       PRINT           " You have won "
       JUMP            L0278
L0214: JE              Gef,#05 [FALSE] L0217
       PRINT_PADDR     S067
       JZ              #0001 [FALSE] L0215
       PRINT_PADDR     S068
L0215: JE              G17,#02 [FALSE] L0216
       JZ              #01 [TRUE] L0216
       PRINT_PADDR     S069
L0216: PRINT_RET       " or QUIT?"
L0217: JE              Gef,#06 [FALSE] L0218
       PRINT_PADDR     S070
       NEW_LINE        
       RTRUE           
L0218: JE              Gef,#07 [FALSE] L0219
       PRINT_PADDR     S071
       NEW_LINE        
       RTRUE           
L0219: JE              Gef,#08 [FALSE] L0220
       PRINT_PADDR     S072
       NEW_LINE        
       RTRUE           
L0220: JE              Gef,#09 [FALSE] L0221
       PRINT_RET       "
It is now pitch dark in here!"
L0221: JE              Gef,#0a [FALSE] L0222
       PRINT_RET       "I beg your pardon?"
L0222: JE              Gef,#0b [FALSE] L0223
       PRINT_PADDR     S073
       NEW_LINE        
       RTRUE           
L0223: JE              Gef,#0c [FALSE] L0224
       PRINT_PADDR     S074
       NEW_LINE        
       RTRUE           
L0224: JE              Gef,#0d [FALSE] L0225
       PRINT_RET       "[Previous turn undone.]"
L0225: JE              Gef,#0e [FALSE] L0226
       PRINT_RET       "Sorry, that can't be corrected."
L0226: JE              Gef,#0f [FALSE] L0227
       PRINT_RET       "Think nothing of it."
L0227: JE              Gef,#10 [FALSE] L0228
       PRINT_PADDR     S075
       NEW_LINE        
       RTRUE           
L0228: JE              Gef,#11 [FALSE] L0229
       PRINT_PADDR     S076
       NEW_LINE        
       RTRUE           
L0229: JE              Gef,#12 [FALSE] L0230
       PRINT           "yourself"
       JUMP            L0278
L0230: JE              Gef,#13 [FALSE] L0231
       PRINT_RET       "As good-looking as ever."
L0231: JE              Gef,#14 [FALSE] L0232
       PRINT_PADDR     S077
       NEW_LINE        
       RTRUE           
L0232: JE              Gef,#15 [FALSE] L0233
       PRINT_RET       "You can hardly repeat that."
L0233: JE              Gef,#16 [FALSE] L0234
       PRINT_RET       "You can't begin with a comma."
L0234: JE              Gef,#17 [FALSE] L0235
       PRINT_PADDR     S078
       NEW_LINE        
       RTRUE           
L0235: JE              Gef,#18 [FALSE] L0236
       PRINT           "You can't talk to "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0236: JE              Gef,#19 [FALSE] L0237
       PRINT_PADDR     S079
       NEW_LINE        
       RTRUE           
L0237: JE              Gef,#1a [FALSE] L0238
       PRINT           "(first taking "
       CALL_2N         R0137 (G4b)
       PRINT_RET       ")"
L0238: JE              Gef,#1b [FALSE] L0239
       PRINT_PADDR     S080
       NEW_LINE        
       RTRUE           
L0239: JE              Gef,#1c [FALSE] L0240
       PRINT_PADDR     S081
       JUMP            L0278
L0240: JE              Gef,#1d [FALSE] L0241
       PRINT_RET       "I didn't understand that number."
L0241: JE              Gef,#1e [FALSE] L0242
       PRINT_RET       "You can't see any such thing."
L0242: JE              Gef,#1f [FALSE] L0243
       PRINT_PADDR     S082
       NEW_LINE        
       RTRUE           
L0243: JE              Gef,#20 [FALSE] L0244
       PRINT_RET       "You aren't holding that!"
L0244: JE              Gef,#21 [FALSE] L0245
       PRINT_PADDR     S083
       NEW_LINE        
       RTRUE           
L0245: JE              Gef,#22 [FALSE] L0246
       PRINT_PADDR     S084
       NEW_LINE        
       RTRUE           
L0246: JE              Gef,#23 [FALSE] L0247
       PRINT           "I'm not sure what ""
       CALL_2N         R0488 (G70)
       PRINT_RET       "" refers to."
L0247: JE              Gef,#24 [FALSE] L0248
       PRINT_PADDR     S085
       NEW_LINE        
       RTRUE           
L0248: JE              Gef,#25 [FALSE] L0249
       PRINT_PADDR     S086
       NEW_LINE        
       RTRUE           
L0249: JE              Gef,#26 [FALSE] L0250
       PRINT_RET       "That's not a verb I recognise."
L0250: JE              Gef,#27 [FALSE] L0251
       PRINT_PADDR     S087
       NEW_LINE        
       RTRUE           
L0251: JE              Gef,#28 [FALSE] L0252
       PRINT           "You can't see ""
       CALL_2N         R0488 (G70)
       PRINT           "" ("
       CALL_2N         R0137 (G71)
       PRINT_RET       ") at the moment."
L0252: JE              Gef,#29 [FALSE] L0253
       PRINT_PADDR     S088
       NEW_LINE        
       RTRUE           
L0253: JE              Gef,#2a [FALSE] L0258
       JZ              L01 [FALSE] L0254
       PRINT           "None"
       JUMP            L0255
L0254: PRINT           "Only "
       CALL_2N         R0140 (L01)
L0255: PRINT           " of those "
       JE              L01,#01 [FALSE] L0256
       PRINT           "is"
       JUMP            L0257
L0256: PRINT           "are"
L0257: PRINT_RET       " available."
L0258: JE              Gef,#2b [FALSE] L0259
       PRINT_RET       "Nothing to do!"
L0259: JE              Gef,#2c [FALSE] L0260
       PRINT_RET       "There are none at all available!"
L0260: JE              Gef,#2d [FALSE] L0261
       PRINT           "Who do you mean, "
       JUMP            L0278
L0261: JE              Gef,#2e [FALSE] L0262
       PRINT           "Which do you mean, "
       JUMP            L0278
L0262: JE              Gef,#2f [FALSE] L0263
       PRINT_PADDR     S089
       NEW_LINE        
       RTRUE           
L0263: JE              Gef,#30 [FALSE] L0265
       PRINT           "Whom do you want"
       JE              G3f,G16 [TRUE] L0264
       PRINT           " "
       CALL_2N         R0137 (G3f)
L0264: PRINT           " to "
       CALL_1N         R0045
       PRINT           "?
"
       JUMP            L0278
L0265: JE              Gef,#31 [FALSE] L0267
       PRINT           "What do you want"
       JE              G3f,G16 [TRUE] L0266
       PRINT           " "
       CALL_2N         R0137 (G3f)
L0266: PRINT           " to "
       CALL_1N         R0045
       PRINT           "?
"
       JUMP            L0278
L0267: JE              Gef,#32 [FALSE] L0271
       PRINT           "Your score has just gone "
       JG              L01,#00 [FALSE] L0268
       PRINT           "up"
       JUMP            L0269
L0268: SUB             #00,L01 -> L01
       PRINT           "down"
L0269: PRINT           " by "
       CALL_2N         R0140 (L01)
       PRINT           " point"
       JG              L01,#01 [FALSE] L0270
       PRINT           "s"
L0270: JUMP            L0278
L0271: JE              Gef,#33 [FALSE] L0272
       PRINT_PADDR     S090
       NEW_LINE        
       RTRUE           
L0272: JE              Gef,#34 [FALSE] L0273
       PRINT           "
Type a number from 1 to "
       PRINT_NUM       L01
       PRINT_RET       ", 0 to redisplay or press ENTER."
L0273: JE              Gef,#35 [FALSE] L0274
       PRINT_RET       "
[Please press SPACE.]"
L0274: JE              Gef,#36 [FALSE] L0275
       PRINT_RET       "[Comment recorded.]"
L0275: JE              Gef,#37 [FALSE] L0276
       PRINT_RET       "[Comment NOT recorded.]"
L0276: JE              Gef,#38 [FALSE] L0277
       PRINT           ".
"
       JUMP            L0278
L0277: JE              Gef,#39 [FALSE] L0278
       PRINT           "?
"
L0278: RTRUE           
L0279: JE              Ge9,#29,#2a [FALSE] L0280
       PRINT_RET       "That was a rhetorical question."
L0280: JE              Ge9,#2b [FALSE] L0281
       PRINT_RET       "Score notification off."
L0281: JE              Ge9,#2c [FALSE] L0282
       PRINT_RET       "Score notification on."
L0282: JE              Ge9,#2d [FALSE] L0293
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0283
       PRINT_RET       "Objects you have handled:
"
L0283: JE              Gef,#02 [FALSE] L0284
       PRINT_RET       "None."
L0284: JE              Gef,#03 [FALSE] L0285
       PRINT           "   (worn)"
       JUMP            L0292
L0285: JE              Gef,#04 [FALSE] L0286
       PRINT           "   (held)"
       JUMP            L0292
L0286: JE              Gef,#05 [FALSE] L0287
       PRINT           "   (given away)"
       JUMP            L0292
L0287: JE              Gef,#06 [FALSE] L0288
       PRINT           "   (in "
       CALL_2N         R0139 (L01)
       PRINT           ")"
       JUMP            L0292
L0288: JE              Gef,#07 [FALSE] L0289
       PRINT           "   (in "
       CALL_2N         R0137 (L01)
       PRINT           ")"
       JUMP            L0292
L0289: JE              Gef,#08 [FALSE] L0290
       PRINT           "   (inside "
       CALL_2N         R0137 (L01)
       PRINT           ")"
       JUMP            L0292
L0290: JE              Gef,#09 [FALSE] L0291
       PRINT           "   (on "
       CALL_2N         R0137 (L01)
       PRINT           ")"
       JUMP            L0292
L0291: JE              Gef,#0a [FALSE] L0292
       PRINT           "   (lost)"
L0292: RTRUE           
L0293: JE              Ge9,#2e [FALSE] L0308
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0294
       CALL_2N         R0016 (L01)
       PRINT_RET       " not something you can open."
L0294: JE              Gef,#02 [FALSE] L0299
       JG              #01,L01 [TRUE] L0295
       JG              L01,#0114 [FALSE] L0296
L0295: CALL_VN         R0470 (#03,L01)
       JUMP            L0297
L0296: TEST_ATTR       L01,#1e [FALSE] L0297
       PRINT           "They seem "
       JUMP            L0298
L0297: PRINT           "It seems "
L0298: PRINT_RET       "to be locked."
L0299: JE              Gef,#03 [FALSE] L0300
       CALL_2N         R0016 (L01)
       PRINT_RET       " already open."
L0300: JE              Gef,#04 [FALSE] L0306
       PRINT           "You open "
       CALL_2N         R0137 (L01)
       PRINT           ", revealing "
       ADD             #0008,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       JG              #05,L01 [TRUE] L0301
       JG              L01,#0114 [TRUE] L0301
       JIN             L01,"Class" [FALSE] L0302
L0301: CALL_VN         R0470 (#06,L01)
       STORE           Gee,#02
       JUMP            L0303
L0302: STORE           Gee,L01
L0303: GET_CHILD       Gee -> -(SP) [FALSE] L0304
L0304: CALL_VS         R0158 ((SP)+,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0305
       PRINT_RET       "nothing."
L0305: PRINT_RET       "."
L0306: JE              Gef,#05 [FALSE] L0307
       PRINT           "You open "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0307: RTRUE           
L0308: JE              Ge9,#1003 [FALSE] L0313
       CALL_2N         R0138 (L01)
       JG              #01,L01 [TRUE] L0309
       JG              L01,#0114 [FALSE] L0310
L0309: CALL_VN         R0470 (#03,L01)
       JUMP            L0311
L0310: TEST_ATTR       L01,#1e [FALSE] L0311
       PRINT           " have"
       JUMP            L0312
L0311: PRINT           " has"
L0312: PRINT_RET       " better things to do."
L0313: JE              Ge9,#2f [FALSE] L0316
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0314
       PRINT           "You have visited: "
       JUMP            L0315
L0314: JE              Gef,#02 [FALSE] L0315
       PRINT           ".
"
L0315: RTRUE           
L0316: JE              Ge9,#30 [FALSE] L0317
       PRINT_PADDR     S091
       NEW_LINE        
       RTRUE           
L0317: JE              Ge9,#1008 [FALSE] L0318
       PRINT           "
>"
       RTRUE           
L0318: JE              Ge9,#31 [FALSE] L0324
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0319
       PRINT           "At the moment, "
       JUMP            L0323
L0319: JE              Gef,#02 [FALSE] L0320
       PRINT           "means "
       JUMP            L0323
L0320: JE              Gef,#03 [FALSE] L0321
       PRINT           "is unset"
       JUMP            L0323
L0321: JE              Gef,#04 [FALSE] L0322
       PRINT_PADDR     S092
       NEW_LINE        
       RTRUE           
L0322: JE              Gef,#05 [FALSE] L0323
       PRINT_RET       "."
L0323: RTRUE           
L0324: JE              Ge9,#32,#33,#34 [FALSE] L0333
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0329
       JG              #01,L01 [TRUE] L0325
       JG              L01,#0114 [FALSE] L0326
L0325: CALL_VN         R0470 (#03,L01)
       JUMP            L0327
L0326: TEST_ATTR       L01,#1e [FALSE] L0327
       PRINT           "Those are "
       JUMP            L0328
L0327: PRINT           "It is "
L0328: PRINT_RET       "fixed in place."
L0329: JE              Gef,#02 [FALSE] L0330
       PRINT_RET       "You are unable to."
L0330: JE              Gef,#03 [FALSE] L0331
       PRINT_RET       "Nothing obvious happens."
L0331: JE              Gef,#04 [FALSE] L0332
       PRINT_PADDR     S093
       NEW_LINE        
       RTRUE           
L0332: RTRUE           
L0333: JE              Ge9,#35 [FALSE] L0337
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0334
       PRINT_PADDR     S094
       NEW_LINE        
       RTRUE           
L0334: JE              Gef,#02 [FALSE] L0335
       PRINT_RET       "That's not a direction."
L0335: JE              Gef,#03 [FALSE] L0336
       PRINT_RET       "Not that way you can't."
L0336: RTRUE           
L0337: JE              Ge9,#36 [FALSE] L0346
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0338
       PRINT           "You need to be holding "
       CALL_2N         R0137 (L01)
       PRINT           " before you can put "
       CALL_2N         R0013 (L01)
       PRINT_RET       " on top of something else."
L0338: JE              Gef,#02 [FALSE] L0339
       PRINT_PADDR     S095
       NEW_LINE        
       RTRUE           
L0339: JE              Gef,#03 [FALSE] L0340
       PRINT           "Putting things on "
       CALL_2N         R0137 (L01)
       PRINT_RET       " would achieve nothing."
L0340: JE              Gef,#04 [FALSE] L0341
       PRINT_RET       "You lack the dexterity."
L0341: JE              Gef,#05 [FALSE] L0342
       PRINT           "(first taking "
       CALL_2N         R0013 (L01)
       PRINT_RET       " off)
"
L0342: JE              Gef,#06 [FALSE] L0343
       PRINT           "There is no more room on "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0343: JE              Gef,#07 [FALSE] L0344
       PRINT_RET       "Done."
L0344: JE              Gef,#08 [FALSE] L0345
       PRINT           "You put "
       CALL_2N         R0137 (L01)
       PRINT           " on "
       CALL_2N         R0137 (G36)
       PRINT_RET       "."
L0345: RTRUE           
L0346: JE              Ge9,#37 [FALSE] L0349
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0347
       PRINT           "Please answer yes or no."
       JUMP            L0348
L0347: JE              Gef,#02 [FALSE] L0348
       PRINT           "Are you sure you want to quit? "
L0348: RTRUE           
L0349: JE              Ge9,#38 [FALSE] L0361
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0354
       JG              #01,L01 [TRUE] L0350
       JG              L01,#0114 [FALSE] L0351
L0350: CALL_VN         R0470 (#03,L01)
       JUMP            L0352
L0351: TEST_ATTR       L01,#1e [FALSE] L0352
       PRINT           "They are"
       JUMP            L0353
L0352: PRINT           "It is"
L0353: PRINT_RET       " unfortunately closed."
L0354: JE              Gef,#02 [FALSE] L0359
       JG              #01,L01 [TRUE] L0355
       JG              L01,#0114 [FALSE] L0356
L0355: CALL_VN         R0470 (#03,L01)
       JUMP            L0357
L0356: TEST_ATTR       L01,#1e [FALSE] L0357
       PRINT           "But they aren't"
       JUMP            L0358
L0357: PRINT           "But it isn't"
L0358: PRINT_RET       " there now."
L0359: JE              Gef,#03 [FALSE] L0360
       PRINT_RET       "Removed."
L0360: RTRUE           
L0361: JE              Ge9,#39 [FALSE] L0364
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0362
       PRINT_PADDR     S096
       JUMP            L0363
L0362: JE              Gef,#02 [FALSE] L0363
       PRINT_RET       "Failed."
L0363: RTRUE           
L0364: JE              Ge9,#3a [FALSE] L0367
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0365
       PRINT_RET       "Restore failed."
L0365: JE              Gef,#02 [FALSE] L0366
       PRINT_RET       "Ok."
L0366: RTRUE           
L0367: JE              Ge9,#3b [FALSE] L0368
       PRINT_RET       "You achieve nothing by this."
L0368: JE              Ge9,#3c [FALSE] L0371
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0369
       PRINT_RET       "Save failed."
L0369: JE              Gef,#02 [FALSE] L0370
       PRINT_RET       "Ok."
L0370: RTRUE           
L0371: JE              Ge9,#3d [FALSE] L0377
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0375
       JZ              G17 [TRUE] L0372
       PRINT           "In that game you scored "
       JUMP            L0373
L0372: PRINT           "You have so far scored "
L0373: PRINT_NUM       G11
       PRINT           " out of a possible "
       PRINT_NUM       #015e
       PRINT           ", in "
       PRINT_NUM       G0c
       PRINT           " turn"
       JE              G0c,#01 [TRUE] L0374
       PRINT           "s"
L0374: RTRUE           
L0375: JE              Gef,#02 [FALSE] L0376
       PRINT_RET       "There is no score in this story."
L0376: RTRUE           
L0377: JE              Ge9,#3e [FALSE] L0381
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0378
       PRINT_RET       "Transcripting is already off."
L0378: JE              Gef,#02 [FALSE] L0379
       PRINT_RET       "
End of transcript."
L0379: JE              Gef,#03 [FALSE] L0380
       PRINT_PADDR     S097
       NEW_LINE        
       RTRUE           
L0380: RTRUE           
L0381: JE              Ge9,#3f [FALSE] L0385
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0382
       PRINT_RET       "Transcripting is already on."
L0382: JE              Gef,#02 [FALSE] L0383
       PRINT_RET       "Start of a transcript of"
L0383: JE              Gef,#03 [FALSE] L0384
       PRINT_PADDR     S098
       NEW_LINE        
       RTRUE           
L0384: RTRUE           
L0385: JE              Ge9,#40 [FALSE] L0401
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0386
       PRINT_RET       "But it's dark."
L0386: JE              Gef,#02 [FALSE] L0387
       PRINT           "There is nothing on "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0387: JE              Gef,#03 [FALSE] L0392
       PRINT           "On "
       CALL_2N         R0137 (L01)
       ADD             #0008,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       JG              #05,L01 [TRUE] L0388
       JG              L01,#0114 [TRUE] L0388
       JIN             L01,"Class" [FALSE] L0389
L0388: CALL_VN         R0470 (#06,L01)
       STORE           Gee,#02
       JUMP            L0390
L0389: STORE           Gee,L01
L0390: GET_CHILD       Gee -> -(SP) [FALSE] L0391
L0391: CALL_VN         R0158 ((SP)+,(SP)+)
       PRINT_RET       "."
L0392: JE              Gef,#04 [FALSE] L0393
       PRINT_RET       "You find nothing of interest."
L0393: JE              Gef,#05 [FALSE] L0394
       PRINT           "You can't see inside, since "
       CALL_2N         R0137 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       " closed."
L0394: JE              Gef,#06 [FALSE] L0395
       CALL_2N         R0138 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       " empty."
L0395: JE              Gef,#07 [FALSE] L0400
       PRINT           "In "
       CALL_2N         R0137 (L01)
       ADD             #0008,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       JG              #05,L01 [TRUE] L0396
       JG              L01,#0114 [TRUE] L0396
       JIN             L01,"Class" [FALSE] L0397
L0396: CALL_VN         R0470 (#06,L01)
       STORE           Gee,#02
       JUMP            L0398
L0397: STORE           Gee,L01
L0398: GET_CHILD       Gee -> -(SP) [FALSE] L0399
L0399: CALL_VN         R0158 ((SP)+,(SP)+)
       PRINT_RET       "."
L0400: RTRUE           
L0401: JE              Ge9,#41 [FALSE] L0402
       PRINT           "No, you can't set "
       CALL_2N         R0012 (L01)
       PRINT_RET       "."
L0402: JE              Ge9,#42 [FALSE] L0403
       PRINT           "No, you can't set "
       CALL_2N         R0012 (L01)
       PRINT_RET       " to anything."
L0403: JE              Ge9,#43 [FALSE] L0406
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0404
       PRINT           "You aren't holding "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0404: JE              Gef,#02 [FALSE] L0405
       CALL_2N         R0138 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       " unimpressed."
L0405: RTRUE           
L0406: JE              Ge9,#44 [FALSE] L0407
       PRINT_RET       "Your singing is abominable."
L0407: JE              Ge9,#45 [FALSE] L0408
       PRINT_PADDR     S099
       NEW_LINE        
       RTRUE           
L0408: JE              Ge9,#46 [FALSE] L0409
       PRINT_RET       "You smell nothing unexpected."
L0409: JE              Ge9,#47 [FALSE] L0410
       PRINT_RET       "Oh, don't apologise."
L0410: JE              Ge9,#48 [FALSE] L0413
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0411
       PRINT_RET       "Keep your hands to yourself."
L0411: JE              Gef,#02 [FALSE] L0412
       PRINT_RET       "You achieve nothing by this."
L0412: RTRUE           
L0413: JE              Ge9,#49 [FALSE] L0414
       PRINT_PADDR     S100
       NEW_LINE        
       RTRUE           
L0414: JE              Ge9,#4a [FALSE] L0415
       PRINT_PADDR     S101
       NEW_LINE        
       RTRUE           
L0415: JE              Ge9,#4b [FALSE] L0416
       PRINT_PADDR     S102
       NEW_LINE        
       RTRUE           
L0416: JE              Ge9,#4c [FALSE] L0420
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0417
       CALL_2N         R0016 (L01)
       PRINT_RET       " not something you can switch."
L0417: JE              Gef,#02 [FALSE] L0418
       CALL_2N         R0016 (L01)
       PRINT_RET       " already off."
L0418: JE              Gef,#03 [FALSE] L0419
       PRINT           "You switch "
       CALL_2N         R0137 (L01)
       PRINT_RET       " off."
L0419: RTRUE           
L0420: JE              Ge9,#4d [FALSE] L0424
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0421
       CALL_2N         R0016 (L01)
       PRINT_RET       " not something you can switch."
L0421: JE              Gef,#02 [FALSE] L0422
       CALL_2N         R0016 (L01)
       PRINT_RET       " already on."
L0422: JE              Gef,#03 [FALSE] L0423
       PRINT           "You switch "
       CALL_2N         R0137 (L01)
       PRINT_RET       " on."
L0423: RTRUE           
L0424: JE              Ge9,#4e [FALSE] L0458
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0425
       PRINT_RET       "Taken."
L0425: JE              Gef,#02 [FALSE] L0426
       PRINT_RET       "You are always self-possessed."
L0426: JE              Gef,#03 [FALSE] L0427
       PRINT           "I don't suppose "
       CALL_2N         R0137 (L01)
       PRINT_RET       " would care for that."
L0427: JE              Gef,#04 [FALSE] L0432
       PRINT           "You'd have to get "
       JG              #01,L01 [TRUE] L0428
       JG              L01,#0114 [FALSE] L0429
L0428: CALL_VN         R0470 (#03,L01)
       JUMP            L0430
L0429: TEST_ATTR       L01,#14 [FALSE] L0430
       PRINT           "off "
       JUMP            L0431
L0430: PRINT           "out of "
L0431: CALL_2N         R0137 (L01)
       PRINT_RET       " first."
L0432: JE              Gef,#05 [FALSE] L0433
       PRINT           "You already have "
       CALL_2N         R0012 (L01)
       PRINT_RET       "."
L0433: JE              Gef,#06 [FALSE] L0438
       JG              #01,G35 [TRUE] L0434
       JG              G35,#0114 [FALSE] L0435
L0434: CALL_VN         R0470 (#03,G35)
       JUMP            L0436
L0435: TEST_ATTR       G35,#1e [FALSE] L0436
       PRINT           "Those seem "
       JUMP            L0437
L0436: PRINT           "That seems "
L0437: PRINT           "to belong to "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0438: JE              Gef,#07 [FALSE] L0443
       JG              #01,G35 [TRUE] L0439
       JG              G35,#0114 [FALSE] L0440
L0439: CALL_VN         R0470 (#03,G35)
       JUMP            L0441
L0440: TEST_ATTR       G35,#1e [FALSE] L0441
       PRINT           "Those seem "
       JUMP            L0442
L0441: PRINT           "That seems "
L0442: PRINT           "to be a part of "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0443: JE              Gef,#08 [FALSE] L0444
       CALL_2N         R0015 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       "n't available."
L0444: JE              Gef,#09 [FALSE] L0445
       CALL_2N         R0138 (L01)
       PRINT           " "
       CALL_2N         R0014 (L01)
       PRINT_RET       "n't open."
L0445: JE              Gef,#0a [FALSE] L0450
       JG              #01,L01 [TRUE] L0446
       JG              L01,#0114 [FALSE] L0447
L0446: CALL_VN         R0470 (#03,L01)
       JUMP            L0448
L0447: TEST_ATTR       L01,#1e [FALSE] L0448
       PRINT           "They're "
       JUMP            L0449
L0448: PRINT           "That's "
L0449: PRINT_RET       "hardly portable."
L0450: JE              Gef,#0b [FALSE] L0455
       JG              #01,L01 [TRUE] L0451
       JG              L01,#0114 [FALSE] L0452
L0451: CALL_VN         R0470 (#03,L01)
       JUMP            L0453
L0452: TEST_ATTR       L01,#1e [FALSE] L0453
       PRINT           "They're "
       JUMP            L0454
L0453: PRINT           "That's "
L0454: PRINT_RET       "fixed in place."
L0455: JE              Gef,#0c [FALSE] L0456
       PRINT_PADDR     S103
       NEW_LINE        
       RTRUE           
L0456: JE              Gef,#0d [FALSE] L0457
       PRINT           "(putting "
       CALL_2N         R0137 (L01)
       PRINT           " into "
       CALL_2N         R0137 (#0000)
       PRINT_RET       " to make room)"
L0457: RTRUE           
L0458: JE              Ge9,#4f [FALSE] L0459
       PRINT_RET       "You taste nothing unexpected."
L0459: JE              Ge9,#50 [FALSE] L0462
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0460
       PRINT_RET       "You talk to yourself a while."
L0460: JE              Gef,#02 [FALSE] L0461
       PRINT_RET       "This provokes no reaction."
L0461: RTRUE           
L0462: JE              Ge9,#51 [FALSE] L0463
       PRINT_RET       "What a good idea."
L0463: JE              Ge9,#52 [FALSE] L0466
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0464
       PRINT_RET       "Futile."
L0464: JE              Gef,#02 [FALSE] L0465
       PRINT_PADDR     S104
       NEW_LINE        
       RTRUE           
L0465: RTRUE           
L0466: JE              Ge9,#53 [FALSE] L0470
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0467
       PRINT_RET       "Keep your hands to yourself!"
L0467: JE              Gef,#02 [FALSE] L0468
       PRINT_RET       "You feel nothing unexpected."
L0468: JE              Gef,#03 [FALSE] L0469
       PRINT_RET       "If you think that'll help."
L0469: RTRUE           
L0470: JE              Ge9,#54 [FALSE] L0483
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0475
       JG              #01,L01 [TRUE] L0471
       JG              L01,#0114 [FALSE] L0472
L0471: CALL_VN         R0470 (#03,L01)
       JUMP            L0473
L0472: TEST_ATTR       L01,#1e [FALSE] L0473
       PRINT           "They don't "
       JUMP            L0474
L0473: PRINT           "That doesn't "
L0474: PRINT_PADDR     S105
       NEW_LINE        
       RTRUE           
L0475: JE              Gef,#02 [FALSE] L0476
       CALL_2N         R0016 (L01)
       PRINT_RET       " unlocked at the moment."
L0476: JE              Gef,#03 [FALSE] L0481
       JG              #01,L01 [TRUE] L0477
       JG              L01,#0114 [FALSE] L0478
L0477: CALL_VN         R0470 (#03,L01)
       JUMP            L0479
L0478: TEST_ATTR       L01,#1e [FALSE] L0479
       PRINT           "Those don't "
       JUMP            L0480
L0479: PRINT           "That doesn't "
L0480: PRINT_RET       "seem to fit the lock."
L0481: JE              Gef,#04 [FALSE] L0482
       PRINT           "You unlock "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0482: RTRUE           
L0483: JE              Ge9,#55 [FALSE] L0484
       PRINT_PADDR     S106
       NEW_LINE        
       RTRUE           
L0484: JE              Ge9,#56 [FALSE] L0487
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0485
       PRINT_PADDR     S107
       NEW_LINE        
       RTRUE           
L0485: JE              Gef,#02 [FALSE] L0486
       PRINT_PADDR     S108
       NEW_LINE        
       RTRUE           
L0486: RTRUE           
L0487: JE              Ge9,#57 [FALSE] L0488
       PRINT_RET       "Time passes."
L0488: JE              Ge9,#58 [FALSE] L0489
       PRINT_PADDR     S109
       NEW_LINE        
       RTRUE           
L0489: JE              Ge9,#59 [FALSE] L0490
       PRINT_RET       "That seems unnecessary."
L0490: JE              Ge9,#5a [FALSE] L0493
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0491
       PRINT           "But you aren't holding "
       CALL_2N         R0012 (L01)
       PRINT_RET       "."
L0491: JE              Gef,#02 [FALSE] L0492
       PRINT           "You look ridiculous waving "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0492: RTRUE           
L0493: JE              Ge9,#5b [FALSE] L0494
       PRINT_RET       "You wave, feeling foolish."
L0494: JE              Ge9,#5c [FALSE] L0498
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0495
       PRINT           "You can't wear "
       CALL_2N         R0012 (L01)
       PRINT_RET       "!"
L0495: JE              Gef,#02 [FALSE] L0496
       PRINT           "You're not holding "
       CALL_2N         R0012 (L01)
       PRINT_RET       "!"
L0496: JE              Gef,#03 [FALSE] L0497
       PRINT           "You're already wearing "
       CALL_2N         R0012 (L01)
       PRINT_RET       "!"
L0497: JE              Gef,#04 [FALSE] L0498
       PRINT           "You put on "
       CALL_2N         R0137 (L01)
       PRINT_RET       "."
L0498: RTRUE           

Routine R0018, 0 locals

       CALL_VS         R0285 (#1007,#11) -> -(SP)
       RET_POPPED      

Routine R0019, 0 locals

       CALL_VS         R0285 (#1007,#12) -> -(SP)
       RET_POPPED      

Routine R0020, 0 locals

       CALL_VS         R0285 (#1007,#13) -> -(SP)
       RET_POPPED      

Routine R0021, 1 local

       JE              L00,#0f [FALSE] L0001
       STORE           G5c,#01
       STORE           G5d,#0f
       RTRUE           
L0001: CALL_VS         R0483 (L00,#00) -> -(SP)
       AND             (SP)+,#0f -> G5c
       ADD             L00,#01 -> -(SP)
       CALL_VS         R0484 ((SP)+,#00) -> G5d
       RTRUE           

Routine R0022, 2 locals

       STORE           L01,#00
L0001: JL              L01,#20 [FALSE] L0011
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1f,L01,#1f,#01,#09)
       JUMP            L0004
L0003: STOREW          #3ff7,L01,#0f
L0004: JL              L01,#00 [TRUE] L0005
       JL              L01,#20 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1f,L01,#1f,#01,#07)
       JUMP            L0007
L0006: STOREW          #3f77,L01,#01
L0007: JL              L01,#00 [TRUE] L0008
       JL              L01,#20 [TRUE] L0009
L0008: CALL_VN2        R0470 (#1f,L01,#1f,#01,#08)
       JUMP            L0010
L0009: STOREW          #3fb7,L01,#0f
L0010: INC             L01
       JUMP            L0001
L0011: CALL_VS         R0483 (L00,#01) -> -(SP)
       CALL_VS         R0483 (L00,#00) -> -(SP)
       MUL             #0100,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> G59
       AND             G59,#0400 -> -(SP)
       JZ              (SP)+ [FALSE] L0012
       PUSH            #00
       JUMP            L0013
L0012: PUSH            #01
L0013: PULL            G5a
       AND             G59,#03ff -> G59
       DEC             L00
       STORE           G55,#00
       STORE           L01,#00
L0014: ADD             L00,#03 -> L00
       CALL_VS         R0483 (L00,#00) -> -(SP)
       JE              (SP)+,#0f [FALSE] L0015
       JUMP            L0026
L0015: JL              L01,#00 [TRUE] L0016
       JL              L01,#20 [TRUE] L0017
L0016: CALL_VN2        R0470 (#1f,L01,#1f,#01,#09)
       JUMP            L0018
L0017: STOREW          #3ff7,L01,L00
L0018: CALL_2N         R0021 (L00)
       JE              G5c,#02 [TRUE] L0019
       INC             G55
L0019: JL              L01,#00 [TRUE] L0020
       JL              L01,#20 [TRUE] L0021
L0020: CALL_VN2        R0470 (#1f,L01,#1f,#01,#07)
       JUMP            L0022
L0021: STOREW          #3f77,L01,G5c
L0022: JL              L01,#00 [TRUE] L0023
       JL              L01,#20 [TRUE] L0024
L0023: CALL_VN2        R0470 (#1f,L01,#1f,#01,#08)
       JUMP            L0025
L0024: STOREW          #3fb7,L01,G5d
L0025: INC             L01
       JUMP            L0014
L0026: ADD             L00,#01 -> -(SP)
       RET_POPPED      

Routine R0023, 2 locals

       CALL_VS         R0483 (L00,#01) -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       CALL_VN         R0485 (L00,(SP)+,#00)
       TOKENISE        L00,L01
       RTRUE           

Routine R0024, 1 local

       CALL_2N         R0030 (L00)
       RFALSE          

Routine R0025, 2 locals

       STORE           Gec,L00
       STOREB          Gec,#01,#00
       READ            Gec,L01 -> Gef
       RTRUE           

Routine R0026, 2 locals

       JZ              L00 [TRUE] L0001
       SET_WINDOW      L00
L0001: READ_CHAR       #01 -> L01
       RET             L01

Routine R0027, 0 locals

       RTRUE           

Routine R0028, 2 locals

       READ_CHAR       #01,L00,R0027 -> L01
       RET             L01

Routine R0029, 8 locals

       CALL_1N         R0107
L0001: STORE           L03,#00
L0002: JL              L03,#40 [FALSE] L0007
       CALL_VS         R0483 (L00,L03) -> -(SP)
       JL              L03,#00 [TRUE] L0003
       JL              L03,#40 [TRUE] L0005
L0003: CALL_VN2        R0470 (#1e,L03,#3f,#00,#12)
       JZ              (SP)+ [FALSE] L0004
L0004: JUMP            L0006
L0005: STOREB          #43aa,L03,(SP)+
L0006: INC             L03
       JUMP            L0002
L0007: CALL_VN         R0485 (L00,#00,#78)
       CALL_VN         R0485 (L01,#00,#0f)
       CALL_2N         R0285 (#1008)
       CALL_1N         R0423
       CALL_1N         R0124
       CALL_VN         R0025 (L00,L01)
       CALL_VS         R0483 (L01,#01) -> L02
       JZ              L02 [FALSE] L0008
       CALL_VN         R0285 (#1007,#0a)
       JUMP            L0001
L0008: CALL_VS         R0484 (L01,#01) -> L04
       JE              L04,"oops","o","oops" [FALSE] L0009
       JUMP            L0023
L0009: CALL_VS         R0483 (L00,#02) -> -(SP)
       JE              (SP)+,#2a [FALSE] L0013
       CALL_VS         R0484 (#10,#00) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       JZ              G08 [TRUE] L0011
L0010: CALL_VN         R0285 (#1007,#36)
       JUMP            L0012
L0011: CALL_VN         R0285 (#1007,#37)
L0012: JUMP            L0001
L0013: JE              L04,"undo","undo","undo" [FALSE] L0019
       JE              L02,#01 [FALSE] L0019
       JZ              G0c [FALSE] L0014
       CALL_VN         R0285 (#1007,#0b)
       JUMP            L0001
L0014: JZ              G05 [FALSE] L0015
       CALL_VN         R0285 (#1007,#06)
       JUMP            L0001
L0015: JE              G05,#01 [FALSE] L0016
       JUMP            L0017
L0016: RESTORE_UNDO    -> L03
       JZ              L03 [FALSE] L0018
L0017: CALL_VN         R0285 (#1007,#07)
L0018: JUMP            L0001
L0019: SAVE_UNDO       -> L03
       STORE           G06,#00
       STORE           G05,#02
       JE              L03,#ffff [FALSE] L0020
       STORE           G05,#00
L0020: JZ              L03 [FALSE] L0021
       STORE           G05,#01
L0021: JE              L03,#02 [FALSE] L0022
       CALL_1N         R0123
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0139 (G00)
       PRINT           "
"
       SET_TEXT_STYLE  ROMAN
       CALL_VN         R0285 (#1007,#0d)
       STORE           G06,#01
       JUMP            L0001
L0022: RET             L02
L0023: JZ              G85 [FALSE] L0024
       CALL_VN         R0285 (#1007,#0e)
       JUMP            L0001
L0024: JE              L02,#01 [FALSE] L0025
       CALL_VN         R0285 (#1007,#0f)
       JUMP            L0001
L0025: JG              L02,#02 [FALSE] L0026
       CALL_VN         R0285 (#1007,#10)
       JUMP            L0001
L0026: STORE           L03,#00
L0027: JL              L03,#78 [FALSE] L0032
       CALL_VS         R0483 (L00,L03) -> -(SP)
       JL              L03,#00 [TRUE] L0028
       JL              L03,#7b [TRUE] L0030
L0028: CALL_VN2        R0470 (#1e,L03,#7a,#00,#10)
       JZ              (SP)+ [FALSE] L0029
L0029: JUMP            L0031
L0030: STOREB          #42b4,L03,(SP)+
L0031: INC             L03
       JUMP            L0027
L0032: CALL_VS         R0483 (L01,#09) -> L06
       CALL_VS         R0483 (L01,#08) -> L07
       STORE           L03,#00
L0033: JL              L03,#40 [FALSE] L0037
       JL              L03,#00 [TRUE] L0034
       JL              L03,#40 [TRUE] L0035
L0034: CALL_VN2        R0470 (#1c,L03,#3f,#00,#12)
       PUSH            #00
       JUMP            L0036
L0035: LOADB           #43aa,L03 -> -(SP)
L0036: CALL_VN         R0485 (L00,L03,(SP)+)
       INC             L03
       JUMP            L0033
L0037: CALL_VN         R0023 (L00,L01)
       MUL             #04,G85 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0483 (L01,(SP)+) -> L04
       MUL             #04,G85 -> -(SP)
       CALL_VS         R0483 (L01,(SP)+) -> L05
       STORE           L03,#00
L0038: JL              L03,L05 [FALSE] L0039
       ADD             L03,L04 -> -(SP)
       CALL_VN         R0485 (L00,(SP)+,#20)
       INC             L03
       JUMP            L0038
L0039: JL              L05,L07 [FALSE] L0042
       STORE           L03,#77
L0040: ADD             L04,L07 -> -(SP)
       JL              L03,(SP)+ [TRUE] L0041
       SUB             L03,L07 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       CALL_VS         R0483 (L00,(SP)+) -> -(SP)
       CALL_VN         R0485 (L00,L03,(SP)+)
       DEC             L03
       JUMP            L0040
L0041: SUB             L07,L05 -> -(SP)
       CALL_VS         R0483 (L00,#01) -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       CALL_VN         R0485 (L00,#01,(SP)+)
L0042: STORE           L03,#00
L0043: JL              L03,L07 [FALSE] L0048
       ADD             L03,L06 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0044
       JL              Gee,#7b [TRUE] L0046
L0044: CALL_VN2        R0470 (#1c,Gee,#7a,#00,#10)
       JZ              (SP)+ [FALSE] L0045
L0045: PUSH            #00
       JUMP            L0047
L0046: LOADB           #42b4,(SP)+ -> -(SP)
L0047: ADD             L03,L04 -> -(SP)
       CALL_VN         R0485 (L00,(SP)+,(SP)+)
       INC             L03
       JUMP            L0043
L0048: CALL_VN         R0023 (L00,L01)
       CALL_VS         R0483 (L01,#01) -> L02
       RET             L02

Routine R0030, 11 locals

       JE              G49,#01 [FALSE] L0006
       STORE           L05,#00
L0001: JL              L05,#08 [FALSE] L0005
       JL              L05,#00 [TRUE] L0002
       JL              L05,#10 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,L05,#0f,#01,#04)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #3ed7,L05 -> -(SP)
L0004: CALL_VN         R0486 (L00,L05,(SP)+)
       INC             L05
       JUMP            L0001
L0005: STORE           G49,#00
       RTRUE           
L0006: JE              G87,#01 [FALSE] L0007
       STORE           G87,#00
       CALL_VN         R0023 (#41b7,#4232)
       JUMP            L0008
L0007: CALL_VN         R0029 (#41b7,#4232)
L0008: STORE           G3e,#01
       JL              #01,#00 [TRUE] L0009
       JL              #01,#41 [TRUE] L0010
L0009: CALL_VN2        R0470 (#1c,#01,#40,#04,#0e)
       JUMP            L0011
L0010: LOADB           #4232,#01 -> G81
L0011: STORE           G80,#01
       CALL_1N         R0004
       CALL_VN         R0023 (#41b7,#4232)
       CALL_1N         R0424
       JL              #01,#00 [TRUE] L0012
       JL              #01,#41 [TRUE] L0013
L0012: CALL_VN2        R0470 (#1c,#01,#40,#04,#0e)
       JUMP            L0014
L0013: LOADB           #4232,#01 -> G81
L0014: STORE           L07,#00
       STORE           G83,#01
       STORE           G3f,G16
       CALL_2S         R0031 (G16) -> G40
       STORE           G84,#00
L0015: STORE           G75,#00
       STORE           G59,#ffff
L0016: STORE           G80,G83
       CALL_1S         R0066 -> G82
       JE              G82,#ffff [FALSE] L0017
       STORE           G4d,#01
       JUMP            L0196
L0017: JE              G82,"g","again" [FALSE] L0018
       STORE           G82,"again"
L0018: JE              G82,"again" [FALSE] L0033
       JE              G3f,G16 [TRUE] L0019
       CALL_VN         R0285 (#1007,#14)
       JUMP            L0007
L0019: JL              #01,#00 [TRUE] L0020
       JL              #01,#7b [TRUE] L0021
L0020: CALL_VN2        R0470 (#1c,#01,#7a,#00,#11)
       PUSH            #00
       JUMP            L0022
L0021: LOADB           #432f,#01 -> -(SP)
L0022: JZ              (SP)+ [FALSE] L0023
       CALL_VN         R0285 (#1007,#15)
       JUMP            L0007
L0023: STORE           L05,#00
L0024: JL              L05,#78 [FALSE] L0032
       JL              L05,#00 [TRUE] L0025
       JL              L05,#7b [TRUE] L0026
L0025: CALL_VN2        R0470 (#1c,L05,#7a,#00,#11)
       PUSH            #00
       JUMP            L0027
L0026: LOADB           #432f,L05 -> -(SP)
L0027: JL              L05,#00 [TRUE] L0028
       JL              L05,#7b [TRUE] L0030
L0028: CALL_VN2        R0470 (#1e,L05,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0029
L0029: JUMP            L0031
L0030: STOREB          #41b7,L05,(SP)+
L0031: INC             L05
       JUMP            L0024
L0032: JUMP            L0008
L0033: JE              G82,"again" [TRUE] L0042
       STORE           L05,#00
L0034: JL              L05,#78 [FALSE] L0042
       JL              L05,#00 [TRUE] L0035
       JL              L05,#7b [TRUE] L0036
L0035: CALL_VN2        R0470 (#1c,L05,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0037
L0036: LOADB           #41b7,L05 -> -(SP)
L0037: JL              L05,#00 [TRUE] L0038
       JL              L05,#7b [TRUE] L0040
L0038: CALL_VN2        R0470 (#1e,L05,#7a,#00,#11)
       JZ              (SP)+ [FALSE] L0039
L0039: JUMP            L0041
L0040: STOREB          #432f,L05,(SP)+
L0041: INC             L05
       JUMP            L0034
L0042: JZ              G84 [FALSE] L0049
       STORE           L06,G83
       CALL_VS         R0101 (G3f,#1c) -> L05
       JE              L05,#00,#01 [TRUE] L0045
       CALL_VS         R0143 (L05,G8a) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0044
       CALL_VS         R0143 (L05,G8c) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0044
       SUB             L05,G8a -> -(SP)
       PULL            Gef
       STORE           Gee,G8b
       JZ              Gee [FALSE] L0043
       CALL_VN         R0470 (#14)
       INC             Gee
L0043: MOD             Gef,Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0045
L0044: STORE           G84,L06
       SUB             #00,L05 -> L05
L0045: JE              L05,#01 [FALSE] L0046
       CALL_VN         R0486 (L00,#00,G32)
       CALL_VN         R0486 (L00,#01,G35)
       CALL_VN         R0486 (L00,#02,G36)
       RTRUE           
L0046: JZ              L05 [TRUE] L0047
       STORE           G82,L05
       DEC             G80
       DEC             G83
       JUMP            L0048
L0047: STORE           G80,G83
       CALL_1S         R0065 -> G82
L0048: JUMP            L0050
L0049: STORE           G84,#00
L0050: JZ              G82 [TRUE] L0051
       CALL_VS         R0483 (G82,#06) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0071
L0051: STORE           G80,G83
       STORE           G65,#00
       STORE           G5e,#00
       CALL_VS         R0038 (#06,#00,#00) -> L09
       JE              L09,#2710 [FALSE] L0052
       JUMP            L0008
L0052: JZ              L09 [TRUE] L0053
       CALL_VN         R0486 (L00,#00,#1b)
       STORE           G59,#1b
       CALL_VN         R0486 (L00,#01,#01)
       CALL_VN         R0486 (L00,#02,L09)
       JUMP            L0253
L0053: JE              G3f,G16 [FALSE] L0057
       STORE           L06,#02
L0054: JG              L06,G81 [TRUE] L0056
       CALL_1S         R0065 -> L05
       JE              L05,"comma," [FALSE] L0055
       JUMP            L0058
L0055: INC             L06
       JUMP            L0054
L0056: CALL_2S         R0415 (G82) -> G82
       JZ              G82 [TRUE] L0057
       JUMP            L0071
L0057: STORE           G4d,#0c
       JUMP            L0196
L0058: SUB             G80,#01 -> L06
       JE              L06,#01 [FALSE] L0059
       CALL_VN         R0285 (#1007,#16)
       JUMP            L0007
L0059: STORE           G80,#01
       STORE           G60,#01
       STORE           G74,#01
       CALL_VS         R0038 (G16,G40,#06) -> L09
       STORE           G74,#00
       JE              L09,#2710 [FALSE] L0060
       JUMP            L0008
L0060: JZ              L09 [FALSE] L0061
       CALL_VN         R0285 (#1007,#17)
       JUMP            L0007
L0061: JG              #01,L09 [TRUE] L0062
       JG              L09,#0114 [FALSE] L0063
L0062: CALL_VN         R0470 (#03,L09)
       JUMP            L0064
L0063: TEST_ATTR       L09,#00 [TRUE] L0068
L0064: JG              #01,L09 [TRUE] L0065
       JG              L09,#0114 [FALSE] L0066
L0065: CALL_VN         R0470 (#03,L09)
       JUMP            L0067
L0066: TEST_ATTR       L09,#16 [TRUE] L0068
L0067: CALL_VN         R0285 (#1007,#18,L09)
       JUMP            L0007
L0068: JE              G80,L06 [TRUE] L0069
       CALL_VN         R0285 (#1007,#19)
       JUMP            L0007
L0069: CALL_2N         R0081 (L09)
       ADD             L06,#01 -> G83
       JE              L09,G16 [FALSE] L0070
       STORE           G80,G83
       CALL_1S         R0066 -> -(SP)
       JE              (SP)+,"again","g","again" [FALSE] L0070
       CALL_VN         R0285 (#1007,#14)
       JUMP            L0007
L0070: STORE           G3f,L09
       CALL_2S         R0031 (L09) -> G40
       JUMP            L0016
L0071: CALL_VS         R0483 (G82,#06) -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> G41
       JE              G41,#01 [FALSE] L0072
       JE              G3f,G16 [TRUE] L0072
       STORE           G4d,#0c
       STORE           G41,#00
       JUMP            L0196
L0072: CALL_VS         R0483 (G82,#07) -> -(SP)
       SUB             #ff,(SP)+ -> L05
       CALL_VS         R0484 (#0e,#00) -> -(SP)
       CALL_VS         R0484 ((SP)+,L05) -> L01
       CALL_VS         R0483 (L01,#00) -> -(SP)
       SUB             (SP)+,#01 -> L03
       STORE           G70,#ffff
       STORE           G71,#ffff
       STORE           G4d,#01
       STORE           G4e,#01
       STORE           G42,#00
       ADD             L01,#01 -> L04
       STORE           L02,#00
L0073: JG              L02,L03 [TRUE] L0196
       STORE           L05,#00
L0074: JL              L05,#20 [FALSE] L0084
       JL              L05,#00 [TRUE] L0075
       JL              L05,#20 [TRUE] L0076
L0075: CALL_VN2        R0470 (#1f,L05,#1f,#01,#09)
       JUMP            L0077
L0076: STOREW          #3ff7,L05,#0f
L0077: JL              L05,#00 [TRUE] L0078
       JL              L05,#20 [TRUE] L0079
L0078: CALL_VN2        R0470 (#1f,L05,#1f,#01,#07)
       JUMP            L0080
L0079: STOREW          #3f77,L05,#01
L0080: JL              L05,#00 [TRUE] L0081
       JL              L05,#20 [TRUE] L0082
L0081: CALL_VN2        R0470 (#1f,L05,#1f,#01,#08)
       JUMP            L0083
L0082: STOREW          #3fb7,L05,#0f
L0083: INC             L05
       JUMP            L0074
L0084: CALL_2S         R0022 (L04) -> L04
       STORE           G4b,#00
       STORE           G56,#00
       STORE           G51,#00
       STORE           G52,#00
       STORE           G44,#00
       STORE           G45,#00
       JL              #00,#00 [TRUE] L0085
       JL              #00,#40 [TRUE] L0086
L0085: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JUMP            L0087
L0086: STOREW          #3e57,#00,#00
L0087: STORE           G64,#00
       STORE           G4c,#01
       ADD             G83,#01 -> G80
       STORE           G5b,#ffff
       STORE           G65,#00
       STORE           L05,#00
       STORE           L0a,#00
       STORE           G4f,#00
L0088: JL              G4f,#00 [TRUE] L0089
       JL              G4f,#20 [TRUE] L0090
L0089: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#09)
       PUSH            #00
       JUMP            L0091
L0090: LOADW           #3ff7,G4f -> -(SP)
L0091: JE              (SP)+,#0f [TRUE] L0126
       STORE           G75,#00
       JL              G4f,#00 [TRUE] L0092
       JL              G4f,#20 [TRUE] L0093
L0092: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#07)
       PUSH            #00
       JUMP            L0094
L0093: LOADW           #3f77,G4f -> -(SP)
L0094: JE              (SP)+,#02 [TRUE] L0095
       INC             L05
L0095: JL              G4f,#00 [TRUE] L0096
       JL              G4f,#20 [TRUE] L0097
L0096: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#07)
       PUSH            #00
       JUMP            L0098
L0097: LOADW           #3f77,G4f -> -(SP)
L0098: JE              (SP)+,#01 [FALSE] L0125
       JL              G4f,#00 [TRUE] L0099
       JL              G4f,#20 [TRUE] L0100
L0099: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#08)
       PUSH            #00
       JUMP            L0101
L0100: LOADW           #3fb7,G4f -> -(SP)
L0101: JE              (SP)+,#02 [FALSE] L0102
       STORE           L0a,#01
L0102: JL              G4f,#00 [TRUE] L0103
       JL              G4f,#20 [TRUE] L0104
L0103: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#08)
       PUSH            #00
       JUMP            L0105
L0104: LOADW           #3fb7,G4f -> -(SP)
L0105: JE              (SP)+,#04,#05 [FALSE] L0125
       JE              L05,#01 [FALSE] L0125
       INC             G4f
       JL              G4f,#00 [TRUE] L0106
       JL              G4f,#20 [TRUE] L0107
L0106: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#07)
       PUSH            #00
       JUMP            L0108
L0107: LOADW           #3f77,G4f -> -(SP)
L0108: JE              (SP)+,#02 [FALSE] L0124
L0109: JL              G4f,#00 [TRUE] L0110
       JL              G4f,#20 [TRUE] L0111
L0110: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#07)
       PUSH            #00
       JUMP            L0112
L0111: LOADW           #3f77,G4f -> -(SP)
L0112: JE              (SP)+,#02 [FALSE] L0113
       INC             G4f
       JUMP            L0109
L0113: JL              G4f,#00 [TRUE] L0114
       JL              G4f,#20 [TRUE] L0115
L0114: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#07)
       PUSH            #00
       JUMP            L0116
L0115: LOADW           #3f77,G4f -> -(SP)
L0116: JE              (SP)+,#01 [FALSE] L0124
       JL              G4f,#00 [TRUE] L0117
       JL              G4f,#20 [TRUE] L0118
L0117: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#08)
       PUSH            #00
       JUMP            L0119
L0118: LOADW           #3fb7,G4f -> -(SP)
L0119: JZ              (SP)+ [FALSE] L0124
L0120: JL              G80,G81 [FALSE] L0124
       CALL_1S         R0065 -> L09
       JZ              L09 [TRUE] L0123
       CALL_VS         R0483 (L09,#06) -> -(SP)
       AND             (SP)+,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0123
       CALL_1S         R0033 -> L09
       JZ              L09 [TRUE] L0121
       STORE           G4c,L09
L0121: CALL_VS         R0038 (G40,G3f,#00) -> L09
       JE              L09,#2710 [FALSE] L0122
       JUMP            L0008
L0122: JL              L09,#02 [TRUE] L0123
       STORE           G5b,L09
L0123: JUMP            L0120
L0124: JUMP            L0126
L0125: INC             G4f
       JUMP            L0088
L0126: STORE           G6e,#00
       JZ              L0a [TRUE] L0127
       JE              G55,#01 [FALSE] L0127
       JE              G59,#4e [FALSE] L0127
       STORE           G6e,#01
L0127: STORE           G4b,#00
       STORE           G56,#00
       STORE           G51,#00
       STORE           G52,#00
       STORE           G44,#00
       STORE           G45,#00
       JL              #00,#00 [TRUE] L0128
       JL              #00,#40 [TRUE] L0129
L0128: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JUMP            L0130
L0129: STOREW          #3e57,#00,#00
L0130: STORE           G4c,#01
       ADD             G83,#01 -> G80
       STORE           G4f,#01
L0131: JL              G4f,#00 [TRUE] L0132
       JL              G4f,#20 [TRUE] L0133
L0132: CALL_VN2        R0470 (#1f,G4f,#1f,#01,#05)
       JUMP            L0134
L0133: STOREW          #3ef7,G4f,#ffff
L0134: STORE           G75,#00
       SUB             G4f,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0135
       JL              Gee,#20 [TRUE] L0137
L0135: CALL_VN2        R0470 (#1d,Gee,#1f,#01,#09)
       JZ              (SP)+ [FALSE] L0136
L0136: JUMP            L0138
L0137: LOADW           #3ff7,(SP)+ -> L08
L0138: JL              G4f,#00 [TRUE] L0139
       JL              G4f,#20 [TRUE] L0140
L0139: CALL_VN2        R0470 (#1d,G4f,#1f,#01,#09)
       JUMP            L0141
L0140: LOADW           #3ff7,G4f -> G60
L0141: JE              L08,#0f [TRUE] L0162
       STORE           G74,#00
       STORE           G3e,#01
       CALL_2N         R0021 (L08)
       JE              G59,#5d [FALSE] L0145
       JE              G5c,#01 [FALSE] L0145
       JE              G5d,#09 [FALSE] L0145
       JL              #02,#00 [TRUE] L0142
       JL              #02,#10 [TRUE] L0143
L0142: CALL_VN2        R0470 (#1d,#02,#0f,#01,#02)
       JUMP            L0144
L0143: LOADW           #3e37,#02 -> L09
L0144: DEC             G80
       STORE           L06,G80
       JUMP            L0061
L0145: SUB             G4f,#01 -> -(SP)
       CALL_VS2        R0037 (G5c,G5d,(SP)+,L08) -> L09
L0146: JL              L09,#ff38 [FALSE] L0147
       ADD             L09,#0100 -> -(SP)
       CALL_VS         R0037 (#01,(SP)+) -> L09
       JUMP            L0146
L0147: STORE           G74,#00
       JZ              L09 [FALSE] L0150
       JE              G5c,#02 [TRUE] L0149
       JE              G5c,#01 [FALSE] L0148
       JE              G5d,#09 [TRUE] L0149
L0148: DEC             G55
L0149: STORE           L09,#01
       JUMP            L0159
L0150: JL              L09,#00 [FALSE] L0151
       STORE           L09,#00
       JUMP            L0159
L0151: JE              L09,#2710 [TRUE] L0159
       JE              L09,#01 [FALSE] L0154
       JZ              G52 [FALSE] L0152
       STORE           G53,G46
       JUMP            L0153
L0152: STORE           G54,G46
L0153: INC             G52
       STORE           L09,#01
L0154: JE              L09,#02 [FALSE] L0155
       STORE           L09,#00
L0155: ADD             G51,#02 -> -(SP)
       CALL_VN         R0486 (L00,(SP)+,L09)
       INC             G51
       JL              G4f,#00 [TRUE] L0156
       JL              G4f,#20 [TRUE] L0157
L0156: CALL_VN2        R0470 (#1f,G4f,#1f,#01,#05)
       JUMP            L0158
L0157: STOREW          #3ef7,G4f,L09
L0158: STORE           L09,#01
L0159: JE              L09,#2710 [FALSE] L0160
       JUMP            L0008
L0160: JZ              L09 [FALSE] L0161
       JUMP            L0192
L0161: JUMP            L0191
L0162: JG              G80,G81 [TRUE] L0174
       CALL_1S         R0065 -> L09
       JE              L09,"then","then","then" [TRUE] L0163
       JE              L09,"comma," [FALSE] L0164
L0163: STORE           G87,#01
       SUB             G80,#01 -> G88
       JUMP            L0174
L0164: STORE           L0a,#00
L0165: JL              L0a,#20 [FALSE] L0173
       JL              L0a,#00 [TRUE] L0166
       JL              L0a,#20 [TRUE] L0167
L0166: CALL_VN2        R0470 (#1d,L0a,#1f,#01,#05)
       PUSH            #00
       JUMP            L0168
L0167: LOADW           #3ef7,L0a -> -(SP)
L0168: JL              L0a,#00 [TRUE] L0169
       JL              L0a,#20 [TRUE] L0171
L0169: CALL_VN2        R0470 (#1f,L0a,#1f,#01,#06)
       JZ              (SP)+ [FALSE] L0170
L0170: JUMP            L0172
L0171: STOREW          #3f37,L0a,(SP)+
L0172: INC             L0a
       JUMP            L0165
L0173: STORE           G50,G4f
       STORE           G4c,#02
       JUMP            L0192
L0174: JL              G51,#01 [TRUE] L0175
       CALL_VS         R0484 (L00,#02) -> -(SP)
       JZ              (SP)+ [FALSE] L0175
       CALL_VS         R0484 (L00,#03) -> -(SP)
       CALL_2S         R0040 ((SP)+) -> L09
       JZ              L09 [TRUE] L0175
       STORE           G4c,L09
       CALL_VN         R0486 (L00,#00,G59)
       JUMP            L0192
L0175: JL              G51,#02 [TRUE] L0176
       CALL_VS         R0484 (L00,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0176
       CALL_VS         R0484 (L00,#02) -> -(SP)
       CALL_2S         R0040 ((SP)+) -> L09
       JZ              L09 [TRUE] L0176
       STORE           G4c,L09
       JUMP            L0192
L0176: JE              G6e,#02 [FALSE] L0177
       CALL_VS         R0484 (L00,#02) -> -(SP)
       JE              (SP)+,G3f [FALSE] L0177
       STORE           G4d,#11
       JUMP            L0196
L0177: STORE           G85,#00
       JZ              G56 [TRUE] L0178
       PRINT           "("
       CALL_2N         R0045 (G56)
       PRINT           ")
"
L0178: CALL_VN         R0486 (L00,#00,G59)
       CALL_VN         R0486 (L00,#01,G51)
       JZ              G5a [TRUE] L0179
       JE              G51,#02 [FALSE] L0179
       CALL_VS         R0484 (L00,#02) -> L05
       CALL_VS         R0484 (L00,#03) -> -(SP)
       CALL_VN         R0486 (L00,#02,(SP)+)
       CALL_VN         R0486 (L00,#03,L05)
       JE              G52,#02 [FALSE] L0179
       STORE           L05,G53
       STORE           G53,G54
       STORE           G54,L05
L0179: JG              G51,#00 [FALSE] L0180
       CALL_VS         R0484 (L00,#02) -> -(SP)
       JL              (SP)+,#02 [TRUE] L0180
       CALL_VS         R0484 (L00,#02) -> -(SP)
       CALL_2N         R0081 ((SP)+)
L0180: JZ              G4b [TRUE] L0189
       JE              G3f,G16 [FALSE] L0189
       STORE           G32,#4e
       CALL_VS         R0101 (G4b,#49) -> L05
       JG              L05,#02 [FALSE] L0181
       STORE           G4d,#06
       JUMP            L0196
L0181: JL              L05,#02 [FALSE] L0189
       JE              L05,#01 [TRUE] L0182
       CALL_VN         R0285 (#1007,#1a,G4b)
L0182: STORE           G49,#01
       STORE           L05,#00
L0183: JL              L05,#08 [FALSE] L0188
       CALL_VS         R0484 (L00,L05) -> -(SP)
       JL              L05,#00 [TRUE] L0184
       JL              L05,#10 [TRUE] L0186
L0184: CALL_VN2        R0470 (#1f,L05,#0f,#01,#04)
       JZ              (SP)+ [FALSE] L0185
L0185: JUMP            L0187
L0186: STOREW          #3ed7,L05,(SP)+
L0187: INC             L05
       JUMP            L0183
L0188: CALL_VN         R0486 (L00,#00,#4e)
       CALL_VN         R0486 (L00,#01,#01)
       CALL_VN         R0486 (L00,#02,G4b)
L0189: JE              G87,#01 [FALSE] L0190
       STORE           G80,G88
       JUMP            L0253
L0190: RTRUE           
L0191: INC             G4f
       JUMP            L0131
L0192: JG              G4c,G4d [FALSE] L0193
       STORE           G4d,G4c
L0193: JE              G4c,#12 [TRUE] L0194
       JG              G4c,G4e [FALSE] L0194
       STORE           G4e,G4c
L0194: JE              G6e,#02 [FALSE] L0195
       JE              G4c,#11 [FALSE] L0195
       JUMP            L0196
L0195: INC             L02
       JUMP            L0073
L0196: STORE           G4c,G4d
       JE              G3f,G16 [TRUE] L0199
       JZ              G84 [TRUE] L0197
       STORE           G83,G84
       JUMP            L0015
L0197: STORE           G80,G83
       CALL_1S         R0065 -> G44
       JE              G44,"comma," [FALSE] L0198
       CALL_1S         R0065 -> G44
       INC             G83
L0198: CALL_2S         R0069 (G83) -> G45
       CALL_VN         R0486 (L00,#00,#1009)
       CALL_VN         R0486 (L00,#01,#02)
       CALL_VN         R0486 (L00,#02,#01)
       STORE           G53,G44
       CALL_VN         R0486 (L00,#03,G3f)
       STORE           G47,G83
       SUB             G81,G47 -> -(SP)
       ADD             (SP)+,#01 -> G48
       RTRUE           
L0199: CALL_2S         R0433 (G4c) -> -(SP)
       JZ              (SP)+ [TRUE] L0200
       JUMP            L0007
L0200: STORE           G70,G72
       STORE           G71,G73
       JE              G4c,#01 [FALSE] L0201
       CALL_VN         R0285 (#1007,#1b)
       STORE           G85,#01
L0201: JE              G4c,#02 [FALSE] L0211
       CALL_VN         R0285 (#1007,#1c)
       STORE           L0a,#00
L0202: JL              L0a,#20 [FALSE] L0210
       JL              L0a,#00 [TRUE] L0203
       JL              L0a,#20 [TRUE] L0204
L0203: CALL_VN2        R0470 (#1d,L0a,#1f,#01,#06)
       PUSH            #00
       JUMP            L0205
L0204: LOADW           #3f37,L0a -> -(SP)
L0205: JL              L0a,#00 [TRUE] L0206
       JL              L0a,#20 [TRUE] L0208
L0206: CALL_VN2        R0470 (#1f,L0a,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0207
L0207: JUMP            L0209
L0208: STOREW          #3ef7,L0a,(SP)+
L0209: INC             L0a
       JUMP            L0202
L0210: STORE           G4f,G50
       CALL_2N         R0045 (#00)
       CALL_VN         R0285 (#1007,#38)
L0211: JE              G4c,#03 [FALSE] L0212
       CALL_VN         R0285 (#1007,#1d)
L0212: JE              G4c,#04 [FALSE] L0213
       CALL_VN         R0285 (#1007,#1e)
       STORE           G85,G86
L0213: JE              G4c,#05 [FALSE] L0214
       CALL_VN         R0285 (#1007,#1f)
L0214: JE              G4c,#06 [FALSE] L0215
       CALL_VN         R0285 (#1007,#20)
       STORE           G85,G86
L0215: JE              G4c,#07 [FALSE] L0216
       CALL_VN         R0285 (#1007,#21)
L0216: JE              G4c,#08 [FALSE] L0217
       CALL_VN         R0285 (#1007,#22)
L0217: JE              G4c,#09 [FALSE] L0218
       CALL_VN         R0285 (#1007,#23)
L0218: JE              G4c,#0a [FALSE] L0219
       CALL_VN         R0285 (#1007,#24)
L0219: JE              G4c,#0b [FALSE] L0220
       CALL_VN         R0285 (#1007,#25)
L0220: JE              G4c,#0c [FALSE] L0221
       CALL_VN         R0285 (#1007,#26)
L0221: JE              G4c,#0d [FALSE] L0222
       CALL_VN         R0285 (#1007,#27)
L0222: JE              G4c,#0e [FALSE] L0224
       JE              G71,#ffff [FALSE] L0223
       CALL_VN         R0285 (#1007,#23)
       JUMP            L0224
L0223: CALL_VN         R0285 (#1007,#28)
L0224: JE              G4c,#0f [FALSE] L0225
       CALL_VN         R0285 (#1007,#29)
L0225: JE              G4c,#10 [FALSE] L0226
       CALL_VN         R0285 (#1007,#2a,G63)
L0226: JE              G4c,#11 [FALSE] L0251
       CALL_VS         R0484 (L00,#00) -> -(SP)
       JE              (SP)+,#38 [FALSE] L0249
       CALL_VS         R0484 (L00,#03) -> -(SP)
       CALL_VS         R0468 ((SP)+,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0249
       CALL_VS         R0484 (L00,#03) -> G35
       JG              #01,G35 [TRUE] L0227
       JG              G35,#0114 [FALSE] L0228
L0227: CALL_VN         R0470 (#03,G35)
       JUMP            L0229
L0228: TEST_ATTR       G35,#00 [FALSE] L0229
       CALL_VN         R0285 (#4e,#06,G35)
       JUMP            L0249
L0229: JG              #01,G35 [TRUE] L0230
       JG              G35,#0114 [FALSE] L0231
L0230: CALL_VN         R0470 (#03,G35)
       JUMP            L0232
L0231: TEST_ATTR       G35,#04 [TRUE] L0236
L0232: JG              #01,G35 [TRUE] L0233
       JG              G35,#0114 [FALSE] L0234
L0233: CALL_VN         R0470 (#03,G35)
       JUMP            L0235
L0234: TEST_ATTR       G35,#14 [TRUE] L0236
L0235: CALL_VN         R0285 (#1c,#02,G35)
       JUMP            L0249
L0236: JG              #01,G35 [TRUE] L0237
       JG              G35,#0114 [FALSE] L0238
L0237: CALL_VN         R0470 (#03,G35)
       JUMP            L0242
L0238: TEST_ATTR       G35,#04 [FALSE] L0242
       JG              #01,G35 [TRUE] L0239
       JG              G35,#0114 [FALSE] L0240
L0239: CALL_VN         R0470 (#03,G35)
       JUMP            L0241
L0240: TEST_ATTR       G35,#0e [TRUE] L0242
L0241: CALL_VN         R0285 (#4e,#09,G35)
       JUMP            L0249
L0242: JG              #05,G35 [TRUE] L0243
       JG              G35,#0114 [TRUE] L0243
       JIN             G35,"Class" [FALSE] L0244
L0243: CALL_VN         R0470 (#09,G35)
       STORE           Gee,#02
       JUMP            L0245
L0244: STORE           Gee,G35
L0245: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0247
L0246: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0246
L0247: PULL            Gee
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0248
       CALL_VN         R0285 (#40,#06,G35)
       JUMP            L0249
L0248: CALL_VN         R0486 (L00,#00,#00)
L0249: CALL_VS         R0484 (L00,#00) -> -(SP)
       JE              (SP)+,#38 [TRUE] L0251
       JE              G62,#64 [FALSE] L0250
       CALL_VN         R0285 (#1007,#2b)
       JUMP            L0251
L0250: CALL_VN         R0285 (#1007,#2c)
L0251: JE              G4c,#12 [FALSE] L0252
       STORE           G77,#03
       CALL_1S         G76 -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0252
       STORE           G4d,G4e
       JUMP            L0196
L0252: JUMP            L0007
L0253: JG              G80,G81 [TRUE] RTRUE
       CALL_1S         R0065 -> L05
       JE              L05,"then","then","then" [TRUE] L0254
       JE              L05,"comma," [FALSE] L0264
L0254: JG              G80,G81 [FALSE] L0255
       STORE           G87,#00
       RTRUE           
L0255: CALL_2S         R0067 (G83) -> L05
       CALL_2S         R0067 (G80) -> L06
L0256: JL              L05,L06 [FALSE] L0257
       CALL_VN         R0485 (L05,#00,#20)
       INC             L05
       JUMP            L0256
L0257: CALL_1S         R0065 -> L05
       JE              L05,"again","g","again" [FALSE] L0263
       SUB             G80,#02 -> -(SP)
       CALL_2S         R0067 ((SP)+) -> -(SP)
       SUB             (SP)+,#41b7 -> L05
       JG              G80,G81 [FALSE] L0258
       STORE           L06,#77
       JUMP            L0259
L0258: CALL_2S         R0067 (G80) -> -(SP)
       SUB             (SP)+,#41b7 -> L06
L0259: JL              L05,L06 [FALSE] L0263
       JL              L05,#00 [TRUE] L0260
       JL              L05,#7b [TRUE] L0261
L0260: CALL_VN2        R0470 (#1e,L05,#7a,#00,#11)
       JUMP            L0262
L0261: STOREB          #432f,L05,#20
L0262: INC             L05
       JUMP            L0259
L0263: CALL_VN         R0023 (#41b7,#4232)
       STORE           G87,#01
       RTRUE           
L0264: STORE           G4d,#02
       JUMP            L0196

Routine R0031, 2 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0114 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> L01
       JZ              L01 [FALSE] L0004
       RET             L00
L0004: JE              L00,G16 [FALSE] L0005
       JE              G00,#13 [FALSE] L0005
       RET             #13
L0005: JG              #05,L01 [TRUE] L0006
       JG              L01,#0114 [TRUE] L0006
       JIN             L01,"Class" [FALSE] L0007
L0006: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L01
L0008: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       JG              #01,L01 [TRUE] L0009
       JG              L01,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L01)
       JUMP            L0011
L0010: TEST_ATTR       L01,#17 [TRUE] L0019
L0011: JG              #01,L01 [TRUE] L0012
       JG              L01,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,L01)
       JUMP            L0014
L0013: TEST_ATTR       L01,#14 [TRUE] L0019
L0014: JG              #01,L01 [TRUE] L0015
       JG              L01,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,L01)
       JUMP            L0023
L0016: TEST_ATTR       L01,#04 [FALSE] L0023
       JG              #01,L01 [TRUE] L0017
       JG              L01,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#03,L01)
       JUMP            L0023
L0018: TEST_ATTR       L01,#0e [FALSE] L0023
L0019: JG              #05,L01 [TRUE] L0020
       JG              L01,#0114 [TRUE] L0020
       JIN             L01,"Class" [FALSE] L0021
L0020: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,L01
L0022: GET_PARENT      Gee -> L01
       JUMP            L0005
L0023: RET             L01

Routine R0032, 0 locals

       STORE           G65,#00
       STORE           G66,#00
       STORE           G67,#00
       STORE           G68,#00
       STORE           G6b,#00
       STORE           G69,#00
       STORE           G6a,#0fff
       STORE           G6c,#00
       RTRUE           

Routine R0033, 6 locals

       CALL_1N         R0032
       JG              G80,G81 [FALSE] L0001
       RFALSE          
L0001: STORE           L02,#01
L0002: JZ              L02 [TRUE] L0037
       CALL_1S         R0066 -> L00
       STORE           L02,#00
       STORE           L01,#01
       JUMP            L0004
L0003: ADD             L01,#04 -> L01
L0004: JL              #00,#00 [TRUE] L0005
       JL              #00,#41 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1d,#00,#40,#03,#15)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #441c,#00 -> -(SP)
L0007: JG              L01,(SP)+ [TRUE] L0029
       JL              L01,#00 [TRUE] L0008
       JL              L01,#41 [TRUE] L0009
L0008: CALL_VN2        R0470 (#1d,L01,#40,#03,#15)
       PUSH            #00
       JUMP            L0010
L0009: LOADW           #441c,L01 -> -(SP)
L0010: JE              L00,(SP)+ [FALSE] L0028
       STORE           L02,#01
       ADD             L01,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0011
       JL              Gee,#41 [TRUE] L0013
L0011: CALL_VN2        R0470 (#1d,Gee,#40,#03,#15)
       JZ              (SP)+ [FALSE] L0012
L0012: JUMP            L0014
L0013: LOADW           #441c,(SP)+ -> L04
L0014: JE              L04,#0101 [TRUE] L0015
       STORE           G65,#01
L0015: STORE           G6b,#01
       ADD             L01,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0016
       JL              Gee,#41 [TRUE] L0018
L0016: CALL_VN2        R0470 (#1d,Gee,#40,#03,#15)
       JZ              (SP)+ [FALSE] L0017
L0017: PUSH            #00
       JUMP            L0019
L0018: LOADW           #441c,(SP)+ -> -(SP)
L0019: AND             G6a,(SP)+ -> G6a
       JE              L04,#0100 [FALSE] L0026
       ADD             L01,#03 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0020
       JL              Gee,#41 [TRUE] L0022
L0020: CALL_VN2        R0470 (#1d,Gee,#40,#03,#15)
       JZ              (SP)+ [FALSE] L0021
L0021: JUMP            L0023
L0022: LOADW           #441c,(SP)+ -> L03
L0023: STORE           Gef,L03
       JE              Gef,#00 [FALSE] L0024
       OR              G66,#02 -> G66
       JUMP            L0026
L0024: JE              Gef,#01 [FALSE] L0025
       OR              G66,#04 -> G66
       JUMP            L0026
L0025: CALL_2S         R0078 (L03) -> G69
       JE              G69,#ffff [FALSE] L0026
       STORE           G69,#15
L0026: JE              L04,#09 [FALSE] L0027
       OR              G66,#10 -> G66
L0027: JE              L04,#fff7 [FALSE] L0028
       OR              G66,#20 -> G66
L0028: JUMP            L0003
L0029: JE              L00,"another","other","other" [FALSE] L0030
       STORE           G65,#01
       STORE           L02,#01
       OR              G66,#01 -> G66
L0030: JE              L00,"all","each","every" [TRUE] L0031
       JE              L00,"everythin","both" [FALSE] L0033
L0031: STORE           G65,#01
       STORE           L02,#01
       STORE           G67,#64
       JE              G6e,#01 [FALSE] L0032
       STORE           G6e,#02
L0032: OR              G66,#08 -> G66
L0033: JZ              G6d [TRUE] L0035
       SUB             G80,#01 -> -(SP)
       CALL_2S         R0069 ((SP)+) -> L05
       JE              L05,#01 [FALSE] L0034
       STORE           G65,#01
       STORE           L02,#01
L0034: JG              L05,#01 [FALSE] L0035
       STORE           G68,#01
       STORE           G65,#01
       STORE           L02,#01
       STORE           G67,L05
       SUB             G80,#01 -> G6c
       OR              G66,#08 -> G66
L0035: JE              L02,#01 [FALSE] L0036
       CALL_1S         R0066 -> -(SP)
       PULL            Gef
       JE              Gef,"of","of","of" [TRUE] L0036
       JE              Gef,"of" [TRUE] L0036
       DEC             G80
L0036: JUMP            L0002
L0037: DEC             G80
       RFALSE          

Routine R0034, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#00 [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,L00)
       RFALSE          
L0005: TEST_ATTR       L00,#16 [FALSE] RFALSE
       JE              G59,#02,#01,#50 [TRUE] RTRUE
       JE              G59,#5e [TRUE] RTRUE
       RFALSE          

Routine R0035, 2 locals

       JL              L01,#00 [TRUE] L0001
       JL              L01,#20 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1d,L01,#1f,#01,#08)
       PUSH            #00
       JUMP            L0003
L0002: LOADW           #3fb7,L01 -> -(SP)
L0003: JE              (SP)+,L00 [FALSE] L0004
       RET             L00
L0004: JL              L01,#00 [TRUE] L0005
       JL              L01,#20 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1d,L01,#1f,#01,#09)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #3ff7,L01 -> -(SP)
L0007: CALL_VS         R0483 ((SP)+,#00) -> -(SP)
       AND             (SP)+,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       RET             #ffff
L0008: JL              L01,#00 [TRUE] L0009
       JL              L01,#20 [TRUE] L0010
L0009: CALL_VN2        R0470 (#1d,L01,#1f,#01,#08)
       PUSH            #00
       JUMP            L0011
L0010: LOADW           #3fb7,L01 -> -(SP)
L0011: JE              (SP)+,L00 [FALSE] L0012
       RET             L00
L0012: INC             L01
       JL              L01,#00 [TRUE] L0013
       JL              L01,#20 [TRUE] L0014
L0013: CALL_VN2        R0470 (#1d,L01,#1f,#01,#09)
       PUSH            #00
       JUMP            L0015
L0014: LOADW           #3ff7,L01 -> -(SP)
L0015: JE              (SP)+,#0f [TRUE] L0019
       JL              L01,#00 [TRUE] L0016
       JL              L01,#20 [TRUE] L0017
L0016: CALL_VN2        R0470 (#1d,L01,#1f,#01,#09)
       PUSH            #00
       JUMP            L0018
L0017: LOADW           #3ff7,L01 -> -(SP)
L0018: CALL_VS         R0483 ((SP)+,#00) -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
L0019: RET             #ffff

Routine R0036, 5 locals

       STORE           L03,G60
       STORE           G60,#00
       CALL_VS         R0037 (L00,L01,L02) -> L04
       JE              L04,#2710 [FALSE] L0001
       CALL_VN         R0023 (#41b7,#4232)
L0001: STORE           G60,L03
       RET             L04

Routine R0037, 15 locals

       STORE           G5e,#00
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0027
       STORE           Gef,L01
       JE              Gef,#07 [FALSE] L0002
       CALL_2S         R0069 (G80) -> L04
       CALL_1S         R0065 -> G44
       JE              L04,#fc18 [FALSE] L0001
       STORE           L04,G44
L0001: STORE           G46,L04
       RTRUE           
L0002: JE              Gef,#08 [FALSE] L0004
       PUSH            G80
       INC             G80
       CALL_2S         R0069 ((SP)+) -> L04
       JE              L04,#fc18 [FALSE] L0003
       STORE           G4c,#03
       RET             #ffff
L0003: STORE           G46,L04
       RTRUE           
L0004: JE              Gef,#06 [FALSE] L0007
       JE              G59,#01,#02,#5e [TRUE] L0005
       JE              G59,#50 [FALSE] L0006
L0005: STORE           G74,#01
L0006: JUMP            L0026
L0007: JE              Gef,#09 [FALSE] L0026
       STORE           G47,G80
       ADD             L02,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0008
       JL              Gee,#20 [TRUE] L0010
L0008: CALL_VN2        R0470 (#1d,Gee,#1f,#01,#07)
       JZ              (SP)+ [FALSE] L0009
L0009: PUSH            #00
       JUMP            L0011
L0010: LOADW           #3f77,(SP)+ -> -(SP)
L0011: JE              (SP)+,#02 [TRUE] L0016
       ADD             L02,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0012
       JL              Gee,#20 [TRUE] L0014
L0012: CALL_VN2        R0470 (#1d,Gee,#1f,#01,#09)
       JZ              (SP)+ [FALSE] L0013
L0013: PUSH            #00
       JUMP            L0015
L0014: LOADW           #3ff7,(SP)+ -> -(SP)
L0015: JE              (SP)+,#0f [TRUE] L0016
       CALL_2N         R0151 (#0d)
L0016: CALL_1S         R0066 -> L05
       JE              L05,#ffff [TRUE] L0017
       ADD             L02,#01 -> -(SP)
       CALL_VS         R0035 (L05,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0016
L0017: DEC             G80
       SUB             G80,G47 -> G48
       JZ              G48 [FALSE] L0018
       RET             #ffff
L0018: JE              G59,#02,#01,#50 [FALSE] L0020
       STORE           L05,G80
       STORE           G80,G47
       CALL_1S         R0065 -> G46
       JE              G46,"the" [FALSE] L0019
       JG              G48,#01 [FALSE] L0019
       CALL_1S         R0065 -> G46
L0019: STORE           G80,L05
       RTRUE           
L0020: JE              L05,#ffff [FALSE] L0025
       ADD             L02,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0021
       JL              Gee,#20 [TRUE] L0023
L0021: CALL_VN2        R0470 (#1d,Gee,#1f,#01,#07)
       JZ              (SP)+ [FALSE] L0022
L0022: PUSH            #00
       JUMP            L0024
L0023: LOADW           #3f77,(SP)+ -> -(SP)
L0024: JE              (SP)+,#02 [FALSE] L0025
       RET             #ffff
L0025: RFALSE          
L0026: JUMP            L0051
L0027: JE              Gef,#02 [FALSE] L0045
       CALL_VS         R0483 (L03,#00) -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       RFALSE          
L0028: JG              G80,G81 [FALSE] L0038
       JZ              G56 [FALSE] L0032
       JL              G51,G55 [FALSE] L0032
       STORE           G56,G4f
       STORE           G57,L03
       CALL_2S         R0072 (L01) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       JL              G4f,#00 [TRUE] L0029
       JL              G4f,#20 [TRUE] L0031
L0029: CALL_VN2        R0470 (#1f,G4f,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0030
L0030: JUMP            L0032
L0031: STOREW          #3ef7,G4f,(SP)+
L0032: JZ              G56 [FALSE] L0033
       RET             #ffff
L0033: CALL_2S         R0072 (L01) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       JL              G4f,#00 [TRUE] L0034
       JL              G4f,#20 [TRUE] L0036
L0034: CALL_VN2        R0470 (#1f,G4f,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0035
L0035: JUMP            L0037
L0036: STOREW          #3ef7,G4f,(SP)+
L0037: RFALSE          
L0038: CALL_1S         R0065 -> L05
       CALL_2S         R0072 (L05) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       JL              G4f,#00 [TRUE] L0039
       JL              G4f,#20 [TRUE] L0041
L0039: CALL_VN2        R0470 (#1f,G4f,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0040
L0040: JUMP            L0042
L0041: STOREW          #3ef7,G4f,(SP)+
L0042: JE              L05,L01 [FALSE] L0043
       RFALSE          
L0043: CALL_VS         R0035 (L05,L02) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0044
       RFALSE          
L0044: RET             #ffff
L0045: JE              Gef,#06 [FALSE] L0046
       CALL_1S         L01 -> L04
       RET             L04
L0046: JE              Gef,#05 [FALSE] L0049
       STORE           G75,L01
       STORE           G77,#01
       CALL_1S         G75 -> L04
       JE              L04,#01 [FALSE] L0047
       STORE           L01,#02
       JUMP            L0048
L0047: STORE           L01,#00
L0048: JUMP            L0051
L0049: JE              Gef,#04 [FALSE] L0050
       ADD             #01,L01 -> G5e
       STORE           L01,#00
       JUMP            L0051
L0050: JE              Gef,#03 [FALSE] L0051
       STORE           G5e,L01
       STORE           L01,#00
L0051: STORE           L03,L01
       STORE           L0d,#00
       JE              L03,#02,#03,#04 [TRUE] L0052
       JE              L03,#05 [FALSE] L0053
L0052: STORE           L0d,#01
L0053: STORE           L0c,#00
       STORE           L09,#01
       STORE           G58,#00
L0054: CALL_1S         R0065 -> L05
       DEC             G80
       STORE           G70,#ffff
       STORE           G71,#ffff
       CALL_2S         R0078 (L05) -> L04
       JZ              L04 [TRUE] L0065
       STORE           G70,L05
       STORE           G71,L04
       JE              L04,#ffff [FALSE] L0065
       STORE           L04,#01
       JUMP            L0056
L0055: ADD             L04,#04 -> L04
L0056: JL              #00,#00 [TRUE] L0057
       JL              #00,#41 [TRUE] L0058
L0057: CALL_VN2        R0470 (#1d,#00,#40,#03,#15)
       PUSH            #00
       JUMP            L0059
L0058: LOADW           #441c,#00 -> -(SP)
L0059: JG              L04,(SP)+ [TRUE] L0064
       JL              L04,#00 [TRUE] L0060
       JL              L04,#41 [TRUE] L0061
L0060: CALL_VN2        R0470 (#1d,L04,#40,#03,#15)
       PUSH            #00
       JUMP            L0062
L0061: LOADW           #441c,L04 -> -(SP)
L0062: JE              L05,(SP)+ [FALSE] L0063
       JUMP            L0065
L0063: JUMP            L0055
L0064: STORE           G72,G70
       STORE           G73,G71
       STORE           G4c,#09
       RET             #ffff
L0065: JE              L05,"me","myself","self" [FALSE] L0066
       STORE           G70,L05
       STORE           G71,G16
L0066: STORE           G6d,#01
       STORE           L0b,G80
L0067: CALL_1S         R0033 -> L04
       JZ              L04 [TRUE] L0068
       STORE           G4c,L04
       RET             #ffff
L0068: STORE           G85,G80
       JE              L03,#01 [TRUE] L0102
       JL              #00,#00 [TRUE] L0069
       JL              #00,#40 [TRUE] L0070
L0069: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0071
L0070: LOADW           #3e57,#00 -> L06
L0071: CALL_VS         R0038 (G40,G3f,L03) -> L04
       JE              L04,#2710 [FALSE] L0072
       RET             L04
L0072: JE              G67,#64 [FALSE] L0073
       JZ              L04 [FALSE] L0073
       JZ              G7b [FALSE] L0073
       STORE           L04,#01
L0073: JZ              L0d [TRUE] L0075
       JZ              G42 [FALSE] L0075
       JE              G4d,#07 [FALSE] L0074
       STORE           G4d,#01
L0074: STORE           G42,#01
L0075: JZ              L04 [FALSE] L0078
       JZ              G6b [TRUE] L0076
       CALL_1N         R0032
       STORE           G80,L0b
       JUMP            L0068
L0076: JE              G4c,#07,#10 [FALSE] L0077
       JZ              G42 [TRUE] L0077
       STORE           G4c,#01
L0077: CALL_1S         R0046 -> G4c
       JUMP            L0127
L0078: JE              L04,#01 [FALSE] L0096
       JZ              L0c [FALSE] L0079
       STORE           L0c,#01
       JUMP            L0095
L0079: JL              #00,#00 [TRUE] L0080
       JL              #00,#40 [TRUE] L0081
L0080: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0082
L0081: LOADW           #3e57,#00 -> L08
L0082: JL              #00,#00 [TRUE] L0083
       JL              #00,#40 [TRUE] L0084
L0083: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JUMP            L0085
L0084: STOREW          #3e57,#00,L06
L0085: ADD             L06,#01 -> L07
L0086: JG              L07,L08 [TRUE] L0095
       JZ              L09 [TRUE] L0090
       JL              L07,#00 [TRUE] L0087
       JL              L07,#40 [TRUE] L0088
L0087: CALL_VN2        R0470 (#1d,L07,#3f,#01,#03)
       PUSH            #00
       JUMP            L0089
L0088: LOADW           #3e57,L07 -> -(SP)
L0089: CALL_2N         R0047 ((SP)+)
       JUMP            L0094
L0090: JL              L07,#00 [TRUE] L0091
       JL              L07,#40 [TRUE] L0092
L0091: CALL_VN2        R0470 (#1d,L07,#3f,#01,#03)
       PUSH            #00
       JUMP            L0093
L0092: LOADW           #3e57,L07 -> -(SP)
L0093: CALL_2N         R0048 ((SP)+)
L0094: INC             L07
       JUMP            L0086
L0095: JUMP            L0101
L0096: JZ              G7d [FALSE] L0097
       JZ              G6b [TRUE] L0097
       CALL_1N         R0032
       STORE           G80,L0b
       JUMP            L0068
L0097: JE              L03,#06 [FALSE] L0098
       CALL_2S         R0034 (L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0098
       STORE           G4c,#0b
       JUMP            L0127
L0098: JZ              L0c [FALSE] L0099
       STORE           L0a,L04
       JUMP            L0101
L0099: JZ              L09 [TRUE] L0100
       CALL_2N         R0047 (L04)
       JUMP            L0101
L0100: CALL_2N         R0048 (L04)
L0101: JUMP            L0111
L0102: CALL_VS         R0038 (G3f,G40,L03) -> L04
       JE              L04,#2710 [FALSE] L0103
       RET             #2710
L0103: JZ              L04 [FALSE] L0105
       JZ              G6b [TRUE] L0104
       CALL_1N         R0032
       STORE           G80,L0b
       JUMP            L0068
L0104: CALL_1S         R0046 -> G4c
       JUMP            L0127
L0105: JG              #05,L04 [TRUE] L0106
       JG              L04,#0114 [TRUE] L0106
       JIN             L04,"Class" [FALSE] L0107
L0106: CALL_VN         R0470 (#04,L04)
       STORE           Gee,#02
       JUMP            L0108
L0107: STORE           Gee,L04
L0108: GET_PARENT      Gee -> L05
       JE              L05,G3f [TRUE] L0110
       JE              G49,#01 [FALSE] L0109
       STORE           G86,G85
       STORE           G4c,#06
       JUMP            L0127
L0109: STORE           G4b,L04
L0110: STORE           L0a,L04
L0111: ADD             G85,G7d -> G80
       CALL_1S         R0065 -> L05
       JE              L05,"and","and","and" [TRUE] L0112
       JE              L05,"but","except","but" [TRUE] L0112
       JE              L05,"comma," [FALSE] L0123
L0112: JZ              L0d [FALSE] L0114
       JZ              G42 [TRUE] L0113
       JUMP            L0124
L0113: STORE           G4c,#07
       JUMP            L0127
L0114: JE              L05,"but","except","but" [FALSE] L0115
       SUB             #01,L09 -> L09
L0115: JZ              L0c [FALSE] L0122
       JL              #00,#00 [TRUE] L0116
       JL              #00,#40 [TRUE] L0117
L0116: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JUMP            L0118
L0117: STOREW          #3e57,#00,#01
L0118: JL              #01,#00 [TRUE] L0119
       JL              #01,#40 [TRUE] L0120
L0119: CALL_VN2        R0470 (#1f,#01,#3f,#01,#03)
       JUMP            L0121
L0120: STOREW          #3e57,#01,L0a
L0121: STORE           L0c,#01
L0122: STORE           G58,#01
       STORE           G56,#00
       JUMP            L0054
L0123: DEC             G80
L0124: JZ              L0c [TRUE] L0125
       STORE           L0a,#02
       STORE           G64,L03
       JUMP            L0126
L0125: JE              G65,#01 [FALSE] L0126
       AND             G66,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0126
       JL              G67,#64 [FALSE] L0126
       JG              G67,#01 [FALSE] L0126
       STORE           G63,#01
       STORE           G62,G67
       STORE           G4c,#10
       JUMP            L0127
L0126: RET             L0a
L0127: JZ              G6d [TRUE] L0128
       JE              G68,#01 [FALSE] L0128
       STORE           L0e,G67
       STORE           G6d,#00
       STORE           G80,L0b
       JUMP            L0067
L0128: JG              G67,#00 [TRUE] L0129
       JG              L0e,#00 [FALSE] L0130
L0129: JZ              G42 [FALSE] L0130
       STORE           G4c,#07
L0130: RET             #ffff

Routine R0038, 10 locals

       STORE           G7d,#00
       STORE           G7b,#00
       STORE           G7e,G80
       STORE           G7a,#00
       CALL_VN         R0052 (L00,L01,L02)
       ADD             G7e,G7d -> G80
       JZ              G7b [FALSE] L0001
       INC             G80
       RFALSE          
L0001: JG              G7e,G81 [TRUE] L0006
       JE              G7b,#01 [FALSE] L0005
       JL              #00,#00 [TRUE] L0002
       JL              #00,#40 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,#00,#3f,#01,#0a)
       JUMP            L0004
L0003: LOADW           #4037,#00 -> L04
L0004: RET             L04
L0005: JG              G80,G81 [TRUE] L0006
       CALL_1S         R0065 -> L04
       DEC             G80
       JE              L04,"and","and","and" [TRUE] L0006
       JE              L04,"comma,","then","then" [TRUE] L0006
       JE              L04,"then","but","except" [TRUE] L0006
       JE              L04,"but" [TRUE] L0006
       JE              G60,#0f [TRUE] RFALSE
L0006: STORE           G7c,#00
       JE              G7b,#01 [FALSE] L0009
       JL              #00,#00 [TRUE] L0007
       JL              #00,#40 [TRUE] L0008
L0007: CALL_VN2        R0470 (#1d,#00,#3f,#01,#0a)
       JUMP            L0009
L0008: LOADW           #4037,#00 -> L04
L0009: JG              G7b,#01 [FALSE] L0010
       CALL_2S         R0039 (L02) -> L04
       JE              L04,#ffff [TRUE] RFALSE
       JE              L04,#01 [TRUE] RTRUE
L0010: JZ              L04 [TRUE] L0016
       JZ              G58 [TRUE] L0011
       RET             L04
L0011: JZ              G56 [FALSE] L0012
       STORE           G56,G4f
L0012: JL              G4f,#00 [TRUE] L0013
       JL              G4f,#20 [TRUE] L0014
L0013: CALL_VN2        R0470 (#1f,G4f,#1f,#01,#05)
       JUMP            L0015
L0014: STOREW          #3ef7,G4f,L04
L0015: RET             L04
L0016: JG              G7e,G81 [FALSE] L0017
       JUMP            L0113
L0017: JE              L02,#06 [FALSE] L0018
       CALL_VN         R0285 (#1007,#2d)
       JUMP            L0019
L0018: CALL_VN         R0285 (#1007,#2e)
L0019: STORE           L05,G7c
       STORE           L09,#00
       STORE           L04,#01
L0020: JG              L04,G7c [TRUE] L0039
L0021: JL              L09,#00 [TRUE] L0022
       JL              L09,#40 [TRUE] L0023
L0022: CALL_VN2        R0470 (#1d,L09,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0024
L0023: LOADW           #40b7,L09 -> -(SP)
L0024: JE              (SP)+,L04 [TRUE] L0028
       SUB             #00,L04 -> -(SP)
       JL              L09,#00 [TRUE] L0025
       JL              L09,#40 [TRUE] L0026
L0025: CALL_VN2        R0470 (#1d,L09,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0027
L0026: LOADW           #40b7,L09 -> -(SP)
L0027: JE              (SP)+,(SP)+ [TRUE] L0028
       INC             L09
       JUMP            L0021
L0028: JL              L09,#00 [TRUE] L0029
       JL              L09,#40 [TRUE] L0030
L0029: CALL_VN2        R0470 (#1d,L09,#3f,#01,#0a)
       JUMP            L0031
L0030: LOADW           #4037,L09 -> L06
L0031: JL              L09,#00 [TRUE] L0032
       JL              L09,#40 [TRUE] L0033
L0032: CALL_VN2        R0470 (#1d,L09,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0034
L0033: LOADW           #40b7,L09 -> -(SP)
L0034: JG              (SP)+,#00 [FALSE] L0035
       CALL_2N         R0137 (L06)
       JUMP            L0036
L0035: CALL_2N         R0135 (L06)
L0036: SUB             L05,#01 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0037
       CALL_2N         R0489 (S044)
L0037: SUB             L05,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0038
       CALL_2N         R0489 (S035)
L0038: INC             L04
       JUMP            L0020
L0039: CALL_VN         R0285 (#1007,#39)
L0040: STORE           L04,#02
L0041: JL              L04,#78 [FALSE] L0045
       JL              L04,#00 [TRUE] L0042
       JL              L04,#7b [TRUE] L0043
L0042: CALL_VN2        R0470 (#1e,L04,#7a,#00,#10)
       JUMP            L0044
L0043: STOREB          #42b4,L04,#20
L0044: INC             L04
       JUMP            L0041
L0045: CALL_VS         R0029 (#42b4,#4273) -> L08
       JL              #01,#00 [TRUE] L0046
       JL              #01,#20 [TRUE] L0047
L0046: CALL_VN2        R0470 (#1d,#01,#40,#14,#0f)
       JUMP            L0048
L0047: LOADW           #4273,#01 -> L03
L0048: JE              L03,"all","each","every" [TRUE] L0049
       JE              L03,"everythin","both" [FALSE] L0068
L0049: JE              L02,#02,#03,#04 [TRUE] L0050
       JE              L02,#05 [FALSE] L0067
L0050: JL              #00,#00 [TRUE] L0051
       JL              #00,#40 [TRUE] L0052
L0051: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0053
L0052: LOADW           #3e57,#00 -> L07
L0053: STORE           L04,#00
L0054: JL              L04,G7b [FALSE] L0062
       ADD             L07,L04 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0062
       JL              L04,#00 [TRUE] L0055
       JL              L04,#40 [TRUE] L0056
L0055: CALL_VN2        R0470 (#1d,L04,#3f,#01,#0a)
       JUMP            L0057
L0056: LOADW           #4037,L04 -> L06
L0057: ADD             L04,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0058
       JL              Gee,#40 [TRUE] L0060
L0058: CALL_VN2        R0470 (#1f,Gee,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0059
L0059: JUMP            L0061
L0060: STOREW          #3e57,(SP)+,L06
L0061: INC             L04
       JUMP            L0054
L0062: ADD             L04,L07 -> -(SP)
       JL              #00,#00 [TRUE] L0063
       JL              #00,#40 [TRUE] L0065
L0063: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0064
L0064: JUMP            L0066
L0065: STOREW          #3e57,#00,(SP)+
L0066: RTRUE           
L0067: CALL_VN         R0285 (#1007,#2f)
       JUMP            L0040
L0068: JZ              L03 [TRUE] L0069
       CALL_VS         R0483 (L03,#06) -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0069
       CALL_2S         R0011 (L03) -> -(SP)
       JZ              (SP)+ [FALSE] L0069
       CALL_VN         R0074 (#41b7,#42b4)
       RET             #2710
L0069: CALL_2S         R0067 (G7e) -> -(SP)
       SUB             (SP)+,#41b7 -> L06
       JL              #01,#00 [TRUE] L0070
       JL              #01,#7b [TRUE] L0071
L0070: CALL_VN2        R0470 (#1c,#01,#7a,#00,#10)
       PUSH            #00
       JUMP            L0072
L0071: LOADB           #42b4,#01 -> -(SP)
L0072: ADD             (SP)+,#01 -> L07
       JL              #00,#00 [TRUE] L0073
       JL              #00,#7b [TRUE] L0074
L0073: CALL_VN2        R0470 (#1c,#00,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0075
L0074: LOADB           #41b7,#00 -> -(SP)
L0075: ADD             #41b7,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L05
L0076: ADD             #41b7,L06 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       JL              L05,(SP)+ [TRUE] L0077
       SUB             L05,L07 -> -(SP)
       CALL_VS         R0483 (#00,(SP)+) -> -(SP)
       CALL_VN         R0485 (L05,#00,(SP)+)
       DEC             L05
       JUMP            L0076
L0077: STORE           L04,#00
L0078: JL              L04,L07 [FALSE] L0088
       ADD             #02,L04 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0079
       JL              Gee,#7b [TRUE] L0081
L0079: CALL_VN2        R0470 (#1c,Gee,#7a,#00,#10)
       JZ              (SP)+ [FALSE] L0080
L0080: PUSH            #00
       JUMP            L0082
L0081: LOADB           #42b4,(SP)+ -> -(SP)
L0082: ADD             L06,L04 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0083
       JL              Gee,#7b [TRUE] L0086
L0083: CALL_VN2        R0470 (#1e,Gee,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0084
L0084: JZ              (SP)+ [FALSE] L0085
L0085: JUMP            L0087
L0086: STOREB          #41b7,(SP)+,(SP)+
L0087: INC             L04
       JUMP            L0078
L0088: ADD             L06,L07 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0089
       JL              Gee,#7b [TRUE] L0091
L0089: CALL_VN2        R0470 (#1e,Gee,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0090
L0090: JUMP            L0092
L0091: STOREB          #41b7,(SP)+,#20
L0092: JL              #01,#00 [TRUE] L0093
       JL              #01,#7b [TRUE] L0094
L0093: CALL_VN2        R0470 (#1c,#01,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0095
L0094: LOADB           #41b7,#01 -> -(SP)
L0095: ADD             (SP)+,L07 -> -(SP)
       JL              #01,#00 [TRUE] L0096
       JL              #01,#7b [TRUE] L0098
L0096: CALL_VN2        R0470 (#1e,#01,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0097
L0097: JUMP            L0099
L0098: STOREB          #41b7,#01,(SP)+
L0099: JL              #00,#00 [TRUE] L0100
       JL              #00,#7b [TRUE] L0101
L0100: CALL_VN2        R0470 (#1c,#00,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0102
L0101: LOADB           #41b7,#00 -> -(SP)
L0102: SUB             (SP)+,#01 -> -(SP)
       JL              #01,#00 [TRUE] L0103
       JL              #01,#7b [TRUE] L0104
L0103: CALL_VN2        R0470 (#1c,#01,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0105
L0104: LOADB           #41b7,#01 -> -(SP)
L0105: JL              (SP)+,(SP)+ [TRUE] L0112
       JL              #00,#00 [TRUE] L0106
       JL              #00,#7b [TRUE] L0107
L0106: CALL_VN2        R0470 (#1c,#00,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0108
L0107: LOADB           #41b7,#00 -> -(SP)
L0108: JL              #01,#00 [TRUE] L0109
       JL              #01,#7b [TRUE] L0111
L0109: CALL_VN2        R0470 (#1e,#01,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0110
L0110: JUMP            L0112
L0111: STOREB          #41b7,#01,(SP)+
L0112: RET             #2710
L0113: JE              L02,#06 [FALSE] L0114
       CALL_VN         R0285 (#1007,#30)
       JUMP            L0115
L0114: CALL_VN         R0285 (#1007,#31)
L0115: STORE           L04,#02
L0116: JL              L04,#78 [FALSE] L0120
       JL              L04,#00 [TRUE] L0117
       JL              L04,#7b [TRUE] L0118
L0117: CALL_VN2        R0470 (#1e,L04,#7a,#00,#10)
       JUMP            L0119
L0118: STOREB          #42b4,L04,#20
L0119: INC             L04
       JUMP            L0116
L0120: CALL_VS         R0029 (#42b4,#4273) -> L08
       JL              #01,#00 [TRUE] L0121
       JL              #01,#20 [TRUE] L0122
L0121: CALL_VN2        R0470 (#1d,#01,#40,#14,#0f)
       JUMP            L0123
L0122: LOADW           #4273,#01 -> L03
L0123: JZ              L03 [TRUE] L0124
       CALL_VS         R0483 (L03,#06) -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0124
       CALL_VN         R0074 (#41b7,#42b4)
       RET             #2710
L0124: JZ              G56 [TRUE] L0198
       STORE           L05,G56
L0125: JL              L05,G4f [FALSE] L0198
       JL              L05,#00 [TRUE] L0126
       JL              L05,#20 [TRUE] L0127
L0126: CALL_VN2        R0470 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0128
L0127: LOADW           #3ef7,L05 -> -(SP)
L0128: JE              (SP)+,#ffff [FALSE] L0129
       JUMP            L0197
L0129: JL              #01,#00 [TRUE] L0130
       JL              #01,#7b [TRUE] L0131
L0130: CALL_VN2        R0470 (#1c,#01,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0132
L0131: LOADB           #41b7,#01 -> -(SP)
L0132: ADD             #02,(SP)+ -> L04
       STORE           Gef,#41b7
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
       PUSH            L04
       INC             L04
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0133
       JL              Gee,#7b [TRUE] L0135
L0133: CALL_VN2        R0470 (#1e,Gee,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0134
L0134: JUMP            L0136
L0135: STOREB          #41b7,(SP)+,#20
L0136: JL              #01,#00 [TRUE] L0137
       JL              #01,#20 [TRUE] L0138
L0137: CALL_VN2        R0470 (#1f,#01,#40,#14,#0f)
       JUMP            L0139
L0138: STOREW          #4273,#01,#00
L0139: JL              L05,#00 [TRUE] L0140
       JL              L05,#20 [TRUE] L0141
L0140: CALL_VN2        R0470 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0142
L0141: LOADW           #3ef7,L05 -> -(SP)
L0142: JL              (SP)+,#02 [TRUE] L0170
       JL              L05,#00 [TRUE] L0143
       JL              L05,#20 [TRUE] L0144
L0143: CALL_VN2        R0470 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0145
L0144: LOADW           #3ef7,L05 -> -(SP)
L0145: JL              (SP)+,#2710 [FALSE] L0170
       JL              L05,#00 [TRUE] L0146
       JL              L05,#20 [TRUE] L0147
L0146: CALL_VN2        R0470 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0148
L0147: LOADW           #3ef7,L05 -> -(SP)
L0148: CALL_2N         R0081 ((SP)+)
       STORE           L06,#01
       JUMP            L0150
L0149: ADD             L06,#03 -> L06
L0150: JL              #00,#00 [TRUE] L0151
       JL              #00,#0d [TRUE] L0152
L0151: CALL_VN2        R0470 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0153
L0152: LOADW           #4402,#00 -> -(SP)
L0153: JG              L06,(SP)+ [TRUE] L0169
       ADD             L06,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0154
       JL              Gee,#0d [TRUE] L0156
L0154: CALL_VN2        R0470 (#1d,Gee,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0155
L0155: PUSH            #00
       JUMP            L0157
L0156: LOADW           #4402,(SP)+ -> -(SP)
L0157: JL              L05,#00 [TRUE] L0158
       JL              L05,#20 [TRUE] L0159
L0158: CALL_VN2        R0470 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0160
L0159: LOADW           #3ef7,L05 -> -(SP)
L0160: JE              (SP)+,(SP)+ [FALSE] L0168
       JL              L06,#00 [TRUE] L0161
       JL              L06,#0d [TRUE] L0162
L0161: CALL_VN2        R0470 (#1d,L06,#0c,#03,#14)
       PUSH            #00
       JUMP            L0163
L0162: LOADW           #4402,L06 -> -(SP)
L0163: JL              #01,#00 [TRUE] L0164
       JL              #01,#20 [TRUE] L0166
L0164: CALL_VN2        R0470 (#1f,#01,#40,#14,#0f)
       JZ              (SP)+ [FALSE] L0165
L0165: JUMP            L0167
L0166: STOREW          #4273,#01,(SP)+
L0167: JUMP            L0169
L0168: JUMP            L0149
L0169: JUMP            L0177
L0170: JL              L05,#00 [TRUE] L0171
       JL              L05,#20 [TRUE] L0172
L0171: CALL_VN2        R0470 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0173
L0172: LOADW           #3ef7,L05 -> -(SP)
L0173: SUB             (SP)+,#2710 -> -(SP)
       CALL_2S         R0073 ((SP)+) -> -(SP)
       JL              #01,#00 [TRUE] L0174
       JL              #01,#20 [TRUE] L0176
L0174: CALL_VN2        R0470 (#1f,#01,#40,#14,#0f)
       JZ              (SP)+ [FALSE] L0175
L0175: JUMP            L0177
L0176: STOREW          #4273,#01,(SP)+
L0177: JL              #01,#00 [TRUE] L0178
       JL              #01,#20 [TRUE] L0179
L0178: CALL_VN2        R0470 (#1d,#01,#40,#14,#0f)
       PUSH            #00
       JUMP            L0180
L0179: LOADW           #4273,#01 -> -(SP)
L0180: JZ              (SP)+ [TRUE] L0197
       ADD             #41b7,L04 -> L06
       OUTPUT_STREAM   REDIRECT_ENABLE,L06
       JL              #01,#00 [TRUE] L0181
       JL              #01,#20 [TRUE] L0182
L0181: CALL_VN2        R0470 (#1d,#01,#40,#14,#0f)
       PUSH            #00
       JUMP            L0183
L0182: LOADW           #4273,#01 -> -(SP)
L0183: CALL_2N         R0488 ((SP)+)
       OUTPUT_STREAM   #fffd
       CALL_VS         R0484 (L06,#00) -> L06
       STORE           L07,L04
L0184: ADD             L04,L06 -> -(SP)
       JL              L07,(SP)+ [FALSE] L0193
       ADD             L07,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0185
       JL              Gee,#7b [TRUE] L0187
L0185: CALL_VN2        R0470 (#1c,Gee,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0186
L0186: PUSH            #00
       JUMP            L0188
L0187: LOADB           #41b7,(SP)+ -> -(SP)
L0188: JL              L07,#00 [TRUE] L0189
       JL              L07,#7b [TRUE] L0191
L0189: CALL_VN2        R0470 (#1e,L07,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0190
L0190: JUMP            L0192
L0191: STOREB          #41b7,L07,(SP)+
L0192: INC             L07
       JUMP            L0184
L0193: ADD             L04,L06 -> L04
       SUB             L04,#02 -> -(SP)
       JL              #01,#00 [TRUE] L0194
       JL              #01,#7b [TRUE] L0196
L0194: CALL_VN2        R0470 (#1e,#01,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0195
L0195: JUMP            L0197
L0196: STOREB          #41b7,#01,(SP)+
L0197: INC             L05
       JUMP            L0125
L0198: JL              #01,#00 [TRUE] L0199
       JL              #01,#7b [TRUE] L0200
L0199: CALL_VN2        R0470 (#1c,#01,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0201
L0200: LOADB           #41b7,#01 -> -(SP)
L0201: ADD             #02,(SP)+ -> L04
       STORE           Gef,#41b7
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
       PUSH            L04
       INC             L04
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0202
       JL              Gee,#7b [TRUE] L0204
L0202: CALL_VN2        R0470 (#1e,Gee,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0203
L0203: JUMP            L0205
L0204: STOREB          #41b7,(SP)+,#20
L0205: STORE           L05,#00
       JUMP            L0207
L0206: INC             L04
       INC             L05
L0207: JL              #01,#00 [TRUE] L0208
       JL              #01,#7b [TRUE] L0209
L0208: CALL_VN2        R0470 (#1c,#01,#7a,#00,#10)
       PUSH            #00
       JUMP            L0210
L0209: LOADB           #42b4,#01 -> -(SP)
L0210: JL              L05,(SP)+ [FALSE] L0223
       ADD             L05,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0211
       JL              Gee,#7b [TRUE] L0213
L0211: CALL_VN2        R0470 (#1c,Gee,#7a,#00,#10)
       JZ              (SP)+ [FALSE] L0212
L0212: PUSH            #00
       JUMP            L0214
L0213: LOADB           #42b4,(SP)+ -> -(SP)
L0214: JL              L04,#00 [TRUE] L0215
       JL              L04,#7b [TRUE] L0217
L0215: CALL_VN2        R0470 (#1e,L04,#7a,#00,#0d)
       JZ              (SP)+ [FALSE] L0216
L0216: JUMP            L0218
L0217: STOREB          #41b7,L04,(SP)+
L0218: STORE           Gef,#41b7
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
       JL              #01,#00 [TRUE] L0219
       JL              #01,#7b [TRUE] L0220
L0219: CALL_VN2        R0470 (#1c,#01,#7a,#00,#0d)
       PUSH            #00
       JUMP            L0221
L0220: LOADB           #41b7,#01 -> -(SP)
L0221: JE              (SP)+,#78 [FALSE] L0222
       JUMP            L0223
L0222: JUMP            L0206
L0223: JL              L04,#78 [FALSE] L0227
       JL              L04,#00 [TRUE] L0224
       JL              L04,#7b [TRUE] L0225
L0224: CALL_VN2        R0470 (#1e,L04,#7a,#00,#0d)
       JUMP            L0226
L0225: STOREB          #41b7,L04,#20
L0226: INC             L04
       JUMP            L0223
L0227: RET             #2710

Routine R0039, 11 locals

       SUB             G7b,#01 -> L02
       STORE           L05,#00
       JL              #00,#00 [TRUE] L0001
       JL              #00,#40 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1d,#00,#3f,#01,#0a)
       JUMP            L0003
L0002: LOADW           #4037,#00 -> L06
L0003: STORE           L01,#00
L0004: JG              L01,L02 [TRUE] L0035
       JL              L01,#00 [TRUE] L0005
       JL              L01,#40 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0a)
       JUMP            L0007
L0006: LOADW           #4037,L01 -> L07
L0007: JL              L01,#00 [TRUE] L0008
       JL              L01,#40 [TRUE] L0009
L0008: CALL_VN2        R0470 (#1f,L01,#3f,#01,#0c)
       JUMP            L0010
L0009: STOREW          #4137,L01,#00
L0010: STORE           L04,#00
       STORE           Gef,L00
       JE              Gef,#01,#03 [FALSE] L0015
       JG              #05,L07 [TRUE] L0011
       JG              L07,#0114 [TRUE] L0011
       JIN             L07,"Class" [FALSE] L0012
L0011: CALL_VN         R0470 (#04,L07)
       STORE           Gee,#02
       JUMP            L0013
L0012: STORE           Gee,L07
L0013: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G3f [FALSE] L0014
       STORE           L04,#01
L0014: JUMP            L0030
L0015: JE              Gef,#04 [FALSE] L0018
       JE              G5b,#ffff [FALSE] L0016
       STORE           L04,#01
       JUMP            L0017
L0016: JE              L07,G5b [TRUE] L0017
       STORE           L04,#01
L0017: JUMP            L0030
L0018: JE              Gef,#05 [FALSE] L0027
       JE              G5b,#ffff [FALSE] L0023
       JG              #05,L07 [TRUE] L0019
       JG              L07,#0114 [TRUE] L0019
       JIN             L07,"Class" [FALSE] L0020
L0019: CALL_VN         R0470 (#04,L07)
       STORE           Gee,#02
       JUMP            L0021
L0020: STORE           Gee,L07
L0021: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G3f [TRUE] L0022
       STORE           L04,#01
L0022: JUMP            L0026
L0023: JG              #01,L07 [TRUE] L0024
       JG              L07,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#02,L07)
       JUMP            L0026
L0025: JIN             L07,G5b [FALSE] L0026
       STORE           L04,#01
L0026: JUMP            L0030
L0027: JE              Gef,#06 [FALSE] L0029
       CALL_2S         R0034 (L07) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0028
       STORE           L04,#01
L0028: JUMP            L0030
L0029: STORE           L04,#01
L0030: JZ              L04 [TRUE] L0034
       JL              L01,#00 [TRUE] L0031
       JL              L01,#40 [TRUE] L0032
L0031: CALL_VN2        R0470 (#1f,L01,#3f,#01,#0c)
       JUMP            L0033
L0032: STOREW          #4137,L01,#01f4
L0033: INC             L05
       STORE           L06,L07
L0034: INC             L01
       JUMP            L0004
L0035: JE              L05,#01 [FALSE] L0036
       RET             L06
L0036: JE              L00,#06 [FALSE] L0040
       JZ              L05 [FALSE] L0040
       JL              #00,#00 [TRUE] L0037
       JL              #00,#40 [TRUE] L0038
L0037: CALL_VN2        R0470 (#1d,#00,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0039
L0038: LOADW           #4037,#00 -> -(SP)
L0039: RET_POPPED      
L0040: JZ              G65 [FALSE] L0041
       STORE           G66,#00
L0041: CALL_2N         R0041 (L00)
       JZ              G7b [FALSE] L0042
       RET             #ffff
L0042: JZ              G65 [FALSE] L0043
       CALL_1S         R0043 -> L01
       JL              L01,#00 [TRUE] L0043
       RET             L01
L0043: JE              G65,#01 [FALSE] L0081
       AND             G66,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0081
       JE              L00,#02,#03,#04 [TRUE] L0044
       JE              L00,#05 [TRUE] L0044
       STORE           G4c,#07
       RET             #ffff
L0044: STORE           L01,#00
       JL              #00,#00 [TRUE] L0045
       JL              #00,#40 [TRUE] L0046
L0045: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0047
L0046: LOADW           #3e57,#00 -> L09
L0047: STORE           L0a,#ffff
       CALL_1S         R0042 -> L02
       JUMP            L0049
L0048: CALL_1S         R0042 -> L02
L0049: JE              L02,#ffff [TRUE] L0075
       JL              L01,G67 [FALSE] L0075
       ADD             L01,L09 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0075
       STORE           L08,#00
       JG              #01,L02 [TRUE] L0050
       JG              L02,#0114 [FALSE] L0051
L0050: CALL_VN         R0470 (#03,L02)
       JUMP            L0052
L0051: TEST_ATTR       L02,#03 [TRUE] L0056
L0052: JG              #01,L02 [TRUE] L0053
       JG              L02,#0114 [FALSE] L0054
L0053: CALL_VN         R0470 (#03,L02)
       JUMP            L0055
L0054: TEST_ATTR       L02,#1a [TRUE] L0056
L0055: STORE           L08,#01
L0056: JE              L0a,#ffff [FALSE] L0057
       DIV             G7f,#14 -> L0a
       JUMP            L0058
L0057: JE              G67,#64 [FALSE] L0058
       DIV             G7f,#14 -> -(SP)
       JL              (SP)+,L0a [FALSE] L0058
       STORE           L08,#00
L0058: JE              L00,#03,#04 [FALSE] L0062
       JG              #05,L02 [TRUE] L0059
       JG              L02,#0114 [TRUE] L0059
       JIN             L02,"Class" [FALSE] L0060
L0059: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0061
L0060: STORE           Gee,L02
L0061: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G3f [TRUE] L0062
       STORE           L08,#00
L0062: JE              G59,#4e,#38 [FALSE] L0066
       JG              #05,L02 [TRUE] L0063
       JG              L02,#0114 [TRUE] L0063
       JIN             L02,"Class" [FALSE] L0064
L0063: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0065
L0064: STORE           Gee,L02
L0065: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G3f [FALSE] L0066
       STORE           L08,#00
L0066: CALL_VS         R0425 (L02,L08) -> L03
       JE              L03,#01 [FALSE] L0067
       STORE           L08,#01
       JUMP            L0068
L0067: JE              L03,#02 [FALSE] L0068
       STORE           L08,#00
L0068: JE              L08,#01 [FALSE] L0073
       INC             L01
       ADD             L01,L09 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0069
       JL              Gee,#40 [TRUE] L0071
L0069: CALL_VN2        R0470 (#1f,Gee,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0070
L0070: JUMP            L0072
L0071: STOREW          #3e57,(SP)+,L02
L0072: JUMP            L0074
L0073: STORE           L01,L01
L0074: JUMP            L0048
L0075: JL              L01,G67 [FALSE] L0076
       JL              G67,#64 [FALSE] L0076
       STORE           G4c,#10
       STORE           G62,G67
       STORE           G63,L01
       RET             #ffff
L0076: ADD             L01,L09 -> -(SP)
       JL              #00,#00 [TRUE] L0077
       JL              #00,#40 [TRUE] L0079
L0077: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0078
L0078: JUMP            L0080
L0079: STOREW          #3e57,#00,(SP)+
L0080: STORE           G64,L00
       RTRUE           
L0081: STORE           L01,#00
L0082: JL              L01,G7b [FALSE] L0086
       JL              L01,#00 [TRUE] L0083
       JL              L01,#40 [TRUE] L0084
L0083: CALL_VN2        R0470 (#1f,L01,#3f,#01,#0b)
       JUMP            L0085
L0084: STOREW          #40b7,L01,#00
L0085: INC             L01
       JUMP            L0082
L0086: STORE           L07,#01
       STORE           L01,#00
L0087: JL              L01,G7b [FALSE] L0117
       JL              L01,#00 [TRUE] L0088
       JL              L01,#40 [TRUE] L0089
L0088: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0090
L0089: LOADW           #40b7,L01 -> -(SP)
L0090: JZ              (SP)+ [FALSE] L0116
       PUSH            L07
       INC             L07
       JL              L01,#00 [TRUE] L0091
       JL              L01,#40 [TRUE] L0093
L0091: CALL_VN2        R0470 (#1f,L01,#3f,#01,#0b)
       JZ              (SP)+ [FALSE] L0092
L0092: JUMP            L0094
L0093: STOREW          #40b7,L01,(SP)+
L0094: STORE           L08,#00
       ADD             L01,#01 -> L02
L0095: JL              L02,G7b [FALSE] L0112
       JL              L02,#00 [TRUE] L0096
       JL              L02,#40 [TRUE] L0097
L0096: CALL_VN2        R0470 (#1d,L02,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0098
L0097: LOADW           #40b7,L02 -> -(SP)
L0098: JZ              (SP)+ [FALSE] L0111
       JL              L02,#00 [TRUE] L0099
       JL              L02,#40 [TRUE] L0100
L0099: CALL_VN2        R0470 (#1d,L02,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0101
L0100: LOADW           #4037,L02 -> -(SP)
L0101: JL              L01,#00 [TRUE] L0102
       JL              L01,#40 [TRUE] L0103
L0102: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0104
L0103: LOADW           #4037,L01 -> -(SP)
L0104: CALL_VS         R0044 ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0111
       STORE           L08,#01
       JL              L01,#00 [TRUE] L0105
       JL              L01,#40 [TRUE] L0106
L0105: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0107
L0106: LOADW           #40b7,L01 -> -(SP)
L0107: JL              L02,#00 [TRUE] L0108
       JL              L02,#40 [TRUE] L0110
L0108: CALL_VN2        R0470 (#1f,L02,#3f,#01,#0b)
       JZ              (SP)+ [FALSE] L0109
L0109: JUMP            L0111
L0110: STOREW          #40b7,L02,(SP)+
L0111: INC             L02
       JUMP            L0095
L0112: JE              L08,#01 [FALSE] L0116
       SUB             #01,L07 -> -(SP)
       JL              L01,#00 [TRUE] L0113
       JL              L01,#40 [TRUE] L0115
L0113: CALL_VN2        R0470 (#1f,L01,#3f,#01,#0b)
       JZ              (SP)+ [FALSE] L0114
L0114: JUMP            L0116
L0115: STOREW          #40b7,L01,(SP)+
L0116: INC             L01
       JUMP            L0087
L0117: DEC             L07
       STORE           G7c,L07
       JZ              G65 [FALSE] L0140
       JG              L07,#01 [FALSE] L0140
       STORE           L03,#ffff
       STORE           L01,#00
L0118: JL              L01,G7b [FALSE] L0139
       JL              L01,#00 [TRUE] L0119
       JL              L01,#40 [TRUE] L0120
L0119: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0c)
       PUSH            #00
       JUMP            L0121
L0120: LOADW           #4137,L01 -> -(SP)
L0121: JG              (SP)+,L03 [FALSE] L0128
       JL              L01,#00 [TRUE] L0122
       JL              L01,#40 [TRUE] L0123
L0122: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0c)
       JUMP            L0124
L0123: LOADW           #4137,L01 -> L03
L0124: JL              L01,#00 [TRUE] L0125
       JL              L01,#40 [TRUE] L0126
L0125: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0b)
       JUMP            L0127
L0126: LOADW           #40b7,L01 -> L02
L0127: MUL             L02,L02 -> L02
       STORE           L08,#00
       JUMP            L0138
L0128: JL              L01,#00 [TRUE] L0129
       JL              L01,#40 [TRUE] L0130
L0129: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0c)
       PUSH            #00
       JUMP            L0131
L0130: LOADW           #4137,L01 -> -(SP)
L0131: JE              (SP)+,L03 [FALSE] L0138
       JL              L01,#00 [TRUE] L0132
       JL              L01,#40 [TRUE] L0133
L0132: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0134
L0133: LOADW           #40b7,L01 -> -(SP)
L0134: JL              L01,#00 [TRUE] L0135
       JL              L01,#40 [TRUE] L0136
L0135: CALL_VN2        R0470 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0137
L0136: LOADW           #40b7,L01 -> -(SP)
L0137: MUL             (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,L02 [TRUE] L0138
       STORE           L08,#01
L0138: INC             L01
       JUMP            L0118
L0139: JZ              L08 [TRUE] L0140
       RFALSE          
L0140: JE              L07,#01 [FALSE] L0141
       STORE           G58,#01
L0141: CALL_1S         R0042 -> -(SP)
       RET_POPPED      

Routine R0040, 3 locals

       JE              G64,#04,#05 [FALSE] L0025
       STORE           L01,#01
       STORE           L02,#00
L0001: JL              #00,#00 [TRUE] L0002
       JL              #00,#40 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #3e57,#00 -> -(SP)
L0004: JG              L01,(SP)+ [TRUE] L0022
       JE              G64,#04 [FALSE] L0008
       JL              L01,#00 [TRUE] L0005
       JL              L01,#40 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #3e57,L01 -> -(SP)
L0007: JE              (SP)+,L00 [FALSE] L0014
L0008: JE              G64,#05 [FALSE] L0021
       JL              L01,#00 [TRUE] L0009
       JL              L01,#40 [TRUE] L0010
L0009: CALL_VN2        R0470 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0011
L0010: LOADW           #3e57,L01 -> -(SP)
L0011: PULL            Gee
       PUSH            Gee
       JG              #01,Gee [TRUE] L0012
       JG              Gee,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#02,(SP)+)
       JUMP            L0021
L0013: JIN             (SP)+,L00 [FALSE] L0021
L0014: INC             L02
       JL              L01,#00 [TRUE] L0015
       JL              L01,#40 [TRUE] L0016
L0015: CALL_VN2        R0470 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0017
L0016: LOADW           #3e57,L01 -> -(SP)
L0017: JL              L02,#00 [TRUE] L0018
       JL              L02,#40 [TRUE] L0020
L0018: CALL_VN2        R0470 (#1f,L02,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0019
L0019: JUMP            L0021
L0020: STOREW          #3e57,L02,(SP)+
L0021: INC             L01
       JUMP            L0001
L0022: JL              #00,#00 [TRUE] L0023
       JL              #00,#40 [TRUE] L0024
L0023: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JUMP            L0025
L0024: STOREW          #3e57,#00,L02
L0025: JE              G64,#02 [FALSE] L0053
       JE              G59,#4e [FALSE] L0053
       STORE           L01,#01
       STORE           L02,#00
L0026: JL              #00,#00 [TRUE] L0027
       JL              #00,#40 [TRUE] L0028
L0027: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       PUSH            #00
       JUMP            L0029
L0028: LOADW           #3e57,#00 -> -(SP)
L0029: JG              L01,(SP)+ [TRUE] L0034
       CALL_2S         R0031 (G3f) -> -(SP)
       JL              L01,#00 [TRUE] L0030
       JL              L01,#40 [TRUE] L0031
L0030: CALL_VN2        R0470 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0032
L0031: LOADW           #3e57,L01 -> -(SP)
L0032: CALL_2S         R0031 ((SP)+) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0033
       INC             L02
L0033: INC             L01
       JUMP            L0026
L0034: JE              G6e,#02 [TRUE] L0035
       JG              L02,#00 [FALSE] L0053
L0035: STORE           L01,#01
       STORE           L02,#00
L0036: JL              #00,#00 [TRUE] L0037
       JL              #00,#40 [TRUE] L0038
L0037: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       PUSH            #00
       JUMP            L0039
L0038: LOADW           #3e57,#00 -> -(SP)
L0039: JG              L01,(SP)+ [TRUE] L0050
       CALL_2S         R0031 (G3f) -> -(SP)
       JL              L01,#00 [TRUE] L0040
       JL              L01,#40 [TRUE] L0041
L0040: CALL_VN2        R0470 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0042
L0041: LOADW           #3e57,L01 -> -(SP)
L0042: CALL_2S         R0031 ((SP)+) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0049
       INC             L02
       JL              L01,#00 [TRUE] L0043
       JL              L01,#40 [TRUE] L0044
L0043: CALL_VN2        R0470 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0045
L0044: LOADW           #3e57,L01 -> -(SP)
L0045: JL              L02,#00 [TRUE] L0046
       JL              L02,#40 [TRUE] L0048
L0046: CALL_VN2        R0470 (#1f,L02,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0047
L0047: JUMP            L0049
L0048: STOREW          #3e57,L02,(SP)+
L0049: INC             L01
       JUMP            L0036
L0050: JL              #00,#00 [TRUE] L0051
       JL              #00,#40 [TRUE] L0052
L0051: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JUMP            L0053
L0052: STOREW          #3e57,#00,L02
L0053: JL              #00,#00 [TRUE] L0054
       JL              #00,#40 [TRUE] L0055
L0054: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0056
L0055: LOADW           #3e57,#00 -> L01
L0056: JZ              L01 [FALSE] L0057
       RET             #11
L0057: RFALSE          

Routine R0041, 10 locals

       AND             G66,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       INC             L06
L0001: AND             G66,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L06
L0002: AND             G66,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L06
L0003: AND             G66,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       INC             L06
L0004: JZ              G69 [TRUE] L0005
       INC             L06
L0005: STORE           L08,#28
       STORE           L09,#3c
       JE              L00,#01,#03,#04 [FALSE] L0006
       STORE           L08,#3c
       STORE           L09,#28
L0006: STORE           L04,#00
L0007: JL              L04,G7b [FALSE] L0052
       JL              L04,#00 [TRUE] L0008
       JL              L04,#40 [TRUE] L0009
L0008: CALL_VN2        R0470 (#1d,L04,#3f,#01,#0a)
       JUMP            L0010
L0009: LOADW           #4037,L04 -> L03
L0010: JG              #05,L03 [TRUE] L0011
       JG              L03,#0114 [TRUE] L0011
       JIN             L03,"Class" [FALSE] L0012
L0011: CALL_VN         R0470 (#04,L03)
       STORE           Gee,#02
       JUMP            L0013
L0012: STORE           Gee,L03
L0013: GET_PARENT      Gee -> L01
       STORE           L02,#00
       STORE           L07,#00
       AND             G66,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       JE              L01,G3f [FALSE] L0014
       INC             L07
L0014: AND             G66,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       JE              L01,G40 [FALSE] L0015
       INC             L07
L0015: AND             G66,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       JG              #01,L03 [TRUE] L0016
       JG              L03,#0114 [FALSE] L0017
L0016: CALL_VN         R0470 (#03,L03)
       JUMP            L0018
L0017: TEST_ATTR       L03,#09 [FALSE] L0018
       INC             L07
L0018: AND             G66,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       JG              #01,L03 [TRUE] L0019
       JG              L03,#0114 [FALSE] L0020
L0019: CALL_VN         R0470 (#03,L03)
       JUMP            L0021
L0020: TEST_ATTR       L03,#09 [TRUE] L0022
L0021: INC             L07
L0022: JZ              G69 [TRUE] L0023
       JE              L01,G69 [FALSE] L0023
       INC             L07
L0023: JL              L07,L06 [FALSE] L0027
       JL              L04,#00 [TRUE] L0024
       JL              L04,#40 [TRUE] L0025
L0024: CALL_VN2        R0470 (#1f,L04,#3f,#01,#0a)
       JUMP            L0026
L0025: STOREW          #4037,L04,#ffff
L0026: JUMP            L0051
L0027: STORE           L02,#00
       JG              #01,L03 [TRUE] L0028
       JG              L03,#0114 [FALSE] L0029
L0028: CALL_VN         R0470 (#03,L03)
       JUMP            L0030
L0029: TEST_ATTR       L03,#03 [TRUE] L0031
L0030: STORE           L02,#64
L0031: JE              L01,G3f [FALSE] L0032
       ADD             L02,L08 -> L02
       JUMP            L0034
L0032: JE              L01,G40 [FALSE] L0033
       ADD             L02,L09 -> L02
       JUMP            L0034
L0033: JE              L01,#06 [TRUE] L0034
       ADD             L02,#14 -> L02
L0034: CALL_VS         R0425 (L03,#02) -> -(SP)
       MUL             #03e8,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> L02
       JG              #01,L03 [TRUE] L0035
       JG              L03,#0114 [FALSE] L0036
L0035: CALL_VN         R0470 (#03,L03)
       JUMP            L0037
L0036: TEST_ATTR       L03,#11 [TRUE] L0038
L0037: ADD             L02,#0a -> L02
L0038: JE              L03,G3f [TRUE] L0039
       ADD             L02,#05 -> L02
L0039: CALL_2S         R0071 (L03) -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0040
       JL              Gee,#0c [TRUE] L0042
L0040: CALL_VN2        R0470 (#1d,Gee,#0b,#01,#13)
       JZ              (SP)+ [FALSE] L0041
L0041: PUSH            #00
       JUMP            L0043
L0042: LOADW           #43ea,(SP)+ -> -(SP)
L0043: AND             G6a,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       ADD             L02,#01 -> L02
L0044: JL              L04,#00 [TRUE] L0045
       JL              L04,#40 [TRUE] L0046
L0045: CALL_VN2        R0470 (#1d,L04,#3f,#01,#0c)
       PUSH            #00
       JUMP            L0047
L0046: LOADW           #4137,L04 -> -(SP)
L0047: ADD             (SP)+,L02 -> -(SP)
       JL              L04,#00 [TRUE] L0048
       JL              L04,#40 [TRUE] L0050
L0048: CALL_VN2        R0470 (#1f,L04,#3f,#01,#0c)
       JZ              (SP)+ [FALSE] L0049
L0049: JUMP            L0051
L0050: STOREW          #4137,L04,(SP)+
L0051: INC             L04
       JUMP            L0007
L0052: STORE           L04,#00
L0053: JL              L04,G7b [FALSE] L0078
L0054: JL              L04,#00 [TRUE] L0055
       JL              L04,#40 [TRUE] L0056
L0055: CALL_VN2        R0470 (#1d,L04,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0057
L0056: LOADW           #4037,L04 -> -(SP)
L0057: JE              (SP)+,#ffff [FALSE] L0077
       SUB             G7b,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0058
       DEC             G7b
       JUMP            L0077
L0058: STORE           L05,L04
L0059: JL              L05,G7b [FALSE] L0076
       ADD             L05,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0060
       JL              Gee,#40 [TRUE] L0062
L0060: CALL_VN2        R0470 (#1d,Gee,#3f,#01,#0a)
       JZ              (SP)+ [FALSE] L0061
L0061: PUSH            #00
       JUMP            L0063
L0062: LOADW           #4037,(SP)+ -> -(SP)
L0063: JL              L05,#00 [TRUE] L0064
       JL              L05,#40 [TRUE] L0066
L0064: CALL_VN2        R0470 (#1f,L05,#3f,#01,#0a)
       JZ              (SP)+ [FALSE] L0065
L0065: JUMP            L0067
L0066: STOREW          #4037,L05,(SP)+
L0067: ADD             L05,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0068
       JL              Gee,#40 [TRUE] L0070
L0068: CALL_VN2        R0470 (#1d,Gee,#3f,#01,#0c)
       JZ              (SP)+ [FALSE] L0069
L0069: PUSH            #00
       JUMP            L0071
L0070: LOADW           #4137,(SP)+ -> -(SP)
L0071: JL              L05,#00 [TRUE] L0072
       JL              L05,#40 [TRUE] L0074
L0072: CALL_VN2        R0470 (#1f,L05,#3f,#01,#0c)
       JZ              (SP)+ [FALSE] L0073
L0073: JUMP            L0075
L0074: STOREW          #4137,L05,(SP)+
L0075: INC             L05
       JUMP            L0059
L0076: DEC             G7b
       JUMP            L0054
L0077: INC             L04
       JUMP            L0053
L0078: RTRUE           

Routine R0042, 4 locals

       STORE           L00,#00
       STORE           L02,#ffff
       STORE           L03,#00
L0001: JL              L03,G7b [FALSE] L0009
       JL              L03,#00 [TRUE] L0002
       JL              L03,#40 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,L03,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #4037,L03 -> -(SP)
L0004: JL              (SP)+,#00 [TRUE] L0008
       JL              L03,#00 [TRUE] L0005
       JL              L03,#40 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1d,L03,#3f,#01,#0c)
       JUMP            L0007
L0006: LOADW           #4137,L03 -> L01
L0007: JG              L01,L02 [FALSE] L0008
       STORE           L02,L01
       STORE           L00,L03
L0008: INC             L03
       JUMP            L0001
L0009: JL              L02,#00 [FALSE] L0010
       RET             #ffff
L0010: JL              L00,#00 [TRUE] L0011
       JL              L00,#40 [TRUE] L0012
L0011: CALL_VN2        R0470 (#1d,L00,#3f,#01,#0a)
       JUMP            L0013
L0012: LOADW           #4037,L00 -> L03
L0013: JL              L00,#00 [TRUE] L0014
       JL              L00,#40 [TRUE] L0015
L0014: CALL_VN2        R0470 (#1f,L00,#3f,#01,#0a)
       JUMP            L0016
L0015: STOREW          #4037,L00,#ffff
L0016: STORE           G7f,L02
       RET             L03

Routine R0043, 4 locals

       STORE           L00,#ffff
       STORE           L02,#fc18
       STORE           L03,#00
L0001: JL              L03,G7b [FALSE] L0009
       JL              L03,#00 [TRUE] L0002
       JL              L03,#40 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,L03,#3f,#01,#0c)
       JUMP            L0004
L0003: LOADW           #4137,L03 -> L01
L0004: JE              L01,L02 [FALSE] L0005
       STORE           L00,#ffff
L0005: JG              L01,L02 [FALSE] L0008
       STORE           L02,L01
       JL              L03,#00 [TRUE] L0006
       JL              L03,#40 [TRUE] L0007
L0006: CALL_VN2        R0470 (#1d,L03,#3f,#01,#0a)
       JUMP            L0008
L0007: LOADW           #4037,L03 -> L00
L0008: INC             L03
       JUMP            L0001
L0009: STORE           G7f,L02
       RET             L00

Routine R0044, 9 locals

       JE              L00,L01 [TRUE] RTRUE
       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       JG              #05,L00 [TRUE] L0001
       JG              L00,#0114 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       JG              #05,L01 [TRUE] L0004
       JG              L01,#0114 [TRUE] L0004
       JIN             L01,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L01
L0006: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#06 [TRUE] RFALSE
       CALL_VS         R0481 (L00,#30) -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0007
       CALL_VS         R0481 (L01,#30) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0008
L0007: CALL_VS         R0481 (L01,#30) -> Gef
       PUSH            Gef
       CALL_VS         R0481 (L00,#30) -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] RFALSE
       STORE           G3b,#1004
       STORE           G3c,L00
       STORE           G3d,L01
       STORE           L07,G80
       CALL_VS         R0101 (L00,#30) -> L06
       STORE           G80,L07
       JE              L06,#ffff [TRUE] RTRUE
       JE              L06,#fffe [TRUE] RFALSE
L0008: JG              #01,L00 [TRUE] L0009
       JG              L00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,L00
L0011: GET_PROP_ADDR   Gee,#01 -> Gef
       STORE           L02,Gef
       JG              #01,L00 [TRUE] L0012
       JG              L00,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#16,L00)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L00
L0014: GET_PROP_ADDR   Gee,#01 -> Gef
       JZ              Gef [TRUE] L0015
       GET_PROP_LEN    Gef -> Gef
L0015: PUSH            Gef
       DIV             (SP)+,#02 -> L04
       JG              #01,L01 [TRUE] L0016
       JG              L01,#0114 [FALSE] L0017
L0016: CALL_VN         R0470 (#15,L01)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L01
L0018: GET_PROP_ADDR   Gee,#01 -> Gef
       STORE           L03,Gef
       JG              #01,L01 [TRUE] L0019
       JG              L01,#0114 [FALSE] L0020
L0019: CALL_VN         R0470 (#16,L01)
       STORE           Gee,#02
       JUMP            L0021
L0020: STORE           Gee,L01
L0021: GET_PROP_ADDR   Gee,#01 -> Gef
       JZ              Gef [TRUE] L0022
       GET_PROP_LEN    Gef -> Gef
L0022: PUSH            Gef
       DIV             (SP)+,#02 -> L05
       STORE           L06,#00
L0023: JL              L06,L04 [FALSE] L0027
       STORE           L08,#00
       STORE           L07,#00
L0024: JL              L07,L05 [FALSE] L0026
       CALL_VS         R0484 (L03,L07) -> -(SP)
       CALL_VS         R0484 (L02,L06) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0025
       STORE           L08,#01
L0025: INC             L07
       JUMP            L0024
L0026: JZ              L08 [TRUE] RFALSE
       INC             L06
       JUMP            L0023
L0027: STORE           L07,#00
L0028: JL              L07,L05 [FALSE] L0032
       STORE           L08,#00
       STORE           L06,#00
L0029: JL              L06,L04 [FALSE] L0031
       CALL_VS         R0484 (L03,L07) -> -(SP)
       CALL_VS         R0484 (L02,L06) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0030
       STORE           L08,#01
L0030: INC             L06
       JUMP            L0029
L0031: JZ              L08 [TRUE] RFALSE
       INC             L07
       JUMP            L0028
L0032: RTRUE           

Routine R0045, 4 locals

       JZ              L00 [FALSE] L0002
       STORE           L01,G82
       CALL_2S         R0009 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0435 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2N         R0488 (L01)
L0001: INC             L00
       STORE           L03,#01
L0002: STORE           L02,L00
L0003: JL              L02,G4f [FALSE] L0017
       JL              L02,#00 [TRUE] L0004
       JL              L02,#20 [TRUE] L0005
L0004: CALL_VN2        R0470 (#1d,L02,#1f,#01,#05)
       JUMP            L0006
L0005: LOADW           #3ef7,L02 -> L01
L0006: JE              L01,#ffff [FALSE] L0007
       JUMP            L0016
L0007: JZ              L03 [TRUE] L0008
       CALL_2N         R0487 (#20)
L0008: JZ              L01 [FALSE] L0009
       CALL_2N         R0489 (S033)
       JUMP            L0015
L0009: JE              L01,#01 [FALSE] L0010
       CALL_2N         R0489 (S034)
       JUMP            L0015
L0010: JL              L01,#2710 [TRUE] L0011
       SUB             L01,#2710 -> -(SP)
       CALL_2S         R0073 ((SP)+) -> -(SP)
       CALL_2N         R0488 ((SP)+)
       JUMP            L0015
L0011: JG              #01,L01 [TRUE] L0012
       JG              L01,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#02,L01)
       JUMP            L0014
L0013: JIN             L01,"compass" [FALSE] L0014
       CALL_2S         R0010 (G82) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       CALL_VS         R0481 (L01,#15) -> Gef
       PUSH            Gef
       CALL_2N         R0006 ((SP)+)
       JUMP            L0015
L0014: CALL_2N         R0137 (L01)
L0015: STORE           L03,#01
L0016: INC             L02
       JUMP            L0003
L0017: RTRUE           

Routine R0046, 3 locals

       STORE           G86,G85
       JZ              G75 [TRUE] L0001
       STORE           G76,G75
       RET             #12
L0001: DEC             G80
       CALL_1S         R0065 -> L01
       STORE           L02,#04
       JE              L01,G70 [FALSE] L0002
       STORE           G72,G70
       STORE           G73,G71
       STORE           L02,#0e
L0002: STORE           L00,G3f
L0003: JG              #05,L00 [TRUE] L0004
       JG              L00,#0114 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       JG              #05,L00 [TRUE] L0007
       JG              L00,#0114 [TRUE] L0007
       JIN             L00,"Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PARENT      Gee -> L00
       JUMP            L0003
L0010: DEC             G80
       JG              #01,L00 [TRUE] L0011
       JG              L00,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#18 [FALSE] L0013
       CALL_VS         R0061 (L00,G80) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0013
       STORE           L02,#0d
       JUMP            L0016
L0013: CALL_1N         R0033
       JG              #01,L00 [TRUE] L0014
       JG              L00,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,L00)
       JUMP            L0016
L0015: TEST_ATTR       L00,#18 [FALSE] L0016
       CALL_VS         R0061 (L00,G80) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0016
       STORE           L02,#0d
L0016: INC             G80
       JG              G4c,L02 [FALSE] L0017
       RET             G4c
L0017: RET             L02

Routine R0047, 3 locals

       JL              #00,#00 [TRUE] L0001
       JL              #00,#40 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0003
L0002: LOADW           #3e57,#00 -> L01
L0003: JE              L01,#3f [FALSE] L0004
       STORE           G43,#01
       RTRUE           
L0004: STORE           L02,#01
L0005: JG              L02,L01 [TRUE] L0009
       JL              L02,#00 [TRUE] L0006
       JL              L02,#40 [TRUE] L0007
L0006: CALL_VN2        R0470 (#1d,L02,#3f,#01,#03)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #3e57,L02 -> -(SP)
L0008: JE              L00,(SP)+ [TRUE] RTRUE
       INC             L02
       JUMP            L0005
L0009: INC             L01
       JL              L01,#00 [TRUE] L0010
       JL              L01,#40 [TRUE] L0011
L0010: CALL_VN2        R0470 (#1f,L01,#3f,#01,#03)
       JUMP            L0012
L0011: STOREW          #3e57,L01,L00
L0012: JL              #00,#00 [TRUE] L0013
       JL              #00,#40 [TRUE] L0014
L0013: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JUMP            L0015
L0014: STOREW          #3e57,#00,L01
L0015: RTRUE           

Routine R0048, 5 locals

       JL              #00,#00 [TRUE] L0001
       JL              #00,#40 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0003
L0002: LOADW           #3e57,#00 -> L01
L0003: STORE           L04,#00
       STORE           L02,#01
L0004: JG              L02,L01 [TRUE] L0023
       JL              L02,#00 [TRUE] L0005
       JL              L02,#40 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1d,L02,#3f,#01,#03)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #3e57,L02 -> -(SP)
L0007: JE              L00,(SP)+ [FALSE] L0022
       STORE           L03,L02
L0008: JG              L03,L01 [TRUE] L0017
       ADD             L03,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0009
       JL              Gee,#40 [TRUE] L0011
L0009: CALL_VN2        R0470 (#1d,Gee,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0010
L0010: PUSH            #00
       JUMP            L0012
L0011: LOADW           #3e57,(SP)+ -> -(SP)
L0012: JL              L03,#00 [TRUE] L0013
       JL              L03,#40 [TRUE] L0015
L0013: CALL_VN2        R0470 (#1f,L03,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0014
L0014: JUMP            L0016
L0015: STOREW          #3e57,L03,(SP)+
L0016: INC             L03
       JUMP            L0008
L0017: DEC             L01
       PUSH            L01
       JL              #00,#00 [TRUE] L0018
       JL              #00,#40 [TRUE] L0020
L0018: CALL_VN2        R0470 (#1f,#00,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0019
L0019: JUMP            L0021
L0020: STOREW          #3e57,#00,(SP)+
L0021: RET             L04
L0022: INC             L02
       JUMP            L0004
L0023: STORE           L04,#09
       RET             L04

Routine R0049, 4 locals

L0001: JL              #00,#00 [TRUE] L0002
       JL              #00,#40 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0004
L0003: LOADW           #3e57,#00 -> L01
L0004: STORE           L02,#01
L0005: JG              L02,L01 [TRUE] L0015
       JL              L02,#00 [TRUE] L0006
       JL              L02,#40 [TRUE] L0007
L0006: CALL_VN2        R0470 (#1d,L02,#3f,#01,#03)
       JUMP            L0008
L0007: LOADW           #3e57,L02 -> L03
L0008: JG              #01,L03 [TRUE] L0009
       JG              L03,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L03)
       JUMP            L0013
L0010: STORE           Gef,L03
       STORE           Gee,L00
       JL              Gee,#00 [TRUE] L0011
       JL              Gee,#30 [TRUE] L0012
L0011: CALL_VN         R0470 (#13,Gef,Gee)
       JUMP            L0013
L0012: TEST_ATTR       L03,L00 [TRUE] L0014
L0013: CALL_2N         R0048 (L03)
       JUMP            L0001
L0014: INC             L02
       JUMP            L0005
L0015: RTRUE           

Routine R0050, 1 local

       JG              G5e,#00 [FALSE] L0006
       JL              G5e,#31 [FALSE] L0006
       SUB             G5e,#01 -> -(SP)
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0005
L0002: STORE           Gef,L00
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0003
       JL              Gee,#30 [TRUE] L0004
L0003: CALL_VN         R0470 (#13,Gef,Gee)
       JUMP            L0005
L0004: TEST_ATTR       L00,(SP)+ [TRUE] RTRUE
L0005: RFALSE          
L0006: STORE           G35,L00
       CALL_1S         G5e -> -(SP)
       RET_POPPED      

Routine R0051, 5 locals

       MUL             L00,#02 -> -(SP)
       SUB             (SP)+,#01 -> L03
       MUL             L02,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       PUSH            L04
       INC             L04
       CALL_VS         R0484 (L01,(SP)+) -> -(SP)
       PUSH            L03
       INC             L03
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0001
       JL              Gee,#20 [TRUE] L0004
L0001: CALL_VN2        R0470 (#1f,Gee,#40,#14,#0e)
       JZ              (SP)+ [FALSE] L0002
L0002: JZ              (SP)+ [FALSE] L0003
L0003: JUMP            L0005
L0004: STOREW          #4232,(SP)+,(SP)+
L0005: CALL_VS         R0484 (L01,L04) -> -(SP)
       JL              L03,#00 [TRUE] L0006
       JL              L03,#20 [TRUE] L0008
L0006: CALL_VN2        R0470 (#1f,L03,#40,#14,#0e)
       JZ              (SP)+ [FALSE] L0007
L0007: JUMP            L0009
L0008: STOREW          #4232,L03,(SP)+
L0009: RTRUE           

Routine R0052, 4 locals

       STORE           L03,#00
       JZ              G75 [TRUE] L0001
       STORE           G77,#02
       CALL_1S         G75 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JE              G3f,L00,L01 [FALSE] L0002
       CALL_2S         R0429 (G3f) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: JE              L02,#05 [FALSE] L0004
       JE              G5b,#ffff [TRUE] L0004
       CALL_2S         R0053 (G5b) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VN         R0056 (G5b,#00,L02)
L0003: JUMP            L0019
L0004: JZ              L00 [TRUE] L0011
       JG              #01,L00 [TRUE] L0005
       JG              L00,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,L00)
       JUMP            L0007
L0006: TEST_ATTR       L00,#14 [TRUE] L0010
L0007: JG              #01,L00 [TRUE] L0008
       JG              L00,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0009: TEST_ATTR       L00,#04 [FALSE] L0011
L0010: CALL_VN         R0057 (L00,L00,L02)
L0011: CALL_VN         R0056 (L00,L01,L02)
       JZ              L01 [TRUE] L0018
       JG              #01,L01 [TRUE] L0012
       JG              L01,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,L01)
       JUMP            L0014
L0013: TEST_ATTR       L01,#14 [TRUE] L0017
L0014: JG              #01,L01 [TRUE] L0015
       JG              L01,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,L01)
       JUMP            L0018
L0016: TEST_ATTR       L01,#04 [FALSE] L0018
L0017: CALL_VN         R0057 (L01,L01,L02)
L0018: CALL_VN         R0056 (L01,#00,L02)
L0019: JE              #13,L00,L01 [FALSE] L0035
       CALL_VN         R0057 (G3f,G3f,L02)
       JG              #05,G3f [TRUE] L0020
       JG              G3f,#0114 [TRUE] L0020
       JIN             G3f,"Class" [FALSE] L0021
L0020: CALL_VN         R0470 (#04,G3f)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,G3f
L0022: GET_PARENT      Gee -> -(SP)
       PULL            Gef
       JG              #01,Gef [TRUE] L0023
       JG              Gef,#0114 [FALSE] L0024
L0023: CALL_VN         R0470 (#03,Gef)
       JUMP            L0025
L0024: TEST_ATTR       Gef,#14 [TRUE] L0028
L0025: JG              #01,Gef [TRUE] L0026
       JG              Gef,#0114 [FALSE] L0027
L0026: CALL_VN         R0470 (#03,Gef)
       JUMP            L0035
L0027: TEST_ATTR       Gef,#04 [FALSE] L0035
L0028: JG              #05,G3f [TRUE] L0029
       JG              G3f,#0114 [TRUE] L0029
       JIN             G3f,"Class" [FALSE] L0030
L0029: CALL_VN         R0470 (#04,G3f)
       STORE           Gee,#02
       JUMP            L0031
L0030: STORE           Gee,G3f
L0031: GET_PARENT      Gee -> -(SP)
       JG              #05,G3f [TRUE] L0032
       JG              G3f,#0114 [TRUE] L0032
       JIN             G3f,"Class" [FALSE] L0033
L0032: CALL_VN         R0470 (#04,G3f)
       STORE           Gee,#02
       JUMP            L0034
L0033: STORE           Gee,G3f
L0034: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0057 ((SP)+,(SP)+,L02)
L0035: RTRUE           

Routine R0053, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#14 [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#17 [TRUE] RTRUE
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0008: TEST_ATTR       L00,#04 [FALSE] L0011
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#0e [TRUE] RTRUE
L0011: RFALSE          

Routine R0054, 1 local

       JE              G74,#00,#01 [TRUE] L0001
       CALL_2N         R0055 (L00)
       RTRUE           
L0001: STORE           G80,G7e
       CALL_2N         R0060 (L00)
       STORE           G7a,#01
       RTRUE           

Routine R0055, 3 locals

       STORE           L01,G74
       STORE           L02,G3c
       STORE           Gef,G74
       JE              Gef,#03 [FALSE] L0003
       CALL_VS         R0481 (L00,#1a) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,#ffff [FALSE] L0001
       RTRUE           
L0001: JZ              G3c [FALSE] L0002
       CALL_VS         R0101 (L00,#1a) -> G3c
L0002: JUMP            L0011
L0003: JE              Gef,#04 [FALSE] L0006
       CALL_VS         R0481 (L00,#1b) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,#ffff [FALSE] L0004
       RTRUE           
L0004: JZ              G3c [FALSE] L0005
       CALL_VS         R0101 (L00,#1b) -> G3c
L0005: JUMP            L0011
L0006: JE              Gef,#02 [FALSE] L0008
       CALL_VS         R0481 (L00,#2c) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,#ffff [FALSE] L0007
       RTRUE           
L0007: CALL_VN         R0098 (L00,#2c)
       JUMP            L0011
L0008: JE              Gef,#06 [FALSE] L0010
       JE              L00,G3c [FALSE] L0009
       STORE           G3d,#01
L0009: JUMP            L0011
L0010: JE              Gef,#05 [FALSE] L0011
       CALL_2N         G3c (L00)
       STORE           G3c,L02
L0011: STORE           G74,L01
       RTRUE           

Routine R0056, 5 locals

       JZ              L00 [TRUE] RTRUE
       JZ              G65 [FALSE] L0001
       JE              L00,G40 [FALSE] L0001
       JZ              G74 [FALSE] L0001
       JE              L02,#06 [TRUE] L0001
       CALL_2N         R0056 (#06)
L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0114 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_CHILD       Gee -> L03 [FALSE] L0005
L0005: JZ              L03 [TRUE] L0010
       JG              #05,L03 [TRUE] L0006
       JG              L03,#0114 [TRUE] L0006
       JIN             L03,"Class" [FALSE] L0007
L0006: CALL_VN         R0470 (#08,L03)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L03
L0008: GET_SIBLING     Gee -> L04 [FALSE] L0009
L0009: CALL_VN         R0057 (L03,L01,L02)
       STORE           L03,L04
       JUMP            L0005
L0010: RTRUE           

Routine R0057, 6 locals

       JE              G74,#00,#01 [TRUE] L0001
       CALL_2N         R0055 (L00)
       JUMP            L0008
L0001: JG              G7e,G81 [TRUE] L0006
       STORE           G80,G7e
       CALL_1S         R0064 -> L03
       JE              L03,#01 [FALSE] L0002
       JE              G16,L00 [FALSE] L0002
       CALL_VN         R0059 (L00,#01)
L0002: JL              L03,#02 [TRUE] L0006
       JL              L03,#80 [FALSE] L0006
       JL              L03,#00 [TRUE] L0003
       JL              L03,#0d [TRUE] L0004
L0003: CALL_VN2        R0470 (#1d,L03,#0c,#03,#14)
       PUSH            #00
       JUMP            L0005
L0004: LOADW           #4402,L03 -> -(SP)
L0005: JE              (SP)+,L00 [FALSE] L0006
       CALL_VN         R0059 (L00,#01)
L0006: STORE           G80,G7e
       CALL_2S         R0060 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0008
       JG              G6c,#00 [FALSE] L0008
       JE              G7e,G6c [TRUE] L0008
       STORE           G80,G6c
       CALL_2S         R0060 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0007
       STORE           G7e,G6c
       CALL_1N         R0032
L0007: STORE           G80,G7e
L0008: JG              #05,L00 [TRUE] L0009
       JG              L00,#0114 [TRUE] L0009
       JIN             L00,"Class" [FALSE] L0010
L0009: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,L00
L0011: GET_CHILD       Gee -> -(SP) [FALSE] L0012
L0012: JZ              (SP)+ [TRUE] L0013
       JE              L00,L01 [TRUE] L0013
       CALL_2S         R0053 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0013
       CALL_VN         R0056 (L00,L01,L02)
L0013: JG              #01,L00 [TRUE] L0014
       JG              L00,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0016
L0015: STORE           Gee,L00
L0016: GET_PROP_ADDR   Gee,#18 -> Gef
       STORE           L04,Gef
       JZ              L04 [TRUE] L0026
       CALL_VS         R0484 (L04,#00) -> -(SP)
       CALL_VS         R0143 ((SP)+,G03) -> -(SP)
       JG              (SP)+,#00 [TRUE] L0017
       PUSH            #00
       JUMP            L0018
L0017: PUSH            #01
L0018: PULL            L03
       JZ              L03 [TRUE] L0019
       ADD             #02,L02 -> G78
       CALL_VN         R0101 (L00,#18)
       STORE           G78,#00
       JUMP            L0026
L0019: JG              #01,L00 [TRUE] L0020
       JG              L00,#0114 [FALSE] L0021
L0020: CALL_VN         R0470 (#16,L00)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,L00
L0022: GET_PROP_ADDR   Gee,#18 -> Gef
       JZ              Gef [TRUE] L0023
       GET_PROP_LEN    Gef -> Gef
L0023: STORE           L05,Gef
       STORE           L03,#00
L0024: MUL             #02,L03 -> -(SP)
       JL              (SP)+,L05 [FALSE] L0026
       CALL_VS         R0484 (L04,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0025
       CALL_VS         R0484 (L04,L03) -> -(SP)
       CALL_VN         R0057 ((SP)+,#00,L02)
L0025: INC             L03
       JUMP            L0024
L0026: RTRUE           

Routine R0058, 1 local

       JL              G78,#02 [TRUE] L0001
       SUB             G78,#02 -> -(SP)
       CALL_VN         R0057 (L00,#00,(SP)+)
L0001: JE              G78,#01 [FALSE] L0002
       CALL_2S         R0113 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       STORE           G79,#01
L0002: RTRUE           

Routine R0059, 3 locals

       JZ              G5e [TRUE] L0001
       CALL_2S         R0050 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       RTRUE           
L0001: JL              L01,G7d [TRUE] RTRUE
       JG              L01,G7d [FALSE] L0002
       STORE           G7d,L01
       STORE           G7b,#00
       JUMP            L0007
L0002: MUL             #02,G7b -> -(SP)
       JL              (SP)+,#80 [FALSE] RTRUE
       STORE           L02,#00
L0003: JL              L02,G7b [FALSE] L0007
       JL              L02,#00 [TRUE] L0004
       JL              L02,#40 [TRUE] L0005
L0004: CALL_VN2        R0470 (#1d,L02,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0006
L0005: LOADW           #4037,L02 -> -(SP)
L0006: JE              (SP)+,L00 [TRUE] RTRUE
       INC             L02
       JUMP            L0003
L0007: PUSH            G7b
       INC             G7b
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0008
       JL              Gee,#40 [TRUE] L0010
L0008: CALL_VN2        R0470 (#1f,Gee,#3f,#01,#0a)
       JZ              (SP)+ [FALSE] L0009
L0009: JUMP            L0011
L0010: STOREW          #4037,(SP)+,L00
L0011: RTRUE           

Routine R0060, 5 locals

       STORE           G6f,#00
       JG              G80,G81 [FALSE] L0002
       JZ              G65 [TRUE] L0001
       STORE           G6f,#70
L0001: CALL_VN         R0059 (L00,#00)
       RTRUE           
L0002: CALL_VS         R0481 (L00,#30) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0009
       STORE           G3b,#ffff
       STORE           L04,G80
       CALL_VS         R0101 (L00,#30) -> L02
       JG              L02,#00 [FALSE] L0008
       ADD             L04,L02 -> G80
L0003: JE              G3b,#1005 [FALSE] L0004
       OR              G6f,#04 -> G6f
L0004: AND             G6f,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JZ              G6d [FALSE] L0005
       STORE           L02,#00
       JUMP            L0007
L0005: JZ              G65 [FALSE] L0006
       STORE           G65,#01
       STORE           G66,#00
       STORE           G67,#00
L0006: OR              G66,#08 -> G66
       JZ              G67 [FALSE] L0007
       STORE           G67,#64
L0007: CALL_VN         R0059 (L00,L02)
       RET             L02
L0008: JZ              L02 [FALSE] L0009
       JUMP            L0017
L0009: STORE           G3b,#ffff
       CALL_1S         R0064 -> L03
       JE              L03,#01 [FALSE] L0010
       JE              G16,L00 [FALSE] L0010
       STORE           L02,#01
       JUMP            L0003
L0010: JL              L03,#02 [TRUE] L0014
       JL              L03,#80 [FALSE] L0014
       JL              L03,#00 [TRUE] L0011
       JL              L03,#0d [TRUE] L0012
L0011: CALL_VN2        R0470 (#1d,L03,#0c,#03,#14)
       PUSH            #00
       JUMP            L0013
L0012: LOADW           #4402,L03 -> -(SP)
L0013: JE              (SP)+,L00 [FALSE] L0014
       STORE           L02,#01
       JUMP            L0003
L0014: DEC             G80
       STORE           L04,G80
       CALL_2S         R0437 (L00) -> L01
       JL              L01,#00 [FALSE] L0015
       INC             G80
L0015: JG              L01,#00 [FALSE] L0016
       STORE           L02,L01
       JUMP            L0003
L0016: JZ              L01 [TRUE] L0017
       SUB             G80,#01 -> -(SP)
       CALL_VS         R0061 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
L0017: JZ              G65 [TRUE] L0018
       STORE           L02,#00
       STORE           G3b,#ffff
       JUMP            L0003
L0018: RFALSE          
L0019: JL              L01,#00 [FALSE] L0022
       STORE           L01,#01
       CALL_VS         R0483 (L03,#06) -> -(SP)
       AND             (SP)+,#74 -> G6f
       CALL_1S         R0065 -> L03
L0020: SUB             G80,#01 -> -(SP)
       CALL_VS         R0061 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       INC             L01
       JZ              L03 [TRUE] L0021
       CALL_VS         R0483 (L03,#06) -> -(SP)
       AND             (SP)+,#74 -> -(SP)
       OR              G6f,(SP)+ -> G6f
L0021: CALL_1S         R0065 -> L03
       JUMP            L0020
L0022: STORE           L02,L01
       JUMP            L0003

Routine R0061, 6 locals

       JZ              L00 [TRUE] RFALSE
       STORE           L03,G80
       STORE           G80,L01
       CALL_1S         R0066 -> L02
       STORE           G80,L03
       JL              G3e,#0100 [TRUE] L0002
       CALL_VS         G3e (L00,L02) -> L03
       JL              L03,#00 [TRUE] L0001
       RET             L03
L0001: SUB             #00,L03 -> L05
       JUMP            L0003
L0002: STORE           L05,G3e
L0003: CALL_VS         R0465 (L00,L05) -> L03
       CALL_VS         R0466 (L00,L05) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0004: JG              L05,L04 [TRUE] L0005
       CALL_VS         R0484 (L03,L05) -> -(SP)
       JE              L02,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0004
L0005: RFALSE          

Routine R0062, 6 locals

       CALL_VS         R0465 (L01,L02) -> L03
       CALL_VS         R0466 (L01,L02) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0001: JG              L05,L04 [TRUE] L0002
       CALL_VS         R0484 (L03,L05) -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0001
L0002: RFALSE          

Routine R0063, 3 locals

       STORE           L02,#00
L0001: JL              L02,L01 [FALSE] L0007
       CALL_VS         R0483 (L00,L02) -> -(SP)
       ADD             #02,L02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0002
       JL              Gee,#7b [TRUE] L0005
L0002: CALL_VN2        R0470 (#1e,Gee,#7a,#00,#10)
       JZ              (SP)+ [FALSE] L0003
L0003: JZ              (SP)+ [FALSE] L0004
L0004: JUMP            L0006
L0005: STOREB          #42b4,(SP)+,(SP)+
L0006: INC             L02
       JUMP            L0001
L0007: JL              #01,#00 [TRUE] L0008
       JL              #01,#7b [TRUE] L0009
L0008: CALL_VN2        R0470 (#1e,#01,#7a,#00,#10)
       JUMP            L0010
L0009: STOREB          #42b4,#01,L01
L0010: CALL_VN         R0023 (#42b4,#4273)
       JL              #01,#00 [TRUE] L0011
       JL              #01,#20 [TRUE] L0012
L0011: CALL_VN2        R0470 (#1d,#01,#40,#14,#0f)
       PUSH            #00
       JUMP            L0013
L0012: LOADW           #4273,#01 -> -(SP)
L0013: RET_POPPED      

Routine R0064, 3 locals

       CALL_1S         R0065 -> L00
       JZ              L00 [TRUE] RFALSE
       JE              L00,"me","myself","self" [FALSE] L0001
       RTRUE           
L0001: JL              #00,#00 [TRUE] L0002
       JL              #00,#0d [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,#00,#0c,#03,#14)
       JUMP            L0004
L0003: LOADW           #4402,#00 -> L02
L0004: STORE           L01,#01
       JUMP            L0006
L0005: ADD             L01,#03 -> L01
L0006: JG              L01,L02 [TRUE] L0011
       JL              L01,#00 [TRUE] L0007
       JL              L01,#0d [TRUE] L0008
L0007: CALL_VN2        R0470 (#1d,L01,#0c,#03,#14)
       PUSH            #00
       JUMP            L0009
L0008: LOADW           #4402,L01 -> -(SP)
L0009: JE              L00,(SP)+ [FALSE] L0010
       ADD             L01,#02 -> -(SP)
       RET_POPPED      
L0010: JUMP            L0005
L0011: CALL_VS         R0483 (L00,#06) -> -(SP)
       AND             (SP)+,#80 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       RET             L00

Routine R0065, 2 locals

       JL              #01,#00 [TRUE] L0001
       JL              #01,#41 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1c,#01,#40,#04,#0e)
       PUSH            #00
       JUMP            L0003
L0002: LOADB           #4232,#01 -> -(SP)
L0003: JG              G80,(SP)+ [FALSE] L0004
       INC             G80
       RFALSE          
L0004: MUL             G80,#02 -> -(SP)
       SUB             (SP)+,#01 -> L00
       INC             G80
       JL              L00,#00 [TRUE] L0005
       JL              L00,#20 [TRUE] L0006
L0005: CALL_VN2        R0470 (#1d,L00,#40,#14,#0e)
       JUMP            L0007
L0006: LOADW           #4232,L00 -> L01
L0007: JE              L01,"," [FALSE] L0008
       STORE           L01,"comma,"
L0008: JE              L01,"." [FALSE] L0009
       STORE           L01,"then"
L0009: RET             L01

Routine R0066, 0 locals

       JL              #01,#00 [TRUE] L0001
       JL              #01,#41 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1c,#01,#40,#04,#0e)
       PUSH            #00
       JUMP            L0003
L0002: LOADB           #4232,#01 -> -(SP)
L0003: JG              G80,(SP)+ [FALSE] L0004
       INC             G80
       RET             #ffff
L0004: CALL_1S         R0065 -> -(SP)
       RET_POPPED      

Routine R0067, 1 local

       MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0001
       JL              Gee,#41 [TRUE] L0003
L0001: CALL_VN2        R0470 (#1c,Gee,#40,#04,#0e)
       JZ              (SP)+ [FALSE] L0002
L0002: PUSH            #00
       JUMP            L0004
L0003: LOADB           #4232,(SP)+ -> -(SP)
L0004: ADD             #41b7,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0068, 1 local

       MUL             L00,#04 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0001
       JL              Gee,#41 [TRUE] L0003
L0001: CALL_VN2        R0470 (#1c,Gee,#40,#04,#0e)
       JZ              (SP)+ [FALSE] L0002
L0002: PUSH            #00
       JUMP            L0004
L0003: LOADB           #4232,(SP)+ -> -(SP)
L0004: RET_POPPED      

Routine R0069, 10 locals

       STORE           L01,G80
       STORE           G80,L00
       CALL_1S         R0065 -> L02
       STORE           G80,L01
       CALL_2S         R0141 (L02) -> L02
       JL              L02,#01 [TRUE] L0001
       RET             L02
L0001: MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> L01
       JL              L01,#00 [TRUE] L0002
       JL              L01,#41 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1c,L01,#40,#04,#0e)
       JUMP            L0004
L0003: LOADB           #4232,L01 -> L02
L0004: ADD             L02,#41b7 -> L04
       SUB             L01,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0005
       JL              Gee,#41 [TRUE] L0007
L0005: CALL_VN2        R0470 (#1c,Gee,#40,#04,#0e)
       JZ              (SP)+ [FALSE] L0006
L0006: JUMP            L0008
L0007: LOADB           #4232,(SP)+ -> L05
L0008: CALL_VS         R0432 (L04,L05) -> L07
       JZ              L07 [TRUE] L0009
       RET             L07
L0009: JL              L05,#04 [TRUE] L0010
       STORE           L06,#03e8
L0010: JE              L05,#03 [FALSE] L0011
       STORE           L06,#64
L0011: JE              L05,#02 [FALSE] L0012
       STORE           L06,#0a
L0012: JE              L05,#01 [FALSE] L0013
       STORE           L06,#01
L0013: STORE           L07,#00
       STORE           L03,#00
       SUB             L05,#01 -> L05
       STORE           L03,#00
L0014: JG              L03,L05 [TRUE] L0026
       CALL_VS         R0483 (L04,L03) -> L09
       JE              L09,#30 [FALSE] L0015
       STORE           L08,#00
       JUMP            L0025
L0015: JE              L09,#31 [FALSE] L0016
       STORE           L08,#01
       JUMP            L0025
L0016: JE              L09,#32 [FALSE] L0017
       STORE           L08,#02
       JUMP            L0025
L0017: JE              L09,#33 [FALSE] L0018
       STORE           L08,#03
       JUMP            L0025
L0018: JE              L09,#34 [FALSE] L0019
       STORE           L08,#04
       JUMP            L0025
L0019: JE              L09,#35 [FALSE] L0020
       STORE           L08,#05
       JUMP            L0025
L0020: JE              L09,#36 [FALSE] L0021
       STORE           L08,#06
       JUMP            L0025
L0021: JE              L09,#37 [FALSE] L0022
       STORE           L08,#07
       JUMP            L0025
L0022: JE              L09,#38 [FALSE] L0023
       STORE           L08,#08
       JUMP            L0025
L0023: JE              L09,#39 [FALSE] L0024
       STORE           L08,#09
       JUMP            L0025
L0024: RET             #fc18
L0025: MUL             L06,L08 -> -(SP)
       ADD             L07,(SP)+ -> L07
       DIV             L06,#0a -> L06
       INC             L03
       JUMP            L0014
L0026: JG              L05,#03 [FALSE] L0027
       STORE           L07,#2710
L0027: RET             L07

Routine R0070, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       RTRUE           
L0002: TEST_ATTR       L00,#1c [FALSE] RTRUE
       RFALSE          

Routine R0071, 3 locals

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#00 [TRUE] L0004
L0003: STORE           L01,#06
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,L00)
       JUMP            L0007
L0006: TEST_ATTR       L00,#1b [FALSE] L0007
       STORE           L02,#1b
L0007: JG              #01,L00 [TRUE] L0008
       JG              L00,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,L00)
       JUMP            L0010
L0009: TEST_ATTR       L00,#1c [FALSE] L0010
       STORE           L02,#1c
L0010: JG              #01,L00 [TRUE] L0011
       JG              L00,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#1d [FALSE] L0013
       STORE           L02,#1d
L0013: JZ              L02 [FALSE] L0015
       JZ              L01 [FALSE] L0014
       STORE           L02,#1b
       JUMP            L0015
L0014: STORE           L02,#1d
L0015: JE              L02,#1c [FALSE] L0016
       ADD             L01,#01 -> L01
L0016: JE              L02,#1d [FALSE] L0017
       ADD             L01,#02 -> L01
L0017: JG              #01,L00 [TRUE] L0018
       JG              L00,#0114 [FALSE] L0019
L0018: CALL_VN         R0470 (#03,L00)
       JUMP            L0020
L0019: TEST_ATTR       L00,#1e [FALSE] L0020
       ADD             L01,#03 -> L01
L0020: RET             L01

Routine R0072, 1 local

       CALL_VS         R0484 (#08,#00) -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       SUB             L00,(SP)+ -> -(SP)
       DIV             (SP)+,#09 -> -(SP)
       RET_POPPED      

Routine R0073, 1 local

       MUL             #09,L00 -> -(SP)
       CALL_VS         R0484 (#08,#00) -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0074, 4 locals

       CALL_VS         R0483 (L00,#00) -> L03
       STORE           L02,#01
L0001: JG              L02,L03 [TRUE] L0002
       CALL_VS         R0483 (L01,L02) -> -(SP)
       CALL_VN         R0485 (L00,L02,(SP)+)
       INC             L02
       JUMP            L0001
L0002: RTRUE           

Routine R0075, 4 locals

       STORE           L02,#41b7
       CALL_VS         R0483 (L02,#01) -> L03
       CALL_VS         R0483 (L02,#00) -> -(SP)
       JG              L03,(SP)+ [FALSE] L0001
       CALL_VS         R0483 (L02,#00) -> L03
L0001: ADD             L03,#02 -> L03
L0002: JG              L03,L00 [FALSE] L0003
       SUB             L03,#01 -> -(SP)
       CALL_VS         R0483 (L02,(SP)+) -> -(SP)
       CALL_VN         R0485 (L02,L03,(SP)+)
       DEC             L03
       JUMP            L0002
L0003: CALL_VN         R0485 (L02,L00,L01)
       CALL_VS         R0483 (L02,#00) -> -(SP)
       CALL_VS         R0483 (L02,#01) -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0004
       STORE           Gef,L02
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
L0004: RTRUE           

Routine R0076, 4 locals
    Action routine for:
        "nouns"

       CALL_VN         R0285 (#31,#01)
       JL              #00,#00 [TRUE] L0001
       JL              #00,#0d [TRUE] L0002
L0001: CALL_VN2        R0470 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0003
L0002: LOADW           #4402,#00 -> -(SP)
L0003: DIV             (SP)+,#03 -> L02
       JE              G16,#14 [TRUE] L0004
       INC             L02
L0004: JZ              L02 [FALSE] L0005
       CALL_VS         R0285 (#31,#04) -> -(SP)
       RET_POPPED      
L0005: STORE           L00,#01
       STORE           L03,#00
       JUMP            L0007
L0006: ADD             L00,#03 -> L00
L0007: JL              #00,#00 [TRUE] L0008
       JL              #00,#0d [TRUE] L0009
L0008: CALL_VN2        R0470 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0010
L0009: LOADW           #4402,#00 -> -(SP)
L0010: JG              L00,(SP)+ [TRUE] L0022
       PRINT           """
       JL              L00,#00 [TRUE] L0011
       JL              L00,#0d [TRUE] L0012
L0011: CALL_VN2        R0470 (#1d,L00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0013
L0012: LOADW           #4402,L00 -> -(SP)
L0013: CALL_2N         R0488 ((SP)+)
       PRINT           "" "
       ADD             L00,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0014
       JL              Gee,#0d [TRUE] L0016
L0014: CALL_VN2        R0470 (#1d,Gee,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0015
L0015: JUMP            L0017
L0016: LOADW           #4402,(SP)+ -> L01
L0017: JE              L01,#ffff [FALSE] L0018
       CALL_VN         R0285 (#31,#03)
       JUMP            L0019
L0018: CALL_VN         R0285 (#31,#02)
       CALL_2N         R0137 (L01)
L0019: INC             L03
       SUB             L02,#01 -> -(SP)
       JL              L03,(SP)+ [FALSE] L0020
       CALL_2N         R0489 (S044)
L0020: SUB             L02,#01 -> -(SP)
       JE              L03,(SP)+ [FALSE] L0021
       CALL_2N         R0489 (S041)
L0021: JUMP            L0006
L0022: JE              G16,#14 [TRUE] L0023
       PRINT           """
       CALL_2N         R0488 ("me")
       PRINT           "" "
       CALL_VN         R0285 (#31,#02)
       STORE           L02,G16
       STORE           G16,#14
       CALL_2N         R0137 (L02)
       STORE           G16,L02
L0023: CALL_VN         R0285 (#31,#05)
       RTRUE           

Routine R0077, 3 locals

       STORE           L02,#01
       JUMP            L0002
L0001: ADD             L02,#03 -> L02
L0002: JL              #00,#00 [TRUE] L0003
       JL              #00,#0d [TRUE] L0004
L0003: CALL_VN2        R0470 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0005
L0004: LOADW           #4402,#00 -> -(SP)
L0005: JG              L02,(SP)+ [TRUE] L0014
       JL              L02,#00 [TRUE] L0006
       JL              L02,#0d [TRUE] L0007
L0006: CALL_VN2        R0470 (#1d,L02,#0c,#03,#14)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #4402,L02 -> -(SP)
L0008: JE              (SP)+,L00 [FALSE] L0013
       ADD             L02,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#01 [TRUE] L0009
       JL              Gee,#0d [TRUE] L0011
L0009: CALL_VN2        R0470 (#1f,Gee,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0010
L0010: JUMP            L0012
L0011: STOREW          #4402,(SP)+,L01
L0012: RTRUE           
L0013: JUMP            L0001
L0014: CALL_2N         R0151 (#0e)
       RTRUE           

Routine R0078, 2 locals

       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#03 -> L01
L0002: JL              #00,#00 [TRUE] L0003
       JL              #00,#0d [TRUE] L0004
L0003: CALL_VN2        R0470 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0005
L0004: LOADW           #4402,#00 -> -(SP)
L0005: JG              L01,(SP)+ [TRUE] L0014
       JL              L01,#00 [TRUE] L0006
       JL              L01,#0d [TRUE] L0007
L0006: CALL_VN2        R0470 (#1d,L01,#0c,#03,#14)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #4402,L01 -> -(SP)
L0008: JE              (SP)+,L00 [FALSE] L0013
       ADD             L01,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0009
       JL              Gee,#0d [TRUE] L0011
L0009: CALL_VN2        R0470 (#1d,Gee,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0010
L0010: PUSH            #00
       JUMP            L0012
L0011: LOADW           #4402,(SP)+ -> -(SP)
L0012: RET_POPPED      
L0013: JUMP            L0001
L0014: RFALSE          

Routine R0079, 1 local

       CALL_2N         R0081 (L00)
       RTRUE           

Routine R0080, 0 locals

       JE              G8d,G90 [TRUE] L0001
       CALL_VN         R0077 ("it",G8d)
L0001: JE              G8e,G91 [TRUE] L0002
       CALL_VN         R0077 ("him",G8e)
L0002: JE              G8f,G92 [TRUE] L0003
       CALL_VN         R0077 ("her",G8f)
L0003: STORE           G90,G8d
       STORE           G91,G8e
       STORE           G92,G8f
       RTRUE           

Routine R0081, 3 locals

       JE              L00,G16 [FALSE] L0001
       RTRUE           
L0001: CALL_1N         R0080
       CALL_2S         R0071 (L00) -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0002
       JL              Gee,#0c [TRUE] L0004
L0002: CALL_VN2        R0470 (#1d,Gee,#0b,#01,#13)
       JZ              (SP)+ [FALSE] L0003
L0003: JUMP            L0005
L0004: LOADW           #43ea,(SP)+ -> L02
L0005: STORE           L01,#01
       JUMP            L0007
L0006: ADD             L01,#03 -> L01
L0007: JL              #00,#00 [TRUE] L0008
       JL              #00,#0d [TRUE] L0009
L0008: CALL_VN2        R0470 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0010
L0009: LOADW           #4402,#00 -> -(SP)
L0010: JG              L01,(SP)+ [TRUE] L0019
       ADD             L01,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0011
       JL              Gee,#0d [TRUE] L0013
L0011: CALL_VN2        R0470 (#1d,Gee,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0012
L0012: PUSH            #00
       JUMP            L0014
L0013: LOADW           #4402,(SP)+ -> -(SP)
L0014: AND             L02,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       ADD             L01,#02 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#01 [TRUE] L0015
       JL              Gee,#0d [TRUE] L0017
L0015: CALL_VN2        R0470 (#1f,Gee,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0016
L0016: JUMP            L0018
L0017: STOREW          #4402,(SP)+,L00
L0018: JUMP            L0006
L0019: CALL_2S         R0078 ("it") -> G8d
       STORE           G90,G8d
       CALL_2S         R0078 ("him") -> G8e
       STORE           G91,G8e
       CALL_2S         R0078 ("her") -> G8f
       STORE           G92,G8f
       RTRUE           

Routine R0082, 4 locals

       CALL_VS         R0484 (#32,#00) -> G04
       CALL_VS         R0484 (#10,#00) -> -(SP)
       AND             (SP)+,#01 -> G07
       CALL_VS         R0483 (#01,#00) -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> G0b
       CALL_VN         R0102 (#26,S028)
       CALL_VS         R0484 (#08,#00) -> G8a
       CALL_VS         R0483 (G8a,#00) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0483 (G8a,(SP)+) -> G8b
       CALL_VS         R0483 (G8a,#00) -> -(SP)
       ADD             G8a,(SP)+ -> -(SP)
       ADD             (SP)+,#04 -> G8a
       SUB             G8a,#02 -> -(SP)
       CALL_VS         R0484 ((SP)+,#00) -> -(SP)
       MUL             (SP)+,G8b -> -(SP)
       ADD             G8a,(SP)+ -> G8c
       JL              #00,#00 [TRUE] L0001
       JL              #00,#7b [TRUE] L0002
L0001: CALL_VN2        R0470 (#1e,#00,#7a,#00,#0d)
       JUMP            L0003
L0002: STOREB          #41b7,#00,#78
L0003: JL              #00,#00 [TRUE] L0004
       JL              #00,#7b [TRUE] L0005
L0004: CALL_VN2        R0470 (#1e,#00,#7a,#00,#10)
       JUMP            L0006
L0005: STOREB          #42b4,#00,#78
L0006: JL              #00,#00 [TRUE] L0007
       JL              #00,#7b [TRUE] L0008
L0007: CALL_VN2        R0470 (#1e,#00,#7a,#00,#11)
       JUMP            L0009
L0008: STOREB          #432f,#00,#78
L0009: JL              #00,#00 [TRUE] L0010
       JL              #00,#41 [TRUE] L0011
L0010: CALL_VN2        R0470 (#1e,#00,#40,#04,#0e)
       JUMP            L0012
L0011: STOREB          #4232,#00,#0f
L0012: JL              #00,#00 [TRUE] L0013
       JL              #00,#41 [TRUE] L0014
L0013: CALL_VN2        R0470 (#1e,#00,#40,#04,#0f)
       JUMP            L0015
L0014: STOREB          #4273,#00,#0f
L0015: STORE           G19,#13
       STORE           G16,#14
       STORE           G3f,G16
       SUB             #0213,#ff -> G03
       CALL_VN         R0480 (#14,#2d,#07)
       NEW_LINE        
       CALL_VN         R0462 (#0017,#004e,#0051)
       CALL_1S         R0412 -> L01
       STORE           G12,G11
       CALL_VN         R0476 (G16,G00)
L0016: JG              #05,G00 [TRUE] L0017
       JG              G00,#0114 [TRUE] L0017
       JIN             G00,"Class" [FALSE] L0018
L0017: CALL_VN         R0470 (#04,G00)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,G00
L0019: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       JG              #05,G00 [TRUE] L0020
       JG              G00,#0114 [TRUE] L0020
       JIN             G00,"Class" [FALSE] L0021
L0020: CALL_VN         R0470 (#04,G00)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,G00
L0022: GET_PARENT      Gee -> G00
       JUMP            L0016
L0023: STORE           G19,G00
       STORE           G3f,G16
       STORE           G40,G00
       JG              #05,G16 [TRUE] L0024
       JG              G16,#0114 [TRUE] L0024
       JIN             G16,"Class" [FALSE] L0025
L0024: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0026
L0025: STORE           Gee,G16
L0026: GET_CHILD       Gee -> -(SP) [FALSE] L0027
L0027: PULL            L00
       JZ              L00 [TRUE] L0032
L0028: CALL_VN         R0478 (L00,#0c)
       CALL_VN         R0479 (L00,#03)
       JG              #05,L00 [TRUE] L0029
       JG              L00,#0114 [TRUE] L0029
       JIN             L00,"Class" [FALSE] L0030
L0029: CALL_VN         R0470 (#0d,L00)
       JUMP            L0032
L0030: JIN             L00,G16 [TRUE] L0031
       CALL_VN         R0470 (#20,L00)
       JUMP            L0032
L0031: GET_SIBLING     L00 -> L00 [TRUE] L0028
L0032: JE              L01,#02 [TRUE] L0033
       CALL_1N         R0149
L0033: CALL_1N         R0164
       JG              #05,G16 [TRUE] L0034
       JG              G16,#0114 [TRUE] L0034
       JIN             G16,"Class" [FALSE] L0035
L0034: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0036
L0035: STORE           Gee,G16
L0036: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0111 ((SP)+) -> G18
       JZ              G18 [FALSE] L0037
       STORE           G19,G00
       STORE           G00,#13
L0037: CALL_2N         R0090 (#00)
       STORE           L00,#01
L0038: JG              L00,#64 [TRUE] L0039
       RANDOM          L00 -> L01
       INC             L00
       JUMP            L0038
L0039: STORE           G90,G8d
       STORE           G91,G8e
       STORE           G92,G8f
L0040: JZ              G17 [FALSE] L0142
       CALL_1N         R0080
       CALL_2S         R0078 ("it") -> G90
       CALL_2S         R0078 ("him") -> G91
       CALL_2S         R0078 ("her") -> G92
L0041: JE              G11,G12 [TRUE] L0043
       JE              G13,#01 [FALSE] L0042
       CALL_1N         R0109
L0042: STORE           G12,G11
L0043: JL              #00,#00 [TRUE] L0044
       JL              #00,#10 [TRUE] L0045
L0044: CALL_VN2        R0470 (#1f,#00,#0f,#01,#02)
       JUMP            L0046
L0045: STOREW          #3e37,#00,#00
L0046: JL              #01,#00 [TRUE] L0047
       JL              #01,#10 [TRUE] L0048
L0047: CALL_VN2        R0470 (#1f,#01,#0f,#01,#02)
       JUMP            L0049
L0048: STOREW          #3e37,#01,#00
L0049: JL              #02,#00 [TRUE] L0050
       JL              #02,#10 [TRUE] L0051
L0050: CALL_VN2        R0470 (#1f,#02,#0f,#01,#02)
       JUMP            L0052
L0051: STOREW          #3e37,#02,#00
L0052: JL              #03,#00 [TRUE] L0053
       JL              #03,#10 [TRUE] L0054
L0053: CALL_VN2        R0470 (#1f,#03,#0f,#01,#02)
       JUMP            L0055
L0054: STOREW          #3e37,#03,#00
L0055: STORE           G41,#00
       CALL_VN         R0462 (#15,#4a,#3e37)
       JL              #00,#00 [TRUE] L0056
       JL              #00,#10 [TRUE] L0057
L0056: CALL_VN2        R0470 (#1d,#00,#0f,#01,#02)
       JUMP            L0058
L0057: LOADW           #3e37,#00 -> G32
L0058: JE              G32,#5f,#60 [FALSE] L0073
       JL              #02,#00 [TRUE] L0059
       JL              #02,#10 [TRUE] L0060
L0059: CALL_VN2        R0470 (#1d,#02,#0f,#01,#02)
       JUMP            L0061
L0060: LOADW           #3e37,#02 -> L00
L0061: JL              #03,#00 [TRUE] L0062
       JL              #03,#10 [TRUE] L0063
L0062: CALL_VN2        R0470 (#1d,#03,#0f,#01,#02)
       PUSH            #00
       JUMP            L0064
L0063: LOADW           #3e37,#03 -> -(SP)
L0064: JL              #02,#00 [TRUE] L0065
       JL              #02,#10 [TRUE] L0067
L0065: CALL_VN2        R0470 (#1f,#02,#0f,#01,#02)
       JZ              (SP)+ [FALSE] L0066
L0066: JUMP            L0068
L0067: STOREW          #3e37,#02,(SP)+
L0068: JL              #03,#00 [TRUE] L0069
       JL              #03,#10 [TRUE] L0070
L0069: CALL_VN2        R0470 (#1f,#03,#0f,#01,#02)
       JUMP            L0071
L0070: STOREW          #3e37,#03,L00
L0071: JE              G32,#5f [FALSE] L0072
       STORE           G32,#1a
       JUMP            L0073
L0072: STORE           G32,#43
L0073: JE              G32,#50 [FALSE] L0080
       JL              #02,#00 [TRUE] L0074
       JL              #02,#10 [TRUE] L0075
L0074: CALL_VN2        R0470 (#1d,#02,#0f,#01,#02)
       PUSH            #00
       JUMP            L0076
L0075: LOADW           #3e37,#02 -> -(SP)
L0076: JE              (SP)+,G16 [FALSE] L0080
       JE              G3f,G16 [TRUE] L0080
       JL              #02,#00 [TRUE] L0077
       JL              #02,#10 [TRUE] L0078
L0077: CALL_VN2        R0470 (#1f,#02,#0f,#01,#02)
       JUMP            L0079
L0078: STOREW          #3e37,#02,G3f
L0079: STORE           G3f,G16
       STORE           G32,#02
L0080: JE              G32,#5e [FALSE] L0097
       JL              #02,#00 [TRUE] L0081
       JL              #02,#10 [TRUE] L0082
L0081: CALL_VN2        R0470 (#1d,#02,#0f,#01,#02)
       PUSH            #00
       JUMP            L0083
L0082: LOADW           #3e37,#02 -> -(SP)
L0083: JE              (SP)+,G16 [TRUE] L0097
       JE              G3f,G16 [FALSE] L0097
       JL              #02,#00 [TRUE] L0084
       JL              #02,#10 [TRUE] L0085
L0084: CALL_VN2        R0470 (#1d,#02,#0f,#01,#02)
       JUMP            L0086
L0085: LOADW           #3e37,#02 -> G3f
L0086: JL              #03,#00 [TRUE] L0087
       JL              #03,#10 [TRUE] L0088
L0087: CALL_VN2        R0470 (#1d,#03,#0f,#01,#02)
       PUSH            #00
       JUMP            L0089
L0088: LOADW           #3e37,#03 -> -(SP)
L0089: JL              #02,#00 [TRUE] L0090
       JL              #02,#10 [TRUE] L0092
L0090: CALL_VN2        R0470 (#1f,#02,#0f,#01,#02)
       JZ              (SP)+ [FALSE] L0091
L0091: JUMP            L0093
L0092: STOREW          #3e37,#02,(SP)+
L0093: JL              #03,#00 [TRUE] L0094
       JL              #03,#10 [TRUE] L0095
L0094: CALL_VN2        R0470 (#1f,#03,#0f,#01,#02)
       JUMP            L0096
L0095: STOREW          #3e37,#03,G16
L0096: STORE           G32,#1a
L0097: JE              G32,#02,#50,#01 [FALSE] L0098
       STORE           G44,G53
L0098: STORE           G42,#00
       STORE           G4a,G49
       STORE           G49,#00
L0099: STORE           G33,#00
       STORE           G34,#00
       JL              #01,#00 [TRUE] L0100
       JL              #01,#10 [TRUE] L0101
L0100: CALL_VN2        R0470 (#1d,#01,#0f,#01,#02)
       JUMP            L0102
L0101: LOADW           #3e37,#01 -> L00
L0102: JL              L00,#01 [TRUE] L0105
       JL              #02,#00 [TRUE] L0103
       JL              #02,#10 [TRUE] L0104
L0103: CALL_VN2        R0470 (#1d,#02,#0f,#01,#02)
       JUMP            L0105
L0104: LOADW           #3e37,#02 -> G33
L0105: JL              L00,#02 [TRUE] L0108
       JL              #03,#00 [TRUE] L0106
       JL              #03,#10 [TRUE] L0107
L0106: CALL_VN2        R0470 (#1d,#03,#0f,#01,#02)
       JUMP            L0108
L0107: LOADW           #3e37,#03 -> G34
L0108: JE              G33,#01 [FALSE] L0109
       STORE           G35,G53
       JUMP            L0110
L0109: STORE           G35,G33
L0110: JE              G34,#01 [FALSE] L0113
       JE              G33,#01 [FALSE] L0111
       STORE           G36,G54
       JUMP            L0112
L0111: STORE           G36,G53
L0112: JUMP            L0114
L0113: STORE           G36,G34
L0114: JE              G3f,G16 [TRUE] L0120
       CALL_VS         R0101 (G16,#1d) -> L01
       JZ              L01 [FALSE] L0119
       CALL_VS         R0101 (G3f,#1d) -> L01
       JZ              L01 [FALSE] L0119
       JE              G32,#1009 [FALSE] L0118
       JL              #03,#00 [TRUE] L0115
       JL              #03,#10 [TRUE] L0116
L0115: CALL_VN2        R0470 (#1f,#03,#0f,#01,#02)
       JUMP            L0117
L0116: STOREW          #3e37,#03,G3f
L0117: STORE           G3f,G16
       STORE           G32,#01
       JUMP            L0099
L0118: CALL_VS         R0096 (G3f,#1003) -> -(SP)
       JZ              (SP)+ [FALSE] L0119
       CALL_VN         R0285 (#1003,#01,G3f)
L0119: JUMP            L0137
L0120: JZ              L00 [TRUE] L0122
       JE              L00,#01 [FALSE] L0121
       JZ              G33 [FALSE] L0122
L0121: JE              L00,#02 [FALSE] L0123
       JZ              G33 [TRUE] L0123
       JZ              G34 [TRUE] L0123
L0122: CALL_VN2        R0462 (Geb,#004d,G32,G35,G36,#00)
       JUMP            L0137
L0123: STORE           G42,#01
       JL              #00,#00 [TRUE] L0124
       JL              #00,#40 [TRUE] L0125
L0124: CALL_VN2        R0470 (#1d,#00,#3f,#01,#03)
       JUMP            L0126
L0125: LOADW           #3e57,#00 -> L01
L0126: JZ              L01 [FALSE] L0127
       CALL_VN         R0285 (#1007,#02)
       JUMP            L0043
L0127: JZ              G43 [TRUE] L0128
       STORE           G43,#00
       CALL_VN         R0285 (#1007,#01)
L0128: STORE           L00,G00
       STORE           L02,#01
L0129: JG              L02,L01 [TRUE] L0137
       JZ              G17 [TRUE] L0130
       JUMP            L0137
L0130: JE              G00,L00 [TRUE] L0131
       CALL_VN         R0285 (#1007,#33)
       JUMP            L0137
L0131: JL              L02,#00 [TRUE] L0132
       JL              L02,#40 [TRUE] L0133
L0132: CALL_VN2        R0470 (#1d,L02,#3f,#01,#03)
       JUMP            L0134
L0133: LOADW           #3e57,L02 -> L03
L0134: CALL_2N         R0081 (L03)
       CALL_2N         R0139 (L03)
       PRINT           ": "
       JZ              G33 [FALSE] L0135
       STORE           G33,L03
       CALL_VN2        R0462 (Geb,#004d,G32,L03,G36,#00)
       STORE           G33,#00
       JUMP            L0136
L0135: STORE           G34,L03
       CALL_VN2        R0462 (Geb,#004d,G32,G35,L03,#00)
       STORE           G34,#00
L0136: INC             L02
       JUMP            L0129
L0137: JE              G49,#01 [FALSE] L0138
       CALL_1N         R0091
       JUMP            L0040
L0138: JZ              G41 [TRUE] L0139
       JUMP            L0040
L0139: JZ              G17 [FALSE] L0140
       CALL_VN         R0462 (Geb,#004c)
       JUMP            L0141
L0140: JZ              #01 [TRUE] L0141
       INC             G0c
L0141: JUMP            L0040
L0142: JE              G17,#02 [TRUE] L0143
       CALL_1N         R0416
L0143: JZ              G17 [FALSE] L0144
       JUMP            L0041
L0144: PRINT           "

    "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "***"
       JE              G17,#01 [FALSE] L0145
       CALL_VN         R0285 (#1007,#03)
L0145: JE              G17,#02 [FALSE] L0146
       CALL_VN         R0285 (#1007,#04)
L0146: JG              G17,#02 [FALSE] L0147
       PRINT           " "
       CALL_1N         R0426
       PRINT           " "
L0147: PRINT           "***"
       SET_TEXT_STYLE  ROMAN
       PRINT           "


"
       CALL_1N         R0182
       CALL_1N         R0107
       CALL_1N         R0089
       RFALSE          

Routine R0083, 0 locals

       CALL_1N         R0085
       JZ              G17 [TRUE] L0001
       RTRUE           
L0001: CALL_1N         R0086
       JZ              G17 [TRUE] L0002
       RTRUE           
L0002: CALL_1N         R0087
       JZ              G17 [TRUE] L0003
       RTRUE           
L0003: CALL_1N         R0436
       JZ              G17 [TRUE] L0004
       RTRUE           
L0004: CALL_1N         R0110
       JZ              G17 [TRUE] L0005
       RTRUE           
L0005: CALL_1N         R0091
       RFALSE          

Routine R0084, 7 locals

       STORE           L04,G32
       STORE           L05,G35
       STORE           L06,G36
       STORE           G32,L00
       STORE           G35,L01
       STORE           G36,L02
       STORE           L03,#00
       JZ              G41 [FALSE] L0001
       CALL_1S         R0094 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
L0001: JL              G32,#1000 [FALSE] L0002
       CALL_1N         R0088
L0002: STORE           G32,L04
       STORE           G35,L05
       STORE           G36,L06
       RFALSE          

Routine R0085, 0 locals

       INC             G0c
       JE              G0d,#ffff [TRUE] L0003
       JL              G0e,#00 [TRUE] L0001
       ADD             G0d,G0e -> G0d
       JUMP            L0002
L0001: DEC             G0f
       JZ              G0f [FALSE] L0002
       INC             G0d
       SUB             #00,G0e -> G0f
L0002: MOD             G0d,#05a0 -> G0d
L0003: RTRUE           

Routine R0086, 2 locals

       STORE           L00,#00
L0001: JL              L00,G10 [FALSE] L0009
       JZ              G17 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L00,#20 [TRUE] L0004
L0003: CALL_VN2        R0470 (#1d,L00,#1f,#01,#01)
       JUMP            L0005
L0004: LOADW           #3df7,L00 -> L01
L0005: JZ              L01 [TRUE] L0008
       AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#7fff -> -(SP)
       CALL_VN         R0101 ((SP)+,#2b)
       JUMP            L0008
L0006: CALL_VS         R0481 (L01,#28) -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0007
       CALL_2N         R0104 (L01)
       CALL_VN         R0101 (L01,#2a)
       JUMP            L0008
L0007: CALL_VS         R0481 (L01,#28) -> Gef
       PUSH            Gef
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0480 (L01,#28,(SP)+)
L0008: INC             L00
       JUMP            L0001
L0009: RTRUE           

Routine R0087, 0 locals

       STORE           G74,#02
       STORE           G82,#00
       CALL_2N         R0055 (G00)
       CALL_2S         R0031 (G16) -> -(SP)
       CALL_VN         R0052 ((SP)+,G16,#00)
       STORE           G74,#00
       RTRUE           

Routine R0088, 0 locals

       CALL_VS         R0484 (#4d8d,G32) -> -(SP)
       CALL_1N         (SP)+
       RTRUE           

Routine R0089, 1 local

L0001: CALL_VN         R0285 (#1007,#05)
L0002: PRINT           "> "
       STORE           Gef,#00
       STORE           Gec,#41b7
       STOREB          Gec,#01,#00
       CALL_1N         R0124
       READ            Gec,#4232 -> Gef
       JL              #01,#00 [TRUE] L0003
       JL              #01,#20 [TRUE] L0004
L0003: CALL_VN2        R0470 (#1d,#01,#40,#14,#0e)
       JUMP            L0005
L0004: LOADW           #4232,#01 -> L00
L0005: JE              L00,"q","quit" [FALSE] L0006
       QUIT            
L0006: JE              L00,"restart" [FALSE] L0007
       RESTART         
L0007: JE              L00,"restore" [FALSE] L0008
       CALL_1N         R0170
       JUMP            L0001
L0008: JE              L00,"fullscore","full" [FALSE] L0009
       JZ              #0001 [FALSE] L0009
       NEW_LINE        
       CALL_1N         R0186
       JUMP            L0001
L0009: JE              G17,#02 [FALSE] L0010
       JE              L00,"amusing" [FALSE] L0010
       JZ              #01 [TRUE] L0010
       NEW_LINE        
       CALL_1N         R0420
       JUMP            L0001
L0010: JE              L00,"undo","undo","undo" [FALSE] L0015
       JZ              G05 [FALSE] L0011
       CALL_VN         R0285 (#1007,#06)
       JUMP            L0001
L0011: JE              G05,#01 [FALSE] L0012
       JUMP            L0013
L0012: RESTORE_UNDO    -> L00
       JZ              L00 [FALSE] L0014
L0013: CALL_VN         R0285 (#1007,#07)
L0014: JUMP            L0001
L0015: CALL_VN         R0285 (#1007,#08)
       JUMP            L0002

Routine R0090, 5 locals

       STORE           L03,G33
       STORE           L04,G34
       STORE           G33,L01
       STORE           G34,L02
       CALL_VN2        R0462 (#16,#4d,L00,L01,L02,#01)
       STORE           G33,L03
       STORE           G34,L04
       RTRUE           

Routine R0091, 1 local

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: PULL            L00
       JZ              L00 [TRUE] L0015
L0005: JG              #01,L00 [TRUE] L0006
       JG              L00,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,L00)
       JUMP            L0008
L0007: TEST_ATTR       L00,#0c [TRUE] L0011
L0008: CALL_VN         R0478 (L00,#0c)
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#12 [FALSE] L0011
       ADD             G11,#0004 -> G11
       ADD             G15,#0004 -> G15
L0011: JG              #05,L00 [TRUE] L0012
       JG              L00,#0114 [TRUE] L0012
       JIN             L00,"Class" [FALSE] L0013
L0012: CALL_VN         R0470 (#0d,L00)
       JUMP            L0015
L0013: JIN             L00,G16 [TRUE] L0014
       CALL_VN         R0470 (#20,L00)
       JUMP            L0015
L0014: GET_SIBLING     L00 -> L00 [TRUE] L0005
L0015: RTRUE           

Routine R0092, 7 locals

       STORE           L05,G3c
       STORE           L06,G3d
       STORE           G3c,L00
       STORE           G3d,#00
       STORE           L02,G3f
       STORE           L03,G40
       STORE           L04,G74
       STORE           G74,#06
       JZ              L01 [FALSE] L0001
       STORE           G3f,G16
       JUMP            L0002
L0001: STORE           G3f,L01
L0002: CALL_2S         R0031 (G3f) -> G40
       CALL_VN         R0052 (G40,G3f,#00)
       STORE           G74,L04
       STORE           G3f,L02
       STORE           G40,L03
       STORE           G3c,L05
       STORE           L05,G3d
       STORE           G3d,L06
       RET             L05

Routine R0093, 6 locals

       STORE           L02,G3c
       STORE           L03,G74
       STORE           L04,G3f
       STORE           L05,G40
       STORE           G3c,L00
       JZ              L01 [FALSE] L0001
       STORE           G3f,G16
       JUMP            L0002
L0001: STORE           G3f,L01
L0002: CALL_2S         R0031 (G3f) -> G40
       STORE           G74,#05
       CALL_VN         R0052 (G40,G3f,#00)
       STORE           G3c,L02
       STORE           G74,L03
       STORE           G3f,L04
       STORE           G40,L05
       RTRUE           

Routine R0094, 0 locals

       CALL_1S         R0428 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R0101 (G16,#1d) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       STORE           G74,#03
       STORE           G3c,#00
       CALL_2S         R0031 (G16) -> -(SP)
       CALL_VN         R0052 ((SP)+,G16,#00)
       STORE           G74,#00
       JZ              G3c [FALSE] RTRUE
       JZ              G00 [TRUE] L0001
       CALL_VS         R0101 (G00,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JG              G33,#01 [FALSE] L0002
       CALL_VS         R0101 (G33,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: RFALSE          

Routine R0095, 0 locals

       STORE           G74,#04
       STORE           G3c,#00
       CALL_2S         R0031 (G16) -> -(SP)
       CALL_VN         R0052 ((SP)+,G16,#00)
       STORE           G74,#00
       JZ              G3c [FALSE] RTRUE
       JZ              G00 [TRUE] L0001
       CALL_VS         R0101 (G00,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JG              G33,#01 [FALSE] L0002
       CALL_VS         R0101 (G33,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_1S         R0427 -> -(SP)
       RET_POPPED      

Routine R0096, 2 locals

       STORE           G38,L01
       CALL_VS         R0101 (L00,#06) -> -(SP)
       RET_POPPED      

Routine R0097, 1 local

       CALL_VS         R0473 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       RFALSE          
L0001: JE              Gef,#02,#01 [FALSE] L0002
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       RET             #02
L0003: JE              Gef,#04 [FALSE] L0004
       RET             #03
L0004: RTRUE           

Routine R0098, 3 locals

       CALL_VS         R0466 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0001
       CALL_VS         R0101 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0461 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       CALL_VS         R0461 (L00,L01) -> -(SP)
       CALL_VS         R0473 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#01,#02,#00 [FALSE] L0002
       CALL_VS         R0151 (#02,L00,L01) -> -(SP)
       RET_POPPED      
L0002: JE              Gef,#04 [FALSE] L0004
       CALL_VS         R0461 (L00,L01) -> -(SP)
       CALL_2N         R0489 ((SP)+)
       JZ              L02 [FALSE] L0003
       NEW_LINE        
L0003: RTRUE           
L0004: JE              Gef,#03 [FALSE] L0005
       CALL_VS         R0101 (L00,L01) -> -(SP)
       RET_POPPED      
L0005: RTRUE           

Routine R0099, 2 locals

       CALL_VS         R0473 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0001
       CALL_2N         R0139 (L00)
       JUMP            L0005
L0001: JE              Gef,#04 [FALSE] L0003
       CALL_2N         R0489 (L00)
       JZ              L01 [FALSE] L0002
       NEW_LINE        
L0002: JUMP            L0005
L0003: JE              Gef,#03 [FALSE] L0004
       CALL_1S         L00 -> -(SP)
       RET_POPPED      
L0004: CALL_2N         R0487 (#28)
       PRINT_NUM       L00
       CALL_2N         R0487 (#29)
L0005: RTRUE           

Routine R0100, 2 locals

       CALL_VS         R0461 (L00,L01) -> -(SP)
       JL              (SP)+,#0100 [FALSE] L0001
       CALL_VS         R0461 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0101 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0101, 2 locals

       JE              L00,#13 [FALSE] L0001
       JE              L01,#1e,#2e,#23 [TRUE] L0001
       STORE           L00,G19
L0001: CALL_VS         R0465 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       JL              L01,#40 [FALSE] RFALSE
L0002: CALL_VS         R0462 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0102, 4 locals

       LOADW           #00,#05 -> L02
       SUB             L00,#01 -> L03
       STOREW          L02,L03,L01
       RTRUE           

Routine R0103, 3 locals

       STORE           L02,#00
L0001: JL              L02,G10 [FALSE] L0005
       JL              L02,#00 [TRUE] L0002
       JL              L02,#20 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,L02,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #3df7,L02 -> -(SP)
L0004: JE              (SP)+,L00 [TRUE] RFALSE
       INC             L02
       JUMP            L0001
L0005: STORE           L02,#00
L0006: JL              L02,G10 [FALSE] L0011
       JL              L02,#00 [TRUE] L0007
       JL              L02,#20 [TRUE] L0008
L0007: CALL_VN2        R0470 (#1d,L02,#1f,#01,#01)
       PUSH            #00
       JUMP            L0009
L0008: LOADW           #3df7,L02 -> -(SP)
L0009: JZ              (SP)+ [FALSE] L0010
       JUMP            L0012
L0010: INC             L02
       JUMP            L0006
L0011: STORE           L02,G10
       INC             G10
       JL              L02,#20 [TRUE] L0012
       CALL_2N         R0151 (#04)
       RTRUE           
L0012: JG              #01,L00 [TRUE] L0013
       JG              L00,#0114 [FALSE] L0014
L0013: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0015
L0014: STORE           Gee,L00
L0015: GET_PROP_ADDR   Gee,#28 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0016
       CALL_VN         R0151 (#05,L00)
       RTRUE           
L0016: JL              L02,#00 [TRUE] L0017
       JL              L02,#20 [TRUE] L0018
L0017: CALL_VN2        R0470 (#1f,L02,#1f,#01,#01)
       JUMP            L0019
L0018: STOREW          #3df7,L02,L00
L0019: CALL_VN         R0480 (L00,#28,L01)
       RTRUE           

Routine R0104, 2 locals

       STORE           L01,#00
L0001: JL              L01,G10 [FALSE] L0006
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #3df7,L01 -> -(SP)
L0004: JE              (SP)+,L00 [FALSE] L0005
       JUMP            L0007
L0005: INC             L01
       JUMP            L0001
L0006: RFALSE          
L0007: JG              #01,L00 [TRUE] L0008
       JG              L00,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,L00
L0010: GET_PROP_ADDR   Gee,#28 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0011
       CALL_VN         R0151 (#05,L00)
       RTRUE           
L0011: JL              L01,#00 [TRUE] L0012
       JL              L01,#20 [TRUE] L0013
L0012: CALL_VN2        R0470 (#1f,L01,#1f,#01,#01)
       JUMP            L0014
L0013: STOREW          #3df7,L01,#00
L0014: CALL_VN         R0480 (L00,#28,#00)
       RTRUE           

Routine R0105, 2 locals

       STORE           L01,#00
L0001: JL              L01,G10 [FALSE] L0005
       ADD             #8000,L00 -> -(SP)
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #3df7,L01 -> -(SP)
L0004: JE              (SP)+,(SP)+ [TRUE] RFALSE
       INC             L01
       JUMP            L0001
L0005: STORE           L01,#00
L0006: JL              L01,G10 [FALSE] L0011
       JL              L01,#00 [TRUE] L0007
       JL              L01,#20 [TRUE] L0008
L0007: CALL_VN2        R0470 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0009
L0008: LOADW           #3df7,L01 -> -(SP)
L0009: JZ              (SP)+ [FALSE] L0010
       JUMP            L0012
L0010: INC             L01
       JUMP            L0006
L0011: STORE           L01,G10
       INC             G10
       JL              L01,#20 [TRUE] L0012
       CALL_2N         R0151 (#04)
L0012: ADD             #8000,L00 -> -(SP)
       JL              L01,#00 [TRUE] L0013
       JL              L01,#20 [TRUE] L0015
L0013: CALL_VN2        R0470 (#1f,L01,#1f,#01,#01)
       JZ              (SP)+ [FALSE] L0014
L0014: JUMP            L0016
L0015: STOREW          #3df7,L01,(SP)+
L0016: RTRUE           

Routine R0106, 2 locals

       STORE           L01,#00
L0001: JL              L01,G10 [FALSE] L0006
       ADD             #8000,L00 -> -(SP)
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #3df7,L01 -> -(SP)
L0004: JE              (SP)+,(SP)+ [FALSE] L0005
       JUMP            L0007
L0005: INC             L01
       JUMP            L0001
L0006: RFALSE          
L0007: JL              L01,#00 [TRUE] L0008
       JL              L01,#20 [TRUE] L0009
L0008: CALL_VN2        R0470 (#1f,L01,#1f,#01,#01)
       JUMP            L0010
L0009: STOREW          #3df7,L01,#00
L0010: RTRUE           

Routine R0107, 0 locals

       JZ              G0b [FALSE] L0001
       STORE           G01,G11
       STORE           G02,G0c
       JUMP            L0002
L0001: DIV             G0d,#3c -> G01
       MOD             G0d,#3c -> G02
L0002: RTRUE           

Routine R0108, 2 locals

       STORE           G0d,L00
       STORE           G0e,L01
       STORE           G0f,#00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L01 -> G0f
L0001: RTRUE           

Routine R0109, 0 locals

       PRINT           "
["
       SUB             G11,G12 -> -(SP)
       CALL_VN         R0285 (#1007,#32,(SP)+)
       PRINT           ".]
"
       RTRUE           

Routine R0110, 2 locals

       STORE           L01,G18
       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0111 ((SP)+) -> G18
       JZ              L01 [FALSE] L0004
       JE              G18,#01 [FALSE] L0004
       STORE           G00,G19
       JZ              L00 [FALSE] L0004
       CALL_2N         R0090 (#00)
L0004: JE              L01,#01 [FALSE] L0005
       JZ              G18 [FALSE] L0005
       STORE           G19,G00
       STORE           G00,#13
       JZ              L00 [FALSE] L0005
       CALL_1N         R0219
       CALL_VS         R0285 (#1007,#09) -> -(SP)
       RET_POPPED      
L0005: JZ              L01 [FALSE] L0006
       JZ              G18 [FALSE] L0006
       STORE           G00,#13
L0006: RTRUE           

Routine R0111, 2 locals

       JZ              L00 [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#09 [TRUE] RTRUE
L0003: JG              #05,L00 [TRUE] L0004
       JG              L00,#0114 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_CHILD       Gee -> -(SP) [FALSE] L0007
L0007: PULL            L01
       JZ              L01 [TRUE] L0012
L0008: CALL_2S         R0113 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JG              #05,L01 [TRUE] L0009
       JG              L01,#0114 [TRUE] L0009
       JIN             L01,"Class" [FALSE] L0010
L0009: CALL_VN         R0470 (#0d,L01)
       JUMP            L0012
L0010: JIN             L01,L00 [TRUE] L0011
       CALL_VN         R0470 (#20,L01)
       JUMP            L0012
L0011: GET_SIBLING     L01 -> L01 [TRUE] L0008
L0012: JG              #01,L00 [TRUE] L0013
       JG              L00,#0114 [FALSE] L0014
L0013: CALL_VN         R0470 (#03,L00)
       JUMP            L0025
L0014: TEST_ATTR       L00,#04 [FALSE] L0025
       JG              #01,L00 [TRUE] L0015
       JG              L00,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,L00)
       JUMP            L0017
L0016: TEST_ATTR       L00,#0e [TRUE] L0020
L0017: JG              #01,L00 [TRUE] L0018
       JG              L00,#0114 [FALSE] L0019
L0018: CALL_VN         R0470 (#03,L00)
       JUMP            L0024
L0019: TEST_ATTR       L00,#17 [FALSE] L0024
L0020: JG              #05,L00 [TRUE] L0021
       JG              L00,#0114 [TRUE] L0021
       JIN             L00,"Class" [FALSE] L0022
L0021: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,L00
L0023: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0111 ((SP)+) -> -(SP)
       RET_POPPED      
L0024: JUMP            L0038
L0025: JG              #01,L00 [TRUE] L0026
       JG              L00,#0114 [FALSE] L0027
L0026: CALL_VN         R0470 (#03,L00)
       JUMP            L0028
L0027: TEST_ATTR       L00,#07 [TRUE] L0034
L0028: JG              #01,L00 [TRUE] L0029
       JG              L00,#0114 [FALSE] L0030
L0029: CALL_VN         R0470 (#03,L00)
       JUMP            L0031
L0030: TEST_ATTR       L00,#17 [TRUE] L0034
L0031: JG              #01,L00 [TRUE] L0032
       JG              L00,#0114 [FALSE] L0033
L0032: CALL_VN         R0470 (#03,L00)
       JUMP            L0038
L0033: TEST_ATTR       L00,#14 [FALSE] L0038
L0034: JG              #05,L00 [TRUE] L0035
       JG              L00,#0114 [TRUE] L0035
       JIN             L00,"Class" [FALSE] L0036
L0035: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0037
L0036: STORE           Gee,L00
L0037: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0111 ((SP)+) -> -(SP)
       RET_POPPED      
L0038: RFALSE          

Routine R0112, 1 local

       JE              L00,G16 [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#17 [TRUE] RFALSE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#14 [TRUE] RFALSE
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0008: TEST_ATTR       L00,#04 [FALSE] L0013
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#0e [FALSE] L0011
       PUSH            #00
       JUMP            L0012
L0011: PUSH            #01
L0012: RET_POPPED      
L0013: JG              #01,L00 [TRUE] L0014
       JG              L00,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,L00)
       JUMP            L0016
L0015: TEST_ATTR       L00,#07 [FALSE] L0016
       PUSH            #00
       JUMP            L0017
L0016: PUSH            #01
L0017: RET_POPPED      

Routine R0113, 3 locals

       JZ              L00 [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#09 [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#07 [TRUE] L0007
L0006: CALL_2S         R0053 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0016
L0007: CALL_2S         R0112 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0016
       JG              #05,L00 [TRUE] L0008
       JG              L00,#0114 [TRUE] L0008
       JIN             L00,"Class" [FALSE] L0009
L0008: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,L00
L0010: GET_CHILD       Gee -> -(SP) [FALSE] L0011
L0011: PULL            L01
       JZ              L01 [TRUE] L0016
L0012: CALL_2S         R0113 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JG              #05,L01 [TRUE] L0013
       JG              L01,#0114 [TRUE] L0013
       JIN             L01,"Class" [FALSE] L0014
L0013: CALL_VN         R0470 (#0d,L01)
       JUMP            L0016
L0014: JIN             L01,L00 [TRUE] L0015
       CALL_VN         R0470 (#20,L01)
       JUMP            L0016
L0015: GET_SIBLING     L01 -> L01 [TRUE] L0012
L0016: JG              #01,L00 [TRUE] L0017
       JG              L00,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,L00
L0019: GET_PROP_ADDR   Gee,#18 -> Gef
       STORE           L02,Gef
       JG              #05,L00 [TRUE] L0020
       JG              L00,#0114 [TRUE] L0020
       JIN             L00,"Class" [FALSE] L0021
L0020: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,L00
L0022: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       JZ              L02 [TRUE] L0029
       CALL_VS         R0484 (L02,#00) -> -(SP)
       CALL_VS         R0473 ((SP)+) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0023
       STORE           G79,#00
       STORE           G78,#01
       CALL_VN         R0101 (L00,#18)
       STORE           G78,#00
       JE              G79,#01 [TRUE] RTRUE
       JUMP            L0029
L0023: STORE           L01,#00
L0024: JG              #01,L00 [TRUE] L0025
       JG              L00,#0114 [FALSE] L0026
L0025: CALL_VN         R0470 (#16,L00)
       STORE           Gee,#02
       JUMP            L0027
L0026: STORE           Gee,L00
L0027: GET_PROP_ADDR   Gee,#18 -> Gef
       JZ              Gef [TRUE] L0028
       GET_PROP_LEN    Gef -> Gef
L0028: PUSH            Gef
       MUL             #02,L01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0029
       CALL_VS         R0484 (L02,L01) -> -(SP)
       CALL_2S         R0113 ((SP)+) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       INC             L01
       JUMP            L0024
L0029: RFALSE          

Routine R0114, 3 locals

       JE              G3f,G16 [FALSE] L0001
       STORE           G3f,L00
L0001: CALL_VN         R0479 (G16,#17)
       CALL_VN         R0479 (G16,#03)
       STORE           L02,L00
L0002: JG              #05,L02 [TRUE] L0003
       JG              L02,#0114 [TRUE] L0003
       JIN             L02,"Class" [FALSE] L0004
L0003: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,L02
L0005: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       JG              #01,L02 [TRUE] L0006
       JG              L02,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,L02)
       JUMP            L0008
L0007: TEST_ATTR       L02,#00 [FALSE] L0008
       CALL_VN         R0478 (L02,#17)
L0008: JG              #05,L02 [TRUE] L0009
       JG              L02,#0114 [TRUE] L0009
       JIN             L02,"Class" [FALSE] L0010
L0009: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,L02
L0011: GET_PARENT      Gee -> L02
       JUMP            L0002
L0012: JE              G16,#14 [FALSE] L0013
       CALL_VN         R0480 (G16,#2e,S029)
L0013: STORE           G16,L00
       JE              G16,#14 [FALSE] L0014
       CALL_VN         R0480 (G16,#2e,#ffff)
L0014: CALL_VN         R0478 (G16,#17)
       CALL_VN         R0478 (G16,#03)
       CALL_VN         R0478 (G16,#00)
       CALL_VN         R0478 (G16,#10)
       STORE           L02,G16
L0015: JG              #05,L02 [TRUE] L0016
       JG              L02,#0114 [TRUE] L0016
       JIN             L02,"Class" [FALSE] L0017
L0016: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L02
L0018: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       JG              #05,L02 [TRUE] L0019
       JG              L02,#0114 [TRUE] L0019
       JIN             L02,"Class" [FALSE] L0020
L0019: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0021
L0020: STORE           Gee,L02
L0021: GET_PARENT      Gee -> L02
       JUMP            L0015
L0022: STORE           G00,L02
       STORE           G19,G00
       JG              #05,G16 [TRUE] L0023
       JG              G16,#0114 [TRUE] L0023
       JIN             G16,"Class" [FALSE] L0024
L0023: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0025
L0024: STORE           Gee,G16
L0025: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0026
       CALL_2S         R0151 (#0a) -> -(SP)
       RET_POPPED      
L0026: CALL_1N         R0164
       JG              #05,G16 [TRUE] L0027
       JG              G16,#0114 [TRUE] L0027
       JIN             G16,"Class" [FALSE] L0028
L0027: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,G16
L0029: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0111 ((SP)+) -> G18
       JZ              G18 [FALSE] L0030
       STORE           G00,#13
L0030: STORE           G1c,L01
       RTRUE           

Routine R0115, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       ERASE_WINDOW    #ffff
       JUMP            L0003
L0001: JE              Gef,#01 [FALSE] L0002
       ERASE_WINDOW    #01
       JUMP            L0003
L0002: JE              Gef,#02 [FALSE] L0003
       ERASE_WINDOW    #00
L0003: RTRUE           

Routine R0116, 2 locals

       JZ              G31 [FALSE] L0002
       SET_WINDOW      #01
       JZ              G30 [TRUE] L0001
       JG              G2f,#01 [FALSE] L0001
       SET_COLOUR      G2e,G2f
       JUMP            L0002
L0001: SET_TEXT_STYLE  REVERSE
L0002: JZ              L00 [FALSE] L0003
       STORE           L00,#01
       STORE           L01,#01
L0003: SET_CURSOR      L00,L01
       STORE           G31,#01
       RTRUE           

Routine R0117, 0 locals

       JZ              G31 [TRUE] L0003
       JZ              G30 [TRUE] L0001
       JG              G2f,#01 [FALSE] L0001
       SET_COLOUR      G2c,G2d
       JUMP            L0002
L0001: SET_TEXT_STYLE  ROMAN
L0002: SET_WINDOW      #00
L0003: STORE           G31,#00
       RTRUE           

Routine R0118, 0 locals

       CALL_VS         R0483 (#21,#00) -> -(SP)
       RET_POPPED      

Routine R0119, 0 locals

       CALL_VS         R0483 (#20,#00) -> -(SP)
       RET_POPPED      

Routine R0120, 1 local

       JE              G09,L00 [TRUE] L0001
       SPLIT_WINDOW    L00
L0001: STORE           G09,L00
       RTRUE           

Routine R0121, 3 locals

       JZ              G30 [TRUE] L0005
       JZ              L00 [TRUE] L0005
       JZ              L01 [TRUE] L0005
       JZ              L02 [FALSE] L0001
       STORE           G2e,L01
       STORE           G2f,L00
L0001: JE              L02,#01 [FALSE] L0002
       STORE           G2e,L00
       STORE           G2f,L01
L0002: JE              L02,#00,#02 [FALSE] L0003
       STORE           G2c,L00
       STORE           G2d,L01
L0003: JZ              G31 [TRUE] L0004
       SET_COLOUR      G2e,G2f
       JUMP            L0005
L0004: SET_COLOUR      G2c,G2d
L0005: RTRUE           

Routine R0122, 3 locals

       CALL_VN         R0121 (L00,L01,L02)
       RTRUE           

Routine R0123, 0 locals

       JZ              G30 [TRUE] L0001
       CALL_VN         R0121 (G2c,G2d,#02)
       CALL_VN2        R0121 (G2e,G2f,#01,#01)
       CALL_1N         R0115
L0001: RTRUE           

Routine R0124, 3 locals

       JZ              G00 [TRUE] L0004
       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0005
L0004: RTRUE           
L0005: CALL_2N         R0120 (G0a)
       CALL_VN         R0116 (#01,#01)
       CALL_1S         R0118 -> L00
       SUB             L00,#1a -> L01
       SUB             L00,#0d -> L02
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0007
L0006: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0006
L0007: CALL_VN         R0116 (#01,#02)
       JE              G00,#13 [FALSE] L0008
       CALL_2N         R0139 (G00)
       JUMP            L0010
L0008: CALL_1N         R0221
       JE              G1a,G00 [FALSE] L0009
       CALL_2N         R0139 (G00)
       JUMP            L0010
L0009: CALL_2N         R0138 (G1a)
L0010: JZ              G0b [TRUE] L0011
       JG              L00,#35 [FALSE] L0011
       CALL_VN         R0116 (#01,L01)
       CALL_2N         R0489 (S027)
       CALL_VN         R0008 (G01,G02)
       JUMP            L0013
L0011: JG              L00,#42 [FALSE] L0012
       CALL_VN         R0116 (#01,L01)
       CALL_2N         R0489 (S025)
       PRINT_NUM       G01
       CALL_VN         R0116 (#01,L02)
       CALL_2N         R0489 (S026)
       PRINT_NUM       G02
L0012: JG              L00,#35 [FALSE] L0013
       JG              L00,#42 [TRUE] L0013
       CALL_VN         R0116 (#01,L02)
       PRINT_NUM       G01
       PRINT           "/"
       PRINT_NUM       G02
L0013: CALL_1N         R0117
       RTRUE           

Routine R0125, 1 local

       PRINT_NUM       L00
       RTRUE           

Routine R0126, 5 locals

       OUTPUT_STREAM   REDIRECT_ENABLE,L00
       CALL_VS         R0473 (L02) -> -(SP)
       PULL            Gef
       JE              Gef,#04 [FALSE] L0001
       CALL_2N         R0489 (L02)
       JUMP            L0004
L0001: JE              Gef,#03 [FALSE] L0002
       CALL_VN         L02 (L03,L04)
       JUMP            L0004
L0002: JE              Gef,#02,#01 [FALSE] L0004
       JZ              L03 [TRUE] L0003
       CALL_VN         R0098 (L02,L03,#01)
       JUMP            L0004
L0003: CALL_2N         R0139 (L02)
L0004: OUTPUT_STREAM   #fffd
       CALL_VS         R0484 (L00,#00) -> -(SP)
       JG              (SP)+,L01 [FALSE] L0005
       PRINT_PADDR     S110
L0005: CALL_VS         R0484 (L00,#00) -> -(SP)
       RET_POPPED      

Routine R0127, 2 locals

       CALL_VN2        R0126 (#4520,#a0,L00,L01)
       JL              #00,#00 [TRUE] L0001
       JL              #00,#51 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1d,#00,#a1,#14,#19)
       PUSH            #00
       JUMP            L0003
L0002: LOADW           #4520,#00 -> -(SP)
L0003: RET_POPPED      

Routine R0128, 1 local

       STORE           Gef,L00
       JL              Gef,#41 [TRUE] L0001
       JG              Gef,#5a [TRUE] L0001
       ADD             L00,#20 -> L00
       JUMP            L0012
L0001: JE              Gef,#ca,#cc,#d4 [TRUE] L0002
       JE              Gef,#d6,#dd [FALSE] L0003
L0002: DEC             L00
       JUMP            L0012
L0003: JE              Gef,#d9,#da [FALSE] L0004
       SUB             L00,#02 -> L00
       JUMP            L0012
L0004: JL              Gef,#9e [TRUE] L0005
       JG              Gef,#a0 [FALSE] L0007
L0005: JL              Gef,#a7 [TRUE] L0006
       JG              Gef,#a9 [FALSE] L0007
L0006: JL              Gef,#d0 [TRUE] L0008
       JG              Gef,#d2 [TRUE] L0008
L0007: SUB             L00,#03 -> L00
       JUMP            L0012
L0008: JL              Gef,#ba [TRUE] L0009
       JG              Gef,#be [FALSE] L0010
L0009: JL              Gef,#c4 [TRUE] L0011
       JG              Gef,#c8 [TRUE] L0011
L0010: SUB             L00,#05 -> L00
       JUMP            L0012
L0011: JL              Gef,#af [TRUE] L0012
       JG              Gef,#b4 [TRUE] L0012
       SUB             L00,#06 -> L00
L0012: RET             L00

Routine R0129, 1 local

       STORE           Gef,L00
       JL              Gef,#61 [TRUE] L0001
       JG              Gef,#7a [TRUE] L0001
       SUB             L00,#20 -> L00
       JUMP            L0012
L0001: JE              Gef,#c9,#cb,#d3 [TRUE] L0002
       JE              Gef,#d5,#dc [FALSE] L0003
L0002: INC             L00
       JUMP            L0012
L0003: JE              Gef,#d7,#d8 [FALSE] L0004
       ADD             L00,#02 -> L00
       JUMP            L0012
L0004: JL              Gef,#9b [TRUE] L0005
       JG              Gef,#9d [FALSE] L0007
L0005: JL              Gef,#a4 [TRUE] L0006
       JG              Gef,#a6 [FALSE] L0007
L0006: JL              Gef,#cd [TRUE] L0008
       JG              Gef,#cf [TRUE] L0008
L0007: ADD             L00,#03 -> L00
       JUMP            L0012
L0008: JL              Gef,#b5 [TRUE] L0009
       JG              Gef,#b9 [FALSE] L0010
L0009: JL              Gef,#bf [TRUE] L0011
       JG              Gef,#c3 [TRUE] L0011
L0010: ADD             L00,#05 -> L00
       JUMP            L0012
L0011: JL              Gef,#a9 [TRUE] L0012
       JG              Gef,#ae [TRUE] L0012
       ADD             L00,#06 -> L00
L0012: RET             L00

Routine R0130, 8 locals

       CALL_VS         R0468 (L00,#04) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       JZ              L01 [FALSE] L0002
L0001: CALL_VN         R0126 (#4520,#a0,L00)
       STORE           L02,#01
       JUMP            L0005
L0002: CALL_VS         R0466 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [TRUE] L0003
       CALL_VS         R0461 (L00,L01) -> -(SP)
       CALL_VS         R0473 ((SP)+) -> -(SP)
       JE              (SP)+,#03,#04 [FALSE] L0004
L0003: CALL_VN2        R0126 (#4520,#a0,L00,L01)
       JUMP            L0005
L0004: CALL_VS         R0461 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       CALL_VS         R0151 (#02,L00,L01) -> -(SP)
       RET_POPPED      
L0005: JL              #00,#00 [TRUE] L0006
       JL              #00,#51 [TRUE] L0007
L0006: CALL_VN2        R0470 (#1d,#00,#a1,#14,#19)
       JUMP            L0008
L0007: LOADW           #4520,#00 -> L05
L0008: CALL_1S         R0118 -> L07
       JZ              L04 [TRUE] L0010
       JL              L05,L07 [FALSE] L0010
       SUB             L07,L05 -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       PULL            Gef
       JL              Gef,#01 [TRUE] L0010
L0009: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0009
L0010: JZ              L03 [FALSE] L0017
       JL              #02,#00 [TRUE] L0011
       JL              #02,#a2 [TRUE] L0012
L0011: CALL_VN2        R0470 (#1c,#02,#a1,#04,#19)
       PUSH            #00
       JUMP            L0013
L0012: LOADB           #4520,#02 -> -(SP)
L0013: CALL_2S         R0129 ((SP)+) -> -(SP)
       JL              #02,#00 [TRUE] L0014
       JL              #02,#a2 [TRUE] L0016
L0014: CALL_VN2        R0470 (#1e,#02,#a1,#04,#19)
       JZ              (SP)+ [FALSE] L0015
L0015: JUMP            L0017
L0016: STOREB          #4520,#02,(SP)+
L0017: STORE           L06,#02
L0018: ADD             L05,#02 -> -(SP)
       JL              L06,(SP)+ [FALSE] L0022
       JL              L06,#00 [TRUE] L0019
       JL              L06,#a2 [TRUE] L0020
L0019: CALL_VN2        R0470 (#1c,L06,#a1,#04,#19)
       PUSH            #00
       JUMP            L0021
L0020: LOADB           #4520,L06 -> -(SP)
L0021: CALL_2N         R0487 ((SP)+)
       INC             L06
       JUMP            L0018
L0022: JZ              L02 [FALSE] L0023
       CALL_VS         R0466 (L00,L01) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0023
       CALL_VS         R0461 (L00,L01) -> -(SP)
       CALL_VS         R0473 ((SP)+) -> -(SP)
       JE              (SP)+,#04 [FALSE] L0023
       NEW_LINE        
L0023: RTRUE           

Routine R0131, 2 locals

       CALL_VN2        R0130 (L00,L01,#00,#01,#01)
       RTRUE           

Routine R0132, 2 locals

       JZ              L01 [TRUE] L0001
       CALL_2N         R0489 (L00)
       JUMP            L0002
L0001: CALL_2N         R0130 (L00)
L0002: RTRUE           

Routine R0133, 8 locals

       CALL_VS         R0467 (L00,#31) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       MUL             G89,#01 -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PROP_ADDR   Gee,#31 -> Gef
       PUSH            Gef
       CALL_VS         R0484 ((SP)+,(SP)+) -> L07
       JZ              L03 [TRUE] L0004
       CALL_2N         R0132 (L07)
       PRINT           " "
       JUMP            L0005
L0004: CALL_2N         R0489 (L07)
       PRINT           " "
L0005: JZ              L02 [TRUE] L0006
       RTRUE           
L0006: CALL_2N         R0134 (L00)
       RTRUE           
L0007: CALL_2S         R0071 (L00) -> L04
       JZ              L02 [TRUE] L0009
       JL              L04,#03 [TRUE] L0008
       JL              L04,#06 [TRUE] L0009
       JL              L04,#09 [FALSE] L0009
L0008: ADD             L04,#03 -> L04
L0009: JL              L04,#00 [TRUE] L0010
       JL              L04,#0c [TRUE] L0011
L0010: CALL_VN2        R0470 (#1d,L04,#0b,#01,#18)
       JUMP            L0012
L0011: LOADW           #4508,L04 -> L04
L0012: MUL             L04,#01 -> -(SP)
       ADD             G89,(SP)+ -> -(SP)
       MUL             #0c,(SP)+ -> -(SP)
       ADD             #44f0,(SP)+ -> L05
       ADD             L01,#03 -> -(SP)
       CALL_VS         R0484 (L05,(SP)+) -> -(SP)
       CALL_VS         R0484 (L05,L01) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0013
       STORE           L06,#01
L0013: JZ              G04 [TRUE] L0019
       JZ              L06 [TRUE] L0019
       JL              #00,#00 [TRUE] L0014
       JL              #00,#51 [TRUE] L0015
L0014: CALL_VN2        R0470 (#1f,#00,#a1,#14,#19)
       JUMP            L0016
L0015: STOREW          #4520,#00,#a0
L0016: OUTPUT_STREAM   REDIRECT_ENABLE,#4520
       JZ              L02 [TRUE] L0017
       CALL_2N         R0140 (L02)
       JUMP            L0018
L0017: CALL_2N         R0134 (L00)
L0018: OUTPUT_STREAM   #fffd
       ADD             #4520,#02 -> -(SP)
       CALL_2S         R0005 ((SP)+) -> -(SP)
       MUL             #03,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> L01
L0019: JZ              L03 [TRUE] L0020
       PUSH            #00
       JUMP            L0021
L0020: PUSH            #01
L0021: CALL_VS         R0484 (L05,L01) -> -(SP)
       CALL_VN         R0132 ((SP)+,(SP)+)
       JZ              L02 [TRUE] L0022
       RTRUE           
L0022: CALL_2N         R0134 (L00)
       RTRUE           

Routine R0134, 1 local

       JZ              L00 [FALSE] L0001
       CALL_2N         R0489 (S036)
       RTRUE           
L0001: CALL_VS         R0473 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#03 [FALSE] L0002
       PRINT           "<routine "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0002: JE              Gef,#04 [FALSE] L0003
       PRINT           "<string ""
       CALL_2N         R0489 (L00)
       PRINT           "">"
       RTRUE           
L0003: JE              Gef,#00 [FALSE] L0004
       PRINT           "<illegal object number "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0004: JE              L00,G16 [FALSE] L0005
       CALL_2N         R0489 (S030)
       RTRUE           
L0005: JZ              G65 [TRUE] L0009
       JG              #01,L00 [TRUE] L0006
       JG              L00,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L00
L0008: GET_PROP_ADDR   Gee,#2f -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R0098 (L00,#2f,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L00
L0012: GET_PROP_ADDR   Gee,#2e -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0013
       CALL_VS         R0098 (L00,#2e,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0013: CALL_2N         R0490 (L00)
       RTRUE           

Routine R0135, 2 locals

       STORE           L01,G65
       STORE           G65,#01
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#10 [FALSE] L0003
       STORE           G65,#ffff
       CALL_2N         R0134 (L00)
       RTRUE           
L0003: CALL_VS         R0467 (L00,#25) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R0098 (L00,#25,#01)
       PRINT           " "
       CALL_2N         R0134 (L00)
       STORE           G65,L01
       RTRUE           
L0004: CALL_VN         R0133 (L00,#02)
       STORE           G65,L01
       RTRUE           

Routine R0136, 2 locals

       STORE           L01,G65
       STORE           G65,#01
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#10 [FALSE] L0003
       STORE           G65,#ffff
       CALL_2N         R0134 (L00)
       RTRUE           
L0003: CALL_VS         R0467 (L00,#25) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R0130 (L00,#25,#01)
       PRINT           " "
       CALL_2N         R0134 (L00)
       STORE           G65,L01
       RTRUE           
L0004: CALL_VN2        R0133 (L00,#02,#00,#01)
       STORE           G65,L01
       RTRUE           

Routine R0137, 2 locals

       STORE           L01,G65
       STORE           G65,#00
       CALL_VS         R0468 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0004
L0002: TEST_ATTR       L00,#10 [FALSE] L0004
L0003: STORE           G65,#ffff
       CALL_2N         R0134 (L00)
       STORE           G65,L01
       RTRUE           
L0004: CALL_VN         R0133 (L00,#01)
       STORE           G65,L01
       RTRUE           

Routine R0138, 2 locals

       JE              L00,G16 [FALSE] L0001
       CALL_2N         R0489 (S031 OR "noscript")
       RTRUE           
L0001: STORE           L01,G65
       STORE           G65,#00
       CALL_VS         R0468 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0005
L0003: TEST_ATTR       L00,#10 [FALSE] L0005
L0004: STORE           G65,#ffff
       CALL_2N         R0134 (L00)
       STORE           G65,L01
       RTRUE           
L0005: CALL_VN         R0133 (L00,#00)
       STORE           G65,L01
       RTRUE           

Routine R0139, 2 locals

       STORE           L01,G65
       STORE           G65,#ffff
       CALL_2N         R0134 (L00)
       STORE           G65,L01
       RTRUE           

Routine R0140, 1 local

       CALL_2N         R0007 (L00)
       RTRUE           

Routine R0141, 3 locals

       JL              #00,#00 [TRUE] L0001
       JL              #00,#29 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1d,#00,#28,#03,#16)
       JUMP            L0003
L0002: LOADW           #449e,#00 -> L02
L0003: STORE           L01,#01
       JUMP            L0005
L0004: ADD             L01,#02 -> L01
L0005: JG              L01,L02 [TRUE] L0014
       JL              L01,#00 [TRUE] L0006
       JL              L01,#29 [TRUE] L0007
L0006: CALL_VN2        R0470 (#1d,L01,#28,#03,#16)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #449e,L01 -> -(SP)
L0008: JE              L00,(SP)+ [FALSE] L0013
       ADD             L01,#01 -> -(SP)
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0009
       JL              Gee,#29 [TRUE] L0011
L0009: CALL_VN2        R0470 (#1d,Gee,#28,#03,#16)
       JZ              (SP)+ [FALSE] L0010
L0010: PUSH            #00
       JUMP            L0012
L0011: LOADW           #449e,(SP)+ -> -(SP)
L0012: RET_POPPED      
L0013: JUMP            L0004
L0014: RFALSE          

Routine R0142, 1 local

       CALL_VS         R0484 (L00,#00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0151 (#08) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0484 (L00,#00) -> -(SP)
       RANDOM          (SP)+ -> -(SP)
       CALL_VS         R0484 (L00,(SP)+) -> -(SP)
       RET_POPPED      

Routine R0143, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0144, 7 locals

       JG              #05,Geb [TRUE] L0001
       JG              Geb,#0114 [TRUE] L0001
       JIN             Geb,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,Geb)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,Geb
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: PULL            L04
       JZ              L04 [TRUE] L0010
L0005: CALL_VS         R0467 (L04,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0461 (L04,L00) -> -(SP)
       CALL_VS         R0468 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS2        R0462 (L04,L00,L01,L02,L03) -> L05
       JG              L05,L06 [FALSE] L0006
       STORE           L06,L05
L0006: JG              #05,L04 [TRUE] L0007
       JG              L04,#0114 [TRUE] L0007
       JIN             L04,"Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#0d,L04)
       JUMP            L0010
L0008: JIN             L04,Geb [TRUE] L0009
       CALL_VN         R0470 (#20,L04)
       JUMP            L0010
L0009: GET_SIBLING     L04 -> L04 [TRUE] L0005
L0010: RET             L06

Routine R0145, 7 locals

       JG              #05,Geb [TRUE] L0001
       JG              Geb,#0114 [TRUE] L0001
       JIN             Geb,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,Geb)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,Geb
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: PULL            L05
       JZ              L05 [TRUE] L0010
L0005: CALL_VS         R0467 (L05,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0461 (L05,L00) -> -(SP)
       CALL_VS         R0468 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS2        R0462 (L05,L00,L02,L03,L04) -> L06
       JE              L06,L01 [FALSE] L0006
       RET             L06
L0006: JG              #05,L05 [TRUE] L0007
       JG              L05,#0114 [TRUE] L0007
       JIN             L05,"Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#0d,L05)
       JUMP            L0010
L0008: JIN             L05,Geb [TRUE] L0009
       CALL_VN         R0470 (#20,L05)
       JUMP            L0010
L0009: GET_SIBLING     L05 -> L05 [TRUE] L0005
L0010: NOT             L01 -> -(SP)
       RET_POPPED      

Routine R0146, 7 locals

       JG              #05,Geb [TRUE] L0001
       JG              Geb,#0114 [TRUE] L0001
       JIN             Geb,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,Geb)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,Geb
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: PULL            L05
       JZ              L05 [TRUE] L0010
L0005: CALL_VS         R0467 (L05,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS         R0461 (L05,L00) -> -(SP)
       CALL_VS         R0468 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       CALL_VS2        R0462 (L05,L00,L02,L03,L04) -> L06
       JE              L06,L01 [TRUE] L0006
       RET             L06
L0006: JG              #05,L05 [TRUE] L0007
       JG              L05,#0114 [TRUE] L0007
       JIN             L05,"Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#0d,L05)
       JUMP            L0010
L0008: JIN             L05,Geb [TRUE] L0009
       CALL_VN         R0470 (#20,L05)
       JUMP            L0010
L0009: GET_SIBLING     L05 -> L05 [TRUE] L0005
L0010: RET             L01

Routine R0147, 0 locals
    Action routine for:
        "objects"

       CALL_1N         R0181
       RTRUE           

Routine R0148, 0 locals
    Action routine for:
        "places"

       CALL_1N         R0180
       RTRUE           

Routine R0149, 1 local

       JZ              #5d39 [TRUE] L0001
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0489 (S001)
       SET_TEXT_STYLE  ROMAN
L0001: JZ              #5d3c [TRUE] L0002
       CALL_2N         R0489 (S002)
L0002: PRINT           "Release "
       CALL_VS         R0484 (#02,#00) -> -(SP)
       AND             (SP)+,#03ff -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " / Serial number "
       STORE           L00,#00
L0003: JL              L00,#06 [FALSE] L0004
       CALL_VS         R0483 (#12,L00) -> -(SP)
       CALL_2N         R0487 ((SP)+)
       INC             L00
       JUMP            L0003
L0004: PRINT           " / Inform v"
       LOADB           #00,#3c -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3d -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3e -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3f -> Gef
       PRINT_CHAR      Gef
       PRINT           " Library "
       CALL_2N         R0489 (S004)
       PRINT           " "
       PRINT           "S"
       NEW_LINE        
       RTRUE           

Routine R0150, 1 local
    Action routine for:
        "version"

       CALL_1N         R0149
       STORE           L00,#00
       JG              G04,#00 [FALSE] L0001
       PRINT           "Standard interpreter "
       DIV             G04,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "."
       MOD             G04,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " ("
       CALL_VS         R0483 (#1e,#00) -> -(SP)
       PRINT_NUM       (SP)+
       CALL_VS         R0483 (#1f,#00) -> -(SP)
       CALL_2N         R0487 ((SP)+)
       PRINT           ") / "
       JUMP            L0002
L0001: PRINT           "Interpreter "
       CALL_VS         R0483 (#1e,#00) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " Version "
       CALL_VS         R0483 (#1f,#00) -> -(SP)
       CALL_2N         R0487 ((SP)+)
       PRINT           " / "
L0002: PRINT           "Library serial number "
       CALL_2N         R0489 (S003)
       PRINT           "
"
       RTRUE           

Routine R0151, 3 locals

       PRINT           "** Library error "
       PRINT_NUM       L00
       PRINT           " ("
       PRINT_NUM       L01
       PRINT           ","
       PRINT_NUM       L02
       PRINT_RET       ") **"

Routine R0152, 2 locals

L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0114 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#08,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_SIBLING     Gee -> L00 [FALSE] L0005
L0005: JZ              L00 [FALSE] L0006
       RFALSE          
L0006: JZ              G1f [TRUE] L0007
       CALL_VS         R0481 (L00,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,G1f [TRUE] L0007
       JUMP            L0001
L0007: AND             G1e,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       JZ              L01 [FALSE] L0011
       JG              #01,L00 [TRUE] L0008
       JG              L00,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,L00)
       JUMP            L0010
L0009: TEST_ATTR       L00,#19 [TRUE] L0011
L0010: JUMP            L0001
L0011: AND             G1e,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       JG              #01,L00 [TRUE] L0012
       JG              L00,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,L00)
       JUMP            L0014
L0013: TEST_ATTR       L00,#03 [TRUE] L0017
L0014: JG              #01,L00 [TRUE] L0015
       JG              L00,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,L00)
       JUMP            L0018
L0016: TEST_ATTR       L00,#11 [FALSE] L0018
L0017: JUMP            L0001
L0018: RET             L00

orphan code fragment:

       RTRUE           

Routine R0153, 1 local

       AND             G1e,#20 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       AND             G1e,#10 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#17 [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#14 [TRUE] RTRUE
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0008: TEST_ATTR       L00,#04 [FALSE] L0011
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#0e [TRUE] RTRUE
L0011: RFALSE          

Routine R0154, 2 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0114 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [TRUE] L0005
       CALL_2S         R0153 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0005: JG              #05,L01 [TRUE] L0006
       JG              L01,#0114 [TRUE] L0006
       JIN             L01,"Class" [FALSE] L0007
L0006: CALL_VN         R0470 (#06,L01)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L01
L0008: GET_CHILD       Gee -> -(SP) [FALSE] L0009
L0009: JZ              (SP)+ [TRUE] L0010
       CALL_2S         R0153 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0010: AND             G1e,#84 -> -(SP)
       JZ              (SP)+ [TRUE] L0052
       JG              #01,L00 [TRUE] L0011
       JG              L00,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#1a [TRUE] L0016
L0013: JG              #01,L01 [TRUE] L0014
       JG              L01,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,L01)
       JUMP            L0016
L0015: TEST_ATTR       L01,#1a [TRUE] RFALSE
L0016: JG              #01,L01 [TRUE] L0017
       JG              L01,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#03,L01)
       JUMP            L0019
L0018: TEST_ATTR       L01,#1a [TRUE] L0022
L0019: JG              #01,L00 [TRUE] L0020
       JG              L00,#0114 [FALSE] L0021
L0020: CALL_VN         R0470 (#03,L00)
       JUMP            L0022
L0021: TEST_ATTR       L00,#1a [TRUE] RFALSE
L0022: JG              #01,L00 [TRUE] L0023
       JG              L00,#0114 [FALSE] L0024
L0023: CALL_VN         R0470 (#03,L00)
       JUMP            L0025
L0024: TEST_ATTR       L00,#09 [TRUE] L0028
L0025: JG              #01,L01 [TRUE] L0026
       JG              L01,#0114 [FALSE] L0027
L0026: CALL_VN         R0470 (#03,L01)
       JUMP            L0028
L0027: TEST_ATTR       L01,#09 [TRUE] RFALSE
L0028: JG              #01,L01 [TRUE] L0029
       JG              L01,#0114 [FALSE] L0030
L0029: CALL_VN         R0470 (#03,L01)
       JUMP            L0031
L0030: TEST_ATTR       L01,#09 [TRUE] L0034
L0031: JG              #01,L00 [TRUE] L0032
       JG              L00,#0114 [FALSE] L0033
L0032: CALL_VN         R0470 (#03,L00)
       JUMP            L0034
L0033: TEST_ATTR       L00,#09 [TRUE] RFALSE
L0034: JG              #01,L00 [TRUE] L0035
       JG              L00,#0114 [FALSE] L0036
L0035: CALL_VN         R0470 (#03,L00)
       JUMP            L0049
L0036: TEST_ATTR       L00,#04 [FALSE] L0049
       JG              #01,L01 [TRUE] L0037
       JG              L01,#0114 [FALSE] L0038
L0037: CALL_VN         R0470 (#03,L01)
       RFALSE          
L0038: TEST_ATTR       L01,#04 [FALSE] RFALSE
       JG              #01,L00 [TRUE] L0039
       JG              L00,#0114 [FALSE] L0040
L0039: CALL_VN         R0470 (#03,L00)
       JUMP            L0043
L0040: TEST_ATTR       L00,#0e [FALSE] L0043
       JG              #01,L01 [TRUE] L0041
       JG              L01,#0114 [FALSE] L0042
L0041: CALL_VN         R0470 (#03,L01)
       RFALSE          
L0042: TEST_ATTR       L01,#0e [FALSE] RFALSE
L0043: JG              #01,L01 [TRUE] L0044
       JG              L01,#0114 [FALSE] L0045
L0044: CALL_VN         R0470 (#03,L01)
       JUMP            L0048
L0045: TEST_ATTR       L01,#0e [FALSE] L0048
       JG              #01,L00 [TRUE] L0046
       JG              L00,#0114 [FALSE] L0047
L0046: CALL_VN         R0470 (#03,L00)
       RFALSE          
L0047: TEST_ATTR       L00,#0e [FALSE] RFALSE
L0048: JUMP            L0052
L0049: JG              #01,L01 [TRUE] L0050
       JG              L01,#0114 [FALSE] L0051
L0050: CALL_VN         R0470 (#03,L01)
       JUMP            L0052
L0051: TEST_ATTR       L01,#04 [TRUE] RFALSE
L0052: CALL_VS         R0044 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0155, 2 locals

L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0114 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_CHILD       Gee -> -(SP) [FALSE] L0005
L0005: JZ              (SP)+ [TRUE] L0020
       JG              #05,L00 [TRUE] L0006
       JG              L00,#0114 [TRUE] L0006
       JIN             L00,"Class" [FALSE] L0007
L0006: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L00
L0008: GET_CHILD       Gee -> -(SP) [FALSE] L0009
L0009: CALL_VS         R0481 ((SP)+,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,L01 [TRUE] L0014
       JG              #05,L00 [TRUE] L0010
       JG              L00,#0114 [TRUE] L0010
       JIN             L00,"Class" [FALSE] L0011
L0010: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L00
L0012: GET_CHILD       Gee -> -(SP) [FALSE] L0013
L0013: CALL_VN         R0476 ((SP)+,#12)
       JUMP            L0019
L0014: JG              #05,L00 [TRUE] L0015
       JG              L00,#0114 [TRUE] L0015
       JIN             L00,"Class" [FALSE] L0016
L0015: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0017
L0016: STORE           Gee,L00
L0017: GET_CHILD       Gee -> -(SP) [FALSE] L0018
L0018: CALL_VN         R0476 ((SP)+,#11)
L0019: JUMP            L0001
L0020: GET_CHILD       "inside" -> -(SP) [FALSE] L0021
L0021: JZ              (SP)+ [TRUE] L0023
       GET_CHILD       "inside" -> -(SP) [FALSE] L0022
L0022: CALL_VN         R0476 ((SP)+,L00)
       JUMP            L0020
L0023: GET_CHILD       "outside" -> -(SP) [FALSE] L0024
L0024: JZ              (SP)+ [TRUE] L0026
       GET_CHILD       "outside" -> -(SP) [FALSE] L0025
L0025: CALL_VN         R0476 ((SP)+,L00)
       JUMP            L0023
L0026: RTRUE           

Routine R0156, 4 locals

L0001: STORE           L01,L00
       JUMP            L0006
L0002: JG              #05,L01 [TRUE] L0003
       JG              L01,#0114 [TRUE] L0003
       JIN             L01,"Class" [FALSE] L0004
L0003: CALL_VN         R0470 (#08,L01)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,L01
L0005: GET_SIBLING     Gee -> L01 [FALSE] L0006
L0006: JZ              L01 [TRUE] L0036
       CALL_VS         R0481 (L01,#19) -> Gef
       STORE           L02,Gef
       JZ              L02 [TRUE] L0035
       JG              #05,L01 [TRUE] L0007
       JG              L01,#0114 [TRUE] L0007
       JIN             L01,"Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#08,L01)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L01
L0009: GET_SIBLING     Gee -> L01 [FALSE] L0010
L0010: JZ              L01 [TRUE] L0015
       CALL_VS         R0481 (L01,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0015
       JG              #05,L01 [TRUE] L0011
       JG              L01,#0114 [TRUE] L0011
       JIN             L01,"Class" [FALSE] L0012
L0011: CALL_VN         R0470 (#08,L01)
       STORE           Gee,#02
       JUMP            L0013
L0012: STORE           Gee,L01
L0013: GET_SIBLING     Gee -> L01 [FALSE] L0014
L0014: JUMP            L0010
L0015: JZ              L01 [TRUE] RFALSE
       JG              #05,L01 [TRUE] L0016
       JG              L01,#0114 [TRUE] L0016
       JIN             L01,"Class" [FALSE] L0017
L0016: CALL_VN         R0470 (#08,L01)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L01
L0018: GET_SIBLING     Gee -> L03 [FALSE] L0019
L0019: JUMP            L0024
L0020: JG              #05,L03 [TRUE] L0021
       JG              L03,#0114 [TRUE] L0021
       JIN             L03,"Class" [FALSE] L0022
L0021: CALL_VN         R0470 (#08,L03)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,L03
L0023: GET_SIBLING     Gee -> L03 [FALSE] L0024
L0024: JZ              L03 [TRUE] L0035
       CALL_VS         R0481 (L03,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0034
       JG              #05,L00 [TRUE] L0025
       JG              L00,#0114 [TRUE] L0025
       JIN             L00,"Class" [FALSE] L0026
L0025: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0027
L0026: STORE           Gee,L00
L0027: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0155 ((SP)+,L02)
       JG              #05,L00 [TRUE] L0028
       JG              L00,#0114 [TRUE] L0028
       JIN             L00,"Class" [FALSE] L0029
L0028: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0030
L0029: STORE           Gee,L00
L0030: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0031
       JG              Gee,#0114 [TRUE] L0031
       JIN             Gee,"Class" [FALSE] L0032
L0031: CALL_VN         R0470 (#06,(SP)+)
       PUSH            #02
L0032: GET_CHILD       (SP)+ -> L00 [FALSE] L0033
L0033: JUMP            L0001
L0034: JUMP            L0020
L0035: JUMP            L0002
L0036: RTRUE           

Routine R0157, 1 local

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: RTRUE           

Routine R0158, 3 locals

       PUSH            G1e
       PUSH            G1f
       PUSH            G20
       PUSH            G21
       PUSH            G22
       PUSH            G23
       JG              #05,L00 [TRUE] L0001
       JG              L00,#0114 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0004
       JG              Gee,#0114 [TRUE] L0004
       JIN             Gee,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#06,(SP)+)
       PUSH            #02
L0005: GET_CHILD       (SP)+ -> -(SP) [FALSE] L0006
L0006: JE              L00,(SP)+ [FALSE] L0012
       CALL_2N         R0156 (L00)
       JG              #05,L00 [TRUE] L0007
       JG              L00,#0114 [TRUE] L0007
       JIN             L00,"Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0010
       JG              Gee,#0114 [TRUE] L0010
       JIN             Gee,"Class" [FALSE] L0011
L0010: CALL_VN         R0470 (#06,(SP)+)
       PUSH            #02
L0011: GET_CHILD       (SP)+ -> L00 [FALSE] L0012
L0012: STORE           G1e,L01
       STORE           G22,#00
       CALL_VN         R0159 (L00,L02)
       PULL            G23
       PULL            G22
       PULL            G21
       PULL            G20
       PULL            G1f
       PULL            G1e
       RTRUE           

Routine R0159, 15 locals

       JG              L01,#00 [FALSE] L0012
       JG              #05,L00 [TRUE] L0001
       JG              L00,#0114 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0004
       JG              Gee,#0114 [TRUE] L0004
       JIN             Gee,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#06,(SP)+)
       PUSH            #02
L0005: GET_CHILD       (SP)+ -> -(SP) [FALSE] L0006
L0006: JE              L00,(SP)+ [FALSE] L0012
       CALL_2N         R0156 (L00)
       JG              #05,L00 [TRUE] L0007
       JG              L00,#0114 [TRUE] L0007
       JIN             L00,"Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0010
       JG              Gee,#0114 [TRUE] L0010
       JIN             Gee,"Class" [FALSE] L0011
L0010: CALL_VN         R0470 (#06,(SP)+)
       PUSH            #02
L0011: GET_CHILD       (SP)+ -> L00 [FALSE] L0012
L0012: JZ              L00 [TRUE] RFALSE
       AND             G1e,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       JZ              L01 [FALSE] L0020
       JG              #01,L00 [TRUE] L0013
       JG              L00,#0114 [FALSE] L0014
L0013: CALL_VN         R0470 (#03,L00)
       JUMP            L0015
L0014: TEST_ATTR       L00,#19 [TRUE] L0020
L0015: JG              #05,L00 [TRUE] L0016
       JG              L00,#0114 [TRUE] L0016
       JIN             L00,"Class" [FALSE] L0017
L0016: CALL_VN         R0470 (#08,L00)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L00
L0018: GET_SIBLING     Gee -> L00 [FALSE] L0019
L0019: JUMP            L0012
L0020: AND             G1e,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0031
       JG              #01,L00 [TRUE] L0021
       JG              L00,#0114 [FALSE] L0022
L0021: CALL_VN         R0470 (#03,L00)
       JUMP            L0023
L0022: TEST_ATTR       L00,#03 [TRUE] L0026
L0023: JG              #01,L00 [TRUE] L0024
       JG              L00,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#03,L00)
       JUMP            L0031
L0025: TEST_ATTR       L00,#11 [FALSE] L0031
L0026: JG              #05,L00 [TRUE] L0027
       JG              L00,#0114 [TRUE] L0027
       JIN             L00,"Class" [FALSE] L0028
L0027: CALL_VN         R0470 (#08,L00)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,L00
L0029: GET_SIBLING     Gee -> L00 [FALSE] L0030
L0030: JUMP            L0012
L0031: JUMP            L0032
L0032: ADD             #40b7,L02 -> L03
       ADD             #4037,L02 -> L04
       STORE           L05,L00
       STORE           L06,#00
       JUMP            L0034
L0033: CALL_VS         R0152 (L05,L01) -> L05
       INC             L06
L0034: JZ              L05 [TRUE] L0036
       ADD             L06,L02 -> -(SP)
       JL              (SP)+,#80 [FALSE] L0036
       CALL_VN         R0485 (L03,L06,#00)
       CALL_VS         R0481 (L05,#17) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0035
       INC             L07
L0035: JUMP            L0033
L0036: AND             G1e,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       JE              L06,#01 [FALSE] L0040
       JG              #01,L00 [TRUE] L0037
       JG              L00,#0114 [FALSE] L0038
L0037: CALL_VN         R0470 (#03,L00)
       JUMP            L0039
L0038: TEST_ATTR       L00,#1e [TRUE] L0040
L0039: CALL_2N         R0489 (S037 OR "note")
       JUMP            L0041
L0040: CALL_2N         R0489 (S038)
L0041: AND             G1e,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0042
       PRINT           ":
"
       JUMP            L0043
L0042: CALL_2N         R0487 (#20)
L0043: SUB             G1e,#0400 -> G1e
L0044: ADD             L02,L06 -> -(SP)
       ADD             (SP)+,#01 -> L02
       JL              L07,#02 [FALSE] L0045
       JUMP            L0101
L0045: STORE           L0b,#01
       STORE           L05,L00
       STORE           L07,#00
       JUMP            L0047
L0046: CALL_VS         R0152 (L05,L01) -> L05
       INC             L07
L0047: JL              L07,L06 [FALSE] L0053
       CALL_VS         R0483 (L03,L07) -> -(SP)
       JZ              (SP)+ [FALSE] L0052
       CALL_VN         R0485 (L03,L07,L0b)
       CALL_VN         R0485 (L04,L0b,#01)
       CALL_VS         R0152 (L05,L01) -> L09
       ADD             L07,#01 -> L0a
       JUMP            L0049
L0048: CALL_VS         R0152 (L09,L01) -> L09
       INC             L0a
L0049: JZ              L09 [TRUE] L0051
       JL              L0a,L06 [FALSE] L0051
       CALL_VS         R0483 (L03,L0a) -> -(SP)
       JZ              (SP)+ [FALSE] L0050
       CALL_VS         R0481 (L05,#17) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0050
       CALL_VS         R0481 (L09,#17) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0050
       CALL_VS         R0154 (L05,L09) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0050
       CALL_VS         R0483 (L04,L0b) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0485 (L04,L0b,(SP)+)
       CALL_VN         R0485 (L03,L0a,L0b)
L0050: JUMP            L0048
L0051: INC             L0b
L0052: JUMP            L0046
L0053: DEC             L0b
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       JUMP            L0055
L0054: INC             L05
       INC             L0d
L0055: JG              L05,L0b [TRUE] L0061
L0056: CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,L05 [TRUE] L0057
       SUB             #00,L05 -> -(SP)
       CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0057
       INC             L07
       CALL_VS         R0152 (L06,L01) -> L06
       JUMP            L0056
L0057: CALL_VS         R0483 (L04,L05) -> L0a
       JZ              L06 [FALSE] L0058
       STORE           L0e,#00
       JUMP            L0060
L0058: CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1f [TRUE] L0059
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_2S         R0097 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0059
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0059
       DEC             L0d
L0059: CALL_VS         R0481 (L06,#19) -> Gef
       STORE           L0e,Gef
L0060: JUMP            L0054
L0061: DEC             L0d
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       STORE           L0e,#00
       JUMP            L0063
L0062: INC             L05
       DEC             L0d
L0063: JL              L0d,#00 [TRUE] L0100
L0064: CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,L05 [TRUE] L0065
       SUB             #00,L05 -> -(SP)
       CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0065
       INC             L07
       CALL_VS         R0152 (L06,L01) -> L06
       JUMP            L0064
L0065: CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1f [TRUE] L0085
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0066
       INC             L0d
       JUMP            L0099
L0066: CALL_VS         R0152 (L06,L01) -> L08
       JZ              L08 [TRUE] L0067
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_VS         R0481 (L08,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [TRUE] L0068
L0067: JUMP            L0085
L0068: CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_2S         R0097 ((SP)+) -> L08
       JE              L08,#02,#03 [FALSE] L0085
       STORE           L0c,L06
       STORE           G21,#01
       STORE           L09,L07
       STORE           L0a,L05
L0069: JL              L0a,L0b [FALSE] L0073
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_VS         R0481 (L0c,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] L0073
       INC             L0a
L0070: CALL_VS         R0483 (L03,L09) -> -(SP)
       JE              (SP)+,L0a [TRUE] L0071
       SUB             #00,L0a -> -(SP)
       CALL_VS         R0483 (L03,L09) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0071
       INC             L09
       CALL_VS         R0152 (L0c,L01) -> L0c
       JUMP            L0070
L0071: CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_VS         R0481 (L0c,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] L0072
       INC             G21
L0072: JUMP            L0069
L0073: JE              G21,#01 [FALSE] L0074
       JUMP            L0085
L0074: AND             G1e,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0075
       ADD             L01,G22 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0157 ((SP)+)
L0075: JE              L08,#03 [FALSE] L0079
       STORE           L0c,#00
       STORE           L09,#00
L0076: JL              L09,G21 [FALSE] L0077
       ADD             L09,L05 -> -(SP)
       CALL_VS         R0483 (L04,(SP)+) -> -(SP)
       ADD             L0c,(SP)+ -> L0c
       INC             L09
       JUMP            L0076
L0077: CALL_2N         R0140 (L0c)
       PRINT           " "
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_2N         R0489 ((SP)+)
       AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0078
       PRINT           " ("
L0078: AND             G1e,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0079
       PRINT           ":
"
L0079: STORE           L0c,G1e
       JE              L08,#03 [TRUE] L0080
       STORE           G23,#01
       STORE           G3c,L06
       ADD             L01,G22 -> G3d
       CALL_VS         R0101 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0080
       JUMP            L0083
L0080: PUSH            G1f
       PUSH            G20
       PUSH            G21
       CALL_VS         R0481 (L06,#19) -> Gef
       STORE           G1f,Gef
       STORE           G20,L06
       INC             G22
       CALL_VN         R0159 (L06,L01,L02)
       DEC             G22
       PULL            G21
       PULL            G20
       PULL            G1f
       JE              L08,#03 [FALSE] L0082
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0081
       PRINT           ")"
L0081: JUMP            L0083
L0082: STORE           G23,#02
       STORE           G3c,L06
       ADD             L01,G22 -> G3d
       CALL_VN         R0101 (L06,#19)
L0083: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0084
       AND             G1e,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0084
       NEW_LINE        
L0084: STORE           G1e,L0c
       CALL_VS         R0481 (L06,#19) -> Gef
       STORE           L0e,Gef
       JUMP            L0097
L0085: SUB             #00,L0d -> -(SP)
       CALL_VS         R0160 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0086
       JUMP            L0099
L0086: CALL_VS         R0483 (L04,L05) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0090
       AND             G1e,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0087
       CALL_2N         R0139 (L06)
       JUMP            L0089
L0087: AND             G1e,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0088
       CALL_2N         R0137 (L06)
       JUMP            L0089
L0088: CALL_2N         R0135 (L06)
L0089: JUMP            L0092
L0090: AND             G1e,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0091
       CALL_VS         R0483 (L04,L05) -> -(SP)
       CALL_VN         R0133 (L06,#01,(SP)+)
L0091: CALL_VS         R0483 (L04,L05) -> -(SP)
       CALL_2N         R0140 ((SP)+)
       PRINT           " "
       CALL_VN         R0098 (L06,#17,#01)
L0092: CALL_VS         R0483 (L04,L05) -> -(SP)
       JG              (SP)+,#01 [FALSE] L0096
       JG              #01,L06 [TRUE] L0093
       JG              L06,#0114 [FALSE] L0094
L0093: CALL_VN         R0470 (#03,L06)
       JUMP            L0095
L0094: TEST_ATTR       L06,#1e [TRUE] L0096
L0095: CALL_VN         R0478 (L06,#1e)
       CALL_VN         R0161 (L06,L01,L02)
       CALL_VN         R0479 (L06,#1e)
       JUMP            L0097
L0096: CALL_VN         R0161 (L06,L01,L02)
L0097: AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0099
       JE              L0d,#01 [FALSE] L0098
       CALL_2N         R0489 (S041)
L0098: JG              L0d,#01 [FALSE] L0099
       CALL_2N         R0489 (S044)
L0099: JUMP            L0062
L0100: RTRUE           
L0101: STORE           L0b,L06
       STORE           L05,#01
       STORE           L06,L00
       JUMP            L0103
L0102: CALL_VS         R0152 (L06,L01) -> L06
       INC             L05
       INC             L0d
L0103: JG              L05,L0b [TRUE] L0105
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1f [TRUE] L0104
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_2S         R0097 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0104
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0104
       DEC             L0d
L0104: CALL_VS         R0481 (L06,#19) -> Gef
       STORE           L0e,Gef
       JUMP            L0102
L0105: STORE           L05,#01
       STORE           L06,L00
       STORE           L0e,#00
       JUMP            L0107
L0106: CALL_VS         R0152 (L06,L01) -> L06
       INC             L05
L0107: JG              L05,L0d [TRUE] L0129
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1f [TRUE] L0121
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0108
       DEC             L05
       JUMP            L0128
L0108: CALL_VS         R0152 (L06,L01) -> L07
       JZ              L07 [TRUE] L0109
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_VS         R0481 (L07,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [TRUE] L0110
L0109: JUMP            L0121
L0110: CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_2S         R0097 ((SP)+) -> L07
       JE              L07,#02,#03 [FALSE] L0121
       AND             G1e,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0111
       ADD             L01,G22 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0157 ((SP)+)
L0111: JE              L07,#03 [FALSE] L0115
       STORE           L0c,L06
       STORE           L09,#00
L0112: CALL_VS         R0152 (L0c,L01) -> L0c
       INC             L09
       JZ              L0c [TRUE] L0113
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_VS         R0481 (L0c,#19) -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [TRUE] L0112
L0113: CALL_2N         R0140 (L09)
       PRINT           " "
       CALL_VS         R0481 (L06,#19) -> Gef
       PUSH            Gef
       CALL_2N         R0489 ((SP)+)
       AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0114
       PRINT           " ("
L0114: AND             G1e,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0115
       PRINT           ":
"
L0115: STORE           L0c,G1e
       JE              L07,#03 [TRUE] L0116
       STORE           G23,#01
       STORE           G3c,L06
       ADD             L01,G22 -> G3d
       CALL_VS         R0101 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0116
       JUMP            L0119
L0116: PUSH            G1f
       PUSH            G20
       PUSH            G21
       CALL_VS         R0481 (L06,#19) -> Gef
       STORE           G1f,Gef
       STORE           G20,L06
       INC             G22
       CALL_VN         R0159 (L06,L01,L02)
       DEC             G22
       PULL            G21
       PULL            G20
       PULL            G1f
       JE              L07,#03 [FALSE] L0118
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0117
       PRINT           ")"
L0117: JUMP            L0119
L0118: STORE           G23,#02
       STORE           G3c,L06
       ADD             L01,G22 -> G3d
       CALL_VN         R0101 (L06,#19)
L0119: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0120
       AND             G1e,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0120
       NEW_LINE        
L0120: STORE           G1e,L0c
       CALL_VS         R0481 (L06,#19) -> Gef
       STORE           L0e,Gef
       JUMP            L0126
L0121: SUB             L05,L0d -> -(SP)
       CALL_VS         R0160 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0122
       JUMP            L0128
L0122: AND             G1e,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0123
       CALL_2N         R0139 (L06)
       JUMP            L0125
L0123: AND             G1e,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0124
       CALL_2N         R0137 (L06)
       JUMP            L0125
L0124: CALL_2N         R0135 (L06)
L0125: CALL_VN         R0161 (L06,L01,L02)
L0126: AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0128
       SUB             L0d,#01 -> -(SP)
       JE              L05,(SP)+ [FALSE] L0127
       CALL_2N         R0489 (S041)
L0127: SUB             L0d,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0128
       CALL_2N         R0489 (S044)
L0128: JUMP            L0106
L0129: RTRUE           

Routine R0160, 4 locals

       STORE           G23,#01
       AND             G1e,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L01,G22 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0157 ((SP)+)
L0001: CALL_VS         R0481 (L00,#16) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0004
       AND             G1e,#84 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VS         R0098 (L00,#16,#01) -> L03
       JZ              L03 [TRUE] L0004
       AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JE              L02,#ffff [FALSE] L0002
       CALL_2N         R0489 (S041)
L0002: JL              L02,#ffff [FALSE] L0003
       CALL_2N         R0489 (S044)
L0003: AND             G1e,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       NEW_LINE        
L0004: RET             L03

Routine R0161, 9 locals

       STORE           G23,#02
       AND             G1e,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       CALL_VS         R0481 (L00,#16) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0101 (L00,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       AND             G1e,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_RET       ""
L0001: RTRUE           
L0002: STORE           L08,#00
       JG              #01,L00 [TRUE] L0003
       JG              L00,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,L00)
       JUMP            L0008
L0004: TEST_ATTR       L00,#09 [FALSE] L0008
       JG              #01,G00 [TRUE] L0005
       JG              G00,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,G00)
       JUMP            L0007
L0006: TEST_ATTR       G00,#09 [TRUE] L0008
L0007: ADD             L08,#01 -> L08
L0008: JG              #01,L00 [TRUE] L0009
       JG              L00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L00)
       JUMP            L0014
L0010: TEST_ATTR       L00,#04 [FALSE] L0014
       JG              #01,L00 [TRUE] L0011
       JG              L00,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#0e [TRUE] L0014
L0013: ADD             L08,#02 -> L08
L0014: JG              #01,L00 [TRUE] L0015
       JG              L00,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,L00)
       JUMP            L0027
L0016: TEST_ATTR       L00,#04 [FALSE] L0027
       JG              #01,L00 [TRUE] L0017
       JG              L00,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#03,L00)
       JUMP            L0019
L0018: TEST_ATTR       L00,#0e [TRUE] L0022
L0019: JG              #01,L00 [TRUE] L0020
       JG              L00,#0114 [FALSE] L0021
L0020: CALL_VN         R0470 (#03,L00)
       JUMP            L0027
L0021: TEST_ATTR       L00,#17 [FALSE] L0027
L0022: JG              #05,L00 [TRUE] L0023
       JG              L00,#0114 [TRUE] L0023
       JIN             L00,"Class" [FALSE] L0024
L0023: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0025
L0024: STORE           Gee,L00
L0025: GET_CHILD       Gee -> -(SP) [FALSE] L0026
L0026: JZ              (SP)+ [FALSE] L0027
       ADD             L08,#04 -> L08
L0027: JZ              L08 [TRUE] L0028
       CALL_VN         R0285 (#1006,L08,L00)
L0028: AND             G1e,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0072
       CALL_VS         R0481 (L00,#16) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0030
       CALL_VS         R0101 (L00,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0030
       AND             G1e,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       PRINT_RET       ""
L0029: RTRUE           
L0030: JG              #01,L00 [TRUE] L0031
       JG              L00,#0114 [FALSE] L0032
L0031: CALL_VN         R0470 (#03,L00)
       JUMP            L0035
L0032: TEST_ATTR       L00,#09 [FALSE] L0035
       JG              #01,L00 [TRUE] L0033
       JG              L00,#0114 [FALSE] L0034
L0033: CALL_VN         R0470 (#03,L00)
       JUMP            L0035
L0034: TEST_ATTR       L00,#1a [FALSE] L0035
       CALL_VN         R0285 (#1006,#08)
       STORE           L05,#01
       JUMP            L0041
L0035: JG              #01,L00 [TRUE] L0036
       JG              L00,#0114 [FALSE] L0037
L0036: CALL_VN         R0470 (#03,L00)
       JUMP            L0038
L0037: TEST_ATTR       L00,#09 [FALSE] L0038
       CALL_VN         R0285 (#1006,#09,L00)
       STORE           L05,#01
L0038: JG              #01,L00 [TRUE] L0039
       JG              L00,#0114 [FALSE] L0040
L0039: CALL_VN         R0470 (#03,L00)
       JUMP            L0041
L0040: TEST_ATTR       L00,#1a [FALSE] L0041
       CALL_VN         R0285 (#1006,#0a,L00)
       STORE           L05,#01
L0041: JG              #01,L00 [TRUE] L0042
       JG              L00,#0114 [FALSE] L0043
L0042: CALL_VN         R0470 (#03,L00)
       JUMP            L0071
L0043: TEST_ATTR       L00,#04 [FALSE] L0071
       JG              #01,L00 [TRUE] L0044
       JG              L00,#0114 [FALSE] L0045
L0044: CALL_VN         R0470 (#03,L00)
       JUMP            L0063
L0045: TEST_ATTR       L00,#0f [FALSE] L0063
       JZ              L05 [TRUE] L0046
       CALL_2N         R0489 (S041)
       JUMP            L0047
L0046: CALL_VN         R0285 (#1006,#0b,L00)
L0047: JG              #01,L00 [TRUE] L0048
       JG              L00,#0114 [FALSE] L0049
L0048: CALL_VN         R0470 (#03,L00)
       JUMP            L0056
L0049: TEST_ATTR       L00,#0e [FALSE] L0056
       JG              #05,L00 [TRUE] L0050
       JG              L00,#0114 [TRUE] L0050
       JIN             L00,"Class" [FALSE] L0051
L0050: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0052
L0051: STORE           Gee,L00
L0052: GET_CHILD       Gee -> -(SP) [FALSE] L0053
L0053: JZ              (SP)+ [TRUE] L0054
       CALL_VN         R0285 (#1006,#0c,L00)
       JUMP            L0055
L0054: CALL_VN         R0285 (#1006,#0d,L00)
L0055: JUMP            L0062
L0056: JG              #01,L00 [TRUE] L0057
       JG              L00,#0114 [FALSE] L0058
L0057: CALL_VN         R0470 (#03,L00)
       JUMP            L0061
L0058: TEST_ATTR       L00,#0a [FALSE] L0061
       JG              #01,L00 [TRUE] L0059
       JG              L00,#0114 [FALSE] L0060
L0059: CALL_VN         R0470 (#03,L00)
       JUMP            L0061
L0060: TEST_ATTR       L00,#0b [FALSE] L0061
       CALL_VN         R0285 (#1006,#0f,L00)
       JUMP            L0062
L0061: CALL_VN         R0285 (#1006,#0e,L00)
L0062: STORE           L05,#01
       JUMP            L0071
L0063: JG              #05,L00 [TRUE] L0064
       JG              L00,#0114 [TRUE] L0064
       JIN             L00,"Class" [FALSE] L0065
L0064: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0066
L0065: STORE           Gee,L00
L0066: GET_CHILD       Gee -> -(SP) [FALSE] L0067
L0067: JZ              (SP)+ [FALSE] L0071
       JG              #01,L00 [TRUE] L0068
       JG              L00,#0114 [FALSE] L0069
L0068: CALL_VN         R0470 (#03,L00)
       JUMP            L0071
L0069: TEST_ATTR       L00,#17 [FALSE] L0071
       JZ              L05 [TRUE] L0070
       CALL_VN         R0285 (#1006,#10,L00)
       JUMP            L0071
L0070: CALL_VN         R0285 (#1006,#11,L00)
L0071: JZ              L05 [TRUE] L0072
       PRINT           ")"
L0072: AND             G1e,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0089
       STORE           L07,#00
       JG              #05,L00 [TRUE] L0073
       JG              L00,#0114 [TRUE] L0073
       JIN             L00,"Class" [FALSE] L0074
L0073: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0075
L0074: STORE           Gee,L00
L0075: GET_CHILD       Gee -> -(SP) [FALSE] L0076
L0076: PULL            L03
       JZ              L03 [TRUE] L0088
L0077: JG              #01,L03 [TRUE] L0078
       JG              L03,#0114 [FALSE] L0079
L0078: CALL_VN         R0470 (#03,L03)
       JUMP            L0080
L0079: TEST_ATTR       L03,#03 [TRUE] L0084
L0080: JG              #01,L03 [TRUE] L0081
       JG              L03,#0114 [FALSE] L0082
L0081: CALL_VN         R0470 (#03,L03)
       JUMP            L0083
L0082: TEST_ATTR       L03,#11 [TRUE] L0084
L0083: INC             L07
       STORE           L06,L03
L0084: JG              #05,L03 [TRUE] L0085
       JG              L03,#0114 [TRUE] L0085
       JIN             L03,"Class" [FALSE] L0086
L0085: CALL_VN         R0470 (#0d,L03)
       JUMP            L0088
L0086: JIN             L03,L00 [TRUE] L0087
       CALL_VN         R0470 (#20,L03)
       JUMP            L0088
L0087: GET_SIBLING     L03 -> L03 [TRUE] L0077
L0088: JUMP            L0098
L0089: JG              #05,L00 [TRUE] L0090
       JG              L00,#0114 [TRUE] L0090
       JIN             L00,"Class" [FALSE] L0091
L0090: CALL_VN         R0470 (#09,L00)
       STORE           Gee,#02
       JUMP            L0092
L0091: STORE           Gee,L00
L0092: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0094
L0093: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0093
L0094: PULL            Gee
       STORE           L07,Gef
       JG              #05,L00 [TRUE] L0095
       JG              L00,#0114 [TRUE] L0095
       JIN             L00,"Class" [FALSE] L0096
L0095: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0097
L0096: STORE           Gee,L00
L0097: GET_CHILD       Gee -> L06 [FALSE] L0098
L0098: JZ              L07 [TRUE] L0100
       AND             G1e,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0100
       AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0099
       CALL_VN         R0285 (#1006,#12,L00)
L0099: STORE           L04,#01
L0100: JZ              L07 [TRUE] L0124
       AND             G1e,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0124
       JG              #01,L00 [TRUE] L0101
       JG              L00,#0114 [FALSE] L0102
L0101: CALL_VN         R0470 (#03,L00)
       JUMP            L0109
L0102: TEST_ATTR       L00,#14 [FALSE] L0109
       AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0108
       AND             G1e,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0103
       CALL_VN         R0285 (#1006,#13,L00)
       JUMP            L0104
L0103: CALL_VN         R0285 (#1006,#14,L00)
L0104: JG              #01,L00 [TRUE] L0105
       JG              L00,#0114 [FALSE] L0106
L0105: CALL_VN         R0470 (#03,L00)
       JUMP            L0107
L0106: TEST_ATTR       L00,#00 [FALSE] L0107
       CALL_2N         R0489 (S042)
       JUMP            L0108
L0107: CALL_2N         R0489 (S043)
L0108: STORE           L04,#01
L0109: JG              #01,L00 [TRUE] L0110
       JG              L00,#0114 [FALSE] L0111
L0110: CALL_VN         R0470 (#03,L00)
       JUMP            L0124
L0111: TEST_ATTR       L00,#04 [FALSE] L0124
       JG              #01,L00 [TRUE] L0112
       JG              L00,#0114 [FALSE] L0113
L0112: CALL_VN         R0470 (#03,L00)
       JUMP            L0114
L0113: TEST_ATTR       L00,#0e [TRUE] L0117
L0114: JG              #01,L00 [TRUE] L0115
       JG              L00,#0114 [FALSE] L0116
L0115: CALL_VN         R0470 (#03,L00)
       JUMP            L0124
L0116: TEST_ATTR       L00,#17 [FALSE] L0124
L0117: AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0123
       AND             G1e,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0118
       CALL_VN         R0285 (#1006,#15,L00)
       JUMP            L0119
L0118: CALL_VN         R0285 (#1006,#16,L00)
L0119: JG              #01,L00 [TRUE] L0120
       JG              L00,#0114 [FALSE] L0121
L0120: CALL_VN         R0470 (#03,L00)
       JUMP            L0122
L0121: TEST_ATTR       L00,#00 [FALSE] L0122
       CALL_2N         R0489 (S042)
       JUMP            L0123
L0122: CALL_2N         R0489 (S043)
L0123: STORE           L04,#01
L0124: JZ              L04 [TRUE] L0129
       AND             G1e,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0129
       JG              L07,#01 [TRUE] L0127
       JG              #01,L06 [TRUE] L0125
       JG              L06,#0114 [FALSE] L0126
L0125: CALL_VN         R0470 (#03,L06)
       JUMP            L0128
L0126: TEST_ATTR       L06,#1e [FALSE] L0128
L0127: CALL_2N         R0489 (S040)
       JUMP            L0129
L0128: CALL_2N         R0489 (S039)
L0129: AND             G1e,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0130
       NEW_LINE        
L0130: JZ              L04 [TRUE] L0135
       JG              #05,L00 [TRUE] L0131
       JG              L00,#0114 [TRUE] L0131
       JIN             L00,"Class" [FALSE] L0132
L0131: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0133
L0132: STORE           Gee,L00
L0133: GET_CHILD       Gee -> L00 [FALSE] L0134
L0134: PUSH            G1f
       PUSH            G20
       PUSH            G21
       STORE           G1f,#00
       STORE           G20,#00
       STORE           G21,#00
       ADD             L01,#01 -> -(SP)
       CALL_VN         R0159 (L00,(SP)+,L02)
       PULL            G21
       PULL            G20
       PULL            G1f
       AND             G1e,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0135
       PRINT           ")"
L0135: RTRUE           

Routine R0162, 7 locals

       INC             G26
L0001: STORE           G27,#00
       CALL_1S         L01 -> L03
       STORE           L04,G29
       PRINT           "--- "
       CALL_2N         R0489 (L04)
       PRINT           " ---

"
       CALL_VS         R0468 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0462 (L00,#45)
       JUMP            L0003
L0002: CALL_2N         R0489 (L00)
L0003: CALL_VN         R0285 (#1007,#34,L03)
       PRINT           "> "
       STORE           Gec,#41b7
       STOREB          Gec,#01,#00
       CALL_1N         R0124
       READ            Gec,#4232 -> Gef
       JL              #01,#00 [TRUE] L0004
       JL              #01,#41 [TRUE] L0005
L0004: CALL_VN2        R0470 (#1c,#01,#40,#04,#0e)
       JUMP            L0006
L0005: LOADB           #4232,#01 -> L06
L0006: JL              #01,#00 [TRUE] L0007
       JL              #01,#20 [TRUE] L0008
L0007: CALL_VN2        R0470 (#1d,#01,#40,#14,#0e)
       JUMP            L0009
L0008: LOADW           #4232,#01 -> L05
L0009: JZ              L06 [TRUE] L0010
       JE              L05,"q","quit" [FALSE] L0012
L0010: DEC             G26
       JG              G26,#00 [TRUE] RFALSE
       JZ              G17 [FALSE] L0011
       CALL_2N         R0090 (#00)
       RTRUE           
L0011: RFALSE          
L0012: CALL_2S         R0069 (#01) -> L05
       JZ              L05 [FALSE] L0013
       JUMP            L0001
L0013: JL              L05,#01 [TRUE] L0014
       JG              L05,L03 [FALSE] L0015
L0014: JUMP            L0003
L0015: STORE           G27,L05
       CALL_1S         L02 -> L06
       JE              L06,#02 [FALSE] L0016
       JUMP            L0001
L0016: JE              L06,#03 [TRUE] RFALSE
       JUMP            L0003

Routine R0163, 15 locals

       JZ              G25 [FALSE] L0001
       CALL_VS         R0162 (L00,L01,L02) -> -(SP)
       RET_POPPED      
L0001: INC             G26
       STORE           G27,#00
       CALL_1S         L01 -> L03
       STORE           L04,G29
       STORE           L05,G28
       STORE           L06,#07
L0002: STORE           L09,#00
       ERASE_WINDOW    #ffff
       STORE           L0b,#01
       ADD             L03,#07 -> -(SP)
       MUL             L0b,(SP)+ -> L07
       CALL_2N         R0120 (L07)
       CALL_VS         R0483 (#21,#00) -> L07
       JZ              L07 [FALSE] L0003
       STORE           L07,#50
L0003: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       STORE           L0c,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,L05 -> -(SP)
       MUL             (SP)+,L0c -> -(SP)
       ADD             #01,(SP)+ -> L08
       SET_CURSOR      #01,L08
       CALL_2N         R0489 (L04)
       ADD             #01,L0b -> L0d
       SET_CURSOR      L0d,#01
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0007
L0006: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0006
L0007: ADD             #01,L0c -> L0e
       SET_CURSOR      L0d,L0e
       CALL_2N         R0489 (S020 OR "normal")
       SUB             L07,#0d -> -(SP)
       MUL             (SP)+,L0c -> -(SP)
       ADD             #01,(SP)+ -> L08
       SET_CURSOR      L0d,L08
       CALL_2N         R0489 (S021)
       ADD             L0d,L0b -> L0d
       SET_CURSOR      L0d,#01
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0009
L0008: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0008
L0009: SET_CURSOR      L0d,L0e
       CALL_2N         R0489 (S024)
       SUB             L07,#12 -> -(SP)
       MUL             (SP)+,L0c -> -(SP)
       ADD             #01,(SP)+ -> L08
       SET_CURSOR      L0d,L08
       JE              G26,#01 [FALSE] L0010
       CALL_2N         R0489 (S022)
       JUMP            L0011
L0010: CALL_2N         R0489 (S023)
L0011: SET_TEXT_STYLE  ROMAN
       MUL             #02,L0b -> -(SP)
       ADD             L0d,(SP)+ -> L0d
       SET_CURSOR      L0d,L0e
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       CALL_VS         R0468 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_2N         R0489 (L00)
       JUMP            L0013
L0012: CALL_VN         R0462 (L00,#45)
L0013: MUL             #03,L0c -> -(SP)
       ADD             #01,(SP)+ -> L0e
L0014: JE              L06,L09 [TRUE] L0016
       JG              L09,#00 [FALSE] L0015
       SUB             L09,#01 -> -(SP)
       MUL             (SP)+,L0b -> -(SP)
       ADD             #01,(SP)+ -> L0d
       SET_CURSOR      L0d,L0e
       PRINT           " "
L0015: SUB             L06,#01 -> -(SP)
       MUL             (SP)+,L0b -> -(SP)
       ADD             #01,(SP)+ -> L0d
       SET_CURSOR      L0d,L0e
       PRINT           ">"
L0016: STORE           L09,L06
       READ_CHAR       #01 -> L0a
       JE              L0a,#4e,#6e,#82 [FALSE] L0018
       INC             L06
       ADD             #07,L03 -> -(SP)
       JE              L06,(SP)+ [FALSE] L0017
       STORE           L06,#07
L0017: JUMP            L0014
L0018: JE              L0a,#50,#70,#81 [FALSE] L0020
       DEC             L06
       JE              L06,#06 [FALSE] L0019
       ADD             #06,L03 -> L06
L0019: JUMP            L0014
L0020: JE              L0a,#51,#71,#1b [TRUE] L0021
       JE              L0a,#83 [FALSE] L0022
L0021: JUMP            L0029
L0022: JE              L0a,#0a,#0d,#84 [FALSE] L0028
       SET_WINDOW      #00
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       SUB             L06,#06 -> G27
       CALL_VN         R0462 (L01,#45)
       ERASE_WINDOW    #ffff
       CALL_2N         R0120 (L0b)
       CALL_VS         R0483 (#21,#00) -> L07
       JZ              L07 [FALSE] L0023
       STORE           L07,#50
L0023: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0025
L0024: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0024
L0025: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,G28 -> -(SP)
       MUL             (SP)+,L0c -> -(SP)
       ADD             #01,(SP)+ -> L08
       SET_CURSOR      #01,L08
       CALL_2N         R0489 (G29)
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       NEW_LINE        
       CALL_VS         R0462 (L02,#45) -> L07
       JE              L07,#02 [FALSE] L0026
       JUMP            L0002
L0026: JE              L07,#03 [FALSE] L0027
       JUMP            L0029
L0027: CALL_VN         R0285 (#1007,#35)
       READ_CHAR       #01 -> L0a
       JUMP            L0002
L0028: JUMP            L0014
L0029: DEC             G26
       JG              G26,#00 [TRUE] RFALSE
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_CURSOR      #01,#01
       ERASE_WINDOW    #ffff
       SET_WINDOW      #00
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       JZ              G17 [FALSE] L0030
       CALL_2N         R0090 (#00)
       RTRUE           
L0030: RTRUE           

Routine R0164, 6 locals

       JE              G00,G16,#00 [FALSE] L0001
       RTRUE           
L0001: STORE           L00,#01
L0002: JG              #01,L00 [TRUE] L0003
       JG              L00,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#15,L00)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,L00
L0005: GET_PROP_ADDR   Gee,#27 -> Gef
       STORE           L04,Gef
       JZ              L04 [TRUE] L0029
       JG              #01,L00 [TRUE] L0006
       JG              L00,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,L00)
       JUMP            L0008
L0007: TEST_ATTR       L00,#01 [TRUE] L0029
L0008: CALL_VS         R0191 (G16,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0029
       CALL_VS         R0484 (L04,#00) -> -(SP)
       CALL_2S         R0097 ((SP)+) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0011
       CALL_VS         R0462 (L00,#27) -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       CALL_VN         R0476 (L00,G00)
       JUMP            L0010
L0009: CALL_2N         R0477 (L00)
L0010: JUMP            L0029
L0011: JG              #01,L00 [TRUE] L0012
       JG              L00,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#16,L00)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L00
L0014: GET_PROP_ADDR   Gee,#27 -> Gef
       JZ              Gef [TRUE] L0015
       GET_PROP_LEN    Gef -> Gef
L0015: STORE           L01,Gef
       STORE           L02,#00
L0016: DIV             L01,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0025
       CALL_VS         R0484 (L04,L02) -> L03
       JE              L03,G00 [TRUE] L0019
       JG              #01,L03 [TRUE] L0017
       JG              L03,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#02,L03)
       JUMP            L0024
L0018: JIN             L03,G00 [FALSE] L0024
L0019: JG              #01,L00 [TRUE] L0020
       JG              L00,#0114 [FALSE] L0021
L0020: CALL_VN         R0470 (#02,L00)
       JUMP            L0022
L0021: JIN             L00,G00 [TRUE] L0023
L0022: CALL_VN         R0476 (L00,G00)
L0023: STORE           L05,#01
L0024: INC             L02
       JUMP            L0016
L0025: JZ              L05 [FALSE] L0029
       JG              #05,L00 [TRUE] L0026
       JG              L00,#0114 [TRUE] L0026
       JIN             L00,"Class" [FALSE] L0027
L0026: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0028
L0027: STORE           Gee,L00
L0028: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       CALL_2N         R0477 (L00)
L0029: INC             L00
       JG              L00,#0114 [TRUE] L0030
       JUMP            L0002
L0030: RTRUE           

Routine R0165, 2 locals

       CALL_VN         R0476 (G16,L00)
L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0114 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JG              #05,L00 [TRUE] L0005
       JG              L00,#0114 [TRUE] L0005
       JIN             L00,"Class" [FALSE] L0006
L0005: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L00
L0007: GET_PARENT      Gee -> L00
       JUMP            L0001
L0008: STORE           G00,L00
       STORE           G19,G00
       CALL_1N         R0164
       CALL_2N         R0110 (#01)
       JZ              L01 [FALSE] L0009
       CALL_2N         R0090 (#00)
L0009: JE              L01,#01 [FALSE] L0010
       CALL_1N         R0219
       CALL_1N         R0220
L0010: JE              L01,#02 [FALSE] L0011
       CALL_2N         R0222 (#01)
L0011: RTRUE           

Routine R0166, 1 local

       CALL_VN         R0090 (#1b,L00)
       CALL_2N         R0090 (#00)
       RTRUE           

Routine R0167, 2 locals

L0001: JZ              G00 [TRUE] L0005
       JG              #05,G16 [TRUE] L0002
       JG              G16,#0114 [TRUE] L0002
       JIN             G16,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G16
L0004: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0005: STORE           Gec,#41b7
       STOREB          Gec,#01,#00
       READ            Gec,#4232 -> Gef
       JUMP            L0007
L0006: STORE           Gec,#41b7
       STOREB          Gec,#01,#00
       CALL_1N         R0124
       READ            Gec,#4232 -> Gef
L0007: JL              #01,#00 [TRUE] L0008
       JL              #01,#41 [TRUE] L0009
L0008: CALL_VN2        R0470 (#1c,#01,#40,#04,#0e)
       JUMP            L0010
L0009: LOADB           #4232,#01 -> L01
L0010: JZ              L01 [TRUE] L0014
       JL              #01,#00 [TRUE] L0011
       JL              #01,#20 [TRUE] L0012
L0011: CALL_VN2        R0470 (#1d,#01,#40,#14,#0e)
       JUMP            L0013
L0012: LOADW           #4232,#01 -> L00
L0013: JE              L00,"y","yes","yes" [TRUE] RTRUE
       JE              L00,"n",S011 OR "no",S011 OR "no" [TRUE] RFALSE
L0014: CALL_VN         R0285 (#37,#01)
       PRINT           "> "
       JUMP            L0001

orphan code fragment:

       RTRUE           

Routine R0168, 0 locals
    Action routine for:
        "die"

       CALL_VN         R0285 (#37,#02)
       CALL_1S         R0167 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       QUIT            
L0001: RTRUE           

Routine R0169, 0 locals
    Action routine for:
        "restart"

       CALL_VN         R0285 (#39,#01)
       CALL_1S         R0167 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RESTART         
       CALL_VN         R0285 (#39,#02)
L0001: RTRUE           

Routine R0170, 0 locals
    Action routine for:
        "restore"

       RESTORE         -> Gef
       JE              Gef,#02 [TRUE] L0001
       CALL_VS         R0285 (#3a,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0285 (#3a,#02)
       RTRUE           

Routine R0171, 1 local
    Action routine for:
        "save"

       SAVE            -> L00
       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       CALL_VN         R0285 (#3c,#01)
       JUMP            L0003
L0001: JE              Gef,#01 [FALSE] L0002
       CALL_VN         R0285 (#3c,#02)
       JUMP            L0003
L0002: JE              Gef,#02 [FALSE] L0003
       CALL_1N         R0123
       CALL_VN         R0285 (#3a,#02)
L0003: RTRUE           

Routine R0172, 0 locals
    Action routine for:
        "verify"

       VERIFY          [TRUE] L0001
       JUMP            L0002
L0001: CALL_VS         R0285 (#56,#01) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0285 (#56,#02)
       RTRUE           

Routine R0173, 0 locals
    Action routine for:
        "script"
        "script on"

       CALL_VS         R0484 (#10,#00) -> -(SP)
       AND             (SP)+,#01 -> G07
       JZ              G07 [TRUE] L0001
       CALL_VS         R0285 (#3f,#01) -> -(SP)
       RET_POPPED      
L0001: OUTPUT_STREAM   SCRIPTING_ENABLE
       CALL_VS         R0484 (#10,#00) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0285 (#3f,#03) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0285 (#3f,#02)
       CALL_1N         R0150
       STORE           G07,#01
       RTRUE           

Routine R0174, 0 locals
    Action routine for:
        "script off"
        "noscript"

       CALL_VS         R0484 (#10,#00) -> -(SP)
       AND             (SP)+,#01 -> G07
       JZ              G07 [FALSE] L0001
       CALL_VS         R0285 (#3e,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0285 (#3e,#02)
       OUTPUT_STREAM   #fffe
       CALL_VS         R0484 (#10,#00) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0285 (#3e,#03) -> -(SP)
       RET_POPPED      
L0002: STORE           G07,#00
       RTRUE           

Routine R0175, 0 locals
    Action routine for:
        "recording"
        "recording on"

       OUTPUT_STREAM   RECORD_ENABLE
       STORE           G08,#01
       CALL_VN         R0285 (#0a,#01)
       RTRUE           

Routine R0176, 0 locals
    Action routine for:
        "recording off"

       JE              G08,#01 [FALSE] L0001
       OUTPUT_STREAM   #fffc
L0001: STORE           G08,#00
       CALL_VN         R0285 (#09,#01)
       RTRUE           

Routine R0177, 0 locals
    Action routine for:
        "replay"

       INPUT_STREAM    #01
       STORE           G08,#02
       CALL_VN         R0285 (#0b,#01)
       RTRUE           

Routine R0178, 0 locals
    Action routine for:
        "notify"
        "notify on"

       STORE           G13,#01
       CALL_2N         R0285 (#2c)
       RTRUE           

Routine R0179, 0 locals
    Action routine for:
        "notify off"

       STORE           G13,#00
       CALL_2N         R0285 (#2b)
       RTRUE           

Routine R0180, 3 locals

       CALL_VN         R0285 (#2f,#01)
       STORE           L00,#01
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#18 [FALSE] L0004
       INC             L01
L0004: INC             L00
       JG              L00,#0114 [TRUE] L0005
       JUMP            L0001
L0005: STORE           L00,#01
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0011
L0008: TEST_ATTR       L00,#18 [FALSE] L0011
       CALL_2N         R0139 (L00)
       INC             L02
       JE              L02,L01 [FALSE] L0009
       CALL_VN         R0285 (#2f,#02)
       RTRUE           
L0009: SUB             L01,#01 -> -(SP)
       JE              L02,(SP)+ [FALSE] L0010
       CALL_2N         R0489 (S041)
       JUMP            L0011
L0010: CALL_2N         R0489 (S044)
L0011: INC             L00
       JG              L00,#0114 [TRUE] L0012
       JUMP            L0006
L0012: RTRUE           

Routine R0181, 3 locals

       CALL_VN         R0285 (#2d,#01)
       STORE           L00,#01
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0028
L0003: TEST_ATTR       L00,#0c [FALSE] L0028
       STORE           L02,#01
       CALL_2N         R0137 (L00)
       JG              #05,L00 [TRUE] L0004
       JG              L00,#0114 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_PARENT      Gee -> L01
       JZ              L01 [TRUE] L0026
       JE              L01,G16 [FALSE] L0011
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1a [FALSE] L0009
       CALL_VN         R0285 (#2d,#03)
       JUMP            L0010
L0009: CALL_VN         R0285 (#2d,#04)
L0010: JUMP            L0027
L0011: JG              #01,L01 [TRUE] L0012
       JG              L01,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,L01)
       JUMP            L0014
L0013: TEST_ATTR       L01,#00 [FALSE] L0014
       CALL_VN         R0285 (#2d,#05)
       JUMP            L0027
L0014: JG              #01,L01 [TRUE] L0015
       JG              L01,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,L01)
       JUMP            L0017
L0016: TEST_ATTR       L01,#18 [FALSE] L0017
       CALL_VN         R0285 (#2d,#06,L01)
       JUMP            L0027
L0017: JG              #01,L01 [TRUE] L0018
       JG              L01,#0114 [FALSE] L0019
L0018: CALL_VN         R0470 (#03,L01)
       JUMP            L0020
L0019: TEST_ATTR       L01,#04 [FALSE] L0020
       CALL_VN         R0285 (#2d,#08,L01)
       JUMP            L0027
L0020: JG              #01,L01 [TRUE] L0021
       JG              L01,#0114 [FALSE] L0022
L0021: CALL_VN         R0470 (#03,L01)
       JUMP            L0023
L0022: TEST_ATTR       L01,#14 [FALSE] L0023
       CALL_VN         R0285 (#2d,#09,L01)
       JUMP            L0027
L0023: JG              #01,L01 [TRUE] L0024
       JG              L01,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#03,L01)
       JUMP            L0026
L0025: TEST_ATTR       L01,#07 [FALSE] L0026
       CALL_VN         R0285 (#2d,#07,L01)
       JUMP            L0027
L0026: CALL_VN         R0285 (#2d,#0a)
L0027: NEW_LINE        
L0028: INC             L00
       JG              L00,#0114 [TRUE] L0029
       JUMP            L0001
L0029: JZ              L02 [FALSE] L0030
       CALL_VN         R0285 (#2d,#02)
L0030: RTRUE           

Routine R0182, 0 locals
    Action routine for:
        "score"

       CALL_VN         R0285 (#3d,#01)
       CALL_1N         R0413
       RTRUE           

Routine R0183, 1 local

       JL              L00,#00 [TRUE] L0001
       JL              L00,#04 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1c,L00,#03,#00,#1a)
       PUSH            #00
       JUMP            L0003
L0002: LOADB           #45c2,L00 -> -(SP)
L0003: RET_POPPED      

Routine R0184, 1 local

       JL              L00,#00 [TRUE] L0001
       JL              L00,#01 [TRUE] L0002
L0001: CALL_VN2        R0470 (#1c,L00,#00,#00,#1b)
       PUSH            #00
       JUMP            L0003
L0002: LOADB           #45c6,L00 -> -(SP)
L0003: JZ              (SP)+ [FALSE] L0007
       JL              L00,#00 [TRUE] L0004
       JL              L00,#01 [TRUE] L0005
L0004: CALL_VN2        R0470 (#1e,L00,#00,#00,#1b)
       JUMP            L0006
L0005: STOREB          #45c6,L00,#01
L0006: CALL_2S         R0183 (L00) -> -(SP)
       ADD             G11,(SP)+ -> G11
L0007: RTRUE           

Routine R0185, 2 locals

       PRINT           "  "
       STORE           L01,L00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L00 -> L01
       MUL             L01,#0a -> L01
L0001: JL              L01,#0a [FALSE] L0002
       PRINT           "   "
       JUMP            L0004
L0002: JL              L01,#64 [FALSE] L0003
       PRINT           "  "
       JUMP            L0004
L0003: JL              L01,#03e8 [FALSE] L0004
       PRINT           " "
L0004: PRINT_NUM       L00
       PRINT           " "
       RTRUE           

Routine R0186, 1 local
    Action routine for:
        "full"
        "full score"

       CALL_1N         R0182
       JZ              G11 [TRUE] RFALSE
       JZ              #01 [FALSE] RFALSE
       NEW_LINE        
       CALL_VN         R0285 (#18,#01)
       STORE           L00,#00
L0001: JL              L00,#01 [FALSE] L0006
       JL              L00,#00 [TRUE] L0002
       JL              L00,#01 [TRUE] L0003
L0002: CALL_VN2        R0470 (#1c,L00,#00,#00,#1b)
       PUSH            #00
       JUMP            L0004
L0003: LOADB           #45c6,L00 -> -(SP)
L0004: JE              (SP)+,#01 [FALSE] L0005
       CALL_2S         R0183 (L00) -> -(SP)
       CALL_2N         R0185 ((SP)+)
       CALL_2N         R0434 (L00)
L0005: INC             L00
       JUMP            L0001
L0006: JZ              G15 [TRUE] L0007
       CALL_2N         R0185 (G15)
       CALL_VN         R0285 (#18,#02)
L0007: JZ              G14 [TRUE] L0008
       CALL_2N         R0185 (G14)
       CALL_VN         R0285 (#18,#03)
L0008: NEW_LINE        
       CALL_2N         R0185 (G11)
       CALL_VN         R0285 (#18,#04)
       RTRUE           

Routine R0187, 0 locals
    Action routine for:
        "i wide"

       STORE           G24,#1c
       CALL_2N         R0090 (#1d)
       RTRUE           

Routine R0188, 0 locals
    Action routine for:
        "i tall"

       STORE           G24,#17
       CALL_2N         R0090 (#1d)
       RTRUE           

Routine R0189, 1 local
    Action routine for:
        "i"
        "carry inventory"

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0285 (#1d,#01) -> -(SP)
       RET_POPPED      
L0005: JZ              G24 [FALSE] L0006
       CALL_1S         R0188 -> -(SP)
       RET_POPPED      
L0006: CALL_VN         R0285 (#1d,#02)
       AND             G24,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       CALL_VN         R0285 (#1d,#03)
       JUMP            L0008
L0007: PRINT           " "
L0008: JG              #05,G16 [TRUE] L0009
       JG              G16,#0114 [TRUE] L0009
       JIN             G16,"Class" [FALSE] L0010
L0009: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,G16
L0011: GET_CHILD       Gee -> -(SP) [FALSE] L0012
L0012: CALL_VN         R0158 ((SP)+,G24,#01)
       AND             G24,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       CALL_VN         R0285 (#1d,#04)
L0013: JG              #05,G16 [TRUE] L0014
       JG              G16,#0114 [TRUE] L0014
       JIN             G16,"Class" [FALSE] L0015
L0014: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0016
L0015: STORE           Gee,G16
L0016: GET_CHILD       Gee -> -(SP) [FALSE] L0017
L0017: PULL            L00
       JZ              L00 [TRUE] L0022
L0018: CALL_2N         R0081 (L00)
       JG              #05,L00 [TRUE] L0019
       JG              L00,#0114 [TRUE] L0019
       JIN             L00,"Class" [FALSE] L0020
L0019: CALL_VN         R0470 (#0d,L00)
       JUMP            L0022
L0020: JIN             L00,G16 [TRUE] L0021
       CALL_VN         R0470 (#20,L00)
       JUMP            L0022
L0021: GET_SIBLING     L00 -> L00 [TRUE] L0018
L0022: STORE           L00,#00
       CALL_1N         R0095
       RTRUE           

Routine R0190, 4 locals

       STORE           L02,L00
L0001: JZ              L02 [TRUE] L0011
       STORE           L03,L01
L0002: JZ              L03 [TRUE] L0007
       JE              L03,L02 [FALSE] L0003
       RET             L02
L0003: JG              #05,L03 [TRUE] L0004
       JG              L03,#0114 [TRUE] L0004
       JIN             L03,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#04,L03)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L03
L0006: GET_PARENT      Gee -> L03
       JUMP            L0002
L0007: JG              #05,L02 [TRUE] L0008
       JG              L02,#0114 [TRUE] L0008
       JIN             L02,"Class" [FALSE] L0009
L0008: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,L02
L0010: GET_PARENT      Gee -> L02
       JUMP            L0001
L0011: RFALSE          

Routine R0191, 2 locals

L0001: JZ              L01 [TRUE] L0005
       JE              L00,L01 [TRUE] RTRUE
       CALL_VS         R0468 (L01,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JG              #05,L01 [TRUE] L0002
       JG              L01,#0114 [TRUE] L0002
       JIN             L01,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L01
L0004: GET_PARENT      Gee -> L01
       JUMP            L0001
L0005: RFALSE          

Routine R0192, 6 locals

       STORE           L01,L00
       STORE           L02,#01
L0001: JG              #01,L02 [TRUE] L0002
       JG              L02,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#15,L02)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L02
L0004: GET_PROP_ADDR   Gee,#18 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0015
       JG              #01,L02 [TRUE] L0005
       JG              L02,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#15,L02)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L02
L0007: GET_PROP_ADDR   Gee,#18 -> Gef
       STORE           L04,Gef
       JG              #01,L02 [TRUE] L0008
       JG              L02,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#16,L02)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,L02
L0010: GET_PROP_ADDR   Gee,#18 -> Gef
       JZ              Gef [TRUE] L0011
       GET_PROP_LEN    Gef -> Gef
L0011: PUSH            Gef
       DIV             (SP)+,#02 -> L03
       CALL_VS         R0484 (L04,#00) -> -(SP)
       CALL_VS         R0468 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       JUMP            L0015
L0012: STORE           L05,#00
L0013: JL              L05,L03 [FALSE] L0015
       CALL_VS         R0484 (L04,L05) -> -(SP)
       JE              (SP)+,L01 [FALSE] L0014
       RET             L02
L0014: INC             L05
       JUMP            L0013
L0015: INC             L02
       JG              L02,#0114 [TRUE] L0016
       JUMP            L0001
L0016: RFALSE          

Routine R0193, 5 locals

       CALL_VS         R0190 (G16,L00) -> L03
       JZ              L03 [FALSE] L0007
       STORE           L03,L00
L0001: JZ              L03 [TRUE] L0005
       CALL_2S         R0192 (L03) -> L04
       JZ              L04 [FALSE] L0005
       JG              #05,L03 [TRUE] L0002
       JG              L03,#0114 [TRUE] L0002
       JIN             L03,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#04,L03)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L03
L0004: GET_PARENT      Gee -> L03
       JUMP            L0001
L0005: JZ              L04 [TRUE] L0006
       CALL_VS         R0193 (L04,L01,L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       RTRUE           
L0006: JUMP            L0021
L0007: JE              G16,L03 [TRUE] L0021
       JG              #05,G16 [TRUE] L0008
       JG              G16,#0114 [TRUE] L0008
       JIN             G16,"Class" [FALSE] L0009
L0008: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,G16
L0010: GET_PARENT      Gee -> L04
L0011: JE              L04,L03 [TRUE] L0021
       JG              #01,L04 [TRUE] L0012
       JG              L04,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,L04)
       JUMP            L0017
L0013: TEST_ATTR       L04,#04 [FALSE] L0017
       JG              #01,L04 [TRUE] L0014
       JG              L04,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,L04)
       JUMP            L0016
L0015: TEST_ATTR       L04,#0e [TRUE] L0017
L0016: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#4e,#09,L04) -> -(SP)
       RET_POPPED      
L0017: JG              #05,L04 [TRUE] L0018
       JG              L04,#0114 [TRUE] L0018
       JIN             L04,"Class" [FALSE] L0019
L0018: CALL_VN         R0470 (#04,L04)
       STORE           Gee,#02
       JUMP            L0020
L0019: STORE           Gee,L04
L0020: GET_PARENT      Gee -> L04
       JUMP            L0011
L0021: JE              L00,L03 [TRUE] L0048
       JG              #05,L00 [TRUE] L0022
       JG              L00,#0114 [TRUE] L0022
       JIN             L00,"Class" [FALSE] L0023
L0022: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0024
L0023: STORE           Gee,L00
L0024: GET_PARENT      Gee -> L04
L0025: JE              L04,L03 [TRUE] L0048
       JZ              L02 [TRUE] L0038
       JG              #01,L04 [TRUE] L0026
       JG              L04,#0114 [FALSE] L0027
L0026: CALL_VN         R0470 (#03,L04)
       JUMP            L0028
L0027: TEST_ATTR       L04,#04 [TRUE] L0038
L0028: JG              #01,L04 [TRUE] L0029
       JG              L04,#0114 [FALSE] L0030
L0029: CALL_VN         R0470 (#03,L04)
       JUMP            L0031
L0030: TEST_ATTR       L04,#14 [TRUE] L0038
L0031: JG              #01,L04 [TRUE] L0032
       JG              L04,#0114 [FALSE] L0033
L0032: CALL_VN         R0470 (#03,L04)
       JUMP            L0034
L0033: TEST_ATTR       L04,#00 [FALSE] L0034
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#4e,#06,L04) -> -(SP)
       RET_POPPED      
L0034: JG              #01,L04 [TRUE] L0035
       JG              L04,#0114 [FALSE] L0036
L0035: CALL_VN         R0470 (#03,L04)
       JUMP            L0037
L0036: TEST_ATTR       L04,#17 [FALSE] L0037
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#4e,#07,L04) -> -(SP)
       RET_POPPED      
L0037: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#4e,#08,L00) -> -(SP)
       RET_POPPED      
L0038: JG              #01,L04 [TRUE] L0039
       JG              L04,#0114 [FALSE] L0040
L0039: CALL_VN         R0470 (#03,L04)
       JUMP            L0044
L0040: TEST_ATTR       L04,#04 [FALSE] L0044
       JG              #01,L04 [TRUE] L0041
       JG              L04,#0114 [FALSE] L0042
L0041: CALL_VN         R0470 (#03,L04)
       JUMP            L0043
L0042: TEST_ATTR       L04,#0e [TRUE] L0044
L0043: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#4e,#09,L04) -> -(SP)
       RET_POPPED      
L0044: JG              #05,L04 [TRUE] L0045
       JG              L04,#0114 [TRUE] L0045
       JIN             L04,"Class" [FALSE] L0046
L0045: CALL_VN         R0470 (#04,L04)
       STORE           Gee,#02
       JUMP            L0047
L0046: STORE           Gee,L04
L0047: GET_PARENT      Gee -> L04
       JUMP            L0025
L0048: RFALSE          

Routine R0194, 6 locals

       JE              L00,G16 [FALSE] L0001
       CALL_VS         R0285 (#4e,#02) -> -(SP)
       RET_POPPED      
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#00 [FALSE] L0004
       CALL_VS         R0285 (#4e,#03,L00) -> -(SP)
       RET_POPPED      
L0004: CALL_VS         R0190 (G16,L00) -> L01
       JZ              L01 [FALSE] L0005
       CALL_2S         R0192 (L00) -> L03
       JZ              L03 [TRUE] L0005
       CALL_VS         R0190 (G16,L03) -> L01
L0005: JE              L01,L00 [FALSE] L0006
       CALL_VS         R0285 (#4e,#04,L00) -> -(SP)
       RET_POPPED      
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#02,L00)
       JUMP            L0009
L0008: JIN             L00,G16 [FALSE] L0009
       CALL_VS         R0285 (#4e,#05,L00) -> -(SP)
       RET_POPPED      
L0009: CALL_VS         R0193 (L00,#00,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       RTRUE           
L0010: JG              #05,L00 [TRUE] L0011
       JG              L00,#0114 [TRUE] L0011
       JIN             L00,"Class" [FALSE] L0012
L0011: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0013
L0012: STORE           Gee,L00
L0013: GET_PARENT      Gee -> L03
       JE              L03,L01 [TRUE] L0021
       JG              #01,L03 [TRUE] L0014
       JG              L03,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,L03)
       JUMP            L0016
L0015: TEST_ATTR       L03,#04 [TRUE] L0019
L0016: JG              #01,L03 [TRUE] L0017
       JG              L03,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#03,L03)
       JUMP            L0021
L0018: TEST_ATTR       L03,#14 [FALSE] L0021
L0019: STORE           L02,L03
       STORE           L05,G32
       STORE           G32,#1000
       CALL_VS         R0101 (L03,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       STORE           G32,L05
       RTRUE           
L0020: STORE           G32,L05
L0021: JG              #01,L00 [TRUE] L0022
       JG              L00,#0114 [FALSE] L0023
L0022: CALL_VN         R0470 (#03,L00)
       JUMP            L0024
L0023: TEST_ATTR       L00,#11 [FALSE] L0024
       CALL_VS         R0285 (#4e,#0a,L00) -> -(SP)
       RET_POPPED      
L0024: JG              #01,L00 [TRUE] L0025
       JG              L00,#0114 [FALSE] L0026
L0025: CALL_VN         R0470 (#03,L00)
       JUMP            L0027
L0026: TEST_ATTR       L00,#13 [FALSE] L0027
       CALL_VS         R0285 (#4e,#0b,L00) -> -(SP)
       RET_POPPED      
L0027: STORE           L05,#00
       JG              #05,G16 [TRUE] L0028
       JG              G16,#0114 [TRUE] L0028
       JIN             G16,"Class" [FALSE] L0029
L0028: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0030
L0029: STORE           Gee,G16
L0030: GET_CHILD       Gee -> -(SP) [FALSE] L0031
L0031: PULL            L04
       JZ              L04 [TRUE] L0040
L0032: JG              #01,L04 [TRUE] L0033
       JG              L04,#0114 [FALSE] L0034
L0033: CALL_VN         R0470 (#03,L04)
       JUMP            L0035
L0034: TEST_ATTR       L04,#1a [TRUE] L0036
L0035: INC             L05
L0036: JG              #05,L04 [TRUE] L0037
       JG              L04,#0114 [TRUE] L0037
       JIN             L04,"Class" [FALSE] L0038
L0037: CALL_VN         R0470 (#0d,L04)
       JUMP            L0040
L0038: JIN             L04,G16 [TRUE] L0039
       CALL_VN         R0470 (#20,L04)
       JUMP            L0040
L0039: GET_SIBLING     L04 -> L04 [TRUE] L0032
L0040: CALL_VS         R0100 (G16,#2d) -> -(SP)
       JL              L05,(SP)+ [TRUE] L0066
       JZ              #00 [TRUE] L0065
       JG              #05,#00 [TRUE] L0041
       JG              #00,#0114 [TRUE] L0041
       JIN             #00,"Class" [FALSE] L0042
L0041: CALL_VN         R0470 (#04,#00)
       STORE           Gee,#02
       JUMP            L0043
L0042: STORE           Gee,#00
L0043: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G16 [TRUE] L0044
       CALL_VS         R0285 (#4e,#0c) -> -(SP)
       RET_POPPED      
L0044: STORE           L04,#00
       JG              #05,G16 [TRUE] L0045
       JG              G16,#0114 [TRUE] L0045
       JIN             G16,"Class" [FALSE] L0046
L0045: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0047
L0046: STORE           Gee,G16
L0047: GET_CHILD       Gee -> -(SP) [FALSE] L0048
L0048: PULL            L05
       JZ              L05 [TRUE] L0060
L0049: JZ              L05 [TRUE] L0056
       JG              #01,L05 [TRUE] L0050
       JG              L05,#0114 [FALSE] L0051
L0050: CALL_VN         R0470 (#03,L05)
       JUMP            L0052
L0051: TEST_ATTR       L05,#1a [TRUE] L0056
L0052: JG              #01,L05 [TRUE] L0053
       JG              L05,#0114 [FALSE] L0054
L0053: CALL_VN         R0470 (#03,L05)
       JUMP            L0055
L0054: TEST_ATTR       L05,#09 [TRUE] L0056
L0055: STORE           L04,L05
L0056: JG              #05,L05 [TRUE] L0057
       JG              L05,#0114 [TRUE] L0057
       JIN             L05,"Class" [FALSE] L0058
L0057: CALL_VN         R0470 (#0d,L05)
       JUMP            L0060
L0058: JIN             L05,G16 [TRUE] L0059
       CALL_VN         R0470 (#20,L05)
       JUMP            L0060
L0059: GET_SIBLING     L05 -> L05 [TRUE] L0049
L0060: JZ              L04 [TRUE] L0063
       CALL_VN         R0285 (#4e,#0d,L04)
       STORE           G37,#01
       CALL_VN         R0090 (#1c,L04,#00)
       STORE           G37,#00
       JG              #01,L04 [TRUE] L0061
       JG              L04,#0114 [FALSE] L0062
L0061: CALL_VN         R0470 (#02,L04)
       RTRUE           
L0062: JIN             L04,#00 [FALSE] RTRUE
       JUMP            L0064
L0063: CALL_VS         R0285 (#4e,#0c) -> -(SP)
       RET_POPPED      
L0064: JUMP            L0066
L0065: CALL_VS         R0285 (#4e,#0c) -> -(SP)
       RET_POPPED      
L0066: CALL_VN         R0476 (L00,G16)
       JZ              L02 [TRUE] L0068
       STORE           L05,G32
       STORE           G32,#1000
       CALL_VS         R0101 (L02,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0067
       STORE           G32,L05
       RTRUE           
L0067: STORE           G32,L05
L0068: RFALSE          

Routine R0195, 0 locals
    Action routine for:
        "get multi"
        "peel noun"
        "peel off noun"
        "pick up multi"
        "pick multi up"
        "remove multi"
        "carry multi"

       JZ              G4a [TRUE] L0003
       JG              #01,G35 [TRUE] L0001
       JG              G35,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,G35)
       JUMP            L0003
L0002: JIN             G35,G16 [TRUE] L0004
L0003: CALL_2S         R0194 (G35) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0004: CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G49,G4a
       JE              G49,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#4e,#01)
       RTRUE           

Routine R0196, 1 local
    Action routine for:
        "get multiinside from noun"
        "remove multiinside from noun"
        "carry multiinside from noun"
        "carry multiinside off noun"

       JG              #05,G35 [TRUE] L0001
       JG              G35,#0114 [TRUE] L0001
       JIN             G35,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G35
L0003: GET_PARENT      Gee -> L00
       JG              #01,L00 [TRUE] L0004
       JG              L00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,L00)
       JUMP            L0009
L0005: TEST_ATTR       L00,#04 [FALSE] L0009
       JG              #01,L00 [TRUE] L0006
       JG              L00,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,L00)
       JUMP            L0008
L0007: TEST_ATTR       L00,#0e [TRUE] L0009
L0008: CALL_VS         R0285 (#38,#01,G35) -> -(SP)
       RET_POPPED      
L0009: JE              L00,G36 [TRUE] L0010
       CALL_VS         R0285 (#38,#02,G35) -> -(SP)
       RET_POPPED      
L0010: JG              #01,L00 [TRUE] L0011
       JG              L00,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#00 [FALSE] L0013
       CALL_VS         R0285 (#4e,#06,L00) -> -(SP)
       RET_POPPED      
L0013: CALL_2S         R0194 (G35) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       STORE           G32,#38
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G32,#4e
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VS         R0285 (#38,#03,G35) -> -(SP)
       RET_POPPED      

Routine R0197, 0 locals
    Action routine for:
        "discard multiheld"
        "put down multiheld"
        "put multiheld down"

       JE              G35,G16 [FALSE] L0001
       CALL_VS         R0285 (#36,#04) -> -(SP)
       RET_POPPED      
L0001: JG              #05,G16 [TRUE] L0002
       JG              G16,#0114 [TRUE] L0002
       JIN             G16,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G16
L0004: GET_PARENT      Gee -> -(SP)
       JG              #01,G35 [TRUE] L0005
       JG              G35,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#02,G35)
       JUMP            L0007
L0006: JIN             G35,(SP)+ [FALSE] L0007
       CALL_VS         R0285 (#11,#01,G35) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G35 [TRUE] L0008
       JG              G35,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#02,G35)
       JUMP            L0010
L0009: JIN             G35,G16 [TRUE] L0011
L0010: CALL_VS         R0285 (#11,#02,G35) -> -(SP)
       RET_POPPED      
L0011: JG              #01,G35 [TRUE] L0012
       JG              G35,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,G35)
       JUMP            L0018
L0013: TEST_ATTR       G35,#1a [FALSE] L0018
       CALL_VN         R0285 (#11,#03,G35)
       CALL_VN         R0090 (#0f,G35)
       JG              #01,G35 [TRUE] L0014
       JG              G35,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,G35)
       JUMP            L0018
L0015: TEST_ATTR       G35,#1a [FALSE] L0018
       JG              #01,G35 [TRUE] L0016
       JG              G35,#0114 [FALSE] L0017
L0016: CALL_VN         R0470 (#02,G35)
       JUMP            L0018
L0017: JIN             G35,G16 [TRUE] RTRUE
L0018: JG              #05,G16 [TRUE] L0019
       JG              G16,#0114 [TRUE] L0019
       JIN             G16,"Class" [FALSE] L0020
L0019: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0021
L0020: STORE           Gee,G16
L0021: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0476 (G35,(SP)+)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VS         R0285 (#11,#04,G35) -> -(SP)
       RET_POPPED      

Routine R0198, 1 local
    Action routine for:
        "discard multiexcept on / onto noun"
        "put multiexcept on / onto noun"

       STORE           G39,#36
       JE              G36,#10 [TRUE] L0003
       JG              #01,G16 [TRUE] L0001
       JG              G16,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,G16)
       JUMP            L0004
L0002: JIN             G16,G36 [FALSE] L0004
L0003: CALL_VN         R0090 (#11,G35)
       RTRUE           
L0004: JG              #05,G35 [TRUE] L0005
       JG              G35,#0114 [TRUE] L0005
       JIN             G35,"Class" [FALSE] L0006
L0005: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G35
L0007: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G36 [FALSE] L0008
       CALL_VS         R0285 (#11,#01,G35) -> -(SP)
       RET_POPPED      
L0008: JG              #05,G35 [TRUE] L0009
       JG              G35,#0114 [TRUE] L0009
       JIN             G35,"Class" [FALSE] L0010
L0009: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,G35
L0011: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G16 [TRUE] L0012
       CALL_VS         R0285 (#36,#01,G35) -> -(SP)
       RET_POPPED      
L0012: CALL_VS         R0190 (G35,G36) -> L00
       JE              L00,G35 [FALSE] L0013
       CALL_VS         R0285 (#36,#02,G35) -> -(SP)
       RET_POPPED      
L0013: CALL_2S         R0193 (G36) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       RTRUE           
L0014: JE              G36,L00 [TRUE] L0016
       STORE           G32,#1001
       CALL_VS         R0101 (G36,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       STORE           G32,#36
       RTRUE           
L0015: STORE           G32,#36
L0016: JG              #01,G36 [TRUE] L0017
       JG              G36,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#03,G36)
       JUMP            L0019
L0018: TEST_ATTR       G36,#14 [TRUE] L0020
L0019: CALL_VS         R0285 (#36,#03,G36) -> -(SP)
       RET_POPPED      
L0020: JE              L00,G16 [FALSE] L0021
       CALL_VS         R0285 (#36,#04) -> -(SP)
       RET_POPPED      
L0021: JG              #01,G35 [TRUE] L0022
       JG              G35,#0114 [FALSE] L0023
L0022: CALL_VN         R0470 (#03,G35)
       JUMP            L0026
L0023: TEST_ATTR       G35,#1a [FALSE] L0026
       CALL_VN         R0285 (#36,#05,G35)
       CALL_VN         R0090 (#0f,G35)
       JG              #01,G35 [TRUE] L0024
       JG              G35,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#03,G35)
       JUMP            L0026
L0025: TEST_ATTR       G35,#1a [FALSE] L0026
       RTRUE           
L0026: CALL_VS         R0100 (G36,#2d) -> -(SP)
       JG              #05,G36 [TRUE] L0027
       JG              G36,#0114 [TRUE] L0027
       JIN             G36,"Class" [FALSE] L0028
L0027: CALL_VN         R0470 (#09,G36)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,G36
L0029: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0031
L0030: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0030
L0031: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0032
       CALL_VS         R0285 (#36,#06,G36) -> -(SP)
       RET_POPPED      
L0032: CALL_VN         R0476 (G35,G36)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0033
       RTRUE           
L0033: JE              G36,L00 [TRUE] L0035
       STORE           G32,#1001
       CALL_VS         R0101 (G36,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       STORE           G32,#36
       RTRUE           
L0034: STORE           G32,#36
L0035: JE              G37,#01 [FALSE] L0036
       RTRUE           
L0036: JE              G42,#01 [FALSE] L0037
       CALL_VS         R0285 (#36,#07) -> -(SP)
       RET_POPPED      
L0037: CALL_VN         R0285 (#36,#08,G35)
       RTRUE           

Routine R0199, 1 local
    Action routine for:
        "discard multiexcept in / into / down noun"
        "insert multiexcept in / into noun"
        "put multiexcept in / inside / into noun"

       STORE           G39,#1c
       JE              G36,#10 [TRUE] L0003
       JG              #01,G16 [TRUE] L0001
       JG              G16,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,G16)
       JUMP            L0004
L0002: JIN             G16,G36 [FALSE] L0004
L0003: CALL_VN         R0090 (#11,G35)
       RTRUE           
L0004: JG              #05,G35 [TRUE] L0005
       JG              G35,#0114 [TRUE] L0005
       JIN             G35,"Class" [FALSE] L0006
L0005: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G35
L0007: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G36 [FALSE] L0008
       CALL_VS         R0285 (#11,#01,G35) -> -(SP)
       RET_POPPED      
L0008: JG              #05,G35 [TRUE] L0009
       JG              G35,#0114 [TRUE] L0009
       JIN             G35,"Class" [FALSE] L0010
L0009: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,G35
L0011: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G16 [TRUE] L0012
       CALL_VS         R0285 (#1c,#01,G35) -> -(SP)
       RET_POPPED      
L0012: CALL_VS         R0190 (G35,G36) -> L00
       JE              L00,G35 [FALSE] L0013
       CALL_VS         R0285 (#1c,#05,G35) -> -(SP)
       RET_POPPED      
L0013: CALL_2S         R0193 (G36) -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       RTRUE           
L0014: JE              G36,L00 [TRUE] L0021
       STORE           G32,#1001
       CALL_VS         R0101 (G36,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       STORE           G32,#1c
       RTRUE           
L0015: STORE           G32,#1c
       JG              #01,G36 [TRUE] L0016
       JG              G36,#0114 [FALSE] L0017
L0016: CALL_VN         R0470 (#03,G36)
       JUMP            L0021
L0017: TEST_ATTR       G36,#04 [FALSE] L0021
       JG              #01,G36 [TRUE] L0018
       JG              G36,#0114 [FALSE] L0019
L0018: CALL_VN         R0470 (#03,G36)
       JUMP            L0020
L0019: TEST_ATTR       G36,#0e [TRUE] L0021
L0020: CALL_VS         R0285 (#1c,#03,G36) -> -(SP)
       RET_POPPED      
L0021: JG              #01,G36 [TRUE] L0022
       JG              G36,#0114 [FALSE] L0023
L0022: CALL_VN         R0470 (#03,G36)
       JUMP            L0024
L0023: TEST_ATTR       G36,#04 [TRUE] L0025
L0024: CALL_VS         R0285 (#1c,#02,G36) -> -(SP)
       RET_POPPED      
L0025: JG              #01,G35 [TRUE] L0026
       JG              G35,#0114 [FALSE] L0027
L0026: CALL_VN         R0470 (#03,G35)
       JUMP            L0030
L0027: TEST_ATTR       G35,#1a [FALSE] L0030
       CALL_VN         R0285 (#1c,#06,G35)
       CALL_VN         R0090 (#0f,G35)
       JG              #01,G35 [TRUE] L0028
       JG              G35,#0114 [FALSE] L0029
L0028: CALL_VN         R0470 (#03,G35)
       JUMP            L0030
L0029: TEST_ATTR       G35,#1a [FALSE] L0030
       RTRUE           
L0030: CALL_VS         R0100 (G36,#2d) -> -(SP)
       JG              #05,G36 [TRUE] L0031
       JG              G36,#0114 [TRUE] L0031
       JIN             G36,"Class" [FALSE] L0032
L0031: CALL_VN         R0470 (#09,G36)
       STORE           Gee,#02
       JUMP            L0033
L0032: STORE           Gee,G36
L0033: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0035
L0034: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0034
L0035: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0036
       CALL_VS         R0285 (#1c,#07,G36) -> -(SP)
       RET_POPPED      
L0036: CALL_VN         R0476 (G35,G36)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G36,L00 [TRUE] L0038
       STORE           G32,#1001
       CALL_VS         R0101 (G36,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0037
       STORE           G32,#1c
       RTRUE           
L0037: STORE           G32,#1c
L0038: JE              G37,#01 [TRUE] RTRUE
       JE              G42,#01 [FALSE] L0039
       CALL_VS         R0285 (#1c,#08,G35) -> -(SP)
       RET_POPPED      
L0039: CALL_VN         R0285 (#1c,#09,G35)
       RTRUE           

Routine R0200, 0 locals
    Action routine for:
        "clear noun to noun"
        "transfer noun to noun"

       JG              #01,G35 [TRUE] L0001
       JG              G35,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,G35)
       JUMP            L0003
L0002: JIN             G35,G16 [TRUE] L0004
L0003: CALL_2S         R0194 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       RTRUE           
L0004: JG              #01,G36 [TRUE] L0005
       JG              G36,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,G36)
       JUMP            L0007
L0006: TEST_ATTR       G36,#14 [FALSE] L0007
       CALL_VN         R0090 (#36,G35,G36)
       RTRUE           
L0007: JE              G36,#10 [FALSE] L0008
       CALL_VN         R0090 (#11,G35)
       RTRUE           
L0008: CALL_VN         R0090 (#1c,G35,G36)
       RTRUE           

Routine R0201, 0 locals
    Action routine for:
        "empty noun"
        "empty out noun"
        "empty noun out"
        "douse noun"

       STORE           G36,#10
       CALL_1N         R0202
       RTRUE           

Routine R0202, 4 locals
    Action routine for:
        "empty noun to / into / on / onto noun"

       JE              G35,G36 [FALSE] L0001
       CALL_VS         R0285 (#13,#04) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: JG              #01,G35 [TRUE] L0003
       JG              G35,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,G35)
       JUMP            L0005
L0004: TEST_ATTR       G35,#04 [TRUE] L0006
L0005: CALL_VS         R0285 (#13,#01,G35) -> -(SP)
       RET_POPPED      
L0006: JG              #01,G35 [TRUE] L0007
       JG              G35,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,G35)
       JUMP            L0009
L0008: TEST_ATTR       G35,#0e [TRUE] L0010
L0009: CALL_VS         R0285 (#13,#02,G35) -> -(SP)
       RET_POPPED      
L0010: JE              G36,#10 [TRUE] L0021
       JG              #01,G36 [TRUE] L0011
       JG              G36,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,G36)
       JUMP            L0013
L0012: TEST_ATTR       G36,#14 [TRUE] L0021
L0013: JG              #01,G36 [TRUE] L0014
       JG              G36,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,G36)
       JUMP            L0016
L0015: TEST_ATTR       G36,#04 [TRUE] L0017
L0016: CALL_VS         R0285 (#13,#01,G36) -> -(SP)
       RET_POPPED      
L0017: JG              #01,G36 [TRUE] L0018
       JG              G36,#0114 [FALSE] L0019
L0018: CALL_VN         R0470 (#03,G36)
       JUMP            L0020
L0019: TEST_ATTR       G36,#0e [TRUE] L0021
L0020: CALL_VS         R0285 (#13,#02,G36) -> -(SP)
       RET_POPPED      
L0021: JG              #05,G35 [TRUE] L0022
       JG              G35,#0114 [TRUE] L0022
       JIN             G35,"Class" [FALSE] L0023
L0022: CALL_VN         R0470 (#06,G35)
       STORE           Gee,#02
       JUMP            L0024
L0023: STORE           Gee,G35
L0024: GET_CHILD       Gee -> L00 [FALSE] L0025
L0025: JG              #05,G35 [TRUE] L0026
       JG              G35,#0114 [TRUE] L0026
       JIN             G35,"Class" [FALSE] L0027
L0026: CALL_VN         R0470 (#09,G35)
       STORE           Gee,#02
       JUMP            L0028
L0027: STORE           Gee,G35
L0028: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0030
L0029: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0029
L0030: PULL            Gee
       STORE           L02,Gef
       JZ              L00 [FALSE] L0031
       CALL_VS         R0285 (#13,#03,G35) -> -(SP)
       RET_POPPED      
L0031: JZ              L00 [TRUE] L0059
       JG              #05,L00 [TRUE] L0032
       JG              L00,#0114 [TRUE] L0032
       JIN             L00,"Class" [FALSE] L0033
L0032: CALL_VN         R0470 (#08,L00)
       STORE           Gee,#02
       JUMP            L0034
L0033: STORE           Gee,L00
L0034: GET_SIBLING     Gee -> L01 [FALSE] L0035
L0035: STORE           L03,#00
       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0036
       STORE           L03,#01
L0036: JG              #01,G35 [TRUE] L0037
       JG              G35,#0114 [FALSE] L0038
L0037: CALL_VN         R0470 (#03,G35)
       JUMP            L0039
L0038: TEST_ATTR       G35,#04 [TRUE] L0040
L0039: STORE           L03,#01
L0040: JG              #01,G35 [TRUE] L0041
       JG              G35,#0114 [FALSE] L0042
L0041: CALL_VN         R0470 (#03,G35)
       JUMP            L0043
L0042: TEST_ATTR       G35,#0e [TRUE] L0044
L0043: STORE           L03,#01
L0044: JE              G36,#10 [TRUE] L0055
       JG              #01,G36 [TRUE] L0045
       JG              G36,#0114 [FALSE] L0046
L0045: CALL_VN         R0470 (#03,G36)
       JUMP            L0047
L0046: TEST_ATTR       G36,#14 [TRUE] L0055
L0047: JG              #01,G36 [TRUE] L0048
       JG              G36,#0114 [FALSE] L0049
L0048: CALL_VN         R0470 (#03,G36)
       JUMP            L0050
L0049: TEST_ATTR       G36,#04 [TRUE] L0051
L0050: STORE           L03,#01
L0051: JG              #01,G36 [TRUE] L0052
       JG              G36,#0114 [FALSE] L0053
L0052: CALL_VN         R0470 (#03,G36)
       JUMP            L0054
L0053: TEST_ATTR       G36,#0e [TRUE] L0055
L0054: STORE           L03,#01
L0055: PUSH            L02
       DEC             L02
       JZ              (SP)+ [FALSE] L0056
       STORE           L03,#01
L0056: JZ              L03 [TRUE] L0057
       JUMP            L0059
L0057: JZ              G37 [FALSE] L0058
       CALL_2N         R0139 (L00)
       PRINT           ": "
L0058: CALL_VN         R0090 (#61,L00,G36)
       STORE           L00,L01
       JUMP            L0031
L0059: RTRUE           

Routine R0203, 0 locals
    Action routine for:
        "feed held to creature"
        "feed creature held" REVERSE
        "feed over held to creature"

       JG              #05,G35 [TRUE] L0001
       JG              G35,#0114 [TRUE] L0001
       JIN             G35,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G35
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G16 [TRUE] L0004
       CALL_VS         R0285 (#1a,#01,G35) -> -(SP)
       RET_POPPED      
L0004: JE              G36,G16 [FALSE] L0005
       CALL_VS         R0285 (#1a,#02,G35) -> -(SP)
       RET_POPPED      
L0005: CALL_VS         R0096 (G36,#1a) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#1a,#03,G36)
       RTRUE           

Routine R0204, 0 locals
    Action routine for:
        

       CALL_VN         R0090 (#1a,G36,G35)
       RTRUE           

Routine R0205, 0 locals
    Action routine for:
        "display creature held" REVERSE
        "display held to creature"

       JG              #05,G35 [TRUE] L0001
       JG              G35,#0114 [TRUE] L0001
       JIN             G35,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G35
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G16 [TRUE] L0004
       CALL_VS         R0285 (#43,#01,G35) -> -(SP)
       RET_POPPED      
L0004: JE              G36,G16 [FALSE] L0005
       CALL_VN         R0090 (#15,G35)
       RTRUE           
L0005: CALL_VS         R0096 (G36,#43) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#43,#02,G36)
       RTRUE           

Routine R0206, 0 locals
    Action routine for:
        

       CALL_VN         R0090 (#43,G36,G35)
       RTRUE           

Routine R0207, 3 locals
    Action routine for:
        "cross noun"
        "get in / into / on / onto noun"
        "go noun"
        "go into / in / inside / through noun"
        "leave into / in / inside / through noun"
        "lie on top of noun"
        "lie on / in / inside noun"
        "stand on noun"

       JG              #01,G35 [TRUE] L0001
       JG              G35,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,G35)
       JUMP            L0003
L0002: TEST_ATTR       G35,#05 [TRUE] L0006
L0003: JG              #01,G35 [TRUE] L0004
       JG              G35,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#02,G35)
       JUMP            L0007
L0005: JIN             G35,"compass" [FALSE] L0007
L0006: CALL_VN         R0090 (#1b,G35)
       RTRUE           
L0007: JG              #01,G16 [TRUE] L0008
       JG              G16,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#02,G16)
       JUMP            L0010
L0009: JIN             G16,G35 [FALSE] L0010
       CALL_VS         R0285 (#14,#01,G35) -> -(SP)
       RET_POPPED      
L0010: JG              #01,G35 [TRUE] L0011
       JG              G35,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,G35)
       JUMP            L0013
L0012: TEST_ATTR       G35,#07 [TRUE] L0014
L0013: CALL_VS         R0285 (#14,#02,G35) -> -(SP)
       RET_POPPED      
L0014: JG              #01,G35 [TRUE] L0015
       JG              G35,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,G35)
       JUMP            L0020
L0016: TEST_ATTR       G35,#04 [FALSE] L0020
       JG              #01,G35 [TRUE] L0017
       JG              G35,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#03,G35)
       JUMP            L0019
L0018: TEST_ATTR       G35,#0e [TRUE] L0020
L0019: CALL_VS         R0285 (#14,#03,G35) -> -(SP)
       RET_POPPED      
L0020: JG              #05,G35 [TRUE] L0021
       JG              G35,#0114 [TRUE] L0021
       JIN             G35,"Class" [FALSE] L0022
L0021: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,G35
L0023: GET_PARENT      Gee -> -(SP)
       JG              #05,G16 [TRUE] L0024
       JG              G16,#0114 [TRUE] L0024
       JIN             G16,"Class" [FALSE] L0025
L0024: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0026
L0025: STORE           Gee,G16
L0026: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0064
       CALL_VS         R0190 (G16,G35) -> L00
       JE              L00,G16,#00 [FALSE] L0027
       CALL_VS         R0285 (#14,#04,G35) -> -(SP)
       RET_POPPED      
L0027: JG              #01,G16 [TRUE] L0028
       JG              G16,#0114 [FALSE] L0029
L0028: CALL_VN         R0470 (#02,G16)
       JUMP            L0030
L0029: JIN             G16,L00 [TRUE] L0042
L0030: JG              #05,G16 [TRUE] L0031
       JG              G16,#0114 [TRUE] L0031
       JIN             G16,"Class" [FALSE] L0032
L0031: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0033
L0032: STORE           Gee,G16
L0033: GET_PARENT      Gee -> L01
       STORE           L02,G37
       JG              #05,L01 [TRUE] L0034
       JG              L01,#0114 [TRUE] L0034
       JIN             L01,"Class" [FALSE] L0035
L0034: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0036
L0035: STORE           Gee,L01
L0036: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,L00 [FALSE] L0037
       JE              G35,L00 [TRUE] L0038
L0037: CALL_VN         R0285 (#14,#06,L01)
       STORE           G37,#01
L0038: CALL_2N         R0090 (#16)
       STORE           G37,L02
       JG              #01,G16 [TRUE] L0039
       JG              G16,#0114 [FALSE] L0040
L0039: CALL_VN         R0470 (#02,G16)
       JUMP            L0041
L0040: JIN             G16,L01 [FALSE] L0041
       RTRUE           
L0041: JUMP            L0027
L0042: JG              #01,G16 [TRUE] L0043
       JG              G16,#0114 [FALSE] L0044
L0043: CALL_VN         R0470 (#02,G16)
       JUMP            L0045
L0044: JIN             G16,G35 [FALSE] L0045
       RTRUE           
L0045: JG              #01,G35 [TRUE] L0046
       JG              G35,#0114 [FALSE] L0047
L0046: CALL_VN         R0470 (#02,G35)
       JUMP            L0048
L0047: JIN             G35,L00 [TRUE] L0064
L0048: JG              #05,G35 [TRUE] L0049
       JG              G35,#0114 [TRUE] L0049
       JIN             G35,"Class" [FALSE] L0050
L0049: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0051
L0050: STORE           Gee,G35
L0051: GET_PARENT      Gee -> L01
L0052: JG              #05,L01 [TRUE] L0053
       JG              L01,#0114 [TRUE] L0053
       JIN             L01,"Class" [FALSE] L0054
L0053: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0055
L0054: STORE           Gee,L01
L0055: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,L00 [TRUE] L0059
       JG              #05,L01 [TRUE] L0056
       JG              L01,#0114 [TRUE] L0056
       JIN             L01,"Class" [FALSE] L0057
L0056: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0058
L0057: STORE           Gee,L01
L0058: GET_PARENT      Gee -> L01
       JUMP            L0052
L0059: CALL_VN         R0285 (#14,#07,L01)
       STORE           L02,G37
       STORE           G37,#01
       CALL_VN         R0090 (#14,L01)
       STORE           G37,L02
       JG              #01,G16 [TRUE] L0060
       JG              G16,#0114 [FALSE] L0061
L0060: CALL_VN         R0470 (#02,G16)
       JUMP            L0062
L0061: JIN             G16,L01 [TRUE] L0063
L0062: RTRUE           
L0063: CALL_VN         R0090 (#14,G35)
       RTRUE           
L0064: CALL_VN         R0476 (G16,G35)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#14,#05,G35)
       CALL_2N         R0215 (G35)
       RTRUE           

Routine R0208, 0 locals
    Action routine for:
        "get off noun"

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G35 [FALSE] L0004
       CALL_2N         R0090 (#16)
       RTRUE           
L0004: CALL_VN         R0285 (#19,#01,G35)
       RTRUE           

Routine R0209, 1 local
    Action routine for:
        "exit"
        "exit noun"
        "get out / off / up"
        "leave noun"
        "stand"
        "stand up"

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> L00
       JZ              G35 [TRUE] L0004
       JE              G35,L00 [TRUE] L0004
       CALL_VS         R0285 (#16,#04,G35) -> -(SP)
       RET_POPPED      
L0004: JE              L00,G00 [TRUE] L0005
       JE              G00,#13 [FALSE] L0008
       JE              L00,G19 [FALSE] L0008
L0005: CALL_VS         R0481 (G00,#12) -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0006
       JE              G00,#13 [FALSE] L0007
       CALL_VS         R0481 (G19,#12) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0007
L0006: CALL_VN         R0090 (#1b,#12)
       RTRUE           
L0007: CALL_VS         R0285 (#16,#01) -> -(SP)
       RET_POPPED      
L0008: JG              #01,L00 [TRUE] L0009
       JG              L00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L00)
       JUMP            L0014
L0010: TEST_ATTR       L00,#04 [FALSE] L0014
       JG              #01,L00 [TRUE] L0011
       JG              L00,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#0e [TRUE] L0014
L0013: CALL_VS         R0285 (#16,#02,L00) -> -(SP)
       RET_POPPED      
L0014: JG              #05,L00 [TRUE] L0015
       JG              L00,#0114 [TRUE] L0015
       JIN             L00,"Class" [FALSE] L0016
L0015: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0017
L0016: STORE           Gee,L00
L0017: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0476 (G16,(SP)+)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#16,#03,L00)
       CALL_2N         R0222 (#01)
       RTRUE           

Routine R0210, 0 locals
    Action routine for:
        "go"
        "leave"

       CALL_2N         R0285 (#55)
       RTRUE           

Routine R0211, 0 locals
    Action routine for:
        "cross"
        "in"

       CALL_VN         R0090 (#1b,#11)
       RTRUE           

Routine R0212, 7 locals
    Action routine for:
        "go noun = [parse $57c1]"
        "leave noun = [parse $57c1]"

       JZ              G36 [TRUE] L0004
       JG              #01,G36 [TRUE] L0001
       JG              G36,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,G36)
       JUMP            L0003
L0002: JIN             G36,"compass" [TRUE] L0004
L0003: CALL_2S         R0193 (G36) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       RTRUE           
L0004: STORE           L06,G00
       STORE           L04,#00
       JG              #05,G16 [TRUE] L0005
       JG              G16,#0114 [TRUE] L0005
       JIN             G16,"Class" [FALSE] L0006
L0005: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G16
L0007: GET_PARENT      Gee -> L00
       JE              G00,#13 [TRUE] L0008
       JE              L00,G00 [FALSE] L0009
L0008: JE              G00,#13 [FALSE] L0017
       JE              L00,G19 [TRUE] L0017
L0009: STORE           L01,G00
       JE              G00,#13 [FALSE] L0010
       STORE           G00,G19
L0010: CALL_VS         R0101 (L00,#04) -> L02
       JE              L02,#03 [TRUE] L0011
       STORE           G00,L01
L0011: JE              L02,#01 [FALSE] L0015
       STORE           L04,L00
       JG              #05,L00 [TRUE] L0012
       JG              L00,#0114 [TRUE] L0012
       JIN             L00,"Class" [FALSE] L0013
L0012: CALL_VN         R0470 (#04,L00)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L00
L0014: GET_PARENT      Gee -> L00
       JUMP            L0017
L0015: JZ              L02 [FALSE] L0016
       CALL_VN         R0285 (#1b,#01,L00)
L0016: RTRUE           
L0017: CALL_VS         R0481 (G35,#15) -> Gef
       STORE           L05,Gef
       CALL_2S         R0097 (L05) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0018
       CALL_VS         R0101 (G35,#15) -> L05
L0018: CALL_VS         R0461 (L00,L05) -> L01
       CALL_2S         R0097 (L01) -> L02
       JE              L02,#03 [FALSE] L0019
       CALL_2N         R0489 (L01)
       NEW_LINE        
       RFALSE          
L0019: JE              L02,#02 [FALSE] L0020
       CALL_VS         R0101 (L00,L05) -> L01
       JE              L01,#01 [TRUE] RTRUE
L0020: JZ              L02 [TRUE] L0021
       JZ              L01 [FALSE] L0024
L0021: CALL_VS         R0481 (L00,#26) -> Gef
       PUSH            Gef
       JE              (SP)+,#00,S028 [TRUE] L0022
       CALL_VN         R0098 (L00,#26)
       JUMP            L0023
L0022: CALL_VN         R0285 (#1b,#02)
L0023: RFALSE          
L0024: JG              #01,L01 [TRUE] L0025
       JG              L01,#0114 [FALSE] L0026
L0025: CALL_VN         R0470 (#03,L01)
       JUMP            L0037
L0026: TEST_ATTR       L01,#05 [FALSE] L0037
       JG              #01,L01 [TRUE] L0027
       JG              L01,#0114 [FALSE] L0028
L0027: CALL_VN         R0470 (#03,L01)
       JUMP            L0029
L0028: TEST_ATTR       L01,#03 [FALSE] L0029
       CALL_VS         R0285 (#1b,#02) -> -(SP)
       RET_POPPED      
L0029: JG              #01,L01 [TRUE] L0030
       JG              L01,#0114 [FALSE] L0031
L0030: CALL_VN         R0470 (#03,L01)
       JUMP            L0032
L0031: TEST_ATTR       L01,#0e [TRUE] L0035
L0032: JE              G35,#0f [FALSE] L0033
       CALL_VS         R0285 (#1b,#03,L01) -> -(SP)
       RET_POPPED      
L0033: JE              G35,#10 [FALSE] L0034
       CALL_VS         R0285 (#1b,#04,L01) -> -(SP)
       RET_POPPED      
L0034: CALL_VS         R0285 (#1b,#05,L01) -> -(SP)
       RET_POPPED      
L0035: CALL_VS         R0101 (L01,#13) -> L02
       JZ              L02 [FALSE] L0036
       CALL_VS         R0285 (#1b,#06,L01) -> -(SP)
       RET_POPPED      
L0036: JE              L02,#01 [TRUE] RTRUE
       STORE           L01,L02
L0037: JZ              L04 [FALSE] L0038
       CALL_VN         R0476 (G16,L01)
       JUMP            L0039
L0038: CALL_VN         R0476 (L04,L01)
L0039: STORE           G00,L01
       CALL_1N         R0164
       CALL_2S         R0111 (L01) -> L03
       JZ              L03 [TRUE] L0040
       STORE           G00,L01
       STORE           G19,L01
       STORE           G18,#01
       JUMP            L0042
L0040: JE              L06,#13 [FALSE] L0041
       CALL_1N         R0414
       JZ              G17 [FALSE] RTRUE
L0041: STORE           G19,L01
       STORE           G00,#13
       STORE           G18,#00
L0042: CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_2N         R0222 (#01)
       RTRUE           

Routine R0213, 3 locals

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> -(SP)
       JE              L00,(SP)+ [TRUE] RFALSE
       JG              #05,L00 [TRUE] L0004
       JG              L00,#0114 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_CHILD       Gee -> -(SP) [FALSE] L0007
L0007: PULL            L01
       JZ              L01 [TRUE] L0019
L0008: JG              #01,L01 [TRUE] L0009
       JG              L01,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L01)
       JUMP            L0011
L0010: TEST_ATTR       L01,#03 [TRUE] L0015
L0011: JG              #01,L01 [TRUE] L0012
       JG              L01,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,L01)
       JUMP            L0014
L0013: TEST_ATTR       L01,#11 [TRUE] L0015
L0014: STORE           L02,#01
L0015: JG              #05,L01 [TRUE] L0016
       JG              L01,#0114 [TRUE] L0016
       JIN             L01,"Class" [FALSE] L0017
L0016: CALL_VN         R0470 (#0d,L01)
       JUMP            L0019
L0017: JIN             L01,L00 [TRUE] L0018
       CALL_VN         R0470 (#20,L01)
       JUMP            L0019
L0018: GET_SIBLING     L01 -> L01 [TRUE] L0008
L0019: JZ              L02 [TRUE] RFALSE
       CALL_VN         R0285 (#00,#04,L00)
       RTRUE           

Routine R0214, 2 locals

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> L01
L0004: JZ              L01 [TRUE] L0011
       JE              L01,G1a [TRUE] L0011
       JE              L01,L00 [TRUE] RFALSE
       JG              #05,L01 [TRUE] L0005
       JG              L01,#0114 [TRUE] L0005
       JIN             L01,"Class" [FALSE] L0006
L0005: CALL_VN         R0470 (#04,L01)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L01
L0007: GET_PARENT      Gee -> L01
       JZ              L01 [TRUE] L0010
       JG              #01,L01 [TRUE] L0008
       JG              L01,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,L01)
       RTRUE           
L0009: TEST_ATTR       L01,#14 [FALSE] RTRUE
L0010: JUMP            L0004
L0011: RTRUE           

Routine R0215, 9 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0114 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: PULL            L03
       JZ              L03 [TRUE] L0009
L0005: CALL_VN         R0479 (L03,#19)
       JG              #05,L03 [TRUE] L0006
       JG              L03,#0114 [TRUE] L0006
       JIN             L03,"Class" [FALSE] L0007
L0006: CALL_VN         R0470 (#0d,L03)
       JUMP            L0009
L0007: JIN             L03,L00 [TRUE] L0008
       CALL_VN         R0470 (#20,L03)
       JUMP            L0009
L0008: GET_SIBLING     L03 -> L03 [TRUE] L0005
L0009: STORE           L04,#00
       JG              #05,L00 [TRUE] L0010
       JG              L00,#0114 [TRUE] L0010
       JIN             L00,"Class" [FALSE] L0011
L0010: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L00
L0012: GET_CHILD       Gee -> -(SP) [FALSE] L0013
L0013: PULL            L03
       JZ              L03 [TRUE] L0079
L0014: JG              #01,L03 [TRUE] L0015
       JG              L03,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,L03)
       JUMP            L0017
L0016: TEST_ATTR       L03,#03 [TRUE] L0075
L0017: CALL_2S         R0214 (L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0075
       CALL_2N         R0081 (L03)
       JG              #01,L03 [TRUE] L0018
       JG              L03,#0114 [FALSE] L0019
L0018: CALL_VN         R0470 (#03,L03)
       JUMP            L0020
L0019: TEST_ATTR       L03,#11 [TRUE] L0068
L0020: CALL_VN         R0478 (L03,#19)
       INC             L04
       STORE           L05,#1e
       STORE           L07,#00
       JG              #01,L03 [TRUE] L0021
       JG              L03,#0114 [FALSE] L0022
L0021: CALL_VN         R0470 (#03,L03)
       JUMP            L0023
L0022: TEST_ATTR       L03,#05 [TRUE] L0026
L0023: JG              #01,L03 [TRUE] L0024
       JG              L03,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#03,L03)
       JUMP            L0029
L0025: TEST_ATTR       L03,#04 [FALSE] L0029
L0026: JG              #01,L03 [TRUE] L0027
       JG              L03,#0114 [FALSE] L0028
L0027: CALL_VN         R0470 (#03,L03)
       JUMP            L0029
L0028: TEST_ATTR       L03,#0e [FALSE] L0029
       CALL_VS         R0467 (L03,#1f) -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       STORE           L05,#1f
       STORE           L07,#01
       JUMP            L0050
L0029: JG              #01,L03 [TRUE] L0030
       JG              L03,#0114 [FALSE] L0031
L0030: CALL_VN         R0470 (#03,L03)
       JUMP            L0032
L0031: TEST_ATTR       L03,#05 [TRUE] L0035
L0032: JG              #01,L03 [TRUE] L0033
       JG              L03,#0114 [FALSE] L0034
L0033: CALL_VN         R0470 (#03,L03)
       JUMP            L0039
L0034: TEST_ATTR       L03,#04 [FALSE] L0039
L0035: JG              #01,L03 [TRUE] L0036
       JG              L03,#0114 [FALSE] L0037
L0036: CALL_VN         R0470 (#03,L03)
       JUMP            L0038
L0037: TEST_ATTR       L03,#0e [TRUE] L0039
L0038: CALL_VS         R0467 (L03,#20) -> -(SP)
       JZ              (SP)+ [TRUE] L0039
       STORE           L05,#20
       STORE           L07,#01
       JUMP            L0050
L0039: JG              #01,L03 [TRUE] L0040
       JG              L03,#0114 [FALSE] L0041
L0040: CALL_VN         R0470 (#03,L03)
       JUMP            L0044
L0041: TEST_ATTR       L03,#15 [FALSE] L0044
       JG              #01,L03 [TRUE] L0042
       JG              L03,#0114 [FALSE] L0043
L0042: CALL_VN         R0470 (#03,L03)
       JUMP            L0044
L0043: TEST_ATTR       L03,#0d [FALSE] L0044
       CALL_VS         R0467 (L03,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       STORE           L05,#21
       STORE           L07,#01
       JUMP            L0050
L0044: JG              #01,L03 [TRUE] L0045
       JG              L03,#0114 [FALSE] L0046
L0045: CALL_VN         R0470 (#03,L03)
       JUMP            L0050
L0046: TEST_ATTR       L03,#15 [FALSE] L0050
       JG              #01,L03 [TRUE] L0047
       JG              L03,#0114 [FALSE] L0048
L0047: CALL_VN         R0470 (#03,L03)
       JUMP            L0049
L0048: TEST_ATTR       L03,#0d [TRUE] L0050
L0049: CALL_VS         R0467 (L03,#22) -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       STORE           L05,#22
       STORE           L07,#01
L0050: JG              #01,L03 [TRUE] L0051
       JG              L03,#0114 [FALSE] L0052
L0051: CALL_VN         R0470 (#03,L03)
       JUMP            L0056
L0052: TEST_ATTR       L03,#0c [FALSE] L0056
       JG              #01,L03 [TRUE] L0053
       JG              L03,#0114 [FALSE] L0054
L0053: CALL_VN         R0470 (#15,L03)
       STORE           Gee,#02
       JUMP            L0055
L0054: STORE           Gee,L03
L0055: GET_PROP_ADDR   Gee,#24 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0056
       JE              L07,#01 [FALSE] L0067
L0056: JG              #01,L03 [TRUE] L0057
       JG              L03,#0114 [FALSE] L0058
L0057: CALL_VN         R0470 (#15,L03)
       STORE           Gee,#02
       JUMP            L0059
L0058: STORE           Gee,L03
L0059: GET_PROP_ADDR   Gee,#24 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0060
       CALL_VS         R0101 (L03,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0060
       STORE           L08,#01
       CALL_VN         R0479 (L03,#19)
       DEC             L04
       JUMP            L0067
L0060: CALL_VS         R0461 (L03,L05) -> L06
       JZ              L06 [TRUE] L0067
       NEW_LINE        
       CALL_VN         R0098 (L03,L05)
       STORE           L08,#01
       CALL_VN         R0479 (L03,#19)
       DEC             L04
       JG              #01,L03 [TRUE] L0061
       JG              L03,#0114 [FALSE] L0062
L0061: CALL_VN         R0470 (#03,L03)
       JUMP            L0067
L0062: TEST_ATTR       L03,#14 [FALSE] L0067
       JG              #05,L03 [TRUE] L0063
       JG              L03,#0114 [TRUE] L0063
       JIN             L03,"Class" [FALSE] L0064
L0063: CALL_VN         R0470 (#06,L03)
       STORE           Gee,#02
       JUMP            L0065
L0064: STORE           Gee,L03
L0065: GET_CHILD       Gee -> -(SP) [FALSE] L0066
L0066: JZ              (SP)+ [TRUE] L0067
       CALL_2N         R0213 (L03)
L0067: JUMP            L0075
L0068: JG              #01,L03 [TRUE] L0069
       JG              L03,#0114 [FALSE] L0070
L0069: CALL_VN         R0470 (#03,L03)
       JUMP            L0075
L0070: TEST_ATTR       L03,#14 [FALSE] L0075
       JG              #05,L03 [TRUE] L0071
       JG              L03,#0114 [TRUE] L0071
       JIN             L03,"Class" [FALSE] L0072
L0071: CALL_VN         R0470 (#06,L03)
       STORE           Gee,#02
       JUMP            L0073
L0072: STORE           Gee,L03
L0073: GET_CHILD       Gee -> -(SP) [FALSE] L0074
L0074: JZ              (SP)+ [TRUE] L0075
       CALL_2N         R0213 (L03)
L0075: JG              #05,L03 [TRUE] L0076
       JG              L03,#0114 [TRUE] L0076
       JIN             L03,"Class" [FALSE] L0077
L0076: CALL_VN         R0470 (#0d,L03)
       JUMP            L0079
L0077: JIN             L03,L00 [TRUE] L0078
       CALL_VN         R0470 (#20,L03)
       JUMP            L0079
L0078: GET_SIBLING     L03 -> L03 [TRUE] L0014
L0079: JZ              L04 [FALSE] L0080
       RFALSE          
L0080: JZ              L01 [TRUE] L0086
       NEW_LINE        
       JE              L08,#01 [FALSE] L0081
       STORE           L01,L02
L0081: CALL_2N         R0489 (L01)
       PRINT           " "
       JG              #05,L00 [TRUE] L0082
       JG              L00,#0114 [TRUE] L0082
       JIN             L00,"Class" [FALSE] L0083
L0082: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0084
L0083: STORE           Gee,L00
L0084: GET_CHILD       Gee -> -(SP) [FALSE] L0085
L0085: CALL_VN         R0158 ((SP)+,#0ad8)
       RET             L04
L0086: JE              L08,#01 [FALSE] L0087
       CALL_VN         R0285 (#00,#05,L00)
       JUMP            L0088
L0087: CALL_VN         R0285 (#00,#06,L00)
L0088: RTRUE           

Routine R0216, 0 locals
    Action routine for:
        "brief"

       STORE           G1b,#01
       CALL_2N         R0489 (S001)
       CALL_2N         R0285 (#23)
       RTRUE           

Routine R0217, 0 locals
    Action routine for:
        "long"

       STORE           G1b,#02
       CALL_2N         R0489 (S001)
       CALL_2N         R0285 (#24)
       RTRUE           

Routine R0218, 0 locals
    Action routine for:
        "short"

       STORE           G1b,#03
       CALL_2N         R0489 (S001)
       CALL_2N         R0285 (#25)
       RTRUE           

Routine R0219, 1 local

       JE              G00,#13 [FALSE] L0001
       STORE           G1d,#13
       RTRUE           
L0001: JE              G00,G1d [TRUE] L0003
       CALL_VS         R0481 (G00,#1e) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0098 (G00,#1e)
L0002: STORE           L00,G00
       CALL_1N         R0431
       STORE           G1d,L00
L0003: RTRUE           

Routine R0220, 0 locals

       JG              #01,G00 [TRUE] L0001
       JG              G00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,G00)
       JUMP            L0003
L0002: TEST_ATTR       G00,#18 [TRUE] L0006
L0003: CALL_VN         R0478 (G00,#18)
       JG              #01,G00 [TRUE] L0004
       JG              G00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,G00)
       JUMP            L0006
L0005: TEST_ATTR       G00,#12 [FALSE] L0006
       ADD             G11,#05 -> G11
       ADD             G14,#05 -> G14
L0006: RTRUE           

Routine R0221, 1 local

       STORE           L00,#01
       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> G1a
L0004: JG              #05,G1a [TRUE] L0005
       JG              G1a,#0114 [TRUE] L0005
       JIN             G1a,"Class" [FALSE] L0006
L0005: CALL_VN         R0470 (#04,G1a)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G1a
L0007: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       JG              #01,G1a [TRUE] L0008
       JG              G1a,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,G1a)
       JUMP            L0015
L0009: TEST_ATTR       G1a,#04 [FALSE] L0015
       JG              #01,G1a [TRUE] L0010
       JG              G1a,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#03,G1a)
       JUMP            L0012
L0011: TEST_ATTR       G1a,#0e [TRUE] L0015
L0012: JG              #01,G1a [TRUE] L0013
       JG              G1a,#0114 [FALSE] L0014
L0013: CALL_VN         R0470 (#03,G1a)
       JUMP            L0019
L0014: TEST_ATTR       G1a,#17 [FALSE] L0019
L0015: JG              #05,G1a [TRUE] L0016
       JG              G1a,#0114 [TRUE] L0016
       JIN             G1a,"Class" [FALSE] L0017
L0016: CALL_VN         R0470 (#04,G1a)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,G1a
L0018: GET_PARENT      Gee -> G1a
       INC             L00
       JUMP            L0004
L0019: RET             L00

Routine R0222, 6 locals
    Action routine for:
        "l"

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       CALL_2S         R0151 (#0a) -> -(SP)
       RET_POPPED      
L0004: JE              G00,#13 [FALSE] L0005
       STORE           G1a,#13
       CALL_1N         R0219
       JUMP            L0006
L0005: CALL_1S         R0221 -> L01
       JE              G1a,G00 [FALSE] L0006
       CALL_1N         R0219
       JE              G1a,G00 [TRUE] L0006
       JUMP            L0004
L0006: NEW_LINE        
       SET_TEXT_STYLE  BOLDFACE
       JZ              L01 [FALSE] L0007
       CALL_2N         R0139 (#13)
       JUMP            L0009
L0007: JE              G1a,G00 [TRUE] L0008
       CALL_2N         R0138 (G1a)
       JUMP            L0009
L0008: CALL_2N         R0139 (G1a)
L0009: SET_TEXT_STYLE  ROMAN
       STORE           L03,#01
       JG              #05,G16 [TRUE] L0010
       JG              G16,#0114 [TRUE] L0010
       JIN             G16,"Class" [FALSE] L0011
L0010: CALL_VN         R0470 (#04,G16)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,G16
L0012: GET_PARENT      Gee -> L02
       JUMP            L0017
L0013: INC             L03
       JG              #05,L02 [TRUE] L0014
       JG              L02,#0114 [TRUE] L0014
       JIN             L02,"Class" [FALSE] L0015
L0014: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0016
L0015: STORE           Gee,L02
L0016: GET_PARENT      Gee -> L02
L0017: JL              L03,L01 [FALSE] L0022
       JG              #01,L02 [TRUE] L0018
       JG              L02,#0114 [FALSE] L0019
L0018: CALL_VN         R0470 (#03,L02)
       JUMP            L0020
L0019: TEST_ATTR       L02,#14 [FALSE] L0020
       CALL_VN         R0285 (#00,#01,L02)
       JUMP            L0021
L0020: CALL_VN         R0285 (#00,#02,L02)
L0021: JUMP            L0013
L0022: JE              G1c,#01 [FALSE] L0023
       CALL_VN         R0285 (#00,#03,G16)
L0023: NEW_LINE        
       JL              G1b,#03 [FALSE] L0032
       JE              G1a,G00 [FALSE] L0032
       JE              L00,#01 [FALSE] L0026
       JE              G1b,#02 [TRUE] L0026
       JG              #01,G00 [TRUE] L0024
       JG              G00,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#03,G00)
       JUMP            L0026
L0025: TEST_ATTR       G00,#18 [TRUE] L0032
L0026: JG              #01,G00 [TRUE] L0027
       JG              G00,#0114 [FALSE] L0028
L0027: CALL_VN         R0470 (#15,G00)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,G00
L0029: GET_PROP_ADDR   Gee,#24 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0030
       CALL_VN         R0101 (G00,#24)
       JUMP            L0032
L0030: CALL_VS         R0481 (G00,#23) -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0031
       CALL_VN         R0151 (#0b,G00)
       JUMP            L0032
L0031: CALL_VN         R0098 (G00,#23)
L0032: JE              G1a,G00 [FALSE] L0033
       STORE           L05,#01
L0033: JZ              L01 [FALSE] L0034
       CALL_2N         R0215 (#13)
       JUMP            L0051
L0034: STORE           L02,G16
       STORE           L03,L01
       JUMP            L0039
L0035: DEC             L03
       JG              #05,L02 [TRUE] L0036
       JG              L02,#0114 [TRUE] L0036
       JIN             L02,"Class" [FALSE] L0037
L0036: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0038
L0037: STORE           Gee,L02
L0038: GET_PARENT      Gee -> L02
L0039: JG              L03,#00 [FALSE] L0040
       CALL_VN         R0478 (L02,#19)
       JUMP            L0035
L0040: STORE           L03,L01
L0041: JG              L03,#00 [FALSE] L0051
       STORE           L02,G16
       STORE           L04,#00
L0042: JL              L04,L03 [FALSE] L0046
       JG              #05,L02 [TRUE] L0043
       JG              L02,#0114 [TRUE] L0043
       JIN             L02,"Class" [FALSE] L0044
L0043: CALL_VN         R0470 (#04,L02)
       STORE           Gee,#02
       JUMP            L0045
L0044: STORE           Gee,L02
L0045: GET_PARENT      Gee -> L02
       INC             L04
       JUMP            L0042
L0046: CALL_VS         R0481 (L02,#32) -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0049
       JZ              L05 [TRUE] L0047
       NEW_LINE        
       JUMP            L0048
L0047: STORE           L05,#01
L0048: CALL_VN         R0098 (L02,#32)
L0049: CALL_2S         R0215 (L02) -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       STORE           L05,#01
L0050: DEC             L03
       JUMP            L0041
L0051: CALL_1N         R0430
       CALL_1N         R0220
       STORE           G32,#00
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0223, 1 local
    Action routine for:
        "check noun"
        "l at noun"
        "l noun = [parse $57c1]"
        "l to noun = [parse $57c1]"
        "read noun"

       JE              G00,#13 [FALSE] L0001
       CALL_VS         R0285 (#15,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0481 (G35,#23) -> Gef
       STORE           L00,Gef
       JZ              L00 [FALSE] L0008
       JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#04 [FALSE] L0004
       CALL_VN         R0090 (#40,G35)
       RTRUE           
L0004: JG              #01,G35 [TRUE] L0005
       JG              G35,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,G35)
       JUMP            L0007
L0006: TEST_ATTR       G35,#15 [FALSE] L0007
       CALL_VN         R0285 (#15,#03,G35)
       RFALSE          
L0007: CALL_VS         R0285 (#15,#02,G35) -> -(SP)
       RET_POPPED      
L0008: CALL_VN         R0098 (G35,#23)
       JG              #01,G35 [TRUE] L0009
       JG              G35,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,G35)
       JUMP            L0011
L0010: TEST_ATTR       G35,#15 [FALSE] L0011
       CALL_VN         R0285 (#15,#03,G35)
L0011: CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0224, 0 locals
    Action routine for:
        "l under noun"

       JE              G00,#13 [FALSE] L0001
       CALL_VS         R0285 (#27,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0285 (#27,#02)
       RTRUE           

Routine R0225, 3 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0114 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#06,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: PULL            L01
       JZ              L01 [TRUE] L0016
L0005: JG              #01,L01 [TRUE] L0006
       JG              L01,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,L01)
       JUMP            L0008
L0007: TEST_ATTR       L01,#03 [TRUE] L0012
L0008: JG              #01,L01 [TRUE] L0009
       JG              L01,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,L01)
       JUMP            L0011
L0010: TEST_ATTR       L01,#11 [TRUE] L0012
L0011: INC             L02
L0012: JG              #05,L01 [TRUE] L0013
       JG              L01,#0114 [TRUE] L0013
       JIN             L01,"Class" [FALSE] L0014
L0013: CALL_VN         R0470 (#0d,L01)
       JUMP            L0016
L0014: JIN             L01,L00 [TRUE] L0015
       CALL_VN         R0470 (#20,L01)
       JUMP            L0016
L0015: GET_SIBLING     L01 -> L01 [TRUE] L0005
L0016: RET             L02

Routine R0226, 1 local
    Action routine for:
        "l inside / in / into / through / on noun"
        "search noun"

       JE              G00,#13 [FALSE] L0001
       CALL_VS         R0285 (#40,#01,G35) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: CALL_2S         R0225 (G35) -> L00
       JG              #01,G35 [TRUE] L0003
       JG              G35,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,G35)
       JUMP            L0006
L0004: TEST_ATTR       G35,#14 [FALSE] L0006
       JZ              L00 [FALSE] L0005
       CALL_VS         R0285 (#40,#02,G35) -> -(SP)
       RET_POPPED      
L0005: CALL_VS         R0285 (#40,#03,G35) -> -(SP)
       RET_POPPED      
L0006: JG              #01,G35 [TRUE] L0007
       JG              G35,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#03,G35)
       JUMP            L0009
L0008: TEST_ATTR       G35,#04 [TRUE] L0010
L0009: CALL_VS         R0285 (#40,#04,G35) -> -(SP)
       RET_POPPED      
L0010: JG              #01,G35 [TRUE] L0011
       JG              G35,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,G35)
       JUMP            L0013
L0012: TEST_ATTR       G35,#17 [TRUE] L0017
L0013: JG              #01,G35 [TRUE] L0014
       JG              G35,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,G35)
       JUMP            L0016
L0015: TEST_ATTR       G35,#0e [TRUE] L0017
L0016: CALL_VS         R0285 (#40,#05,G35) -> -(SP)
       RET_POPPED      
L0017: CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JZ              L00 [FALSE] L0018
       CALL_VS         R0285 (#40,#06,G35) -> -(SP)
       RET_POPPED      
L0018: CALL_VN         R0285 (#40,#07,G35)
       RTRUE           

Routine R0227, 0 locals
    Action routine for:
        "open noun with held"
        "force noun with held"
        "force apart / open noun with held"
        "force noun apart / open with held"
        "unlock noun with held"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#0a [TRUE] L0005
L0004: CALL_VS         R0285 (#54,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0008
L0007: TEST_ATTR       G35,#0b [TRUE] L0009
L0008: CALL_VS         R0285 (#54,#02,G35) -> -(SP)
       RET_POPPED      
L0009: CALL_VS         R0481 (G35,#14) -> Gef
       PUSH            Gef
       JE              (SP)+,G36 [TRUE] L0010
       CALL_VS         R0285 (#54,#03,G36) -> -(SP)
       RET_POPPED      
L0010: CALL_VN         R0479 (G35,#0b)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#54,#04,G35)
       RTRUE           

Routine R0228, 0 locals
    Action routine for:
        "lock noun with held"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#0a [TRUE] L0005
L0004: CALL_VS         R0285 (#26,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0008
L0007: TEST_ATTR       G35,#0b [FALSE] L0008
       CALL_VS         R0285 (#26,#02,G35) -> -(SP)
       RET_POPPED      
L0008: JG              #01,G35 [TRUE] L0009
       JG              G35,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,G35)
       JUMP            L0011
L0010: TEST_ATTR       G35,#0e [FALSE] L0011
       CALL_VS         R0285 (#26,#03,G35) -> -(SP)
       RET_POPPED      
L0011: CALL_VS         R0481 (G35,#14) -> Gef
       PUSH            Gef
       JE              (SP)+,G36 [TRUE] L0012
       CALL_VS         R0285 (#26,#04,G36) -> -(SP)
       RET_POPPED      
L0012: CALL_VN         R0478 (G35,#0b)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#26,#05,G35)
       RTRUE           

Routine R0229, 0 locals
    Action routine for:
        "switch noun"
        "switch noun on"
        "switch on noun"
        "rotate noun on"
        "rotate on noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#15 [TRUE] L0005
L0004: CALL_VS         R0285 (#4d,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0008
L0007: TEST_ATTR       G35,#0d [FALSE] L0008
       CALL_VS         R0285 (#4d,#02,G35) -> -(SP)
       RET_POPPED      
L0008: CALL_VN         R0478 (G35,#0d)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#4d,#03,G35)
       RTRUE           

Routine R0230, 0 locals
    Action routine for:
        "close off noun"
        "switch noun off"
        "switch off noun"
        "rotate noun off"
        "rotate off noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#15 [TRUE] L0005
L0004: CALL_VS         R0285 (#4c,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0008
L0007: TEST_ATTR       G35,#0d [TRUE] L0009
L0008: CALL_VS         R0285 (#4c,#02,G35) -> -(SP)
       RET_POPPED      
L0009: CALL_VN         R0479 (G35,#0d)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#4c,#03,G35)
       RTRUE           

Routine R0231, 0 locals
    Action routine for:
        "open noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#0f [TRUE] L0005
L0004: CALL_VS         R0285 (#2e,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0008
L0007: TEST_ATTR       G35,#0b [FALSE] L0008
       CALL_VS         R0285 (#2e,#02,G35) -> -(SP)
       RET_POPPED      
L0008: JG              #01,G35 [TRUE] L0009
       JG              G35,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,G35)
       JUMP            L0011
L0010: TEST_ATTR       G35,#0e [FALSE] L0011
       CALL_VS         R0285 (#2e,#03,G35) -> -(SP)
       RET_POPPED      
L0011: CALL_VN         R0478 (G35,#0e)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       JG              #01,G35 [TRUE] L0012
       JG              G35,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#03,G35)
       JUMP            L0017
L0013: TEST_ATTR       G35,#04 [FALSE] L0017
       JG              #01,G35 [TRUE] L0014
       JG              G35,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#03,G35)
       JUMP            L0016
L0015: TEST_ATTR       G35,#17 [TRUE] L0017
L0016: JE              G00,#13 [TRUE] L0017
       CALL_2S         R0225 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0017
       CALL_VS         R0191 (G35,G16) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       CALL_VS         R0285 (#2e,#04,G35) -> -(SP)
       RET_POPPED      
L0017: CALL_VN         R0285 (#2e,#05,G35)
       RTRUE           

Routine R0232, 0 locals
    Action routine for:
        "close noun"
        "close up noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#0f [TRUE] L0005
L0004: CALL_VS         R0285 (#08,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0008
L0007: TEST_ATTR       G35,#0e [TRUE] L0009
L0008: CALL_VS         R0285 (#08,#02,G35) -> -(SP)
       RET_POPPED      
L0009: CALL_VN         R0479 (G35,#0e)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#08,#03,G35)
       RTRUE           

Routine R0233, 0 locals
    Action routine for:
        "remove held"
        "disrobe held"
        "carry off ATTRIBUTE(26)"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#1a [TRUE] L0005
L0004: CALL_VS         R0285 (#0f,#01,G35) -> -(SP)
       RET_POPPED      
L0005: CALL_VN         R0479 (G35,#1a)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#0f,#02,G35)
       RTRUE           

Routine R0234, 0 locals
    Action routine for:
        "put on held"
        "don held"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#02 [TRUE] L0005
L0004: CALL_VS         R0285 (#5c,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #05,G35 [TRUE] L0006
       JG              G35,#0114 [TRUE] L0006
       JIN             G35,"Class" [FALSE] L0007
L0006: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,G35
L0008: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G16 [TRUE] L0009
       CALL_VS         R0285 (#5c,#02,G35) -> -(SP)
       RET_POPPED      
L0009: JG              #01,G35 [TRUE] L0010
       JG              G35,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#03,G35)
       JUMP            L0012
L0011: TEST_ATTR       G35,#1a [FALSE] L0012
       CALL_VS         R0285 (#5c,#03,G35) -> -(SP)
       RET_POPPED      
L0012: CALL_VN         R0478 (G35,#1a)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#5c,#04,G35)
       RTRUE           

Routine R0235, 0 locals
    Action routine for:
        "eat held"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#06 [TRUE] L0005
L0004: CALL_VS         R0285 (#12,#01,G35) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0012
L0007: TEST_ATTR       G35,#1a [FALSE] L0012
       CALL_VN         R0285 (#11,#03,G35)
       CALL_VN         R0090 (#0f,G35)
       JG              #01,G35 [TRUE] L0008
       JG              G35,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,G35)
       JUMP            L0012
L0009: TEST_ATTR       G35,#1a [FALSE] L0012
       JG              #01,G35 [TRUE] L0010
       JG              G35,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#02,G35)
       JUMP            L0012
L0011: JIN             G35,G16 [TRUE] RTRUE
L0012: CALL_2N         R0477 (G35)
       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G37,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#12,#02,G35)
       RTRUE           

Routine R0236, 1 local

       JG              #05,G36 [TRUE] L0001
       JG              G36,#0114 [TRUE] L0001
       JIN             G36,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G36)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G36
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#06 [TRUE] L0004
       CALL_VS         R0285 (#35,#02,G35) -> -(SP)
       RET_POPPED      
L0004: JE              G36,#0f,#10 [FALSE] L0005
       CALL_VS         R0285 (#35,#03,G35) -> -(SP)
       RET_POPPED      
L0005: CALL_1N         R0095
       STORE           L00,G35
       CALL_VN         R0476 (L00,G16)
       CALL_VN         R0090 (#1b,G36)
       JE              G00,#13 [FALSE] L0006
       CALL_VN         R0476 (L00,G19)
       JUMP            L0007
L0006: CALL_VN         R0476 (L00,G00)
L0007: RTRUE           

Routine R0237, 0 locals
    Action routine for:
        "answer topic to creature"

       JZ              G36 [TRUE] L0001
       CALL_VS         R0096 (G36,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0001: CALL_VN         R0285 (#01,#01,G35)
       RTRUE           

Routine R0238, 0 locals
    Action routine for:
        "ask creature about topic"

       CALL_VS         R0096 (G35,#02) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#02,#01,G35)
       RTRUE           

Routine R0239, 0 locals
    Action routine for:
        "ask creature for noun"

       JE              G35,G16 [FALSE] L0001
       CALL_2N         R0090 (#1d)
       RTRUE           
L0001: CALL_VN         R0285 (#1003,#01,G35)
       RTRUE           

Routine R0240, 0 locals
    Action routine for:
        "ask creature to topic"
        "ask that creature topic"
        "tell creature to topic"

       CALL_VN         R0285 (#1003,#01,G35)
       RTRUE           

Routine R0241, 0 locals
    Action routine for:
        "attack noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#00 [FALSE] L0004
       CALL_VS         R0096 (G35,#03) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0004: CALL_VN         R0285 (#03,#01,G35)
       RTRUE           

Routine R0242, 0 locals
    Action routine for:
        "blow held"

       CALL_VN         R0285 (#04,#01,G35)
       RTRUE           

Routine R0243, 0 locals
    Action routine for:
        "burn noun"
        "burn noun with held"

       CALL_VN         R0285 (#05,#01,G35)
       RTRUE           

Routine R0244, 0 locals
    Action routine for:
        "buy noun"

       CALL_VN         R0285 (#06,#01,G35)
       RTRUE           

Routine R0245, 0 locals
    Action routine for:
        "climb noun"
        "climb up / over noun"

       CALL_VN         R0285 (#07,#01,G35)
       RTRUE           

Routine R0246, 0 locals
    Action routine for:
        "consult noun about topic"
        "consult noun on topic"
        "l up topic in noun"
        "read about topic in noun"
        "read topic in noun"

       CALL_VN         R0285 (#0c,#01,G35)
       RTRUE           

Routine R0247, 0 locals
    Action routine for:
        "chop noun"

       CALL_VN         R0285 (#0d,#01,G35)
       RTRUE           

Routine R0248, 0 locals
    Action routine for:
        "dig noun"
        "dig noun with held"

       CALL_VN         R0285 (#0e,#01,G35)
       RTRUE           

Routine R0249, 0 locals
    Action routine for:
        "drink noun"

       CALL_VN         R0285 (#10,#01,G35)
       RTRUE           

Routine R0250, 0 locals
    Action routine for:
        "fill noun"

       CALL_VN         R0285 (#17,#01,G35)
       RTRUE           

Routine R0251, 0 locals
    Action routine for:
        "hop"

       CALL_VN         R0285 (#1e,#01,G35)
       RTRUE           

Routine R0252, 0 locals
    Action routine for:
        "hop over noun"

       CALL_VN         R0285 (#1f,#01,G35)
       RTRUE           

Routine R0253, 0 locals
    Action routine for:
        "embrace creature"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0096 (G35,#21) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JE              G35,G16 [FALSE] L0002
       CALL_VS         R0285 (#53,#03,G35) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0285 (#21,#01,G35)
       RTRUE           

Routine R0254, 0 locals
    Action routine for:
        "hear"
        "hear noun"
        "hear to noun"

       CALL_VN         R0285 (#22,#01,G35)
       RTRUE           

Routine R0255, 0 locals
    Action routine for:
        "bother"
        "bother topic"

       CALL_VN         R0285 (#28,#01,G35)
       RTRUE           

Routine R0256, 0 locals
    Action routine for:
        "no"

       CALL_2N         R0285 (#29)
       RTRUE           

Routine R0257, 0 locals
    Action routine for:
        "pray"

       CALL_VN         R0285 (#30,#01,G35)
       RTRUE           

Routine R0258, 0 locals
    Action routine for:
        "drag noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#13 [FALSE] L0004
       CALL_VS         R0285 (#32,#01,G35) -> -(SP)
       RET_POPPED      
L0004: JG              #01,G35 [TRUE] L0005
       JG              G35,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,G35)
       JUMP            L0007
L0006: TEST_ATTR       G35,#11 [FALSE] L0007
       CALL_VS         R0285 (#32,#02,G35) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G35 [TRUE] L0008
       JG              G35,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,G35)
       JUMP            L0010
L0009: TEST_ATTR       G35,#00 [FALSE] L0010
       CALL_VS         R0285 (#32,#04,G35) -> -(SP)
       RET_POPPED      
L0010: CALL_VN         R0285 (#32,#03,G35)
       RTRUE           

Routine R0259, 0 locals
    Action routine for:
        "clear noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#13 [FALSE] L0004
       CALL_VS         R0285 (#33,#01,G35) -> -(SP)
       RET_POPPED      
L0004: JG              #01,G35 [TRUE] L0005
       JG              G35,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,G35)
       JUMP            L0007
L0006: TEST_ATTR       G35,#11 [FALSE] L0007
       CALL_VS         R0285 (#33,#02,G35) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G35 [TRUE] L0008
       JG              G35,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,G35)
       JUMP            L0010
L0009: TEST_ATTR       G35,#00 [FALSE] L0010
       CALL_VS         R0285 (#33,#04,G35) -> -(SP)
       RET_POPPED      
L0010: CALL_VN         R0285 (#33,#03,G35)
       RTRUE           

Routine R0260, 0 locals
    Action routine for:
        "clear noun noun"

       CALL_VN         R0285 (#35,#01,G35)
       RTRUE           

Routine R0261, 0 locals
    Action routine for:
        "clean noun"

       CALL_VN         R0285 (#3b,#01,G35)
       RTRUE           

Routine R0262, 0 locals
    Action routine for:
        "adjust noun"

       CALL_VN         R0285 (#41,#01,G35)
       RTRUE           

Routine R0263, 0 locals
    Action routine for:
        "adjust noun to special"

       CALL_VN         R0285 (#42,#01,G35)
       RTRUE           

Routine R0264, 0 locals
    Action routine for:
        "sing"

       CALL_VN         R0285 (#44,#01,G35)
       RTRUE           

Routine R0265, 0 locals
    Action routine for:
        "nap"

       CALL_VN         R0285 (#45,#01,G35)
       RTRUE           

Routine R0266, 0 locals
    Action routine for:
        "smell"
        "smell noun"

       CALL_VN         R0285 (#46,#01,G35)
       RTRUE           

Routine R0267, 0 locals
    Action routine for:
        "sorry"

       CALL_VN         R0285 (#47,#01,G35)
       RTRUE           

Routine R0268, 0 locals
    Action routine for:
        "squash noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#00 [FALSE] L0004
       CALL_VS         R0285 (#48,#01,G35) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0285 (#48,#02,G35)
       RTRUE           

Routine R0269, 0 locals
    Action routine for:
        "damn"
        "damn topic"

       CALL_VN         R0285 (#49,#01,G35)
       RTRUE           

Routine R0270, 0 locals
    Action routine for:
        "dive"

       CALL_VN         R0285 (#4a,#01,G35)
       RTRUE           

Routine R0271, 0 locals
    Action routine for:
        "swing noun"
        "swing on noun"

       CALL_VN         R0285 (#4b,#01,G35)
       RTRUE           

Routine R0272, 0 locals
    Action routine for:
        "taste noun"

       CALL_VN         R0285 (#4f,#01,G35)
       RTRUE           

Routine R0273, 0 locals
    Action routine for:
        "tell creature about topic"

       JE              G35,G16 [FALSE] L0001
       CALL_VS         R0285 (#50,#01,G35) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0096 (G35,#50) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#50,#02,G35)
       RTRUE           

Routine R0274, 0 locals
    Action routine for:
        "think"

       CALL_VN         R0285 (#51,#01,G35)
       RTRUE           

Routine R0275, 0 locals
    Action routine for:
        "discard held at / against / on / onto noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              G36,#01 [FALSE] L0003
       STORE           G32,#1002
       CALL_VS         R0101 (G36,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G32,#52
       RTRUE           
L0002: STORE           G32,#52
L0003: JG              #01,G35 [TRUE] L0004
       JG              G35,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,G35)
       JUMP            L0010
L0005: TEST_ATTR       G35,#1a [FALSE] L0010
       CALL_VN         R0285 (#11,#03,G35)
       CALL_VN         R0090 (#0f,G35)
       JG              #01,G35 [TRUE] L0006
       JG              G35,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G35)
       JUMP            L0010
L0007: TEST_ATTR       G35,#1a [FALSE] L0010
       JG              #01,G35 [TRUE] L0008
       JG              G35,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#02,G35)
       JUMP            L0010
L0009: JIN             G35,G16 [TRUE] RTRUE
L0010: JG              #01,G36 [TRUE] L0011
       JG              G36,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#03,G36)
       JUMP            L0013
L0012: TEST_ATTR       G36,#00 [TRUE] L0014
L0013: CALL_VS         R0285 (#52,#01) -> -(SP)
       RET_POPPED      
L0014: CALL_VS         R0096 (G36,#52) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#52,#02,G35)
       RTRUE           

Routine R0276, 0 locals
    Action routine for:
        "attach noun"
        "attach noun to noun"

       CALL_VN         R0285 (#20,#01,G35)
       RTRUE           

Routine R0277, 0 locals
    Action routine for:
        "feel noun"

       JE              G35,G16 [FALSE] L0001
       CALL_VS         R0285 (#53,#03,G35) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: JG              #01,G35 [TRUE] L0003
       JG              G35,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,G35)
       JUMP            L0005
L0004: TEST_ATTR       G35,#00 [FALSE] L0005
       CALL_VS         R0285 (#53,#01,G35) -> -(SP)
       RET_POPPED      
L0005: CALL_VN         R0285 (#53,#02,G35)
       RTRUE           

Routine R0278, 0 locals
    Action routine for:
        "rotate noun"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#13 [FALSE] L0004
       CALL_VS         R0285 (#34,#01,G35) -> -(SP)
       RET_POPPED      
L0004: JG              #01,G35 [TRUE] L0005
       JG              G35,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,G35)
       JUMP            L0007
L0006: TEST_ATTR       G35,#11 [FALSE] L0007
       CALL_VS         R0285 (#34,#02,G35) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G35 [TRUE] L0008
       JG              G35,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,G35)
       JUMP            L0010
L0009: TEST_ATTR       G35,#00 [FALSE] L0010
       CALL_VS         R0285 (#34,#04,G35) -> -(SP)
       RET_POPPED      
L0010: CALL_VN         R0285 (#34,#03,G35)
       RTRUE           

Routine R0279, 0 locals
    Action routine for:
        "wait"

       CALL_1S         R0095 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#57,#01,G35)
       RTRUE           

Routine R0280, 0 locals
    Action routine for:
        "awake"
        "awake up"

       CALL_VN         R0285 (#58,#01,G35)
       RTRUE           

Routine R0281, 0 locals
    Action routine for:
        "awake creature"
        "awake creature up"
        "awake up creature"

       CALL_2S         R0193 (G35) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0096 (G35,#59) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#59,#01,G35)
       RTRUE           

Routine R0282, 0 locals
    Action routine for:
        "wave noun"

       JG              #05,G35 [TRUE] L0001
       JG              G35,#0114 [TRUE] L0001
       JIN             G35,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#04,G35)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G35
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G16 [TRUE] L0004
       CALL_VS         R0285 (#5a,#01,G35) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0285 (#5a,#02,G35)
       RTRUE           

Routine R0283, 0 locals
    Action routine for:
        "wave"

       CALL_VN         R0285 (#5b,#01,G35)
       RTRUE           

Routine R0284, 0 locals
    Action routine for:
        "y"

       CALL_2N         R0285 (#2a)
       RTRUE           

Routine R0285, 4 locals

       STORE           L03,Ge9
       STORE           Ge9,L00
       JZ              L01 [FALSE] L0001
       STORE           L01,#01
L0001: CALL_VN         R0286 (L01,L02)
       STORE           Ge9,L03
       RTRUE           

Routine R0286, 3 locals

       STORE           L02,G32
       STORE           G2a,L00
       STORE           G2b,L01
       STORE           G32,Ge9
       CALL_VS         R0101 (#18,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G32,L02
       RFALSE          
L0001: CALL_VS2        R0462 (#17,#50,#52,#00) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G32,L02
       RFALSE          
L0002: STORE           G32,L02
       CALL_VN         R0017 (L00,L01)
       RTRUE           

Routine R0287, 0 locals

       JE              Ge9,#4e [FALSE] L0006
       JE              G00,#0025 [FALSE] L0001
       CALL_VS         R0461 (Geb,#0053) -> -(SP)
       SUB             G11,(SP)+ -> G11
L0001: ADD             G11,#05 -> G11
       JG              #01,G35 [TRUE] L0002
       JG              G35,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,G35)
       JUMP            L0004
L0003: TEST_ATTR       G35,#20 [TRUE] L0005
L0004: CALL_VN         R0478 (G35,#20)
       INC             G95
       ADD             G11,#02 -> G11
L0005: PRINT_RET       "Taken!"
L0006: JE              Ge9,#1c [FALSE] L0007
       SUB             G11,#05 -> G11
       RFALSE          
L0007: JE              Ge9,#11 [FALSE] L0008
       SUB             G11,#05 -> G11
       JE              G00,#0025 [FALSE] L0008
       CALL_VS         R0461 (Geb,#0053) -> -(SP)
       ADD             G11,(SP)+ -> G11
       PRINT_RET       "Safely deposited."
L0008: RFALSE          

Routine R0288, 0 locals

       JE              Ge9,#14 [FALSE] L0005
       JE              G00,#0022 [FALSE] L0004
       JG              #01,#0025 [TRUE] L0001
       JG              #0025,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,#0025)
       JUMP            L0003
L0002: TEST_ATTR       "Inside Building",#18 [TRUE] L0004
L0003: PRINT_RET       "It's too far away."
L0004: CALL_VN         R0090 (#62,#0025)
       RTRUE           
L0005: RFALSE          

Routine R0289, 0 locals

       JE              Ge9,#10 [FALSE] L0001
       PRINT_PADDR     S113
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4e [FALSE] L0006
       JG              #01,#002b [TRUE] L0002
       JG              #002b,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#02,#002b)
       JUMP            L0004
L0003: JIN             "small bottle",G16 [TRUE] L0005
L0004: PRINT_PADDR     S114
       NEW_LINE        
       RTRUE           
L0005: CALL_VN         R0090 (#17,#002b)
       RTRUE           
L0006: JE              Ge9,#1c [FALSE] L0008
       JE              G36,#002b [FALSE] L0007
       CALL_VN         R0090 (#17,#002b)
       RTRUE           
L0007: PRINT_PADDR     S115
       NEW_LINE        
       RTRUE           
L0008: JE              Ge9,#1001 [FALSE] L0012
       JE              G35,#00c4 [FALSE] L0009
       CALL_2N         R0477 (#00c4)
       CALL_VN         R0476 (#00c5,G00)
       SUB             G11,#05 -> G11
       PRINT_PADDR     S116
       NEW_LINE        
       RTRUE           
L0009: JE              G35,#002b [FALSE] L0010
       CALL_VN         R0090 (#17,#002b)
       RTRUE           
L0010: CALL_2N         R0477 (G35)
       CALL_VS         R0468 (G35,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       SUB             G11,#05 -> G11
L0011: CALL_2N         R0138 (G35)
       PRINT_RET       " washes away with the stream."
L0012: RFALSE          

Routine R0290, 0 locals

       JE              Ge9,#14 [FALSE] L0002
       JE              G35,#0026,#0027 [FALSE] L0001
       PRINT_PADDR     S125
       NEW_LINE        
       RTRUE           
L0001: RFALSE          
L0002: JE              Ge9,#63 [FALSE] L0005
       JG              #01,#003b [TRUE] L0003
       JG              #003b,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,#003b)
       RFALSE          
L0004: TEST_ATTR       "In Debris Room",#18 [FALSE] RFALSE
       CALL_2N         R0165 (#003b)
       RTRUE           
L0005: JE              Ge9,#64 [FALSE] L0008
       JG              #01,#0062 [TRUE] L0006
       JG              #0062,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,#0062)
       RFALSE          
L0007: TEST_ATTR       "At "Y2"",#18 [FALSE] RFALSE
       CALL_2N         R0165 (#0062)
       RTRUE           
L0008: RFALSE          

Routine R0291, 0 locals

       JE              Ge9,#65 [FALSE] L0001
       PRINT_RET       "A dozen or so keys."
L0001: RFALSE          

Routine R0292, 0 locals

       JE              Ge9,#12 [FALSE] L0001
       PRINT_RET       "Delicious!"
L0001: RFALSE          

Routine R0293, 1 local

       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,Geb)
       JUMP            L0003
L0002: TEST_ATTR       Geb,#0d [TRUE] L0004
L0003: CALL_2N         R0106 (Geb)
       RTRUE           
L0004: CALL_VS         R0464 (Geb,#0055) -> L00
       JZ              L00 [FALSE] L0005
       CALL_VN         R0479 (Geb,#0d)
       CALL_VN         R0479 (Geb,#09)
L0005: JG              #01,Geb [TRUE] L0006
       JG              Geb,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#02,Geb)
       JUMP            L0008
L0007: JIN             Geb,G16 [TRUE] L0011
L0008: JG              #01,Geb [TRUE] L0009
       JG              Geb,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#02,Geb)
       JUMP            L0036
L0010: JIN             Geb,G00 [FALSE] L0036
L0011: JZ              L00 [FALSE] L0019
       PRINT           "Your lamp has run out of power."
       JG              #01,#0106 [TRUE] L0012
       JG              #0106,#0114 [FALSE] L0013
L0012: CALL_VN         R0470 (#02,#0106)
       JUMP            L0014
L0013: JIN             "fresh batteries",G16 [TRUE] L0018
L0014: JG              #01,G00 [TRUE] L0015
       JG              G00,#0114 [FALSE] L0016
L0015: CALL_VN         R0470 (#03,G00)
       JUMP            L0017
L0016: TEST_ATTR       G00,#09 [TRUE] L0018
L0017: STORE           G17,#03
       PRINT_PADDR     S136
       NEW_LINE        
       RTRUE           
L0018: CALL_VN         R0462 (Geb,#0054)
       NEW_LINE        
       RTRUE           
L0019: JE              L00,#1e [FALSE] L0036
       PRINT           "Your lamp is getting dim."
       CALL_VS         R0461 (#0106,#005c) -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       PRINT_PADDR     S137
       NEW_LINE        
       RTRUE           
L0020: JG              #01,#0106 [TRUE] L0021
       JG              #0106,#0114 [FALSE] L0022
L0021: CALL_VN         R0470 (#02,#0106)
       JUMP            L0025
L0022: JIN             "fresh batteries","vending machine" [FALSE] L0025
       JG              #01,#0103 [TRUE] L0023
       JG              #0103,#0114 [FALSE] L0024
L0023: CALL_VN         R0470 (#03,#0103)
       JUMP            L0025
L0024: TEST_ATTR       "(Dead_End_14)",#18 [FALSE] L0025
       PRINT_PADDR     S138
       NEW_LINE        
       RTRUE           
L0025: JG              #01,#0106 [TRUE] L0026
       JG              #0106,#0114 [FALSE] L0027
L0026: CALL_VN         R0470 (#02,#0106)
       JUMP            L0028
L0027: JIN             "fresh batteries","vending machine" [TRUE] L0035
L0028: JG              #01,#0106 [TRUE] L0029
       JG              #0106,#0114 [FALSE] L0030
L0029: CALL_VN         R0470 (#02,#0106)
       JUMP            L0031
L0030: JIN             "fresh batteries",G16 [TRUE] L0035
L0031: JG              #01,#0106 [TRUE] L0032
       JG              #0106,#0114 [FALSE] L0033
L0032: CALL_VN         R0470 (#02,#0106)
       JUMP            L0034
L0033: JIN             "fresh batteries",G00 [TRUE] L0035
L0034: PRINT_PADDR     S139
       NEW_LINE        
       RTRUE           
L0035: NEW_LINE        
       RTRUE           
L0036: RFALSE          

Routine R0294, 0 locals

       JE              Ge9,#15 [FALSE] L0006
       PRINT           "It is a shiny brass lamp"
       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,Geb)
       JUMP            L0003
L0002: TEST_ATTR       Geb,#0d [TRUE] L0004
L0003: PRINT_RET       ". It is not currently lit."
L0004: CALL_VS         R0461 (Geb,#0055) -> -(SP)
       JL              (SP)+,#1e [FALSE] L0005
       PRINT_RET       ", glowing dimly."
L0005: PRINT_RET       ", glowing brightly."
L0006: JE              Ge9,#05 [FALSE] L0007
       CALL_VN         R0090 (#4d,Geb)
       RTRUE           
L0007: JE              Ge9,#3b [FALSE] L0008
       PRINT_PADDR     S140
       NEW_LINE        
       RTRUE           
L0008: JE              Ge9,#4d [FALSE] L0010
       CALL_VS         R0461 (Geb,#0055) -> -(SP)
       JG              (SP)+,#00 [TRUE] L0009
       PRINT_PADDR     S141
       NEW_LINE        
       RTRUE           
L0009: RFALSE          
L0010: JE              Ge9,#1001 [FALSE] L0013
       JE              G35,#0107 [FALSE] L0011
       PRINT_PADDR     S142
       NEW_LINE        
       RTRUE           
L0011: JE              G35,#0106 [FALSE] L0012
       CALL_VN         R0462 (Geb,#0054)
       RTRUE           
L0012: PRINT_PADDR     S143
       NEW_LINE        
       RTRUE           
L0013: RFALSE          

Routine R0295, 0 locals

       JE              Ge9,#4d [FALSE] L0001
       CALL_VN         R0478 (Geb,#09)
       CALL_2N         R0105 (Geb)
       RFALSE          
L0001: JE              Ge9,#4c [FALSE] L0002
       CALL_VN         R0479 (Geb,#09)
L0002: RFALSE          

Routine R0296, 0 locals

       JG              #01,#0106 [TRUE] L0001
       JG              #0106,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#0106)
       JUMP            L0003
L0002: JIN             "fresh batteries",G16 [TRUE] L0006
L0003: JG              #01,#0106 [TRUE] L0004
       JG              #0106,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#02,#0106)
       JUMP            L0007
L0005: JIN             "fresh batteries",G00 [FALSE] L0007
L0006: CALL_2N         R0477 (#0106)
       CALL_VN         R0460 (#0106,#005c,#01)
       CALL_VN         R0476 (#0107,G00)
       CALL_VN         R0460 (Geb,#0055,#09c4)
       PRINT_PADDR     S144
       NEW_LINE        
       RTRUE           
L0007: RFALSE          

Routine R0297, 0 locals

       JE              Ge9,#1000 [FALSE] L0004
       JG              #01,G35 [TRUE] L0001
       JG              G35,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,G35)
       JUMP            L0003
L0002: JIN             G35,"small bottle" [FALSE] L0003
       PRINT_PADDR     S146
       NEW_LINE        
       RTRUE           
L0003: RFALSE          
L0004: JE              Ge9,#1001 [FALSE] L0006
       JE              G35,#1f,#0092 [FALSE] L0005
       CALL_VN         R0090 (#17,Geb)
       RTRUE           
L0005: PRINT_PADDR     S147
       NEW_LINE        
       RTRUE           
       RFALSE          
L0006: JE              Ge9,#17 [FALSE] L0017
       JG              #05,#2b [TRUE] L0007
       JG              #2b,#0114 [TRUE] L0007
       JIN             "small bottle","Class" [FALSE] L0008
L0007: CALL_VN         R0470 (#06,#2b)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,#2b
L0009: GET_CHILD       Gee -> -(SP) [FALSE] L0010
L0010: JZ              (SP)+ [TRUE] L0011
       PRINT_RET       "The bottle is full already."
L0011: JIN             "stream",G00 [TRUE] L0012
       JIN             "spring",G00 [FALSE] L0013
L0012: CALL_VN         R0476 (#002c,#2b)
       PRINT_RET       "The bottle is now full of water."
L0013: JG              #01,#0092 [TRUE] L0014
       JG              #0092,#0114 [FALSE] L0015
L0014: CALL_VN         R0470 (#02,#0092)
       JUMP            L0016
L0015: JIN             "pool of oil",G00 [FALSE] L0016
       CALL_VN         R0476 (#002d,#2b)
       PRINT_RET       "The bottle is now full of oil."
L0016: PRINT_PADDR     S148
       NEW_LINE        
       RTRUE           
L0017: JE              Ge9,#66 [FALSE] L0027
       JG              #05,#2b [TRUE] L0018
       JG              #2b,#0114 [TRUE] L0018
       JIN             "small bottle","Class" [FALSE] L0019
L0018: CALL_VN         R0470 (#06,#2b)
       STORE           Gee,#02
       JUMP            L0020
L0019: STORE           Gee,#2b
L0020: GET_CHILD       Gee -> -(SP) [FALSE] L0021
L0021: JZ              (SP)+ [FALSE] L0022
       PRINT_RET       "The bottle is already empty!"
L0022: JG              #05,#2b [TRUE] L0023
       JG              #2b,#0114 [TRUE] L0023
       JIN             "small bottle","Class" [FALSE] L0024
L0023: CALL_VN         R0470 (#06,#2b)
       STORE           Gee,#02
       JUMP            L0025
L0024: STORE           Gee,#2b
L0025: GET_CHILD       Gee -> -(SP) [FALSE] L0026
L0026: CALL_2N         R0477 ((SP)+)
       PRINT_PADDR     S149
       NEW_LINE        
       RTRUE           
L0027: RFALSE          

Routine R0298, 0 locals

       JE              Ge9,#10 [FALSE] L0001
       CALL_2N         R0477 (#2c)
       CALL_VN         R0090 (#10,#1f)
       RTRUE           
L0001: RFALSE          

Routine R0299, 0 locals

       JE              Ge9,#10 [FALSE] L0001
       CALL_VN         R0090 (#10,#0092)
       RTRUE           
L0001: RFALSE          

Routine R0300, 0 locals

       RANDOM          #02 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       CALL_VN         R0165 (#002f,#01)
L0001: RFALSE          

Routine R0301, 0 locals

       JE              Ge9,#14 [FALSE] L0001
       PRINT_PADDR     S161
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0302, 0 locals

       JG              #01,#0036 [TRUE] L0001
       JG              #0036,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,#0036)
       JUMP            L0003
L0002: TEST_ATTR       "steel grate",#0b [TRUE] L0007
L0003: JG              #01,#0036 [TRUE] L0004
       JG              #0036,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,#0036)
       JUMP            L0006
L0005: TEST_ATTR       "steel grate",#0e [TRUE] L0007
L0006: PRINT           "(first opening the grate)
"
       CALL_VN         R0478 (#0036,#0e)
L0007: RET             #0036

Routine R0303, 0 locals

       JE              G00,#0037 [FALSE] L0001
       RET             #0f
L0001: RET             #10

Routine R0304, 0 locals

       JE              G00,#0037 [FALSE] L0001
       RET             #34
L0001: RET             #0037

Routine R0305, 0 locals

       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,Geb)
       JUMP            L0003
L0002: TEST_ATTR       Geb,#0e [FALSE] L0003
       PRINT_RET       "
The grate stands open."
L0003: JG              #01,Geb [TRUE] L0004
       JG              Geb,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,Geb)
       JUMP            L0006
L0005: TEST_ATTR       Geb,#0b [TRUE] L0007
L0006: PRINT_RET       "
The grate is unlocked but shut."
L0007: RTRUE           

Routine R0306, 0 locals

       JE              Ge9,#2e [FALSE] L0003
       JG              #01,#0041 [TRUE] L0001
       JG              #0041,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#0041)
       RFALSE          
L0002: JIN             "little bird",Geb [FALSE] RFALSE
       PRINT           "(releasing the little bird)
"
       CALL_VN         R0090 (#67,#0041)
       RTRUE           
L0003: RFALSE          

Routine R0307, 0 locals

       JE              Ge9,#63 [FALSE] L0001
       CALL_2N         R0165 (#25)
       RTRUE           
L0001: RFALSE          

Routine R0308, 0 locals

       JE              Ge9,#5a [FALSE] L0007
       JE              G00,#004f,#004e [FALSE] L0006
       JZ              G93 [TRUE] L0001
       PRINT_RET       "Peculiar. Nothing happens."
L0001: JG              #01,#0051 [TRUE] L0002
       JG              #0051,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#02,#0051)
       JUMP            L0004
L0003: JIN             "crystal bridge",#00 [TRUE] L0005
L0004: CALL_2N         R0477 (#0051)
       CALL_VN         R0478 (#0051,#01)
       CALL_VN         R0480 (#004f,#09,#00)
       CALL_VN         R0480 (#004e,#0a,#00)
       PRINT_RET       "The crystal bridge has vanished!"
L0005: CALL_VN         R0476 (#0051,G00)
       CALL_VN         R0479 (#0051,#01)
       CALL_VN         R0480 (#004f,#09,#0051)
       CALL_VN         R0480 (#004e,#0a,#0051)
       PRINT_PADDR     S175
       NEW_LINE        
       RTRUE           
L0006: PRINT_RET       "Nothing happens."
L0007: RFALSE          

Routine R0309, 0 locals

       JE              Ge9,#15 [FALSE] L0004
       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,Geb)
       JUMP            L0003
L0002: JIN             Geb,"wicker cage" [FALSE] L0003
       PRINT_PADDR     S179
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S180
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#1c [FALSE] L0006
       JE              G36,#3a [FALSE] L0005
       CALL_VN         R0090 (#68,Geb)
       RTRUE           
L0005: PRINT           "Don't put the poor bird in "
       CALL_2N         R0137 (G36)
       PRINT_RET       "!"
       RFALSE          
L0006: JE              Ge9,#11,#38 [FALSE] L0010
       JG              #01,Geb [TRUE] L0007
       JG              Geb,#0114 [FALSE] L0008
L0007: CALL_VN         R0470 (#02,Geb)
       JUMP            L0009
L0008: JIN             Geb,"wicker cage" [FALSE] L0009
       PRINT_PADDR     S181
       CALL_VN         R0090 (#67,Geb)
       RTRUE           
L0009: RFALSE          
L0010: JE              Ge9,#4e,#68 [FALSE] L0016
       JG              #01,Geb [TRUE] L0011
       JG              Geb,#0114 [FALSE] L0012
L0011: CALL_VN         R0470 (#02,Geb)
       JUMP            L0013
L0012: JIN             Geb,"wicker cage" [FALSE] L0013
       PRINT_PADDR     S182
       NEW_LINE        
       RTRUE           
L0013: JIN             "wicker cage",G16 [TRUE] L0014
       PRINT_PADDR     S183
       NEW_LINE        
       RTRUE           
L0014: JIN             "black rod with a rusty star on the end",G16 [FALSE]
L0015
       PRINT_PADDR     S184
       NEW_LINE        
       RTRUE           
L0015: CALL_VN         R0476 (Geb,#3a)
       CALL_VN         R0479 (#3a,#0e)
       PRINT_PADDR     S185
       NEW_LINE        
       RTRUE           
L0016: JE              Ge9,#67 [FALSE] L0027
       JG              #01,Geb [TRUE] L0017
       JG              Geb,#0114 [FALSE] L0018
L0017: CALL_VN         R0470 (#02,Geb)
       JUMP            L0019
L0018: JIN             Geb,"wicker cage" [TRUE] L0020
L0019: PRINT_RET       "The bird is not caged now."
L0020: CALL_VN         R0478 (#3a,#0e)
       CALL_VN         R0476 (Geb,G00)
       JG              #01,#005b [TRUE] L0021
       JG              #005b,#0114 [FALSE] L0022
L0021: CALL_VN         R0470 (#02,#005b)
       JUMP            L0023
L0022: JIN             "snake",G00 [FALSE] L0023
       CALL_2N         R0477 (#005b)
       PRINT_PADDR     S186
       NEW_LINE        
       RTRUE           
L0023: JG              #01,#00a3 [TRUE] L0024
       JG              #00a3,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#02,#00a3)
       JUMP            L0026
L0025: JIN             "dragon",G00 [FALSE] L0026
       CALL_2N         R0477 (Geb)
       PRINT_PADDR     S187
       NEW_LINE        
       RTRUE           
L0026: PRINT_RET       "The little bird flies free."
L0027: RFALSE          

Routine R0310, 0 locals

       JE              Ge9,#1a [FALSE] L0001
       PRINT_PADDR     S188
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#1003,#02,#01 [FALSE] L0002
       PRINT_RET       "Cheep! Chirp!"
L0002: JE              Ge9,#03 [FALSE] L0006
       JG              #01,Geb [TRUE] L0003
       JG              Geb,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#02,Geb)
       JUMP            L0005
L0004: JIN             Geb,"wicker cage" [FALSE] L0005
       PRINT_PADDR     S189
       NEW_LINE        
       RTRUE           
L0005: CALL_2N         R0477 (Geb)
       PRINT_PADDR     S190
       NEW_LINE        
       RTRUE           
L0006: RFALSE          

Routine R0311, 0 locals

       JG              #01,#004c [TRUE] L0001
       JG              #004c,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#004c)
       JUMP            L0003
L0002: JIN             "large gold nugget",G16 [FALSE] L0003
       STORE           G17,#01
       PRINT_PADDR     S193
       NEW_LINE        
       RTRUE           
L0003: RET             #0046

Routine R0312, 0 locals

       JE              Ge9,#14 [FALSE] L0001
       JE              G35,#0044 [FALSE] L0001
       PRINT_PADDR     S194
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0313, 0 locals

       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,Geb)
       JUMP            L0003
L0002: TEST_ATTR       Geb,#18 [TRUE] RFALSE
L0003: ADD             G11,#19 -> G11
       RFALSE          

Routine R0314, 0 locals

       JG              #01,#004c [TRUE] L0001
       JG              #004c,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#004c)
       JUMP            L0003
L0002: JIN             "large gold nugget",G16 [FALSE] L0003
       PRINT_RET       "The dome is unclimbable."
L0003: RET             #42

Routine R0315, 0 locals

       JE              Ge9,#15 [FALSE] L0004
       JG              #01,#004c [TRUE] L0001
       JG              #004c,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#004c)
       JUMP            L0003
L0002: JIN             "large gold nugget",G16 [FALSE] L0003
       PRINT_PADDR     S201
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S202
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#07 [FALSE] L0005
       CALL_2N         R0166 (#0f)
       RTRUE           
L0005: RFALSE          

Routine R0316, 0 locals

       JE              Ge9,#1e [FALSE] L0005
       JG              #01,#0051 [TRUE] L0001
       JG              #0051,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,#0051)
       JUMP            L0003
L0002: TEST_ATTR       "crystal bridge",#01 [TRUE] L0004
L0003: PRINT_PADDR     S207
       NEW_LINE        
       RTRUE           
L0004: STORE           G17,#01
       PRINT_RET       "You didn't make it."
L0005: RFALSE          

Routine R0317, 0 locals

       JE              Ge9,#1b [FALSE] L0001
       JE              G00,#4f [FALSE] L0001
       JE              G35,#07 [FALSE] L0001
       PRINT_PADDR     S213
L0001: RFALSE          

Routine R0318, 0 locals

       JE              G00,#4f [FALSE] L0001
       RET             #09
L0001: RET             #0a

Routine R0319, 0 locals

       JE              G00,#4f [FALSE] L0001
       RET             #4e
L0001: RET             #4f

Routine R0320, 0 locals

       JE              Ge9,#1b [FALSE] L0001
       JE              G35,#07 [FALSE] L0001
       PRINT_PADDR     S221
L0001: RFALSE          

Routine R0321, 0 locals

       JE              Ge9,#1b [FALSE] L0004
       JG              #01,#005b [TRUE] L0001
       JG              #005b,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#005b)
       JUMP            L0004
L0002: JIN             "snake",Geb [FALSE] L0004
       JE              G35,#07,#08,#0a [TRUE] L0003
       JE              G35,#0e [FALSE] L0004
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#23 [TRUE] L0004
L0003: PRINT_RET       "You can't get by the snake."
L0004: RFALSE          

Routine R0322, 0 locals

       JE              Ge9,#1003,#02,#01 [FALSE] L0001
       PRINT_RET       "Hiss!"
L0001: JE              Ge9,#52 [FALSE] L0003
       JE              G35,#0109 [FALSE] L0002
       CALL_VN         R0090 (#03,Geb)
       RTRUE           
L0002: CALL_VN         R0090 (#1a,G35,Geb)
       RTRUE           
L0003: JE              Ge9,#1a [FALSE] L0005
       JE              G35,#41 [FALSE] L0004
       CALL_2N         R0477 (#41)
       PRINT_PADDR     S233
       NEW_LINE        
       RTRUE           
L0004: PRINT_PADDR     S234
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#03 [FALSE] L0006
       PRINT_PADDR     S235
       NEW_LINE        
       RTRUE           
L0006: JE              Ge9,#4e [FALSE] L0007
       STORE           G17,#01
       PRINT_RET       "It takes you instead. Glrp!"
L0007: RFALSE          

Routine R0323, 0 locals

       JE              Ge9,#00 [FALSE] L0001
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#19 [TRUE] L0001
       PRINT           "
A hollow voice says, "Plugh."
"
L0001: RFALSE          

Routine R0324, 0 locals

       JE              Ge9,#64 [FALSE] L0001
       CALL_2N         R0165 (#25)
       RTRUE           
L0001: JE              Ge9,#69 [FALSE] L0007
       JG              #01,#00c9 [TRUE] L0002
       JG              #00c9,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,#00c9)
       RFALSE          
L0003: TEST_ATTR       "Plover Room",#18 [FALSE] RFALSE
       JG              #01,#00ca [TRUE] L0004
       JG              #00ca,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#02,#00ca)
       JUMP            L0006
L0005: JIN             "emerald the size of a plover's egg",G16 [FALSE] L0006
       CALL_VN         R0476 (#00ca,#00c9)
       SUB             G11,#05 -> G11
L0006: CALL_2N         R0165 (#00c9)
       RTRUE           
L0007: RFALSE          

Routine R0325, 0 locals

       JE              Ge9,#5b [FALSE] L0001
       PRINT_PADDR     S252
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0326, 0 locals

       JE              Ge9,#07,#14 [FALSE] L0001
       CALL_2N         R0166 (#10)
       RTRUE           
L0001: RFALSE          

Routine R0327, 0 locals

       JE              Ge9,#27,#33,#32 [FALSE] L0001
       PRINT_PADDR     S266
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0328, 0 locals

       JE              Ge9,#07 [FALSE] L0001
       CALL_2N         R0166 (#10)
       RTRUE           
L0001: RFALSE          

Routine R0329, 0 locals

       JE              Ge9,#07 [FALSE] L0001
       CALL_2N         R0166 (#10)
       RTRUE           
L0001: RFALSE          

Routine R0330, 1 local

       JE              Ge9,#1b [FALSE] L0007
       JE              G35,#08,#10 [FALSE] L0001
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#50 [TRUE] L0001
       STORE           L00,#01
L0001: JE              G35,#0f [FALSE] L0002
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#50 [TRUE] L0002
       STORE           L00,#01
L0002: JE              G35,#0f [FALSE] L0003
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#32 [TRUE] L0003
       STORE           L00,#0098
L0003: JE              G35,#07 [FALSE] L0004
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#3c [TRUE] L0004
       STORE           L00,#01
L0004: JE              G35,#07 [FALSE] L0005
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#4b [TRUE] L0005
       STORE           L00,#009a
L0005: JE              L00,#01 [FALSE] L0006
       PRINT_PADDR     S275
       NEW_LINE        
       RTRUE           
L0006: JZ              L00 [TRUE] RFALSE
       CALL_2N         R0165 (L00)
       RTRUE           
L0007: RFALSE          

Routine R0331, 0 locals

       JE              Ge9,#1b [FALSE] L0003
       JE              G35,#08 [FALSE] L0001
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#50 [FALSE] L0002
L0001: JE              G35,#0c [FALSE] L0003
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#32 [TRUE] L0003
L0002: PRINT_PADDR     S277
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0332, 0 locals

       JE              Ge9,#27,#33,#32 [TRUE] L0001
       JE              Ge9,#4e [FALSE] L0002
L0001: PRINT_RET       "Surely you're joking."
L0002: RFALSE          

Routine R0333, 0 locals

       JE              Ge9,#14 [FALSE] L0001
       JE              G35,#008c [FALSE] L0001
       PRINT_PADDR     S281
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0334, 0 locals

       CALL_VS         R0461 (#008e,#0056) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       PRINT_PADDR     S282
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S283
       NEW_LINE        
       RTRUE           

Routine R0335, 0 locals

       JE              Ge9,#15 [FALSE] L0001
       CALL_VN         R0101 (Geb,#24)
       RTRUE           
L0001: JE              Ge9,#07 [FALSE] L0002
       CALL_VS         R0461 (#008e,#0056) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0002
       CALL_VN         R0090 (#07,#008e)
       RTRUE           
L0002: RFALSE          

Routine R0336, 0 locals

       JE              Ge9,#07 [FALSE] L0001
       JE              G35,#008e [TRUE] RFALSE
       CALL_VS         R0461 (#008e,#0056) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S286
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0337, 0 locals

       CALL_VS         R0461 (Geb,#0056) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       PRINT_PADDR     S287
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S288
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S289
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0338, 0 locals

       JE              Ge9,#07 [FALSE] L0004
       CALL_VS         R0461 (Geb,#0056) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "It's just a little plant!"
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S290
       CALL_2N         R0165 (#8a)
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_PADDR     S291
       CALL_2N         R0165 (#00b1)
       RTRUE           
L0003: RFALSE          
L0004: JE              Ge9,#4e [FALSE] L0005
       PRINT_PADDR     S292
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#6a [FALSE] L0013
       JIN             "small bottle",G16 [TRUE] L0006
       PRINT_PADDR     S293
       NEW_LINE        
       RTRUE           
L0006: GET_CHILD       "small bottle" -> -(SP) [FALSE] L0007
L0007: PULL            Gef
       JE              Gef,#00 [FALSE] L0008
       PRINT_RET       "The bottle is empty."
L0008: JE              Gef,#2d [FALSE] L0009
       CALL_2N         R0477 (#2d)
       PRINT_PADDR     S294
       NEW_LINE        
       RTRUE           
L0009: CALL_2N         R0477 (#2c)
       CALL_VS         R0463 (Geb,#0056) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0010
       PRINT_PADDR     S295
       CALL_VN         R0479 (#8b,#01)
       JUMP            L0012
L0010: JE              Gef,#01 [FALSE] L0011
       PRINT_PADDR     S296
       JUMP            L0012
L0011: JE              Gef,#02 [FALSE] L0012
       PRINT_PADDR     S297
       CALL_VN         R0478 (#8b,#01)
       CALL_2N         R0477 (#8b)
       CALL_VN         R0460 (Geb,#0056,#00)
L0012: CALL_VN         R0090 (#15,Geb)
       RTRUE           
L0013: JE              Ge9,#6b [FALSE] L0014
       CALL_VN         R0090 (#6a,Geb)
       RTRUE           
L0014: JE              Ge9,#15 [FALSE] L0015
       CALL_VN         R0462 (Geb,#24)
       RTRUE           
L0015: RFALSE          

Routine R0339, 0 locals

       JE              Ge9,#27,#33,#32 [TRUE] L0001
       JE              Ge9,#4e [FALSE] L0002
L0001: PRINT_PADDR     S300
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0340, 0 locals

       JE              Ge9,#10 [FALSE] L0001
       PRINT_RET       "Absolutely not."
L0001: JE              Ge9,#4e [FALSE] L0003
       JIN             "small bottle",G16 [TRUE] L0002
       PRINT_PADDR     S303
       NEW_LINE        
       RTRUE           
L0002: CALL_VN         R0090 (#17,#2b)
       RTRUE           
L0003: JE              Ge9,#1c [FALSE] L0005
       JE              G36,#2b [FALSE] L0004
       CALL_VN         R0090 (#17,#2b)
       RTRUE           
L0004: PRINT_PADDR     S304
       NEW_LINE        
       RTRUE           
L0005: RFALSE          

Routine R0341, 0 locals

       JE              Ge9,#27,#33,#32 [TRUE] L0001
       JE              Ge9,#4e [FALSE] L0002
L0001: PRINT_RET       "Surely you're joking."
L0002: RFALSE          

Routine R0342, 0 locals

       JE              Ge9,#1b [FALSE] L0001
       JE              G35,#08 [FALSE] L0001
       STORE           G94,Geb
L0001: RFALSE          

Routine R0343, 0 locals

       JE              Ge9,#1b [FALSE] L0001
       JE              G35,#0a [FALSE] L0001
       STORE           G94,Geb
L0001: RFALSE          

Routine R0344, 0 locals

       RANDOM          #64 -> -(SP)
       JG              (SP)+,#28 [TRUE] L0001
       RET             #78
L0001: RANDOM          #64 -> -(SP)
       JG              (SP)+,#32 [TRUE] L0002
       RET             #7e
L0002: RET             #76

Routine R0345, 0 locals

       JE              Ge9,#1e,#07 [FALSE] L0001
       CALL_VN         R0090 (#1b,#10)
       RTRUE           
L0001: RFALSE          

Routine R0346, 0 locals

       JE              Ge9,#27,#33,#4e [FALSE] L0001
       PRINT_RET       "Do get a grip on yourself."
L0001: RFALSE          

Routine R0347, 0 locals

       JE              G94,#9c [FALSE] L0001
       RET             G94
L0001: JG              #01,#00a3 [TRUE] L0002
       JG              #00a3,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#02,#00a3)
       JUMP            L0004
L0003: JIN             "dragon",G00 [FALSE] L0004
       PRINT_PADDR     S321
       NEW_LINE        
       RTRUE           
L0004: RET             #9c

Routine R0348, 0 locals

       JE              G94,#97 [FALSE] L0001
       RET             G94
L0001: JG              #01,#00a3 [TRUE] L0002
       JG              #00a3,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#02,#00a3)
       JUMP            L0004
L0003: JIN             "dragon",G00 [FALSE] L0004
       PRINT_PADDR     S322
       NEW_LINE        
       RTRUE           
L0004: RET             #97

Routine R0349, 0 locals

       RET             G94

Routine R0350, 0 locals

       JE              G32,#2a [FALSE] L0001
       CALL_VS         R0461 (#00a3,#0057) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_2N         R0477 (#00a3)
       CALL_VN         R0476 (#00a5,G00)
       CALL_VN         R0460 (#00a3,#0057,#00)
       PRINT_PADDR     S323
       NEW_LINE        
       RTRUE           
L0001: JE              G32,#29 [FALSE] L0002
       CALL_VS         R0461 (#00a3,#0057) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0460 (#00a3,#0057,#00)
       PRINT_RET       "I should think not."
L0002: CALL_VN         R0460 (#00a3,#0057,#00)
       RFALSE          

Routine R0351, 0 locals

       JE              Ge9,#03 [FALSE] L0001
       CALL_VN         R0460 (Geb,#0057,#01)
       PRINT_RET       "With what? Your bare hands?"
L0001: JE              Ge9,#1a [FALSE] L0002
       PRINT_RET       "The dragon is implacable."
L0002: JE              Ge9,#52 [FALSE] L0004
       JE              G35,#0109 [TRUE] L0003
       PRINT_PADDR     S326
       NEW_LINE        
       RTRUE           
L0003: CALL_VN         R0476 (#0109,G00)
       PRINT_PADDR     S327
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0352, 0 locals

       JG              #01,#a3 [TRUE] L0001
       JG              #a3,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#a3)
       JUMP            L0003
L0002: JIN             "dragon",G00 [FALSE] L0003
       PRINT_PADDR     S328
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S329
       NEW_LINE        
       RTRUE           

Routine R0353, 0 locals

       JE              Ge9,#4e [FALSE] L0003
       JG              #01,#a3 [TRUE] L0001
       JG              #a3,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#a3)
       JUMP            L0003
L0002: JIN             "dragon",G00 [FALSE] L0003
       PRINT_PADDR     S330
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0354, 0 locals

       JE              Ge9,#03 [FALSE] L0001
       PRINT_PADDR     S332
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0355, 0 locals

       CALL_2N         R0106 (#010a)
       JG              #01,#00b0 [TRUE] L0001
       JG              #00b0,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#00b0)
       JUMP            L0006
L0002: JIN             "treasure chest",Geb [FALSE] L0006
       JG              #01,#00b0 [TRUE] L0003
       JG              #00b0,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,#00b0)
       JUMP            L0005
L0004: TEST_ATTR       "treasure chest",#0c [TRUE] L0006
L0005: PRINT_PADDR     S335
       NEW_LINE        
       RTRUE           
L0006: RFALSE          

Routine R0356, 0 locals

       JE              Ge9,#1e [FALSE] L0001
       STORE           G17,#01
       PRINT_RET       "You fall and break your neck!"
L0001: RFALSE          

Routine R0357, 0 locals

       JE              Ge9,#65 [FALSE] L0001
       PRINT_RET       "69,105."
L0001: RFALSE          

Routine R0358, 0 locals

       JG              #01,#00b9 [TRUE] L0001
       JG              #00b9,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,#00b9)
       JUMP            L0003
L0002: TEST_ATTR       "rusty door",#0b [FALSE] L0003
       CALL_VN         R0090 (#2e,#00b9)
       RTRUE           
L0003: JG              #01,#00b9 [TRUE] L0004
       JG              #00b9,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,#00b9)
       JUMP            L0006
L0005: TEST_ATTR       "rusty door",#0e [TRUE] L0007
L0006: CALL_VN         R0478 (#00b9,#0e)
       PRINT           "(first wrenching the door open)
"
L0007: RET             #00b9

Routine R0359, 0 locals

       JE              Ge9,#2e [FALSE] L0004
       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,Geb)
       JUMP            L0003
L0002: TEST_ATTR       Geb,#0b [FALSE] L0003
       PRINT_PADDR     S351
       NEW_LINE        
       RTRUE           
L0003: RFALSE          
L0004: JE              Ge9,#08 [FALSE] L0008
       JG              #01,Geb [TRUE] L0005
       JG              Geb,#0114 [FALSE] L0006
L0005: CALL_VN         R0470 (#03,Geb)
       JUMP            L0007
L0006: TEST_ATTR       Geb,#0e [FALSE] L0007
       PRINT_PADDR     S352
       NEW_LINE        
       RTRUE           
L0007: PRINT_PADDR     S353
       NEW_LINE        
       RTRUE           
L0008: JE              Ge9,#6b [FALSE] L0010
       JIN             "small bottle",G16 [FALSE] L0009
       JIN             "bottled oil","small bottle" [FALSE] L0009
       CALL_2N         R0477 (#2d)
       CALL_VN         R0479 (Geb,#0b)
       CALL_VN         R0478 (Geb,#0f)
       PRINT_PADDR     S354
       NEW_LINE        
       RTRUE           
L0009: PRINT_RET       "You have nothing to oil it with."
       RFALSE          
L0010: JE              Ge9,#6a [FALSE] L0012
       JIN             "small bottle",G16 [FALSE] L0011
       JIN             "bottled water","small bottle" [FALSE] L0011
       CALL_2N         R0477 (#2c)
       CALL_VN         R0478 (Geb,#0b)
       CALL_VN         R0479 (Geb,#0e)
       PRINT_PADDR     S355
       NEW_LINE        
       RTRUE           
L0011: PRINT_PADDR     S356
       NEW_LINE        
       RTRUE           
L0012: RFALSE          

Routine R0360, 0 locals

       JE              Ge9,#2e [FALSE] L0001
       PRINT_PADDR     S357
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0361, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       PRINT_PADDR     S365
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#27,#40 [FALSE] L0002
       PRINT_PADDR     S366
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0362, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       PRINT_PADDR     S368
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0363, 0 locals

       JE              Ge9,#11 [FALSE] L0002
       JIN             "velvet pillow",G00 [FALSE] L0001
       PRINT_PADDR     S374
       RFALSE          
L0001: CALL_2N         R0477 (#c4)
       CALL_VN         R0476 (#00c5,G00)
       PRINT_PADDR     S375
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0364, 0 locals

       JE              Ge9,#03 [FALSE] L0001
       CALL_2N         R0477 (#c4)
       CALL_VN         R0476 (#00c5,G00)
       PRINT_PADDR     S376
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#1001 [FALSE] L0002
       PRINT_PADDR     S377
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0365, 1 local

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#09,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0005
L0004: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0004
L0005: PULL            Gee
       STORE           L00,Gef
       JZ              L00 [TRUE] L0008
       JE              L00,#01 [FALSE] L0009
       JG              #01,#00ca [TRUE] L0006
       JG              #00ca,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#02,#00ca)
       JUMP            L0009
L0007: JIN             "emerald the size of a plover's egg",G16 [FALSE] L0009
L0008: RET             #00c9
L0009: PRINT_PADDR     S383
       NEW_LINE        
       RTRUE           

Routine R0366, 1 local

       JG              #05,G16 [TRUE] L0001
       JG              G16,#0114 [TRUE] L0001
       JIN             G16,"Class" [FALSE] L0002
L0001: CALL_VN         R0470 (#09,G16)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G16
L0003: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0005
L0004: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0004
L0005: PULL            Gee
       STORE           L00,Gef
       JZ              L00 [TRUE] L0008
       JE              L00,#01 [FALSE] L0009
       JG              #01,#00ca [TRUE] L0006
       JG              #00ca,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#02,#00ca)
       JUMP            L0009
L0007: JIN             "emerald the size of a plover's egg",G16 [FALSE] L0009
L0008: RET             #c8
L0009: PRINT_PADDR     S385
       NEW_LINE        
       RTRUE           

Routine R0367, 0 locals

       JE              Ge9,#69 [FALSE] L0004
       JG              #01,#00ca [TRUE] L0001
       JG              #00ca,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#00ca)
       JUMP            L0003
L0002: JIN             "emerald the size of a plover's egg",G16 [FALSE] L0003
       CALL_VN         R0476 (#00ca,#c9)
       SUB             G11,#05 -> G11
L0003: CALL_2N         R0165 (#62)
       RTRUE           
L0004: JE              Ge9,#1b [FALSE] L0005
       JE              G35,#12 [FALSE] L0005
       CALL_VN         R0090 (#1b,#0a)
       RTRUE           
L0005: RFALSE          

Routine R0368, 0 locals

       JG              #01,#00d0 [TRUE] L0001
       JG              #00d0,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#00d0)
       JUMP            L0006
L0002: JIN             "giant clam",G16 [FALSE] L0006
       JG              #01,#00d0 [TRUE] L0003
       JG              #00d0,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,#00d0)
       JUMP            L0005
L0004: TEST_ATTR       "giant clam",#0e [FALSE] L0005
       PRINT_PADDR     S395
       NEW_LINE        
       RTRUE           
L0005: PRINT_PADDR     S396
       NEW_LINE        
       RTRUE           
L0006: RET             #86

Routine R0369, 0 locals

       CALL_VS         R0461 (Geb,#0058) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     S397
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S398
       NEW_LINE        
       RTRUE           

Routine R0370, 0 locals

       JE              Ge9,#15 [FALSE] L0002
       JE              G00,#010d,#0111 [FALSE] L0001
       PRINT_PADDR     S399
       NEW_LINE        
       RTRUE           
L0001: PRINT_RET       "A giant bivalve of some kind."
L0002: JE              Ge9,#2e [FALSE] L0003
       PRINT_PADDR     S400
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#54 [FALSE] L0006
       JE              G36,#bc [TRUE] L0004
       CALL_2N         R0138 (G36)
       PRINT_PADDR     S401
       NEW_LINE        
       RTRUE           
L0004: CALL_VS         R0461 (Geb,#0058) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT_PADDR     S402
       NEW_LINE        
       RTRUE           
L0005: CALL_VN         R0460 (Geb,#0058,#01)
       CALL_VN         R0476 (#00d1,#00d3)
       PRINT_PADDR     S403
       NEW_LINE        
       RTRUE           
L0006: JE              Ge9,#03 [FALSE] L0007
       PRINT_PADDR     S404
       NEW_LINE        
       RTRUE           
L0007: RFALSE          

Routine R0371, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       PRINT_PADDR     S411
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0372, 0 locals

       JE              Ge9,#4e [FALSE] L0002
       JE              G00,#00d7 [FALSE] L0001
       DEC             G11
L0001: RFALSE          
L0002: JE              Ge9,#11 [FALSE] L0003
       JE              G00,#00d7 [FALSE] L0003
       INC             G11
       PRINT_RET       "You really are at wit's end."
L0003: RFALSE          

Routine R0373, 0 locals

       JE              Ge9,#1b [FALSE] L0002
       JE              G35,#0a [TRUE] L0001
       RANDOM          #64 -> -(SP)
       JG              (SP)+,#5f [TRUE] L0001
       PRINT_PADDR     S417
       NEW_LINE        
       RTRUE           
L0001: CALL_2N         R0165 (#d4)
       RTRUE           
L0002: RFALSE          

Routine R0374, 0 locals

       JE              Ge9,#03,#38 [FALSE] L0001
       PRINT_RET       "You can't reach it from here."
L0001: RFALSE          

Routine R0375, 0 locals

       JE              Ge9,#1e [FALSE] L0001
       STORE           G17,#01
       PRINT_RET       "You jump and break your neck!"
L0001: JE              Ge9,#5b [FALSE] L0002
       PRINT_PADDR     S423
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0376, 0 locals

       JE              Ge9,#4a [FALSE] L0001
       PRINT_PADDR     S425
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0377, 0 locals

       JE              Ge9,#1e [FALSE] L0004
       JG              #01,#00de [TRUE] L0001
       JG              #00de,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#00de)
       JUMP            L0003
L0002: JIN             "rickety bridge",Geb [FALSE] L0003
       PRINT_PADDR     S430
       NEW_LINE        
       RTRUE           
L0003: STORE           G17,#01
       PRINT_RET       "You didn't make it."
L0004: RFALSE          

Routine R0378, 0 locals

       CALL_VS         R0461 (#00df,#0059) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       JG              #01,#00df [TRUE] L0001
       JG              #00df,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#00df)
       JUMP            L0005
L0002: JIN             "burly troll",#00 [FALSE] L0005
L0003: CALL_VN         R0460 (#00df,#0059,#00)
       CALL_VS         R0461 (#00f5,#005a) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_2N         R0477 (#00f5)
       CALL_2N         R0477 (Geb)
       CALL_VN         R0479 (#00e0,#01)
       CALL_2N         R0477 (#00de)
       CALL_VN         R0478 (#00de,#01)
       CALL_2N         R0106 (#00f5)
       STORE           G17,#01
       PRINT_PADDR     S431
       NEW_LINE        
       RTRUE           
L0004: RET             #00de
L0005: JG              #01,#00df [TRUE] L0006
       JG              #00df,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#02,#00df)
       JUMP            L0008
L0007: JIN             "burly troll",G00 [FALSE] L0008
       PRINT_PADDR     S432
       NEW_LINE        
       RTRUE           
L0008: CALL_VN         R0476 (#00df,G00)
       PRINT_PADDR     S433
       NEW_LINE        
       RTRUE           

Routine R0379, 0 locals

       PRINT_PADDR     S435
       JG              #01,#00df [TRUE] L0001
       JG              #00df,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#00df)
       JUMP            L0003
L0002: JIN             "burly troll",G00 [TRUE] L0004
L0003: PRINT_RET       "The troll is nowhere to be seen."
L0004: RTRUE           

Routine R0380, 0 locals

       JE              G00,#dd [FALSE] L0001
       RET             #0b
L0001: RET             #0e

Routine R0381, 0 locals

       JE              G00,#dd [FALSE] L0001
       RET             #00e1
L0001: RET             #dd

Routine R0382, 0 locals

       JE              Ge9,#03 [FALSE] L0001
       PRINT_PADDR     S438
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#52,#1a [FALSE] L0004
       CALL_VS         R0468 (G35,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_2N         R0477 (G35)
       CALL_VN         R0476 (Geb,#de)
       CALL_VN         R0460 (Geb,#0059,#01)
       SUB             G11,#05 -> G11
       PRINT_PADDR     S439
       NEW_LINE        
       RTRUE           
L0002: JE              G35,#29 [FALSE] L0003
       PRINT_PADDR     S440
       NEW_LINE        
       RTRUE           
L0003: PRINT           "The troll deftly catches "
       CALL_2N         R0137 (G35)
       PRINT_PADDR     S441
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#1003 [FALSE] L0005
       PRINT_RET       "You'll be lucky."
L0005: JE              Ge9,#01,#02 [FALSE] L0006
       PRINT_RET       "Trolls make poor conversation."
L0006: RFALSE          

Routine R0383, 0 locals

       PRINT_RET       "The wreckage is too far below."

Routine R0384, 0 locals

       JE              Ge9,#1e [FALSE] L0002
       JIN             "rickety bridge",Geb [FALSE] L0001
       PRINT_PADDR     S444
       NEW_LINE        
       RTRUE           
L0001: STORE           G17,#01
       PRINT_RET       "You didn't make it."
L0002: RFALSE          

Routine R0385, 0 locals

       JE              Ge9,#1e [FALSE] L0001
       CALL_VN         R0090 (#1b,#10)
       RTRUE           
L0001: RFALSE          

Routine R0386, 0 locals

       JE              Ge9,#27,#33,#32 [FALSE] L0001
       PRINT_RET       "You'd have to blast them aside."
L0001: RFALSE          

Routine R0387, 0 locals

       JE              Ge9,#46,#15 [FALSE] L0001
       PRINT_RET       "They smell wonderfully exotic!"
L0001: RFALSE          

Routine R0388, 0 locals

       CALL_VS         R0461 (Geb,#005a) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_PADDR     S465
       NEW_LINE        
       RTRUE           
L0001: CALL_VS         R0461 (Geb,#005b) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PRINT_PADDR     S466
       NEW_LINE        
       RTRUE           
L0002: JE              G00,#f3 [FALSE] L0003
       PRINT_PADDR     S467
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S468
       NEW_LINE        
       RTRUE           

Routine R0389, 0 locals

       JE              Ge9,#03 [FALSE] L0005
       JG              #01,#0109 [TRUE] L0001
       JG              #0109,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,#0109)
       JUMP            L0003
L0002: JIN             "dwarvish axe",G16 [FALSE] L0003
       CALL_VN         R0090 (#52,#0109,Geb)
       RTRUE           
L0003: CALL_VS         R0461 (Geb,#005b) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       PRINT_PADDR     S469
       NEW_LINE        
       RTRUE           
L0004: PRINT_PADDR     S470
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#52 [FALSE] L0008
       JE              G35,#0109 [TRUE] L0006
       CALL_VN         R0090 (#1a,G35,Geb)
       RTRUE           
L0006: CALL_VS         R0461 (Geb,#005b) -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT_PADDR     S471
       NEW_LINE        
       RTRUE           
L0007: CALL_VN         R0476 (#0109,G00)
       CALL_VN         R0460 (#0109,#005e,#01)
       PRINT_PADDR     S472
       NEW_LINE        
       RTRUE           
L0008: JE              Ge9,#1a [FALSE] L0011
       JE              G35,#29 [FALSE] L0009
       CALL_VN         R0460 (#0109,#005e,#00)
       CALL_2N         R0477 (#29)
       CALL_VN         R0460 (Geb,#005b,#01)
       PRINT_PADDR     S473
       NEW_LINE        
       RTRUE           
L0009: CALL_VS         R0461 (Geb,#005b) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       PRINT_PADDR     S474
       NEW_LINE        
       RTRUE           
L0010: PRINT_PADDR     S475
       NEW_LINE        
       RTRUE           
L0011: JE              Ge9,#1003,#02,#01 [FALSE] L0012
       PRINT_PADDR     S476
       NEW_LINE        
       RTRUE           
L0012: RFALSE          

Routine R0390, 0 locals

       JE              Ge9,#15 [FALSE] L0002
       PRINT           "The bear is extremely large, "
       CALL_VS         R0461 (Geb,#005b) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT_RET       "but appears to be friendly."
L0001: PRINT_RET       "and seems quite ferocious!"
L0002: JE              Ge9,#4e,#68 [FALSE] L0007
       CALL_VS         R0461 (Geb,#005b) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_RET       "Surely you're joking!"
L0003: JG              #01,#00f6 [TRUE] L0004
       JG              #00f6,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,#00f6)
       JUMP            L0006
L0005: TEST_ATTR       "golden chain",#0b [FALSE] L0006
       PRINT_PADDR     S477
       NEW_LINE        
       RTRUE           
L0006: CALL_VN         R0460 (Geb,#005a,#01)
       CALL_2N         R0105 (Geb)
       PRINT_PADDR     S478
       NEW_LINE        
       RTRUE           
L0007: JE              Ge9,#11,#67 [FALSE] L0010
       CALL_VS         R0461 (Geb,#005a) -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       PRINT_RET       "What?"
L0008: CALL_VN         R0460 (Geb,#005a,#00)
       CALL_2N         R0106 (Geb)
       JIN             "burly troll",G00 [FALSE] L0009
       CALL_2N         R0477 (#df)
       PRINT_PADDR     S479
       NEW_LINE        
       RTRUE           
L0009: PRINT_RET       "The bear wanders away from you."
L0010: RFALSE          

Routine R0391, 0 locals

       JE              G00,#13 [TRUE] RFALSE
       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,Geb)
       JUMP            L0004
L0002: JIN             Geb,G00 [FALSE] L0004
       JE              G00,#e5 [FALSE] L0003
       PRINT_RET       "
The bear roars with delight."
L0003: RFALSE          
L0004: CALL_VN         R0476 (Geb,G00)
       PRINT_PADDR     S480
       NEW_LINE        
       RTRUE           

Routine R0392, 0 locals

       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,Geb)
       JUMP            L0003
L0002: TEST_ATTR       Geb,#0b [FALSE] L0003
       PRINT_PADDR     S482
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S483
       NEW_LINE        
       RTRUE           

Routine R0393, 0 locals

       JE              Ge9,#4e [FALSE] L0005
       JG              #01,Geb [TRUE] L0001
       JG              Geb,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,Geb)
       JUMP            L0004
L0002: TEST_ATTR       Geb,#0b [FALSE] L0004
       CALL_VS         R0461 (#f5,#5b) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PRINT_PADDR     S484
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S485
       NEW_LINE        
       RTRUE           
L0004: RFALSE          
L0005: JE              Ge9,#54 [FALSE] L0007
       CALL_VS         R0461 (#f5,#5b) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       PRINT_PADDR     S486
       NEW_LINE        
       RTRUE           
L0006: RFALSE          
L0007: JE              Ge9,#26 [FALSE] L0011
       JG              #01,Geb [TRUE] L0008
       JG              Geb,#0114 [FALSE] L0009
L0008: CALL_VN         R0470 (#03,Geb)
       JUMP            L0010
L0009: TEST_ATTR       Geb,#0b [TRUE] L0011
L0010: PRINT_RET       "The mechanism won't lock again."
L0011: RFALSE          

Routine R0394, 0 locals

       JE              Ge9,#54 [FALSE] L0001
       PRINT_PADDR     S487
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0395, 0 locals

       JE              Ge9,#1001 [FALSE] L0002
       JE              G35,#61 [FALSE] L0001
       CALL_VN         R0476 (#0106,G00)
       CALL_2N         R0477 (#61)
       PRINT_PADDR     S504
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S505
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#03 [FALSE] L0003
       PRINT_PADDR     S506
       NEW_LINE        
       RTRUE           
L0003: JE              Ge9,#27 [FALSE] L0004
       PRINT_PADDR     S507
       NEW_LINE        
       RTRUE           
L0004: JE              Ge9,#40 [FALSE] L0005
       PRINT_PADDR     S508
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#4e [FALSE] L0006
       PRINT_PADDR     S509
       NEW_LINE        
       RTRUE           
L0006: RFALSE          

Routine R0396, 0 locals

       JE              Ge9,#65 [FALSE] L0001
       PRINT_RET       "A pair."
L0001: RFALSE          

Routine R0397, 0 locals

       JE              Ge9,#65 [FALSE] L0001
       PRINT_RET       "A pair."
L0001: RFALSE          

Routine R0398, 0 locals

       JE              G00,#13 [FALSE] L0001
       RTRUE           
L0001: CALL_VS         R0481 (Geb,#29) -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0002
       CALL_2N         R0106 (Geb)
       RTRUE           
L0002: JG              #05,Geb [TRUE] L0003
       JG              Geb,#0114 [TRUE] L0003
       JIN             Geb,"Class" [FALSE] L0004
L0003: CALL_VN         R0470 (#04,Geb)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,Geb
L0005: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       JG              #01,G00 [TRUE] L0006
       JG              G00,#0114 [FALSE] L0007
L0006: CALL_VN         R0470 (#03,G00)
       JUMP            L0008
L0007: TEST_ATTR       G00,#1f [TRUE] L0011
L0008: JG              #01,G00 [TRUE] L0009
       JG              G00,#0114 [FALSE] L0010
L0009: CALL_VN         R0470 (#03,G00)
       JUMP            L0012
L0010: TEST_ATTR       G00,#09 [FALSE] L0012
L0011: RTRUE           
L0012: CALL_VS         R0481 (Geb,#29) -> Gef
       PUSH            Gef
       RANDOM          #64 -> -(SP)
       JG              (SP)+,(SP)+ [TRUE] L0016
       JIN             "large cave bear",G00 [TRUE] L0013
       JIN             "burly troll",G00 [FALSE] L0014
L0013: RTRUE           
L0014: NEW_LINE        
       JIN             "dragon",G00 [FALSE] L0015
       STORE           Gef,Geb
       STORE           Gee,#29
       GET_PROP        Gef,Gee -> Ged
       DEC             Ged
       CALL_VN         R0480 (Gef,Gee,Ged)
       PRINT_PADDR     S516
       NEW_LINE        
       RTRUE           
L0015: CALL_VN         R0476 (Geb,G00)
       PRINT_PADDR     S517
       NEW_LINE        
       RTRUE           
L0016: RTRUE           
L0017: JG              #05,Geb [TRUE] L0018
       JG              Geb,#0114 [TRUE] L0018
       JIN             Geb,"Class" [FALSE] L0019
L0018: CALL_VN         R0470 (#04,Geb)
       STORE           Gee,#02
       JUMP            L0020
L0019: STORE           Gee,Geb
L0020: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G00 [TRUE] L0033
       JE              G00,#13 [FALSE] L0021
       RTRUE           
L0021: JG              #01,G00 [TRUE] L0022
       JG              G00,#0114 [FALSE] L0023
L0022: CALL_VN         R0470 (#03,G00)
       JUMP            L0024
L0023: TEST_ATTR       G00,#1f [TRUE] L0027
L0024: JG              #01,G00 [TRUE] L0025
       JG              G00,#0114 [FALSE] L0026
L0025: CALL_VN         R0470 (#03,G00)
       JUMP            L0028
L0026: TEST_ATTR       G00,#09 [FALSE] L0028
L0027: RTRUE           
L0028: RANDOM          #64 -> -(SP)
       JG              (SP)+,#60 [TRUE] L0032
       JG              #05,Geb [TRUE] L0029
       JG              Geb,#0114 [TRUE] L0029
       JIN             Geb,"Class" [FALSE] L0030
L0029: CALL_VN         R0470 (#04,Geb)
       STORE           Gee,#02
       JUMP            L0031
L0030: STORE           Gee,Geb
L0031: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#d8 [TRUE] L0032
       CALL_VN         R0476 (Geb,G00)
       PRINT           "
The dwarf stalks after you...
"
       JUMP            L0033
L0032: CALL_2N         R0477 (Geb)
       RTRUE           
L0033: RANDOM          #64 -> -(SP)
       JG              (SP)+,#4b [TRUE] L0037
       NEW_LINE        
       CALL_VS         R0461 (Geb,#005d) -> -(SP)
       JZ              (SP)+ [FALSE] L0034
       CALL_VN         R0476 (#0109,G00)
       CALL_VN         R0460 (Geb,#005d,#01)
       CALL_2N         R0477 (Geb)
       PRINT_PADDR     S518
       NEW_LINE        
       RTRUE           
L0034: JE              G00,#d8 [FALSE] L0035
       PRINT_PADDR     S519
       NEW_LINE        
       RTRUE           
L0035: PRINT_PADDR     S520
       RANDOM          #03e8 -> -(SP)
       JG              (SP)+,#5f [TRUE] L0036
       STORE           G17,#01
       PRINT_RET       "and hits!"
L0036: PRINT_RET       "but misses!"
L0037: RANDOM          #03 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0038
       CALL_2N         R0477 (Geb)
       PRINT_PADDR     S521
       NEW_LINE        
       RTRUE           
L0038: RFALSE          

Routine R0399, 0 locals

       JE              Ge9,#6c [FALSE] L0001
       PRINT_PADDR     S522
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0400, 0 locals

       JE              Ge9,#52 [FALSE] L0003
       JE              G35,#0109 [FALSE] L0002
       RANDOM          #03 -> -(SP)
       JE              (SP)+,#01 [TRUE] L0001
       CALL_2N         R0477 (Geb)
       CALL_VN         R0476 (#0109,G00)
       STORE           Gef,Geb
       STORE           Gee,#29
       GET_PROP        Gef,Gee -> Ged
       DEC             Ged
       CALL_VN         R0480 (Gef,Gee,Ged)
       PRINT_PADDR     S523
       NEW_LINE        
       RTRUE           
L0001: CALL_VN         R0476 (#0109,G00)
       PRINT_PADDR     S524
       NEW_LINE        
       RTRUE           
L0002: CALL_VN         R0090 (#1a,G35,G36)
       RTRUE           
L0003: JE              Ge9,#1a [FALSE] L0005
       JE              G35,#29 [FALSE] L0004
       PRINT_PADDR     S525
       NEW_LINE        
       RTRUE           
L0004: PRINT_PADDR     S526
       NEW_LINE        
       RTRUE           
L0005: JE              Ge9,#03 [FALSE] L0006
       PRINT_PADDR     S527
       NEW_LINE        
       RTRUE           
L0006: RFALSE          

Routine R0401, 0 locals

       CALL_VS         R0461 (Geb,#005e) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JE              Ge9,#15 [FALSE] L0001
       PRINT_RET       "It's lying beside the bear."
L0001: JE              Ge9,#4e [FALSE] L0002
       PRINT_PADDR     S530
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0402, 2 locals

       RANDOM          #64 -> -(SP)
       JG              (SP)+,#02 [TRUE] L0006
       JE              G00,#13,#a2 [TRUE] L0006
       JG              #01,G00 [TRUE] L0001
       JG              G00,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,G00)
       JUMP            L0003
L0002: TEST_ATTR       G00,#09 [TRUE] L0006
L0003: JG              #01,G00 [TRUE] L0004
       JG              G00,#0114 [FALSE] L0005
L0004: CALL_VN         R0470 (#03,G00)
       JUMP            L0007
L0005: TEST_ATTR       G00,#1f [FALSE] L0007
L0006: RTRUE           
L0007: JIN             "threatening little dwarf",G00 [FALSE] L0008
       PRINT_PADDR     S531
       NEW_LINE        
       RTRUE           
L0008: STORE           L00,#01
L0009: CALL_VS         R0468 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JG              #01,L00 [TRUE] L0010
       JG              L00,#0114 [FALSE] L0011
L0010: CALL_VN         R0470 (#02,L00)
       JUMP            L0012
L0011: JIN             L00,G16 [TRUE] L0015
L0012: JG              #01,L00 [TRUE] L0013
       JG              L00,#0114 [FALSE] L0014
L0013: CALL_VN         R0470 (#02,L00)
       JUMP            L0016
L0014: JIN             L00,G00 [FALSE] L0016
L0015: STORE           L01,#01
L0016: INC             L00
       JG              L00,#0114 [TRUE] L0017
       JUMP            L0009
L0017: JZ              L01 [FALSE] L0020
       CALL_VS         R0461 (Geb,#0060) -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       RTRUE           
L0018: CALL_VN         R0460 (Geb,#0060,#01)
       CALL_VS         R0461 (Geb,#005f) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       CALL_2N         R0106 (Geb)
L0019: PRINT_PADDR     S532
       NEW_LINE        
       RTRUE           
L0020: CALL_VS         R0461 (Geb,#005f) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       RTRUE           
L0021: CALL_VN         R0460 (Geb,#005f,#01)
       CALL_VS         R0461 (Geb,#0060) -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       CALL_2N         R0106 (Geb)
L0022: STORE           L00,#01
L0023: CALL_VS         R0468 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0033
       JG              #01,L00 [TRUE] L0024
       JG              L00,#0114 [FALSE] L0025
L0024: CALL_VN         R0470 (#02,L00)
       JUMP            L0026
L0025: JIN             L00,G16 [TRUE] L0029
L0026: JG              #01,L00 [TRUE] L0027
       JG              L00,#0114 [FALSE] L0028
L0027: CALL_VN         R0470 (#02,L00)
       JUMP            L0033
L0028: JIN             L00,G00 [FALSE] L0033
L0029: JG              #01,L00 [TRUE] L0030
       JG              L00,#0114 [FALSE] L0031
L0030: CALL_VN         R0470 (#02,L00)
       JUMP            L0032
L0031: JIN             L00,G16 [FALSE] L0032
       SUB             G11,#05 -> G11
L0032: CALL_VN         R0476 (L00,#af)
L0033: INC             L00
       JG              L00,#0114 [TRUE] L0034
       JUMP            L0023
L0034: PRINT_PADDR     S533
       NEW_LINE        
       RTRUE           

Routine R0403, 0 locals

       JL              G95,#0f [FALSE] L0001
       RTRUE           
L0001: CALL_2N         R0106 (Geb)
       STORE           G93,#01
       ADD             G11,#19 -> G11
       CALL_2N         R0477 (#51)
       CALL_VN         R0478 (#36,#0b)
       CALL_VN         R0479 (#36,#0e)
       CALL_2N         R0477 (#28)
       CALL_2N         R0106 (#0108)
       CALL_2N         R0106 (#010a)
       CALL_2N         R0477 (#df)
       CALL_2N         R0477 (#f5)
       CALL_2N         R0477 (#a3)
       CALL_VN         R0103 (#010c,#19)
       PRINT_PADDR     S534
       NEW_LINE        
       RTRUE           

Routine R0404, 0 locals

       ADD             G11,#0a -> G11
L0001: JG              #05,G16 [TRUE] L0002
       JG              G16,#0114 [TRUE] L0002
       JIN             G16,"Class" [FALSE] L0003
L0002: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G16
L0004: GET_CHILD       Gee -> -(SP) [FALSE] L0005
L0005: JZ              (SP)+ [TRUE] L0010
       JG              #05,G16 [TRUE] L0006
       JG              G16,#0114 [TRUE] L0006
       JIN             G16,"Class" [FALSE] L0007
L0006: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,G16
L0008: GET_CHILD       Gee -> -(SP) [FALSE] L0009
L0009: CALL_2N         R0477 ((SP)+)
       JUMP            L0001
L0010: CALL_VN         R0476 (#2b,#010d)
       GET_CHILD       "small bottle" -> -(SP) [FALSE] L0011
L0011: JZ              (SP)+ [TRUE] L0013
       GET_CHILD       "small bottle" -> -(SP) [FALSE] L0012
L0012: CALL_2N         R0477 ((SP)+)
L0013: CALL_VN         R0476 (#d0,#010d)
       CALL_VN         R0476 (#2a,#010d)
       CALL_VN         R0476 (#3e,#010d)
       CALL_VN         R0476 (#41,#0111)
       CALL_VN         R0476 (#c1,#0111)
       PRINT_PADDR     S535
       CALL_2N         R0165 (#010d)
       RFALSE          

Routine R0405, 0 locals

       JE              Ge9,#03 [FALSE] L0001
       PRINT_PADDR     S539
       CALL_VN         R0462 (#0110,#0061)
       RTRUE           
L0001: RFALSE          

Routine R0406, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       PRINT_PADDR     S541
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0407, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       PRINT_RET       "What, all of them?"
L0001: RFALSE          

Routine R0408, 0 locals

       JE              Ge9,#59 [FALSE] L0001
       PRINT_PADDR     S544
       CALL_VN         R0462 (Geb,#0061)
       RTRUE           
L0001: JE              Ge9,#03 [FALSE] L0002
       CALL_VN         R0462 (Geb,#0061)
       RTRUE           
L0002: RFALSE          

Routine R0409, 0 locals

       STORE           G17,#01
       PRINT_PADDR     S545
       NEW_LINE        
       RTRUE           

Routine R0410, 0 locals

       JE              Ge9,#4e [FALSE] L0001
       PRINT_PADDR     S551
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0411, 0 locals

       JE              Ge9,#5a [FALSE] L0001
       PRINT_RET       "Nothing happens."
L0001: RFALSE          

Routine R0412, 0 locals

       STORE           G00,#1d
       STORE           G11,#24
       CALL_2N         R0105 (#0108)
       CALL_2N         R0105 (#010a)
       CALL_2N         R0105 (#010b)
       PRINT_PADDR     S554
       NEW_LINE        
       RTRUE           

Routine R0413, 0 locals

       PRINT           ", earning you the rank of "
       JL              G11,#015c [TRUE] L0001
       PRINT_RET       "Grandmaster Adventurer!"
L0001: JL              G11,#014a [TRUE] L0002
       PRINT_RET       "Master, first class."
L0002: JL              G11,#012c [TRUE] L0003
       PRINT_RET       "Master, second class."
L0003: JL              G11,#c8 [TRUE] L0004
       PRINT_RET       "Junior Master."
L0004: JL              G11,#82 [TRUE] L0005
       PRINT_RET       "Seasoned Adventurer."
L0005: JL              G11,#64 [TRUE] L0006
       PRINT_RET       "Experienced Adventurer."
L0006: JL              G11,#23 [TRUE] L0007
       PRINT_RET       "Adventurer."
L0007: JL              G11,#0a [TRUE] L0008
       PRINT_RET       "Novice."
L0008: PRINT_RET       "Amateur."

Routine R0414, 0 locals

       JZ              G97 [FALSE] L0001
       STORE           G97,#01
       PRINT_PADDR     S555
       NEW_LINE        
       RTRUE           
L0001: RANDOM          #04 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       STORE           G17,#01
       PRINT_PADDR     S556
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0415, 2 locals

       STORE           L01,#01
L0001: CALL_VS         R0468 (L01,#1a) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       JG              #01,L01 [TRUE] L0002
       JG              L01,#0114 [FALSE] L0003
L0002: CALL_VN         R0470 (#03,L01)
       JUMP            L0004
L0003: TEST_ATTR       L01,#18 [FALSE] L0004
       CALL_VS         R0062 (L00,L01,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       STORE           G83,#00
       RET             "go"
L0004: INC             L01
       JG              L01,#0114 [TRUE] L0005
       JUMP            L0001
L0005: RFALSE          

Routine R0416, 1 local

       JE              G17,#03 [FALSE] L0001
       STORE           G17,#01
       RFALSE          
L0001: PRINT           "

"
       JZ              G93 [TRUE] L0002
       PRINT_PADDR     S557
       NEW_LINE        
       RTRUE           
L0002: STORE           Gef,G96
       JE              Gef,#00 [FALSE] L0003
       PRINT_PADDR     S558
       JUMP            L0005
L0003: JE              Gef,#01 [FALSE] L0004
       PRINT_PADDR     S559
       JUMP            L0005
L0004: JE              Gef,#02 [FALSE] L0005
       PRINT_PADDR     S560
L0005: PRINT           "> "
       CALL_1S         R0167 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       STORE           Gef,G96
       JE              Gef,#00 [FALSE] L0006
       PRINT_RET       "Very well."
L0006: JE              Gef,#01 [FALSE] L0007
       PRINT_RET       "Probably a wise choice."
L0007: JE              Gef,#02 [FALSE] L0008
       PRINT_RET       "I thought not!"
L0008: STORE           Gef,G96
       JE              Gef,#00 [FALSE] L0009
       PRINT_PADDR     S561
       JUMP            L0011
L0009: JE              Gef,#01 [FALSE] L0010
       PRINT_PADDR     S562
       JUMP            L0011
L0010: JE              Gef,#02 [FALSE] L0011
       PRINT_PADDR     S563
       NEW_LINE        
       RTRUE           
L0011: INC             G96
       SUB             G11,#0a -> G11
       JE              G00,#13 [TRUE] L0023
L0012: JG              #05,G16 [TRUE] L0013
       JG              G16,#0114 [TRUE] L0013
       JIN             G16,"Class" [FALSE] L0014
L0013: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0015
L0014: STORE           Gee,G16
L0015: GET_CHILD       Gee -> -(SP) [FALSE] L0016
L0016: JZ              (SP)+ [TRUE] L0022
       JG              #05,G16 [TRUE] L0017
       JG              G16,#0114 [TRUE] L0017
       JIN             G16,"Class" [FALSE] L0018
L0017: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,G16
L0019: GET_CHILD       Gee -> L00 [FALSE] L0020
L0020: CALL_VN         R0476 (L00,G00)
       CALL_VS         R0468 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       SUB             G11,#05 -> G11
L0021: JUMP            L0012
L0022: JUMP            L0033
L0023: JG              #05,G16 [TRUE] L0024
       JG              G16,#0114 [TRUE] L0024
       JIN             G16,"Class" [FALSE] L0025
L0024: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0026
L0025: STORE           Gee,G16
L0026: GET_CHILD       Gee -> -(SP) [FALSE] L0027
L0027: JZ              (SP)+ [TRUE] L0033
       JG              #05,G16 [TRUE] L0028
       JG              G16,#0114 [TRUE] L0028
       JIN             G16,"Class" [FALSE] L0029
L0028: CALL_VN         R0470 (#06,G16)
       STORE           Gee,#02
       JUMP            L0030
L0029: STORE           Gee,G16
L0030: GET_CHILD       Gee -> L00 [FALSE] L0031
L0031: CALL_VN         R0476 (L00,G19)
       CALL_VS         R0468 (L00,#19) -> -(SP)
       JZ              (SP)+ [TRUE] L0032
       SUB             G11,#05 -> G11
L0032: JUMP            L0023
L0033: CALL_VN         R0476 (#2a,#1d)
       CALL_VN         R0479 (#2a,#0d)
       CALL_VN         R0479 (#2a,#09)
       CALL_2N         R0477 (#0108)
       STORE           G17,#00
       CALL_2N         R0165 (#25)
       RTRUE           

Routine R0417, 0 locals

       JZ              G27 [FALSE] L0002
       STORE           G28,#08
       STORE           G29,S564
       JE              G17,#02 [FALSE] L0001
       RET             #04
L0001: RET             #03
L0002: JE              G27,#01 [FALSE] L0003
       STORE           G28,#06
       STORE           G29,S565
L0003: JE              G27,#02 [FALSE] L0004
       STORE           G28,#04
       STORE           G29,S566
L0004: JE              G27,#03 [FALSE] L0005
       STORE           G28,#06
       STORE           G29,S567
L0005: JE              G27,#04 [FALSE] L0006
       STORE           G28,#07
       STORE           G29,S568
L0006: RTRUE           

Routine R0418, 0 locals

       JE              G27,#01 [FALSE] L0001
       PRINT_PADDR     S569
       PRINT_PADDR     S570
       PRINT_PADDR     S571
       PRINT_PADDR     S572
       PRINT_PADDR     S573
       PRINT_PADDR     S574
       PRINT_PADDR     S575
       PRINT_RET       "Good luck!"
L0001: JE              G27,#02 [FALSE] L0002
       PRINT_PADDR     S576
       PRINT_PADDR     S577
       PRINT_PADDR     S578
       PRINT_PADDR     S579
       PRINT_PADDR     S580
       PRINT_PADDR     S581
       PRINT_PADDR     S582
       PRINT_PADDR     S583
       PRINT_PADDR     S584
       PRINT_PADDR     S585
       PRINT_PADDR     S586
       PRINT_PADDR     S587
       PRINT_PADDR     S588
       PRINT_PADDR     S589
       NEW_LINE        
       RTRUE           
L0002: JE              G27,#03 [FALSE] L0003
       PRINT_PADDR     S590
       PRINT_PADDR     S591
       PRINT_PADDR     S592
       PRINT_PADDR     S593
       PRINT_PADDR     S594
       PRINT_PADDR     S595
       PRINT_PADDR     S596
       NEW_LINE        
       RTRUE           
L0003: PRINT           "Did you know that...

"
       PRINT_PADDR     S597
       PRINT_PADDR     S598
       PRINT_PADDR     S599
       PRINT_PADDR     S600
       PRINT_PADDR     S601
       PRINT_PADDR     S602
       PRINT_PADDR     S603
       PRINT_PADDR     S604
       PRINT_PADDR     S605
       PRINT_PADDR     S606
       NEW_LINE        
       RTRUE           

Routine R0419, 0 locals
    Action routine for:
        "help"

       JE              G17,#02 [TRUE] L0001
       CALL_VN         R0163 (S607,"fondle","foobar")
       JUMP            L0002
L0001: CALL_VN         R0163 (S608,"fondle","foobar")
L0002: RTRUE           

Routine R0420, 0 locals

       CALL_1N         R0419
       RTRUE           

Routine R0421, 0 locals
    Parsing routine for:
        "go noun = [parse $57c1]"
        "leave noun = [parse $57c1]"
        "l noun = [parse $57c1]"
        "l to noun = [parse $57c1]"

       JG              #01,G35 [TRUE] L0001
       JG              G35,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#02,G35)
       JUMP            L0003
L0002: JIN             G35,"compass" [TRUE] RTRUE
L0003: RFALSE          

Routine R0422, 1 local

       STORE           G47,G80
L0001: CALL_1S         R0066 -> L00
       JE              L00,#ffff [TRUE] L0002
       JE              L00,"to" [FALSE] L0001
       JE              G59,#01 [FALSE] L0001
L0002: DEC             G80
       SUB             G80,G47 -> G48
       JZ              G48 [FALSE] L0003
       RET             #ffff
L0003: JE              G59,#01,#02,#50 [FALSE] L0005
       STORE           L00,G80
       STORE           G80,G47
       CALL_1S         R0065 -> G46
       JE              G46,"the" [FALSE] L0004
       JG              G48,#01 [FALSE] L0004
       CALL_1S         R0065 -> G46
L0004: STORE           G80,L00
       RTRUE           
L0005: RFALSE          

Routine R0423, 0 locals

       RFALSE          

Routine R0424, 0 locals

       RFALSE          

Routine R0425, 2 locals

       RFALSE          

Routine R0426, 0 locals

       RFALSE          

Routine R0427, 0 locals

       RFALSE          

Routine R0428, 0 locals

       RFALSE          

Routine R0429, 1 local

       RFALSE          

Routine R0430, 0 locals

       RFALSE          

Routine R0431, 0 locals

       RFALSE          

Routine R0432, 2 locals

       RFALSE          

Routine R0433, 1 local

       RFALSE          

Routine R0434, 1 local

       RFALSE          

Routine R0435, 1 local

       RFALSE          

Routine R0436, 0 locals

       RFALSE          

Routine R0437, 1 local

       STORE           L00,L00
       RET             #ffff

Routine R0438, 0 locals
    Action routine for:
        "off"

       JIN             "brass lantern",G16 [TRUE] L0001
       PRINT_RET       "You have no lamp."
L0001: CALL_VN         R0090 (#4c,#2a)
       RTRUE           

Routine R0439, 0 locals
    Action routine for:
        "on"

       JIN             "brass lantern",G16 [TRUE] L0001
       PRINT_RET       "You have no lamp."
L0001: CALL_VN         R0090 (#4d,#2a)
       RTRUE           

Routine R0440, 0 locals
    Action routine for:
        "capture creature"
        "capture creature with held"

       PRINT           "You can't catch "
       CALL_2N         R0137 (G35)
       PRINT_RET       "."

Routine R0441, 0 locals
    Action routine for:
        "free creature"

       PRINT           "You can't release "
       CALL_2N         R0137 (G35)
       PRINT_RET       "."

Routine R0442, 0 locals
    Action routine for:
        "water noun"
        "douse water on noun"

       JIN             "small bottle",G16 [FALSE] L0001
       CALL_VN         R0090 (#66,#2b)
       RTRUE           
L0001: PRINT_RET       "Water? What water?"

Routine R0443, 0 locals
    Action routine for:
        "grease noun"
        "douse oil on noun"

       JIN             "small bottle",G16 [FALSE] L0001
       CALL_VN         R0090 (#66,#2b)
       RTRUE           
L0001: PRINT_RET       "Oil? What oil?"

Routine R0444, 0 locals
    Action routine for:
        "answer blast"
        "blast"

       JE              G00,#0111,#010d [TRUE] L0001
       PRINT_RET       "Frustrating, isn't it?"
L0001: JE              G00,#0111 [FALSE] L0005
       JG              #05,#0114 [TRUE] L0002
       JG              #0114,#0114 [TRUE] L0002
       JIN             "black rod with a rusty mark on the end","Class" [FALSE]
L0003
L0002: CALL_VN         R0470 (#04,#0114)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,#0114
L0004: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#010d [FALSE] L0005
       ADD             G11,#23 -> G11
       STORE           G17,#02
       PRINT_PADDR     S609
       NEW_LINE        
       RTRUE           
L0005: JE              G00,#010d [FALSE] L0009
       JG              #05,#0114 [TRUE] L0006
       JG              #0114,#0114 [TRUE] L0006
       JIN             "black rod with a rusty mark on the end","Class" [FALSE]
L0007
L0006: CALL_VN         R0470 (#04,#0114)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,#0114
L0008: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#0111 [FALSE] L0009
       ADD             G11,#14 -> G11
       STORE           G17,#01
       PRINT_PADDR     S610
       NEW_LINE        
       RTRUE           
L0009: STORE           G17,#01
       PRINT_PADDR     S611
       NEW_LINE        
       RTRUE           

Routine R0445, 0 locals
    Action routine for:
        "blast noun with held"

       JE              G36,#0114 [TRUE] L0001
       PRINT_RET       "Blasting requires dynamite."
L0001: PRINT_PADDR     S612
       NEW_LINE        
       RTRUE           

Routine R0446, 0 locals
    Action routine for:
        "answer xyzzy"
        "xyzzy"

       PRINT_RET       "Nothing happens."

Routine R0447, 0 locals
    Action routine for:
        "answer plugh"
        "plugh"

       PRINT_RET       "Nothing happens."

Routine R0448, 0 locals
    Action routine for:
        "answer plover"
        "plover"

       PRINT_RET       "Nothing happens."

Routine R0449, 0 locals
    Action routine for:
        "answer fee"
        "fee"

       CALL_2N         R0453 (#00)
       RTRUE           

Routine R0450, 0 locals
    Action routine for:
        "answer fie"
        "fie"

       CALL_2N         R0453 (#01)
       RTRUE           

Routine R0451, 0 locals
    Action routine for:
        "answer foe"
        "foe"

       CALL_2N         R0453 (#02)
       RTRUE           

Routine R0452, 0 locals
    Action routine for:
        "answer foo"
        "foo"

       CALL_2N         R0453 (#03)
       RTRUE           

Routine R0453, 1 local

       JE              G98,L00 [TRUE] L0001
       STORE           G98,#00
       PRINT_RET       "Get it right, dummy!"
L0001: PUSH            G98
       INC             G98
       JE              (SP)+,#03 [FALSE] L0009
       STORE           G98,#00
       JIN             "nest of golden eggs","Giant Room" [FALSE] L0002
       PRINT_RET       "Nothing happens."
L0002: JIN             "nest of golden eggs",G16 [TRUE] L0003
       JIN             "nest of golden eggs",G00 [FALSE] L0004
L0003: PRINT_PADDR     S613
       JUMP            L0005
L0004: PRINT           "Done!"
L0005: JIN             "nest of golden eggs",G16 [FALSE] L0006
       SUB             G11,#05 -> G11
L0006: JIN             "nest of golden eggs","Inside Building" [FALSE] L0007
       CALL_VS         R0461 (#b6,#53) -> -(SP)
       SUB             G11,(SP)+ -> G11
L0007: CALL_VN         R0476 (#b6,#b4)
       JE              G00,#b4 [FALSE] L0008
       PRINT_PADDR     S614
       NEW_LINE        
       RTRUE           
L0008: JUMP            L0010
L0009: PRINT_RET       "Ok."
L0010: RTRUE           

Routine R0454, 0 locals
    Action routine for:
        "answer sesame / shazam / hocus / abracadab / foobar / open-ses /
        frotz"
        "abracadab"

       PRINT_PADDR     S615
       NEW_LINE        
       RTRUE           

Routine R0455, 0 locals
    Action routine for:
        "count noun"

       JG              #01,G35 [TRUE] L0001
       JG              G35,#0114 [FALSE] L0002
L0001: CALL_VN         R0470 (#03,G35)
       JUMP            L0003
L0002: TEST_ATTR       G35,#21 [FALSE] L0003
       PRINT_RET       "There are a multitude."
L0003: PRINT           "I see one (1) "
       CALL_2N         R0139 (G35)
       PRINT_RET       "."

Routine R0456, 0 locals
    Action routine for:
        "kick noun"

       CALL_VN         R0090 (#03,G35)
       RTRUE           

Routine R0457, 0 locals
    Action routine for:
        "use"

       PRINT_PADDR     S616
       NEW_LINE        
       RTRUE           

Routine R0458, 1 local
    Parsing routine for:
        "go scope = [parse $5890]"
        "go to scope = [parse $5890]"
        "goto scope = [parse $5890]"

       STORE           Gef,G77
       JE              Gef,#01 [FALSE] L0001
       RFALSE          
L0001: JE              Gef,#02 [FALSE] L0007
       STORE           L00,#01
L0002: CALL_VS         R0468 (L00,#1a) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JG              #01,L00 [TRUE] L0003
       JG              L00,#0114 [FALSE] L0004
L0003: CALL_VN         R0470 (#03,L00)
       JUMP            L0005
L0004: TEST_ATTR       L00,#18 [FALSE] L0005
       CALL_2N         R0054 (L00)
L0005: INC             L00
       JG              L00,#0114 [TRUE] L0006
       JUMP            L0002
L0006: RTRUE           
L0007: JE              Gef,#03 [FALSE] L0008
       CALL_VS         R0285 (#1b,#02) -> -(SP)
       RET_POPPED      
L0008: RTRUE           

Routine R0459, 0 locals
    Action routine for:
        "go scope = [parse $5890]"
        "go to scope = [parse $5890]"
        "goto scope = [parse $5890]"

       JE              G35,G00 [FALSE] L0001
       PRINT_RET       "But you're already here!"
L0001: CALL_2N         R0165 (G35)
       RTRUE           

Routine R0460, 4 locals

       CALL_VS         R0465 (L00,L01) -> L03
       JZ              L03 [FALSE] L0001
       CALL_VN         R0470 (S617,L00,L01)
       RTRUE           
L0001: STOREW          L03,#00,L02
       RTRUE           

Routine R0461, 3 locals

       CALL_VS         R0465 (L00,L01) -> L02
       JZ              L02 [FALSE] L0003
       JL              L01,#01 [TRUE] L0002
       JL              L01,#40 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       JG              (SP)+,#02 [TRUE] L0002
       GET_PROP        L00,L01 -> Gef
       PUSH            Gef
       RET_POPPED      
L0002: CALL_VN         R0470 (S618,L00,L01)
       RTRUE           
L0003: CALL_VS         R0466 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0004
       CALL_VN2        R0470 (S619,L00,L01,#02)
L0004: LOADW           L02,#00 -> -(SP)
       RET_POPPED      

Routine R0462, 15 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0007
L0001: CALL_2S         R0471 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0003
       JE              L01,#45 [FALSE] L0002
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           Ge9,G32
       CALL_VS2        L00 (L02,L03,L04,L05,L06,L07) -> L08
       STORE           Geb,Gea
       STORE           Gea,L0b
       RET             L08
L0002: JUMP            L0021
L0003: JE              Gef,#03 [FALSE] L0006
       JE              L01,#46 [FALSE] L0004
       PRINT_PADDR     L00
       RTRUE           
L0004: JE              L01,#47 [FALSE] L0005
       OUTPUT_STREAM   REDIRECT_ENABLE,L02
       PRINT_PADDR     L00
       OUTPUT_STREAM   #fffd
       LOADW           L02,#00 -> -(SP)
       RET_POPPED      
L0005: JUMP            L0021
L0006: JUMP            L0021
L0007: CHECK_ARG_COUNT #03 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #04 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #05 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #06 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #07 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #08 [FALSE] L0008
       INC             L09
L0008: JE              L0d,#01 [FALSE] L0015
       PRINT           "[ ""
       CALL_2N         R0139 (L00)
       PRINT           ""."
       CALL_2N         R0491 (L01)
       PRINT           "("
       STORE           Gef,L09
       JE              Gef,#01 [FALSE] L0009
       PRINT_NUM       L02
       JUMP            L0014
L0009: JE              Gef,#02 [FALSE] L0010
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       JUMP            L0014
L0010: JE              Gef,#03 [FALSE] L0011
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       JUMP            L0014
L0011: JE              Gef,#04 [FALSE] L0012
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       JUMP            L0014
L0012: JE              Gef,#05 [FALSE] L0013
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       PRINT           ","
       PRINT_NUM       L06
       JUMP            L0014
L0013: JE              Gef,#06 [FALSE] L0014
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       PRINT           ","
       PRINT_NUM       L06
       PRINT           ","
       PRINT_NUM       L07
L0014: PRINT           ") ]
"
L0015: JG              L01,#00 [FALSE] L0019
       JL              L01,#40 [FALSE] L0019
       GET_PROP_ADDR   L00,L01 -> Gef
       STORE           L08,Gef
       JZ              L08 [FALSE] L0016
       SUB             L01,#01 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       LOADW           #0a,#00 -> -(SP)
       ADD             (SP)+,(SP)+ -> L08
       STORE           L0d,#02
       JUMP            L0018
L0016: GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0017
       GET_PROP_LEN    Gef -> Gef
L0017: STORE           L0d,Gef
L0018: JUMP            L0025
L0019: JL              L01,#40 [TRUE] L0020
       JL              L01,#45 [FALSE] L0020
       JIN             L00,"Class" [FALSE] L0020
       CALL_VS2        R0475 (L00,L01,L09,L02,L03,L04,L05) -> -(SP)
       RET_POPPED      
L0020: CALL_VS         R0465 (L00,L01) -> L08
       JZ              L08 [FALSE] L0022
L0021: CALL_VN         R0470 (S620,L00,L01)
       RTRUE           
L0022: SUB             L08,#01 -> -(SP)
       LOADB           #00,(SP)+ -> L0d
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0025
       AND             L0d,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0023
       STORE           L0d,#01
       JUMP            L0025
L0023: JE              Gef,#40 [FALSE] L0024
       STORE           L0d,#02
       JUMP            L0025
L0024: JE              Gef,#80 [FALSE] L0025
       AND             L0d,#3f -> L0d
L0025: MUL             #02,L0e -> -(SP)
       JL              (SP)+,L0d [FALSE] L0039
       LOADW           L08,L0e -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       LOADW           L08,L0e -> -(SP)
       CALL_2S         R0471 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0036
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           L0c,Ge9
       JE              L01,#06 [FALSE] L0026
       STORE           Ge9,G38
       JUMP            L0027
L0026: STORE           Ge9,G32
L0027: STORE           Gef,L09
       JE              Gef,#00 [FALSE] L0028
       LOADW           L08,L0e -> -(SP)
       CALL_1S         (SP)+ -> L0a
       JUMP            L0034
L0028: JE              Gef,#01 [FALSE] L0029
       LOADW           L08,L0e -> -(SP)
       CALL_2S         (SP)+ (L02) -> L0a
       JUMP            L0034
L0029: JE              Gef,#02 [FALSE] L0030
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03) -> L0a
       JUMP            L0034
L0030: JE              Gef,#03 [FALSE] L0031
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03,L04) -> L0a
       JUMP            L0034
L0031: JE              Gef,#04 [FALSE] L0032
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05) -> L0a
       JUMP            L0034
L0032: JE              Gef,#05 [FALSE] L0033
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06) -> L0a
       JUMP            L0034
L0033: JE              Gef,#06 [FALSE] L0034
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06,L07) -> L0a
L0034: STORE           Geb,Gea
       STORE           Gea,L0b
       STORE           Ge9,L0c
       JZ              L0a [TRUE] L0035
       RET             L0a
L0035: JUMP            L0038
L0036: JE              Gef,#03 [FALSE] L0037
       LOADW           L08,L0e -> -(SP)
       CALL_2N         R0489 ((SP)+)
       NEW_LINE        
       RTRUE           
L0037: LOADW           L08,L0e -> -(SP)
       RET_POPPED      
L0038: INC             L0e
       JUMP            L0025
L0039: RFALSE          

Routine R0463, 3 locals

       CALL_VS         R0465 (L00,L01) -> L02
       JZ              L02 [FALSE] L0001
       CALL_VN         R0470 (S621,L00,L01)
       RTRUE           
L0001: STORE           Gef,L02
       STORE           Gee,#00
       LOADW           Gef,Gee -> Ged
       PUSH            Ged
       INC             Ged
       STOREW          Gef,Gee,Ged
       RET_POPPED      

Routine R0464, 3 locals

       CALL_VS         R0465 (L00,L01) -> L02
       JZ              L02 [FALSE] L0001
       CALL_VN         R0470 (S622,L00,L01)
       RTRUE           
L0001: STORE           Gef,L02
       STORE           Gee,#00
       LOADW           Gef,Gee -> Ged
       DEC             Ged
       STOREW          Gef,Gee,Ged
       PUSH            Ged
       RET_POPPED      

Routine R0465, 5 locals

       JZ              L00 [TRUE] RFALSE
       JL              L01,#40 [FALSE] L0001
       JG              L01,#00 [FALSE] L0001
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       RET_POPPED      
L0001: AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L01,#ff -> -(SP)
       LOADW           #3802,(SP)+ -> L04
       GET_PROP_ADDR   L04,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0468 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       AND             L01,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       GET_PROP        L04,#03 -> Gef
       STORE           L02,Gef
L0002: JG              L01,#00 [FALSE] L0003
       DEC             L01
       LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0002
L0003: ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0004: AND             L01,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#ff -> -(SP)
       LOADW           #3802,(SP)+ -> L04
       AND             L01,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       CALL_VS         R0468 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       LOADW           #00,#05 -> L02
       JE              L04,#02 [FALSE] L0005
       MUL             #02,L01 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       SUB             (SP)+,#02 -> -(SP)
       RET_POPPED      
L0005: MUL             L04,#0e -> -(SP)
       ADD             L02,#7c -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       LOADW           #00,(SP)+ -> L02
       LOADB           #00,L02 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0474 ((SP)+,#ffff) -> -(SP)
       ADD             (SP)+,#06 -> L02
       CALL_VS         R0474 (L02,L01) -> -(SP)
       RET_POPPED      
L0006: GET_PROP_ADDR   L00,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       JIN             L00,"Class" [FALSE] L0007
       JL              L01,#40 [TRUE] RFALSE
       JL              L01,#48 [FALSE] RFALSE
L0007: JE              Geb,L00 [FALSE] L0008
       OR              L01,#8000 -> L03
L0008: GET_PROP        L00,#03 -> Gef
       STORE           L02,Gef
L0009: LOADW           L02,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       LOADW           L02,#00 -> -(SP)
       JE              (SP)+,L01,L03 [FALSE] L0010
       ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0010: LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0009
L0011: RFALSE          

Routine R0466, 3 locals

       JL              L01,#40 [FALSE] L0002
       JG              L01,#00 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       RET_POPPED      
L0002: CALL_VS         R0465 (L00,L01) -> L02
       JZ              L02 [TRUE] RFALSE
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0003
       RTRUE           
L0003: JE              Gef,#40 [FALSE] L0004
       RET             #02
L0004: JE              Gef,#80 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#3f -> -(SP)
       RET_POPPED      
L0005: SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       RET_POPPED      

Routine R0467, 2 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0004
L0001: JE              L01,#46,#47,#45 [FALSE] RFALSE
       CALL_2S         R0471 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0002
       JE              L01,#45 [TRUE] RTRUE
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       JE              L01,#46,#47 [TRUE] RTRUE
L0003: RFALSE          
L0004: JL              L01,#40 [FALSE] L0005
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          
L0005: CALL_VS         R0465 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JL              L01,#48 [FALSE] L0006
       JIN             L00,"Class" [TRUE] RTRUE
L0006: RFALSE          

Routine R0468, 5 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0002
L0001: JE              L01,#03,#04 [FALSE] RFALSE
       SUB             L01,#01 -> -(SP)
       CALL_2S         R0471 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] RTRUE
       RFALSE          
L0002: JE              L01,#01 [FALSE] L0003
       JG              L00,#04 [FALSE] RTRUE
       JIN             L00,"Class" [TRUE] RTRUE
       RFALSE          
L0003: JE              L01,#02 [FALSE] L0004
       JG              L00,#04 [FALSE] RFALSE
       JIN             L00,"Class" [TRUE] RFALSE
       RTRUE           
L0004: JE              L01,#03,#04 [FALSE] L0005
       RFALSE          
L0005: JIN             L01,"Class" [TRUE] L0006
       CALL_VN         R0470 (S623,L01,#ffff)
       RFALSE          
L0006: GET_PROP_ADDR   L00,#02 -> L03
       JZ              L03 [TRUE] RFALSE
       GET_PROP_LEN    L03 -> L04
       STORE           L02,#00
L0007: DIV             L04,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0008
       LOADW           L03,L02 -> -(SP)
       JE              (SP)+,L01 [TRUE] RTRUE
       INC             L02
       JUMP            L0007
L0008: RFALSE          

Routine R0469, 9 locals

       STORE           L04,#00
L0001: JL              L04,#30 [FALSE] L0007
       STORE           Gef,L01
       STORE           Gee,L04
       JL              Gee,#00 [TRUE] L0002
       JL              Gee,#30 [TRUE] L0003
L0002: CALL_VN         R0470 (#13,Gef,Gee)
       JUMP            L0004
L0003: TEST_ATTR       L01,L04 [FALSE] L0005
L0004: CALL_VN         R0478 (L00,L04)
       JUMP            L0006
L0005: CALL_VN         R0479 (L00,L04)
L0006: INC             L04
       JUMP            L0001
L0007: STORE           L04,#01
L0008: JL              L04,#40 [FALSE] L0013
       JE              L04,#02,#03 [TRUE] L0012
       GET_PROP_ADDR   L00,L04 -> Gef
       STORE           L02,Gef
       GET_PROP_ADDR   L01,L04 -> Gef
       STORE           L03,Gef
       GET_PROP_ADDR   L00,L04 -> Gef
       JZ              Gef [TRUE] L0009
       GET_PROP_LEN    Gef -> Gef
L0009: STORE           L07,Gef
       JZ              L02 [TRUE] L0012
       JZ              L03 [TRUE] L0012
       GET_PROP_ADDR   L01,L04 -> Gef
       JZ              Gef [TRUE] L0010
       GET_PROP_LEN    Gef -> Gef
L0010: PUSH            Gef
       JE              L07,(SP)+ [FALSE] L0012
       STORE           L05,#00
L0011: JL              L05,L07 [FALSE] L0012
       LOADB           L03,L05 -> -(SP)
       STOREB          L02,L05,(SP)+
       INC             L05
       JUMP            L0011
L0012: INC             L04
       JUMP            L0008
L0013: GET_PROP_ADDR   L00,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0014
       GET_PROP_ADDR   L01,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0015
L0014: RTRUE           
L0015: GET_PROP        L01,#03 -> Gef
       STORE           L04,Gef
       JUMP            L0017
L0016: ADD             L04,L07 -> -(SP)
       ADD             (SP)+,#03 -> L04
L0017: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       LOADW           L04,#00 -> L08
       LOADB           L04,#02 -> L07
       GET_PROP        L00,#03 -> Gef
       STORE           L05,Gef
       JUMP            L0019
L0018: LOADB           L05,#02 -> -(SP)
       ADD             L05,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L05
L0019: LOADW           L05,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       LOADW           L05,#00 -> -(SP)
       AND             (SP)+,#7fff -> -(SP)
       AND             L08,#7fff -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0021
       LOADB           L05,#02 -> -(SP)
       JE              L07,(SP)+ [FALSE] L0021
       STORE           L06,#03
L0020: ADD             L07,#03 -> -(SP)
       JL              L06,(SP)+ [FALSE] L0021
       LOADB           L04,L06 -> -(SP)
       STOREB          L05,L06,(SP)+
       INC             L06
       JUMP            L0020
L0021: JUMP            L0018
L0022: JUMP            L0016
L0023: RTRUE           

Routine R0470, 6 locals

       PRINT           "
[** Programming error: "
       JL              L00,#00 [FALSE] L0001
       JUMP            L0049
L0001: JE              L00,#01 [FALSE] L0002
       PRINT           "class "
       PRINT_OBJ       L01
       PRINT_PADDR     S624
       NEW_LINE        
       RTRUE           
L0002: JE              L00,#20 [FALSE] L0003
       PRINT_PADDR     S625
       CALL_2N         R0139 (L01)
       PRINT_PADDR     S626
       NEW_LINE        
       RTRUE           
L0003: JE              L00,#21 [FALSE] L0004
       PRINT           "tried to print (char) "
       PRINT_NUM       L01
       PRINT_PADDR     S627
       NEW_LINE        
       RTRUE           
L0004: JE              L00,#22 [FALSE] L0005
       PRINT_PADDR     S628
       PRINT_RET       "byte address of a string **]"
L0005: JE              L00,#23 [FALSE] L0006
       PRINT_PADDR     S629
       PRINT_RET       "string **]"
L0006: JE              L00,#24 [FALSE] L0007
       PRINT_PADDR     S630
       PRINT_RET       "object or class **]"
L0007: JL              L00,#20 [FALSE] L0049
       PRINT           "tried to "
       JL              L00,#1c [TRUE] L0017
       JE              L00,#1c,#1d [FALSE] L0008
       PRINT           "read from "
       JUMP            L0009
L0008: PRINT           "write to "
L0009: JE              L00,#1d,#1f [FALSE] L0010
       PRINT           "-"
L0010: PRINT           "->"
       PRINT_NUM       L01
       PRINT           " in the"
       AND             L03,#07 -> -(SP)
       PULL            Gef
       JE              Gef,#00,#01 [FALSE] L0011
       STORE           L05,#00
       JUMP            L0014
L0011: JE              Gef,#02 [FALSE] L0012
       PRINT           " string"
       STORE           L05,#01
       JUMP            L0014
L0012: JE              Gef,#03 [FALSE] L0013
       PRINT           " table"
       STORE           L05,#01
       JUMP            L0014
L0013: JE              Gef,#04 [FALSE] L0014
       PRINT           " buffer"
       STORE           L05,#02
L0014: AND             L03,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       PRINT           " (->)"
L0015: AND             L03,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       PRINT           " (-->)"
L0016: PRINT           " array ""
       LOADW           #3a50,L04 -> -(SP)
       CALL_2N         R0489 ((SP)+)
       PRINT           "", which has entries "
       PRINT_NUM       L05
       PRINT           " up to "
       PRINT_NUM       L02
       PRINT_RET       " **]"
L0017: JL              L00,#18 [TRUE] L0021
       JG              L00,#1b [TRUE] L0021
       JG              L00,#19 [TRUE] L0018
       PRINT           "read"
       JUMP            L0019
L0018: PRINT           "write"
L0019: PRINT           " outside memory using "
       STORE           Gef,L00
       JE              Gef,#18,#1a [FALSE] L0020
       PRINT_RET       "-> **]"
L0020: JE              Gef,#19,#1b [FALSE] L0021
       PRINT_RET       "--> **]"
L0021: JL              L00,#04 [FALSE] L0022
       PRINT           "test "
       JUMP            L0025
L0022: JL              L00,#0c [TRUE] L0023
       JG              L00,#14 [FALSE] L0024
L0023: PRINT           "find the "
       JUMP            L0025
L0024: JL              L00,#0e [FALSE] L0025
       PRINT           "use "
L0025: JE              L00,#14 [FALSE] L0026
       PRINT_RET       "divide by zero **]"
L0026: PRINT           """
       STORE           Gef,L00
       JE              Gef,#02 [FALSE] L0027
       PRINT           "in" or "notin"
       JUMP            L0048
L0027: JE              Gef,#03 [FALSE] L0028
       PRINT           "has" or "hasnt"
       JUMP            L0048
L0028: JE              Gef,#04 [FALSE] L0029
       PRINT           "parent"
       JUMP            L0048
L0029: JE              Gef,#05 [FALSE] L0030
       PRINT           "eldest"
       JUMP            L0048
L0030: JE              Gef,#06 [FALSE] L0031
       PRINT           "child"
       JUMP            L0048
L0031: JE              Gef,#07 [FALSE] L0032
       PRINT           "younger"
       JUMP            L0048
L0032: JE              Gef,#08 [FALSE] L0033
       PRINT           "sibling"
       JUMP            L0048
L0033: JE              Gef,#09 [FALSE] L0034
       PRINT           "children"
       JUMP            L0048
L0034: JE              Gef,#0a [FALSE] L0035
       PRINT           "youngest"
       JUMP            L0048
L0035: JE              Gef,#0b [FALSE] L0036
       PRINT           "elder"
       JUMP            L0048
L0036: JE              Gef,#0c [FALSE] L0037
       PRINT           "objectloop"
       JUMP            L0048
L0037: JE              Gef,#0d [FALSE] L0038
       PRINT           "}" at end of "objectloop"
       JUMP            L0048
L0038: JE              Gef,#0e [FALSE] L0039
       PRINT           "give" an attribute to "
       CALL_2N         R0139 (L01)
       PRINT_RET       " **]"
L0039: JE              Gef,#0f [FALSE] L0040
       PRINT           "remove" "
       CALL_2N         R0139 (L01)
       PRINT_RET       " **]"
L0040: JE              Gef,#10,#11,#12 [FALSE] L0044
       PRINT           "move" "
       CALL_2N         R0139 (L01)
       PRINT           " to "
       CALL_2N         R0139 (L02)
       JE              L00,#12 [FALSE] L0043
       PRINT           ", which would make a loop: "
       CALL_2N         R0139 (L01)
       STORE           L04,L02
       JE              L04,L01 [FALSE] L0041
       STORE           L04,L01
       JUMP            L0042
L0041: PRINT           " in "
       CALL_2N         R0139 (L04)
       GET_PARENT      L04 -> L04
       JE              L04,L01 [FALSE] L0041
L0042: PRINT           " in "
       CALL_2N         R0139 (L04)
       PRINT_RET       " **]"
L0043: PRINT_RET       " **]"
L0044: JE              Gef,#13 [FALSE] L0045
       PRINT_PADDR     S631
       CALL_2N         R0139 (L01)
       PRINT_RET       " **]"
L0045: JE              Gef,#15 [FALSE] L0046
       PRINT           ".&"
       JUMP            L0048
L0046: JE              Gef,#16 [FALSE] L0047
       PRINT           ".#"
       JUMP            L0048
L0047: JE              Gef,#17 [FALSE] L0048
       PRINT           "."
L0048: PRINT           "" of "
       CALL_2N         R0139 (L01)
       PRINT_RET       " **]"
L0049: JL              L01,#00 [TRUE] L0053
       SUB             #0213,#ff -> -(SP)
       JG              L01,(SP)+ [TRUE] L0053
       JZ              L01 [TRUE] L0050
       JIN             L01,"Class" [FALSE] L0050
       PRINT           "class "
L0050: JZ              L01 [TRUE] L0051
       PRINT_OBJ       L01
       JUMP            L0052
L0051: PRINT           "nothing"
L0052: PRINT           " "
L0053: PRINT           "(object number "
       PRINT_NUM       L01
       PRINT           ") "
       JL              L02,#00 [FALSE] L0054
       PRINT           "is not of class "
       SUB             #00,L02 -> -(SP)
       CALL_2N         R0139 ((SP)+)
       JUMP            L0057
L0054: JZ              L03 [TRUE] L0055
       PRINT           "has a property "
       CALL_2N         R0491 (L02)
       PRINT_PADDR     S632
       JUMP            L0057
L0055: PRINT           " has no property "
       CALL_2N         R0491 (L02)
       STORE           L04,#3820
       LOADW           L04,#00 -> L03
       JL              L02,#00 [TRUE] L0056
       JL              L02,L03 [TRUE] L0057
L0056: PRINT           " (and nor has any other object)"
L0057: PRINT           " to "
       CALL_2N         R0489 (L00)
       PRINT           " **]
"
       RTRUE           

Routine R0471, 2 locals

       JE              L00,#00,#ffff [TRUE] RFALSE
       STORE           L01,L00
       LOADW           #1a,#00 -> -(SP)
       CALL_VS         R0472 (L01,(SP)+) -> -(SP)
       JL              (SP)+,#00 [FALSE] RFALSE
       JL              L00,#01 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] RTRUE
L0001: CALL_VS         R0472 (L00,S001) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       RET             #03
L0002: CALL_VS         R0472 (L00,#1a8c) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       RET             #02
L0003: RFALSE          

Routine R0472, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0473, 1 local

       CALL_2S         R0471 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0001
       RET             #03
L0001: JE              Gef,#03 [FALSE] L0002
       RET             #04
L0002: JE              Gef,#01 [FALSE] L0005
       JIN             L00,"Class" [TRUE] L0003
       JG              L00,#04 [TRUE] L0004
L0003: RTRUE           
L0004: RET             #02
L0005: RFALSE          

Routine R0474, 4 locals

L0001: LOADB           #00,L00 -> L02
       JZ              L02 [TRUE] L0006
       AND             L02,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L00
       LOADB           #00,L00 -> -(SP)
       AND             (SP)+,#3f -> L03
       JUMP            L0004
L0002: AND             L02,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L03,#02
       JUMP            L0004
L0003: STORE           L03,#01
L0004: INC             L00
       AND             L02,#3f -> -(SP)
       JE              (SP)+,L01 [FALSE] L0005
       RET             L00
L0005: ADD             L00,L03 -> L00
       JUMP            L0001
L0006: JL              L01,#00 [FALSE] L0007
       ADD             L00,#01 -> -(SP)
       RET_POPPED      
L0007: RFALSE          

Routine R0475, 8 locals

       STORE           Gef,L01
       JE              Gef,#40 [FALSE] L0009
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JG              (SP)+,#01 [FALSE] RFALSE
       GET_CHILD       L00 -> L07 [FALSE] L0003
L0003: REMOVE_OBJ      L07
       CALL_VS         R0467 (L07,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [FALSE] L0004
       CALL_VN         R0462 (L07,#40)
L0004: JE              L02,#01 [FALSE] L0005
       CALL_VN         R0462 (L07,#40,L03)
L0005: JE              L02,#02 [FALSE] L0006
       CALL_VN2        R0462 (L07,#40,L03,L04)
L0006: JG              L02,#03 [FALSE] L0007
       CALL_VN         R0470 (#01,L00)
L0007: JL              L02,#03 [TRUE] L0008
       CALL_VN2        R0462 (L07,#40,L03,L04,L05)
L0008: RET             L07
L0009: JE              Gef,#41 [FALSE] L0017
       CALL_VS         R0468 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0470 (S633,L03,(SP)+)
       RFALSE          
L0010: GET_CHILD       L00 -> -(SP) [FALSE] L0011
L0011: CALL_VN         R0469 (L03,(SP)+)
       CALL_VS         R0467 (L03,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JE              L02,#01 [FALSE] L0012
       CALL_VN         R0462 (L03,#40)
L0012: JE              L02,#02 [FALSE] L0013
       CALL_VN         R0462 (L03,#40,L04)
L0013: JE              L02,#03 [FALSE] L0014
       CALL_VN2        R0462 (L03,#40,L04,L05)
L0014: JG              L02,#04 [FALSE] L0015
       CALL_VN         R0470 (#01,L00)
L0015: JL              L02,#04 [TRUE] L0016
       CALL_VN2        R0462 (L03,#40,L04,L05,L06)
L0016: RFALSE          
L0017: JE              Gef,#42 [FALSE] L0021
       CALL_VS         R0468 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0470 (S634,L03,(SP)+)
       RFALSE          
L0018: CALL_VS         R0467 (L03,#42) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       CALL_VN         R0462 (L03,#42)
L0019: GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: CALL_VN         R0469 (L03,(SP)+)
       INSERT_OBJ      L03,L00
       RFALSE          
L0021: JE              Gef,#43 [FALSE] L0024
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0023
L0022: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0022
L0023: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,#01 -> -(SP)
       RET_POPPED      
L0024: JE              Gef,#44 [FALSE] L0027
       CALL_VS         R0468 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0025
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0470 (S635,L03,(SP)+)
       RFALSE          
L0025: CALL_VS         R0468 (L04,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0026
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0470 (S636,L04,(SP)+)
       RFALSE          
L0026: CALL_VN         R0469 (L03,L04)
       RFALSE          
L0027: RTRUE           

Routine R0476, 3 locals

       JL              L00,#05 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0470 (#10,L00,L01) -> -(SP)
       RET_POPPED      
L0002: JL              L01,#05 [TRUE] L0003
       SUB             #0213,#ff -> -(SP)
       JG              L01,(SP)+ [TRUE] L0003
       JIN             L01,"Class" [FALSE] L0004
L0003: CALL_VS         R0470 (#11,L00,L01) -> -(SP)
       RET_POPPED      
L0004: STORE           L02,L01
L0005: JZ              L02 [TRUE] L0007
       JE              L02,L00 [FALSE] L0006
       CALL_VS         R0470 (#12,L00,L01) -> -(SP)
       RET_POPPED      
L0006: GET_PARENT      L02 -> L02
       JUMP            L0005
L0007: INSERT_OBJ      L00,L01
       RTRUE           

Routine R0477, 1 local

       JL              L00,#05 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0470 (#0f,L00) -> -(SP)
       RET_POPPED      
L0002: REMOVE_OBJ      L00
       RTRUE           

Routine R0478, 2 locals

       JL              L00,#05 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0470 (#0e,L00) -> -(SP)
       RET_POPPED      
L0002: JL              L01,#00 [TRUE] L0003
       JL              L01,#30 [TRUE] L0004
L0003: CALL_VS         R0470 (#13,L00) -> -(SP)
       RET_POPPED      
L0004: STORE           Gef,L00
       STORE           Gee,L01
       JL              Gee,#00 [TRUE] L0005
       JL              Gee,#30 [TRUE] L0006
L0005: CALL_VN         R0470 (#13,Gef,Gee)
       JUMP            L0007
L0006: TEST_ATTR       L00,L01 [FALSE] L0008
L0007: RTRUE           
L0008: SET_ATTR        L00,L01
       RTRUE           

Routine R0479, 2 locals

       JL              L00,#05 [TRUE] L0001
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0470 (#0e,L00) -> -(SP)
       RET_POPPED      
L0002: JL              L01,#00 [TRUE] L0003
       JL              L01,#30 [TRUE] L0004
L0003: CALL_VS         R0470 (#13,L00) -> -(SP)
       RET_POPPED      
L0004: STORE           Gef,L00
       STORE           Gee,L01
       JL              Gee,#00 [TRUE] L0005
       JL              Gee,#30 [TRUE] L0006
L0005: CALL_VN         R0470 (#13,Gef,Gee)
       JUMP            L0007
L0006: TEST_ATTR       L00,L01 [TRUE] L0008
L0007: RTRUE           
L0008: CLEAR_ATTR      L00,L01
       RTRUE           

Routine R0480, 4 locals

       JL              L00,#05 [TRUE] L0002
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0002
       JIN             L00,"Class" [TRUE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: STORE           L03,Gef
       JG              L03,#02 [FALSE] L0003
L0002: CALL_VS2        R0470 (S637,L00,L01,L03) -> -(SP)
       RET_POPPED      
L0003: PUT_PROP        L00,L01,L02
       RET             L02

Routine R0481, 4 locals

       JL              L00,#05 [TRUE] L0002
       SUB             #0213,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: STORE           L03,Gef
       JG              L03,#02 [FALSE] L0003
L0002: CALL_VN2        R0470 (S638,L00,L01,L03)
       STORE           L00,#02
L0003: GET_PROP        L00,L01 -> L02
       RET             L02

Routine R0482, 3 locals

       PRINT           "[Setting "
       CALL_2N         R0139 (L00)
       PRINT           "."
       CALL_2N         R0491 (L01)
       PRINT           " to "
       PRINT_NUM       L02
       PRINT           "]
"
       RTRUE           

Routine R0483, 4 locals

       ADD             L00,L01 -> L02
       CALL_VS         R0472 (L02," b jsu   z") -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_2S         R0470 (#18) -> -(SP)
       RET_POPPED      
L0001: LOADB           L00,L01 -> L03
       RET             L03

Routine R0484, 4 locals

       MUL             #02,L01 -> -(SP)
       ADD             L00,(SP)+ -> L02
       CALL_VS         R0472 (L02," b jsu   z") -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_2S         R0470 (#19) -> -(SP)
       RET_POPPED      
L0001: LOADW           L00,L01 -> L03
       RET             L03

Routine R0485, 5 locals

       ADD             L00,L01 -> L03
       CALL_VS         R0472 (L03,#3dc9) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_VS         R0472 (L03,#45c8) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0001
       STORE           L04,#01
       JUMP            L0004
L0001: CALL_VS         R0472 (L03,#10a0) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       CALL_VS         R0472 (L03,#3802) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0002
       STORE           L04,#01
       JUMP            L0004
L0002: CALL_VS         R0472 (L03,#3a88) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       CALL_VS         R0472 (L03,#3be9) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0003
       STORE           L04,#01
       JUMP            L0004
L0003: JE              L03,#11 [FALSE] L0004
       STORE           L04,#01
L0004: JZ              L04 [FALSE] L0005
       CALL_2S         R0470 (#1a) -> -(SP)
       RET_POPPED      
L0005: STOREB          L00,L01,L02
       RTRUE           

Routine R0486, 5 locals

       MUL             #02,L01 -> -(SP)
       ADD             L00,(SP)+ -> L03
       CALL_VS         R0472 (L03,#3dc9) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_VS         R0472 (L03,#45c8) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0001
       STORE           L04,#01
       JUMP            L0004
L0001: CALL_VS         R0472 (L03,#10a0) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       CALL_VS         R0472 (L03,#3802) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0002
       STORE           L04,#01
       JUMP            L0004
L0002: CALL_VS         R0472 (L03,#3a88) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       CALL_VS         R0472 (L03,#3be9) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0003
       STORE           L04,#01
       JUMP            L0004
L0003: JE              L03,#10 [FALSE] L0004
       STORE           L04,#01
L0004: JZ              L04 [FALSE] L0005
       CALL_2S         R0470 (#1b) -> -(SP)
       RET_POPPED      
L0005: STOREW          L00,L01,L02
       RTRUE           

Routine R0487, 2 locals

       JE              L00,#00,#09,#0b [TRUE] L0001
       JE              L00,#0d [FALSE] L0002
L0001: STORE           L01,#01
L0002: JL              L00,#20 [TRUE] L0003
       JG              L00,#7e [TRUE] L0003
       STORE           L01,#01
L0003: JL              L00,#9b [TRUE] L0004
       JG              L00,#fb [TRUE] L0004
       STORE           L01,#01
L0004: JZ              L01 [FALSE] L0005
       CALL_VS         R0470 (#21,L00) -> -(SP)
       RET_POPPED      
L0005: PRINT_CHAR      L00
       RTRUE           

Routine R0488, 1 local

       CALL_VS         R0472 (L00," b jsu   z") -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_2S         R0470 (#22) -> -(SP)
       RET_POPPED      
L0001: PRINT_ADDR      L00
       RTRUE           

Routine R0489, 1 local

       CALL_2S         R0471 (L00) -> -(SP)
       JE              (SP)+,#03 [TRUE] L0001
       CALL_2S         R0470 (#23) -> -(SP)
       RET_POPPED      
L0001: PRINT_PADDR     L00
       RTRUE           

Routine R0490, 1 local

       CALL_2S         R0471 (L00) -> -(SP)
       JE              (SP)+,#01 [TRUE] L0001
       CALL_2S         R0470 (#24) -> -(SP)
       RET_POPPED      
L0001: PRINT_OBJ       L00
       RTRUE           

Routine R0491, 5 locals

       AND             L00,#c000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L00,#ff -> -(SP)
       LOADW           #3802,(SP)+ -> L03
       CALL_2N         R0139 (L03)
       PRINT           "::"
       AND             L00,#8000 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       AND             L00,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       JUMP            L0004
L0001: AND             L00,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       GET_PROP        L03,#03 -> Gef
       STORE           L04,Gef
L0002: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JG              L00,#00 [FALSE] L0003
       LOADB           L04,#02 -> -(SP)
       ADD             L04,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L04
       DEC             L00
       JUMP            L0002
L0003: LOADW           L04,#00 -> -(SP)
       AND             (SP)+,#7fff -> L00
L0004: STORE           L01,#3820
       LOADW           L01,#00 -> L02
       JG              L00,#00 [FALSE] L0005
       JL              L00,L02 [FALSE] L0005
       LOADW           L01,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0005: PRINT           "<number "
       PRINT_NUM       L00
       PRINT           ">"
       JUMP            L0007
L0006: LOADW           L01,L00 -> -(SP)
       CALL_2N         R0489 ((SP)+)
L0007: RTRUE           

Routine R0492, 2 locals

       RFALSE          

[End of code]

[Start of text]

S001: "ADVENTURE"
S002: "
The Interactive Original
By Will Crowther (1976) and Don Woods (1977)
Reconstructed in three steps by:
Donald Ekman, David M. Baggett (1993) and Graham Nelson (1994)
[In memoriam Stephen Bishop (1820?-1857): GN]

"
S003: "040227"
S004: "6/11"
S005: "a"
S006: "---"
S007: "the"
S008: "The "
S009: "the "
S010: "a "
S011: "The "
S012: "the "
S013: "an "
S014: "The "
S015: "the "
S016: "some "
S017: "The "
S018: "the "
S019: "some "
S020: "N = next subject"
S021: "P = previous"
S022: "  Q = resume game"
S023: "Q = previous menu"
S024: "RETURN = read subject"
S025: "Score: "
S026: "Moves: "
S027: "Time: "
S028: "You can't go that way."
S029: "your former self"
S030: "yourself"
S031: "You"
S032: "Darkness"
S033: "those things"
S034: "that"
S035: " or "
S036: "nothing"
S037: " is"
S038: " are"
S039: "is "
S040: "are "
S041: " and "
S042: "whom "
S043: "which "
S044: ", "
S045: "Violence isn't the answer to this one."
S046: "This dangerous act would achieve little."
S047: "I don't think much is to be achieved by that."
S048: "You discover nothing of interest in "
S049: "Digging would achieve nothing here."
S050: "There's nothing suitable to drink here."
S051: "That would scarcely empty anything."
S052: "You can only get into something free-standing."
S053: "Darkness, noun.  An absence of light to see by."
S054: "But you aren't in anything at the moment."
S055: "But there's no water here to carry."
S056: " for a while, but don't achieve much."
S057: "You can't put something inside itself."
S058: "You jump on the spot, fruitlessly."
S059: "You would achieve nothing by this."
S060: " (closed, empty and providing light)"
S061: " is now in its normal "brief" printing mode, which gives long
descriptions of places never before visited and short descriptions otherwise."
S062: " is now in its "verbose" mode, which always gives long descriptions of
locations (even if you've been there before)."
S063: " is now in its "superbrief" mode, which always gives short descriptions
of locations (even if you haven't been there before)."
S064: "seem to be something you can lock."
S065: "You see nothing unexpected in that direction."
S066: "(considering the first sixteen objects only)
"
S067: "
Would you like to RESTART, RESTORE a saved game"
S068: ", give the FULL score for that game"
S069: ", see some suggestions for AMUSING things to do"
S070: "[Your interpreter does not provide "undo".  Sorry!]"
S071: ""Undo" failed.  [Not all interpreters provide it.]"
S072: "Please give one of the answers above."
S073: "[You can't "undo" what hasn't been done!]"
S074: "[Can't "undo" twice in succession. Sorry!]"
S075: ""Oops" can only correct a single word."
S076: "It is pitch dark, and you can't see a thing."
S077: "To repeat a command like "frog, jump", just say "again", not "frog,
again"."
S078: "You seem to want to talk to someone, but I can't see whom."
S079: "To talk to someone, try "someone, hello" or some such."
S080: "I didn't understand that sentence."
S081: "I only understood you as far as wanting to "
S082: "You seem to have said too little!"
S083: "You can't use multiple objects with that verb."
S084: "You can only use multiple objects once on a line."
S085: "You excepted something not included anyway!"
S086: "You can only do that to something animate."
S087: "That's not something you need to refer to in the course of this game."
S088: "I didn't understand the way that finished."
S089: "Sorry, you can only have one item here. Which exactly?"
S090: "(Since something dramatic has happened, your list of commands has been
cut short.)"
S091: "Nothing practical results from your prayer."
S092: "no pronouns are known to the game."
S093: "That would be less than courteous."
S094: "Is that the best you can think of?"
S095: "You can't put something on top of itself."
S096: "Are you sure you want to restart? "
S097: "Attempt to end transcript failed."
S098: "Attempt to begin transcript failed."
S099: "You aren't feeling especially drowsy."
S100: "Real adventurers do not use such language."
S101: "There's not enough water to swim in."
S102: "There's nothing sensible to swing here."
S103: "You're carrying too many things already."
S104: "You lack the nerve when it comes to the crucial moment."
S105: "seem to be something you can unlock."
S106: "You'll have to say which compass direction to go in."
S107: "The game file has verified as intact."
S108: "The game file did not verify as intact, and may be corrupt."
S109: "The dreadful truth is, this is not a dream."
S110: "Error: Overflow in PrintToBuffer.
"
S111: "You are standing at the end of a road before a small brick building.
Around you is a forest. A small stream flows out of the building and down a
gully."
S112: "It's a small brick building. It seems to be a well house."
S113: "You have taken a drink from the stream. The water tastes strongly of
minerals, but is not unpleasant. It is extremely cold."
S114: "You have nothing in which to carry the water."
S115: "You have nothing in which to carry the water."
S116: "The sudden change in temperature has delicately shattered the vase."
S117: "The road is dirt, not yellow brick."
S118: "The trees of the forest are large hardwood oak and maple, with an
occasional grove of pine or spruce. There is quite a bit of undergrowth,
largely birch and ash saplings plus nondescript bushes of various sorts. This
time of year visibility is quite restricted by all the leaves, but travel is
quite easy if you detour around the spruce and berry bushes."
S119: "You have walked up a hill, still in the forest. The road slopes back
down the other side of the hill. There is a building in the distance."
S120: "It's just a typical hill."
S121: "the"
S122: "Why not explore it yourself?"
S123: "You are inside a building, a well house for a large spring."
S124: "The stream flows out through a pair of 1 foot diameter sewer pipes. The
only exit is to the west."
S125: "The stream flows out through a pair of 1 foot diameter sewer pipes. It
would be advisable to use the exit."
S126: "The pipes are too small."
S127: "The stream flows out through a pair of 1 foot diameter sewer pipes."
S128: "Too small. The only exit is to the west."
S129: "It's just a normal-looking set of keys."
S130: "There are some keys on the ground here."
S131: "some"
S132: "Sure looks yummy!"
S133: "There is tasty food here."
S134: "There is a shiny brass lamp nearby."
S135: "Your lamp is here, gleaming brightly."
S136: " You can't explore the cave without a lamp. So let's just call it a
day."
S137: " You're also out of spare batteries. You'd best start wrapping this up."
S138: " You'd best start wrapping this up, unless you can find some fresh
batteries. I seem to recall there's a vending machine in the maze. Bring some
coins with you."
S139: " You'd best go back for those batteries."
S140: "Rubbing the electric lamp is not particularly rewarding. Anyway, nothing
exciting happens."
S141: "Unfortunately, the batteries seem to be dead."
S142: "Those batteries are dead; they won't do any good at all."
S143: "The only thing you might successfully put in the lamp is a fresh pair of
batteries."
S144: "I'm taking the liberty of replacing the batteries."
S145: "There is an empty bottle here."
S146: "You're holding that already (in the bottle)."
S147: "The bottle is only supposed to hold liquids."
S148: "There is nothing here with which to fill the bottle."
S149: "Your bottle is now empty and the ground is now wet."
S150: "some"
S151: "It looks like ordinary water to me."
S152: "some"
S153: "It looks like ordinary oil to me."
S154: "You are in open forest, with a deep valley to one side."
S155: "You are in open forest near both a valley and a road."
S156: "You are in a valley in the forest beside a stream tumbling along a rocky
bed."
S157: "At your feet all the water of the stream splashes into a 2-inch slit in
the rock. Downstream the streambed is bare rock."
S158: "You don't fit through a two-inch slit!"
S159: "You don't fit through a two-inch slit!"
S160: "It's just a 2-inch slit in the rock, through which the stream is
flowing."
S161: "You don't fit through a two-inch slit!"
S162: "You are in a 20-foot depression floored with bare dirt. Set into the
dirt is a strong steel grate mounted in concrete. A dry streambed leads into
the depression."
S163: "You're standing in it."
S164: "It just looks like an ordinary grate mounted in concrete."
S165: "You are in a small chamber beneath a 3x3 steel grate to the surface. A
low crawl over cobbles leads inward to the west."
S166: "They're just ordinary cobbles."
S167: "You are crawling over cobbles in a low passage. There is a dim light at
the east end of the passage."
S168: "It's a small wicker cage."
S169: "There is a small wicker cage discarded nearby."
S170: "You are in a debris room filled with stuff washed in from the surface. A
low wide passage with cobbles becomes plugged with mud and debris here, but an
awkward canyon leads upward and west. 

A note on the wall says, "Magic word XYZZY.""
S171: "Yuck."
S172: "The note says "Magic word XYZZY"."
S173: "It's a three foot black rod with a rusty star on an end."
S174: "A three foot black rod with a rusty star on one end lies nearby."
S175: "A crystal bridge now spans the fissure."
S176: "You are in an awkward sloping east/west canyon."
S177: "You are in a splendid chamber thirty feet high. The walls are frozen
rivers of orange stone. An awkward canyon and a good passage exit from east and
west sides of the chamber."
S178: "A cheerful little bird is sitting here singing."
S179: "The little bird looks unhappy in the cage."
S180: "The cheerful little bird is sitting here singing."
S181: "(The bird is released from the cage.)

"
S182: "You already have the little bird. If you take it out of the cage it will
likely fly away from you."
S183: "You can catch the bird, but you cannot carry it."
S184: "The bird was unafraid when you entered, but as you approach it becomes
disturbed and you cannot catch it."
S185: "You catch the bird in the wicker cage."
S186: "The little bird attacks the green snake, and in an astounding flurry
drives the snake away."
S187: "The little bird attacks the green dragon, and in an astounding flurry
gets burnt to a cinder. The ashes blow away."
S188: "It's not hungry. (It's merely pinin' for the fjords). Besides, I suspect
it would prefer bird seed."
S189: "Oh, leave the poor unhappy bird alone."
S190: "The little bird is now dead. Its body disappears."
S191: "At your feet is a small pit breathing traces of white mist. A west
passage ends here except for a small crack leading on. 

Rough stone steps lead down the pit."
S192: "The crack is far too small for you to follow."
S193: "You are at the bottom of the pit with a broken neck."
S194: "The crack is far too small for you to follow."
S195: "The pit is breathing traces of white mist."
S196: "The crack is very small -- far too small for you to follow."
S197: "Mist is a white vapor, usually water, seen from time to time in caverns.
It can be found anywhere but is frequently a sign of a deep pit leading down to
water."
S198: "You are at one end of a vast hall stretching forward out of sight to the
west. There are openings to either side. Nearby, a wide stone staircase leads
downward. The hall is filled with wisps of white mist swaying to and fro almost
as if alive. A cold wind blows up the staircase. There is a passage at the top
of a dome behind you. 

Rough stone steps lead up the dome."
S199: "The staircase leads down."
S200: "The rough stone steps lead up the dome."
S201: "I'm not sure you'll be able to get up it with what you're carrying."
S202: "It looks like you might be able to climb up it."
S203: "This is a low room with a crude note on the wall: 

"You won't get it up the steps"."
S204: "The note says, "You won't get it up the steps"."
S205: "It's a large sparkling nugget of gold!"
S206: "There is a large sparkling nugget of gold here!"
S207: "I respectfully suggest you go across the bridge instead of jumping."
S208: "The fissure is too terrifying!"
S209: "You are on the east bank of a fissure slicing clear across the hall. The
mist is quite thick here, and the fissure is too wide to jump."
S210: "The fissure is too wide."
S211: "You are on the west side of the fissure in the hall of mists."
S212: "The fissure is too wide."
S213: "You have crawled through a very low wide passage parallel to and north
of the hall of mists.
"
S214: "some"
S215: "They look to be of the highest quality!"
S216: "There are diamonds here!"
S217: "It spans the fissure, thereby providing you a way across."
S218: "A crystal bridge now spans the fissure."
S219: "The fissure looks far too wide to jump."
S220: "You are at the west end of the hall of mists. A low wide crawl continues
west and another goes north. To the south is a little passage 6 feet off the
floor."
S221: "You have crawled through a very low wide passage parallel to and north
of the hall of mists.
"
S222: "You are at the east end of a very long hall apparently without side
chambers. To the east a low wide crawl slants up. To the north a round two foot
hole slants down."
S223: "You are at the west end of a very long featureless hall. The hall joins
up with a narrow north/south passage."
S224: "You are at a crossover of a high N/S passage and a low E/W one."
S225: "You know as much as I do at this point."
S226: "Dead End"
S227: "You have reached a dead end."
S228: "You'll have to go back the way you came."
S229: "You are in the hall of the mountain king, with passages off in all
directions."
S230: "Well, perhaps not quite all directions."
S231: "I wouldn't mess with it if I were you."
S232: "A huge green fierce snake bars the way!"
S233: "The snake has now devoured your bird."
S234: "There's nothing here it wants to eat (except perhaps you)."
S235: "Attacking the snake both doesn't work and is very dangerous."
S236: "You are in a low N/S passage at a hole in the floor. The hole goes down
to an E/W passage."
S237: "some"
S238: "They're probably worth a fortune!"
S239: "There are bars of silver here!"
S240: "You are in the south side chamber."
S241: "some"
S242: "It's all quite exquisite!"
S243: "There is precious jewelry here!"
S244: "You are in the west side chamber of the hall of the mountain king. A
passage continues west and up here."
S245: "many"
S246: "They're a numismatist's dream!"
S247: "There are many coins here!"
S248: "You are in a large room, with a passage to the south, a passage to the
west, and a wall of broken rock to the east. There is a large "Y2" on a rock in
the room's center."
S249: "There is a large "Y2" painted on the rock."
S250: "You are in a jumble of rock, with cracks everywhere."
S251: "You're at a low window overlooking a huge pit, which extends up out of
sight. A floor is indistinctly visible over 50 feet below. Traces of white mist
cover the floor of the pit, becoming thicker to the right. Marks in the dust
around the window would seem to indicate that someone has been here recently.
Directly across the pit from you and 25 feet away there is a similar window
looking into a lighted room. A shadowy figure can be seen there peering back at
you."
S252: "The shadowy figure waves back at you!"
S253: "The only passage is back east to Y2."
S254: "It looks like a regular window."
S255: "It's so deep you can barely make out the floor below, and the top isn't
visible at all."
S256: "Evidently you're not alone here."
S257: "The shadowy figure seems to be trying to attract your attention."
S258: "You are in a dirty broken passage. To the east is a crawl. To the west
is a large passage. Above you is a hole to another passage."
S259: "You are on the brink of a small clean climbable pit. A crawl leads
west."
S260: "It looks like you might be able to climb down into it."
S261: "You are in the bottom of a small pit with a little stream, which enters
and exits through tiny slits."
S262: "You don't fit through the tiny slits!"
S263: "The slits form a complex pattern in the rock."
S264: "You are in a large room full of dusty rocks. There is a big hole in the
floor. There are cracks everywhere, and a passage leading east."
S265: "They're just rocks. (Dusty ones, that is.)"
S266: "You'd have to blast your way through."
S267: "Maze"
S268: "You are in a maze of twisty little passages, all alike."
S269: "Easier said than done."
S270: "You are on the brink of a thirty foot pit with a massive orange column
down one wall. You could climb down here but you could not get back up. The
maze continues at this level."
S271: "It looks like you could climb down it."
S272: "You'll have to climb down to find out anything more..."
S273: "You are at a complex junction. A low hands and knees passage from the
north joins a higher crawl from the east to make a walking passage going west.
There is also a large room above. The air is damp here."
S274: "You are in bedquilt, a long east/west passage with holes everywhere. To
explore at random select north, south, up, or down."
S275: "You have crawled around in some little holes and wound up back in the
main passage."
S276: "You are in a room whose walls resemble swiss cheese. Obvious passages go
west, east, ne, and nw. Part of the room is occupied by a large bedrock block."
S277: "You have crawled around in some little holes and wound up back in the
main passage."
S278: "It's just a huge block."
S279: "You are at the west end of the twopit room. There is a large hole in the
wall above the pit at this end of the room."
S280: "It is too far up for you to reach."
S281: "It is too far up for you to reach."
S282: "The top of a 12-foot-tall beanstalk is poking out of the west pit."
S283: "There is a huge beanstalk growing out of the west pit up to the hole."
S284: "The hole is in the wall above the pit at this end of the room."
S285: "You are at the bottom of the western pit in the twopit room. There is a
large hole in the wall about 25 feet above you."
S286: "There is nothing here to climb. Use "up" or "out" to leave the pit."
S287: "There is a tiny little plant in the pit, murmuring "Water, water, ...""
S288: "There is a 12-foot-tall beanstalk stretching up out of the pit,
bellowing "Water!! Water!!""
S289: "There is a gigantic beanstalk stretching all the way up to the hole."
S290: "You have climbed up the plant and out of the pit.
"
S291: "You clamber up the plant and scurry through the hole at the top.
"
S292: "The plant has exceptionally deep roots and cannot be pulled free."
S293: "You have nothing to water the plant with."
S294: "The plant indignantly shakes the oil off its leaves and asks, "Water?""
S295: "The plant spurts into furious growth for a few seconds.

"
S296: "The plant grows explosively, almost filling the bottom of the pit.

"
S297: "You've over-watered the plant! It's shriveling up! It's, it's...

"
S298: "You are at the east end of the twopit room. The floor here is littered
with thin rock slabs, which make it easy to descend the pits. There is a path
here bypassing the pits to connect passages from east and west. There are holes
all over, but the only big one is on the wall directly over the west pit where
you can't get to it."
S299: "They almost form natural stairs down into the pit."
S300: "Surely you're joking. You'd have to blast them aside."
S301: "You are at the bottom of the eastern pit in the twopit room. There is a
small pool of oil in one corner of the pit."
S302: "It looks like ordinary oil."
S303: "You have nothing in which to carry the oil."
S304: "You have nothing in which to carry the oil."
S305: "The hole is in the wall above you."
S306: "You are in a large low circular chamber whose floor is an immense slab
fallen from the ceiling (slab room). East and west there once were large
passages, but they are now filled with boulders. Low small passages go north
and south, and the south one quickly bends west around the boulders."
S307: "It is now the floor here."
S308: "They're just ordinary boulders."
S309: "You are in a secret N/S canyon above a large room."
S310: "You are in a secret N/S canyon above a sizable passage."
S311: "You are in a secret canyon at a junction of three canyons, bearing
north, south, and se. The north one is as tall as the other two combined."
S312: "You are in a large low room. Crawls lead north, se, and sw."
S313: "This is a dead end crawl."
S314: "You are in a secret canyon which here runs E/W. It crosses over a very
tight canyon 15 feet below. If you go down you may not be able to get back up."
S315: "You are at a wide place in a very tight N/S canyon."
S316: "The canyon here becomes too tight to go further south."
S317: "You are in a tall E/W canyon. A low tight crawl goes 3 feet north and
seems to open up."
S318: "A large stalactite extends from the roof and almost reaches the floor
below. You could climb down it, and jump from it to the floor, but having done
so you would be unable to reach it to climb back up."
S319: "You could probably climb down it, but you can forget coming back up."
S320: "You are in a secret canyon which exits to the north and east."
S321: "The dragon looks rather nasty. You'd best not try to get by."
S322: "The dragon looks rather nasty. You'd best not try to get by."
S323: "Congratulations! You have just vanquished a dragon with your bare hands!
(Unbelievable, isn't it?)"
S324: "I wouldn't mess with it if I were you."
S325: "A huge green fierce dragon bars the way!"
S326: "You'd probably be better off using your bare hands than that thing!"
S327: "The axe bounces harmlessly off the dragon's thick scales."
S328: "The dragon is sprawled out on the Persian rug!"
S329: "The Persian rug is spread out on the floor here."
S330: "You'll need to get the dragon to move first!"
S331: "The body of a huge green dead dragon is lying off to one side."
S332: "You've already done enough damage!"
S333: "The canyon runs into a mass of boulders -- dead end."
S334: "This is the pirate's dead end."
S335: "You've found the pirate's treasure chest!"
S336: "It's the pirate's treasure chest, filled with riches of all kinds!"
S337: "The pirate's treasure chest is here!"
S338: "You are in a long, narrow corridor stretching out of sight to the west.
At the eastern end is a hole through which you can see a profusion of leaves."
S339: "some"
S340: "The leaves appear to be attached to the beanstalk you climbed to get
here."
S341: "You are at the top of a steep incline above a large room. You could
climb down here, but you would not be able to climb up. There is a passage
leading back to the north."
S342: "You are in the giant room. The ceiling here is too high up for your lamp
to show it. Cavernous passages lead east, north, and south. On the west wall is
scrawled the inscription, "Fee fie foe foo" [sic]."
S343: "It says, "Fee fie foe foo [sic].""
S344: "The nest is filled with beautiful golden eggs!"
S345: "There is a large nest here, full of golden eggs!"
S346: "The passage here is blocked by a recent cave-in."
S347: "You are at one end of an immense north/south passage."
S348: "It's just a big iron door."
S349: "The way north is barred by a massive, rusty, iron door."
S350: "The way north leads through a massive, rusty, iron door."
S351: "The hinges are quite thoroughly rusted now and won't budge."
S352: "With all the effort it took to get the door open, I wouldn't suggest
closing it again."
S353: "No problem there -- it already is."
S354: "The oil has freed up the hinges so that the door will now move, although
it requires some effort."
S355: "The hinges are quite thoroughly rusted now and won't budge."
S356: "You have nothing to water it with."
S357: "The door heaves open with a shower of rust."
S358: "You are in a magnificent cavern with a rushing stream, which cascades
over a sparkling waterfall into a roaring whirlpool which disappears through a
hole in the floor. Passages exit to the south and west."
S359: "Wouldn't want to go down in in a barrel!"
S360: "The trident is covered with fabulous jewels!"
S361: "There is a jewel-encrusted trident here!"
S362: "You are in the soft room. The walls are covered with heavy curtains, the
floor with a thick pile carpet. Moss covers the ceiling."
S363: "The carpet is quite plush."
S364: "They seem to absorb sound very well."
S365: "Now don't go ripping up the place!"
S366: "You don't find anything exciting behind the curtains."
S367: "It just looks like your typical, everyday moss."
S368: "It crumbles to nothing in your hands."
S369: "It's just a small velvet pillow."
S370: "A small velvet pillow lies on the floor."
S371: "This is the oriental room. Ancient oriental cave drawings cover the
walls. A gently sloping passage leads upward to the north, another passage
leads se, and a hands and knees crawl leads west."
S372: "They seem to depict people and animals."
S373: "It's a delicate, precious, ming vase!"
S374: "(coming to rest, delicately, on the velvet pillow)
"
S375: "The ming vase drops with a delicate crash."
S376: "You have taken the vase and hurled it delicately to the ground."
S377: "The vase is too fragile to use as a container."
S378: "They look to be the remains of what was once a beautiful vase. I guess
some oaf must have dropped it."
S379: "The floor is littered with worthless shards of pottery."
S380: "You are following a wide path around the outer edge of a large cavern.
Far below, through a heavy white mist, strange splashing noises can be heard.
The mist rises up through a fissure in the ceiling. The path exits to the south
and west."
S381: "You can't really get close enough to examine it."
S382: "You are in an alcove. A small northwest path seems to widen after a
short distance. An extremely tight tunnel leads east. It looks like a very
tight squeeze. An eerie light can be seen at the other end."
S383: "Something you're carrying won't fit through the tunnel with you. You'd
best take inventory and drop something."
S384: "You're in a small chamber lit by an eerie green light. An extremely
narrow tunnel exits to the west. A dark corridor leads northeast."
S385: "Something you're carrying won't fit through the tunnel with you. You'd
best take inventory and drop something."
S386: "an"
S387: "Plover's eggs, by the way, are quite large."
S388: "There is an emerald here the size of a plover's egg!"
S389: "You're in the dark-room. A corridor leading south is the only exit."
S390: "A massive stone tablet imbedded in the wall reads: "Congratulations on
bringing light into the dark-room!""
S391: "The platinum pyramid is 8 inches on a side!"
S392: "There is a platinum pyramid here, 8 inches on a side!"
S393: "You are in an arched hall. A coral passage once continued up and east
from here, but is now blocked by debris. The air smells of sea water."
S394: "You're in a large room carved out of sedimentary rock. The floor and
walls are littered with bits of shells imbedded in the stone. A shallow passage
proceeds downward, and a somewhat steeper one leads up. A low hands and knees
passage enters from the south."
S395: "You can't fit this five-foot oyster through that little passage!"
S396: "You can't fit this five-foot clam through that little passage!"
S397: "There is an enormous oyster here with its shell tightly closed."
S398: "There is an enormous clam here with its shell tightly closed."
S399: "Interesting. There seems to be something written on the underside of the
oyster: 

"There is something strange about this place, such that one of the curses I've
always known now has a new effect.""
S400: "You aren't strong enough to open the clam with your bare hands."
S401: " isn't strong enough to open the clam."
S402: "The oyster creaks open, revealing nothing but oyster inside. It promptly
snaps shut again."
S403: "A glistening pearl falls out of the clam and rolls away. Goodness, this
must really be an oyster. (I never was very good at identifying bivalves.)
Whatever it is, it has now snapped shut again."
S404: "The shell is very strong and is impervious to attack."
S405: "It's incredibly large!"
S406: "Off to one side lies a glistening pearl!"
S407: "You are in a long sloping corridor with ragged sharp walls."
S408: "You are in a cul-de-sac about eight feet across."
S409: "You are in an anteroom leading to a large passage to the east. Small
passages go west and up. The remnants of recent digging are evident."
S410: "A sign in midair here says "Cave under construction beyond this point.
Proceed at own risk. [Witt Construction Company]""
S411: "It's hanging way above your head."
S412: "a few"
S413: "I'm afraid the magazines are written in Dwarvish."
S414: "There are a few recent issues of "Spelunker Today" magazine here."
S415: "You are at Witt's End. Passages lead off in *all* directions."
S416: "You have crawled around in some little holes and found your way blocked
by a recent cave-in. You are now back in the main passage."
S417: "You have crawled around in some little holes and wound up back in the
main passage."
S418: "You are in a north/south canyon about 25 feet across. The floor is
covered by white mist seeping in from the north. The walls extend upward for
well over 100 feet. Suspended from some unseen point far above you, an enormous
two-sided mirror is hanging parallel to and midway between the canyon walls. 

A small window can be seen in either wall, some fifty feet up."
S419: "The mirror is obviously provided for the use of the dwarves who, as you
know, are extremely vain."
S420: "The mirror is obviously provided for the use of the dwarves, who as you
know, are extremely vain."
S421: "You're at a low window overlooking a huge pit, which extends up out of
sight. A floor is indistinctly visible over 50 feet below. Traces of white mist
cover the floor of the pit, becoming thicker to the left. Marks in the dust
around the window would seem to indicate that someone has been here recently.
Directly across the pit from you and 25 feet away there is a similar window
looking into a lighted room. A shadowy figure can be seen there peering back at
you."
S422: "The only passage is back west to the junction."
S423: "The shadowy figure waves back at you!"
S424: "You are at the edge of a large underground reservoir. An opaque cloud of
white mist fills the room and rises rapidly upward. The lake is fed by a
stream, which tumbles out of a hole in the wall about 10 feet overhead and
splashes noisily into the water somewhere within the mist. The only passage
goes back toward the south."
S425: "The water is icy cold, and you would soon freeze to death."
S426: "You are in a long winding corridor sloping out of sight in both
directions."
S427: "The corridor slopes steeply up and down."
S428: "You are on one side of a large, deep chasm. A heavy white mist rising up
from below obscures all view of the far side. A southwest path leads away from
the chasm into a winding corridor."
S429: "The path winds southwest."
S430: "I respectfully suggest you go across the bridge instead of jumping."
S431: "Just as you reach the other side, the bridge buckles beneath the weight
of the bear, which was still following you around. You scrabble desperately for
support, but as the bridge collapses you stumble back and fall into the chasm."
S432: "The troll refuses to let you cross."
S433: "The troll steps out from beneath the bridge and blocks your way."
S434: "It just looks like an ordinary, but unstable, bridge."
S435: "A rickety wooden bridge extends across the chasm, vanishing into the
mist. 

A sign posted on the bridge reads, "Stop! Pay troll!"
"
S436: "Trolls are close relatives with rocks and have skin as tough as that of
a rhinoceros."
S437: "A burly troll stands by the bridge and insists you throw him a treasure
before you may cross."
S438: "The troll laughs aloud at your pitiful attempt to injure him."
S439: "The troll catches your treasure and scurries away out of sight."
S440: "Gluttony is not one of the troll's vices. Avarice, however, is."
S441: ", examines it carefully, and tosses it back, declaring, "Good
workmanship, but it's not valuable enough.""
S442: "The wreckage of the troll bridge (and a dead bear) can be seen at the
bottom of the chasm."
S443: "You are on the far side of the chasm. A northeast path leads away from
the chasm on this side."
S444: "I respectfully suggest you go across the bridge instead of jumping."
S445: "You're in a long east/west corridor. A faint rumbling noise can be heard
in the distance."
S446: "The path forks here. The left fork leads northeast. A dull rumbling
seems to get louder in that direction. The right fork leads southeast down a
gentle slope. The main corridor enters from the west."
S447: "The walls are quite warm here. From the north can be heard a steady
roar, so loud that the entire cave seems to be trembling. Another passage leads
south, and a low crawl goes east."
S448: "You are on the edge of a breath-taking view. Far below you is an active
volcano, from which great gouts of molten lava come surging  out, cascading
back down into the depths. The glowing rock fills the farthest reaches of the
cavern with a blood-red glare, giving everything an eerie, macabre appearance.
The air is filled with flickering sparks of ash and a heavy smell of brimstone.
The walls are hot to the touch, and the thundering of the volcano drowns out
all other sounds. Embedded in the jagged roof far overhead are myriad twisted
formations composed of pure white alabaster, which scatter the murky light into
sinister apparitions upon the walls. To one side is a deep gorge, filled with a
bizarre chaos of tortured rock which seems to have been crafted by the devil
himself. An immense river of fire crashes out from the depths of the volcano,
burns its way through the gorge, and plummets into a bottomless pit far off to
your left. To the right, an immense geyser of blistering steam erupts
continuously from a barren island in the center of a sulfurous lake, which
bubbles ominously. The far right wall is aflame with an incandescence of its
own, which lends an additional infernal splendor to the already hellish scene.
A dark, forboding passage exits to the south."
S449: "Don't be ridiculous!"
S450: "Great gouts of molten lava come surging out of the volcano and go
cascading back down into the depths. The glowing rock fills the farthest
reaches of the cavern with a blood-red glare, giving everything an eerie,
macabre appearance."
S451: "The sparks too far away for you to get a good look at them."
S452: "Embedded in the jagged roof far overhead are myriad twisted formations
composed of pure white alabaster, which scatter the murky light into sinister
apparitions upon the walls."
S453: "The gorge is filled with a bizarre chaos of tortured rock which seems to
have been crafted by the devil himself."
S454: "The river of fire crashes out from the depths of the volcano, burns its
way through the gorge, and plummets into a bottomless pit far off to your
left."
S455: "The geyser of blistering steam erupts continuously from a barren island
in the center of a sulfurous lake, which bubbles ominously."
S456: "You are in a small chamber filled with large boulders. The walls are
very warm, causing the air in the room to be almost stifling from the heat. The
only exit is a crawl heading west, through which is coming a low rumbling."
S457: "They're just ordinary boulders. They're warm."
S458: "a selection of"
S459: "You are walking along a gently sloping north/south passage lined with
oddly shaped limestone formations."
S460: "Every now and then a particularly strange shape catches your eye."
S461: "You are standing at the entrance to a large, barren room. A sign posted
above the entrance reads: "Caution! Bear in room!""
S462: "The sign reads, "Caution! Bear in room!""
S463: "You are inside a barren room. The center of the room is completely empty
except for some dust. Marks in the dust lead away toward the far end of the
room. The only exit is the way you came in."
S464: "It just looks like ordinary dust."
S465: "You are being followed by a very large, tame bear."
S466: "There is a ferocious cave bear eyeing you from the far end of the room!"
S467: "There is a gentle cave bear sitting placidly in one corner."
S468: "There is a contented-looking bear wandering about nearby."
S469: "The bear is confused; he only wants to be your friend."
S470: "With what? Your bare hands? Against *his* bear hands??"
S471: "The bear is confused; he only wants to be your friend."
S472: "The axe misses and lands near the bear where you can't get at it."
S473: "The bear eagerly wolfs down your food, after which he seems to calm down
considerably and even becomes rather friendly."
S474: "The bear doesn't seem very interested in your offer."
S475: "Uh-oh -- your offer only makes the bear angrier!"
S476: "This is a Bear of very little brain."
S477: "The bear is still chained to the wall."
S478: "Ok, the bear's now following you around."
S479: "The bear lumbers toward the troll, who lets out a startled shriek and
scurries away. The bear soon gives up the pursuit and wanders back."
S480: "
The bear lumbers along behind you."
S481: "The chain has thick links of solid gold!"
S482: "The bear is held back by a solid gold chain."
S483: "A solid golden chain lies in coils on the ground!"
S484: "It's locked to the friendly bear."
S485: "It's locked to the ferocious bear!"
S486: "There is no way to get past the bear to unlock the chain, which is
probably just as well."
S487: "You unlock the chain, and set the tame bear free."
S488: "Maze"
S489: "You are in a maze of twisty little passages, all different."
S490: "You are in a little maze of twisting passages, all different."
S491: "You are in a maze of twisting little passages, all different."
S492: "You are in a little maze of twisty passages, all different."
S493: "You are in a twisting maze of little passages, all different."
S494: "You are in a twisting little maze of passages, all different."
S495: "You are in a twisty little maze of passages, all different."
S496: "You are in a twisty maze of little passages, all different."
S497: "You are in a little twisty maze of passages, all different."
S498: "You are in a maze of little twisting passages, all different."
S499: "You are in a maze of little twisty passages, all different."
S500: "Dead End, near Vending Machine"
S501: "You have reached a dead end. There is a massive vending machine here. 

Hmmm... There is a message here scrawled in the dust in a flowery script."
S502: "The message reads, "This is not the maze where the pirate leaves his
treasure chest.""
S503: "The instructions on the vending machine read, "Insert coins to receive
fresh batteries.""
S504: "Soon after you insert the coins in the coin slot, the vending machine
makes a grinding sound, and a set of fresh batteries falls at your feet."
S505: "The machine seems to be designed to take coins."
S506: "The machine is quite sturdy and survives your attack without getting so
much as a scratch."
S507: "You don't find anything under the machine."
S508: "You can't get inside the machine."
S509: "The vending machine is far too heavy to move."
S510: "They look like ordinary batteries. (A sepulchral voice says, "Still
going!")"
S511: "There are fresh batteries here."
S512: "They look like ordinary batteries."
S513: "Some worn-out batteries have been discarded nearby."
S514: "It's probably not a good idea to get too close. Suffice it to say the
little guy's pretty aggressive."
S515: "A threatening little dwarf hides in the shadows."
S516: "A dwarf appears, but with one casual blast the dragon vapourises him!"
S517: "A threatening little dwarf comes out of the shadows!"
S518: "The dwarf throws a nasty little axe at you, misses, curses, and runs
away."
S519: "The dwarf admires himself in the mirror."
S520: "The dwarf throws a nasty little knife at you, "
S521: "
Tiring of this, the dwarf slips away."
S522: "You boot the dwarf across the room. He curses, then gets up and brushes
himself off. Now he's madder than ever!"
S523: "You killed a little dwarf! The body vanishes in a cloud of greasy black
smoke."
S524: "Missed! The little dwarf dodges out of the way of the axe."
S525: "You fool, dwarves eat only coal! Now you've made him *really* mad!"
S526: "The dwarf is not at all interested in your offer. (The reason being,
perhaps, that if he kills you he gets everything you have anyway.)"
S527: "Not with your bare hands. No way."
S528: "It's just a little axe."
S529: "There is a little axe here."
S530: "No chance. It's lying beside the ferocious bear, quite within harm's
way."
S531: "
A bearded pirate appears, catches sight of the dwarf and runs away."
S532: "
There are faint rustling noises from the darkness behind you. As you turn
toward them, you spot a bearded pirate. He is carrying a large chest. 

"Shiver me timbers!" he cries, "I've been spotted! I'd best hie meself off to
the maze to hide me chest!" 

With that, he vanishes into the gloom."
S533: "
Out from the shadows behind you pounces a bearded pirate! "Har, har," he
chortles. "I'll just take all this booty and hide it away with me chest deep in
the maze!" He snatches your treasure and vanishes into the gloom."
S534: "
A sepulchral voice reverberating through the cave says, "Cave closing soon. All
adventurers exit immediately through main office.""
S535: "
The sepulchral voice intones, "The cave is now closed." As the echoes fade,
there is a blinding flash of light (and a small puff of orange smoke). . . 

As your eyes refocus, you look around...
"
S536: "You are at the northeast end of an immense room, even larger than the
giant room. It appears to be a repository for the "Adventure" program. Massive
torches far overhead bathe the room with smoky yellow light. Scattered about
you can be seen a pile of bottles (all of them empty), a nursery of young
beanstalks murmuring quietly, a bed of oysters, a bundle of black rods with
rusty stars on their ends, and a collection of brass lanterns. Off to one side
a great many dwarves are sleeping on the floor, snoring loudly. A sign nearby
reads: "Do not disturb the dwarves!""
S537: "It looks like an ordinary, albeit enormous, mirror."
S538: "An immense mirror is hanging against one wall, and stretches to the
other end of the room, where various other sundry objects can be glimpsed dimly
in the distance."
S539: "You strike the mirror a resounding blow, whereupon it shatters into a
myriad tiny fragments.

"
S540: "You've seen everything in here already, albeit in somewhat different
contexts."
S541: "Realizing that by removing the loot here you'd be ruining the game for
future players, you leave the "Adventure" materials where they are."
S542: "hundreds of angry"
S543: "I wouldn't bother the dwarves if I were you."
S544: "You prod the nearest dwarf, who wakes up grumpily, takes one look at
you, curses, and grabs for his axe.

"
S545: "The resulting ruckus has awakened the dwarves. There are now dozens of
threatening little dwarves in the room with you! Most of them throw knives at
you! All of them get you!"
S546: "You are at the southwest end of the repository. To one side is a pit
full of fierce green snakes. On the other side is a row of small wicker cages,
each of which contains a little sulking bird. In one corner is a bundle of
black rods with rusty marks on their ends. A large number of velvet pillows are
scattered about on the floor. A vast mirror stretches off to the northeast. At
your feet is a large steel grate, next to which is a sign which reads,
"TREASURE VAULT. Keys in main office.""
S547: "It just looks like an ordinary steel grate."
S548: "The grate is open."
S549: "The grate is closed."
S550: "You've seen everything in here already, albeit in somewhat different
contexts."
S551: "Realizing that by removing the loot here you'd be ruining the game for
future players, you leave the "Adventure" materials where they are."
S552: "It's a three foot black rod with a rusty mark on an end."
S553: "A three foot black rod with a rusty mark on one end lies nearby."
S554: "




Welcome to Adventure!
(Please type HELP for instructions and information.)

"
S555: "It is now pitch dark. If you proceed you will likely fall into a pit."
S556: "You fell into a pit and broke every bone in your body!"
S557: "It looks as though you're dead. Well, seeing as how it's so close to
closing time anyway, I think we'll just call it a day."
S558: "Oh dear, you seem to have gotten yourself killed. I might be able to
help you out, but I've never really done this before. Do you want me to try to
reincarnate you?

"
S559: "You clumsy oaf, you've done it again! I don't know how long I can keep
this up. Do you want me to try reincarnating you again?

"
S560: "Now you've really done it! I'm out of orange smoke! You don't expect me
to do a decent reincarnation without any orange smoke, do you?

"
S561: "All right. But don't blame me if something goes wr...... 



--- POOF!! --- 

You are engulfed in a cloud of orange smoke. Coughing and gasping, you emerge
from the smoke and find that you're....
"
S562: "Okay, now where did I put my orange smoke?.... >POOF!< 

Everything disappears in a dense cloud of orange smoke.
"
S563: "Okay, if you're so smart, do it yourself! I'm leaving!"
S564: "About Adventure"
S565: "Instructions"
S566: "History"
S567: "Authenticity"
S568: "Did you know..."
S569: "I know of places, actions, and things. You can guide me using commands
that are complete sentences. To move, try commands like "enter," "east,"
"west," "north," "south," "up," "down," "enter building," "climb pole," etc.

"
S570: "I know about a few special objects, like a black rod hidden in the cave.
These objects can be manipulated using some of the action words that I know.
Usually you will need to give a verb followed by an object (along with
descriptive adjectives when desired), but sometimes I can infer the object from
the verb alone. Some objects also imply verbs; in particular, "inventory"
implies "take inventory", which causes me to give you a list of what you're
carrying. The objects have side effects; for instance, the rod scares the bird.

"
S571: "Many commands have abbreviations. For example, you can type "i" in place
of "inventory," "x object" instead of "examine object," etc.

"
S572: "Usually people having trouble moving just need to try a few more words.
Usually people trying unsuccessfully to manipulate an object are attempting
something beyond their (or my!) capabilities and should try a completely
different tack.

"
S573: "Note that cave passages turn a lot, and that leaving a room to the north
does not guarantee entering the next from the south.

"
S574: "If you want to end your adventure early, type "quit". To suspend your
adventure such that you can continue later, type "save," and to resume a saved
game, type "restore." To see how well you're doing, type "score". To get full
credit for a treasure, you must have left it safely in the building, though you
get partial credit just for locating it. You lose points for getting killed, or
for quitting, though the former costs you more. There are also points based on
how much (if any) of the cave you've managed to explore; in particular, there
is a large bonus just for getting in (to distinguish the beginners from the
rest of the pack), and there are other ways to determine whether you've been
through some of the more harrowing sections.

"
S575: "If you think you've found all the treasures, just keep exploring for a
while. If nothing interesting happens, you haven't found them all yet. If
something interesting *does* happen, it means you're getting a bonus and have
an opportunity to garner many more points in the master's section.

"
S576: "Perhaps the first adventurer was a mulatto slave named Stephen Bishop,
born about 1820: `slight, graceful, and very handsome'; a `quick, daring,
enthusiastic' guide to the Mammoth Cave in the Kentucky karst. The story of the
Cave is a curious microcosm of American history. Its discovery is a matter of
legend dating back to the 1790s; it is said that a hunter, John Houchin,
pursued a wounded bear to a large pit near the Green River and stumbled upon
the entrance. The entrance was thick with bats and by the War of 1812 was
intensively mined for guano, dissolved into nitrate vats to make saltpetre for
gunpowder. After the war prices fell; but the Cave became a minor side-show
when a dessicated Indian mummy was found nearby, sitting upright in a stone
coffin, surrounded by talismans. In 1815, Fawn Hoof, as she was nicknamed after
one of the charms, was taken away by a circus, drawing crowds across America (a
tour rather reminiscent of Don McLean's song `The Legend of Andrew McCrew').
She ended up in the Smithsonian but by the 1820s the Cave was being called one
of the wonders of the world, largely due to her posthumous efforts.

"
S577: "By the early nineteenth century European caves were big tourist
attractions, but hardly anyone visited the Mammoth, `wonder of the world' or
not. Nor was it then especially large (the name was a leftover from the miners,
who boasted of their mammoth yields of guano). In 1838, Stephen Bishop's owner
bought up the Cave. Stephen, as (being a slave) he was invariably called, was
by any standards a remarkable man: self-educated in Latin and Greek, he became
famous as the `chief ruler' of his underground realm. He explored and named
much of the layout in his spare time, doubling the known map in a year. The
distinctive flavour of the Cave's names -- half-homespun American,
half-classical -- started with Stephen: the River Styx, the Snowball Room,
Little Bat Avenue, the Giant Dome. Stephen found strange blind fish, snakes,
silent crickets, the remains of cave bears (savage, playful creatures, five
feet long and four high, which became extinct at the end of the last Ice Age),
centuries-old Indian gypsum workings and ever more cave. His 1842 map, drafted
entirely from memory, was still in use forty years later.

"
S578: "As a tourist attraction (and, since Stephen's owner was a
philanthropist, briefly a sanatorium for tuberculosis, owing to a hopeless
medical theory) the Cave became big business: for decades nearby caves were
hotly seized and legal title endlessly challenged. The neighbouring chain,
across Houchins Valley in the Flint Ridge, opened the Great Onyx Cave in 1912.
By the 1920s, the Kentucky Cave Wars were in full swing. Rival owners diverted
tourists with fake policemen, employed stooges to heckle each other's guided
tours, burned down ticket huts, put out libellous and forged advertisements.
Cave exploration became so dangerous and secretive that finally in 1941 the
U.S. Government stepped in, made much of the area a National Park and
effectively banned caving. The gold rush of tourists was, in any case, waning.

"
S579: "Convinced that the Mammoth and Flint Ridge caves were all linked in a
huge chain, explorers tried secret entrances for years, eventually winning
official backing. Throughout the 1960s all connections from Flint Ridge --
difficult and water-filled tunnels -- ended frustratingly in chokes of
boulders. A `reed-thin' physicist, Patricia Crowther, made the breakthrough in
1972 when she got through the Tight Spot and found a muddy passage: it was a
hidden way into the Mammoth Cave.

"
S580: "Under the terms of his owner's will, Stephen Bishop was freed in 1856,
at which time the cave boasted 226 avenues, 47 domes, 23 pits and 8 waterfalls.
He died a year later, before he could buy his wife and son. In the 1970s,
Crowther's muddy passage was found on his map.

"
S581: "The Mammoth Cave is huge, its full extent still a matter of speculation
(estimates vary from 300 to 500 miles). Although this game has often been
called "Colossal Cave", it is actually a simulation of the Bedquilt Cave
region. Here is Will Crowther's story of how it came about:

"
S582: ""I had been involved in a non-computer role-playing game called Dungeons
and Dragons at the time, and also I had been actively exploring in caves --
Mammoth Cave in Kentucky in particular. Suddenly, I got involved in a divorce,
and that left me a bit pulled apart in various ways. In particular I was
missing my kids. Also the caving had stopped, because that had become awkward,
so I decided I would fool around and write a program that was a re-creation in
fantasy of my caving, and also would be a game for the kids, and perhaps some
aspects of the Dungeons and Dragons that I had been playing.

"
S583: ""My idea was that it would be a computer game that would not be
intimidating to non-computer people, and that was one of the reasons why I made
it so that the player directs the game with natural language input, instead of
more standardized commands. My kids thought it was a lot of fun." [Quoted in
"Genesis II: Creation and Recreation with Computers", Dale Peterson (1983).]

"
S584: "Crowther's original FORTRAN program had five or so treasures, but no
formal scoring. The challenge was really to explore, though there was
opposition from for instance the snake. Like the real Bedquilt region,
Crowther's simulation has a map on about four levels of depth and is rich in
geological detail. A good example is the orange column which descends to the
Orange River Rock room (where the bird lives): the real column is of orange
travertine, a beautiful mineral found in wet limestone.

"
S585: "The game's language is loaded with references to caving, to `domes' and
`crawls'. A `slab room', for instance, is a very old cave whose roof has begun
to break away into sharp flakes which litter the floor in a crazy heap. The
program's use of the word `room' for all manner of caves and places seems
slightly sloppy in everyday English, but is widespread in American caving and
goes back as far as Stephen Bishop: so the Adventure-games usage of the word
`room' to mean `place' may even be bequeathed from him.

"
S586: "The game took its decisive step toward puzzle-solving when Don Woods, a
student at Stanford, debugged and expanded it. He tripled the number of
treasures and added the non-geological zones: everything from the Troll Bridge
onward, together with most of the antechambers on the Bedquilt level. All of
the many imitations and extensions of the original Adventure are essentially
based on Woods's 350-point edition. (Many bloated, corrupted or enhanced -- it
depends how you see it -- versions of the game are in Internet circulation, and
the most useful way to identify them is by the maximum attainable score. Many
versions exist scoring up to around the 400s and 500s, and one up to 1000.
Woods himself continues to release new versions of his game; most of the other
extenders haven't his talent.)

"
S587: "Although the game has veered away from pure simulation, a good deal of
it remains realistic. Cavers do turn back when their carbide lamps flicker;
there are indeed mysterious markings and initials on the cave walls, some left
by the miners, some by Bishop, some by 1920s explorers. Of course there isn't
an active volcano in central Kentucky, nor are there dragons and dwarves. But
even these embellishments are, in a sense, derived from tradition: like most of
the early role-playing games, `Adventure' owes much to J. R. R. Tolkien's `The
Hobbit', and the passage through the mountains and Moria of `The Lord of the
Rings' (arguably its most dramatic and atmospheric passage). Tolkien himself,
the most successful myth-maker of the twentieth century, worked from the
example of Icelandic, Finnish and Welsh sagas.

"
S588: "By 1977 tapes of `Adventure' were being circulated widely, by the
Digital user group DECUS, amongst others: taking over lunchtimes and weekends
wherever it went... but that's another story. (Tracy Kidder's fascinating book
`The Soul of a New Machine', a journalist's-eye-view of a mainframe computer
development group, catches it well.)

"
S589: "This is a copy at third or fourth hand: from Will Crowther's original to
Donald Woods's 350-point edition to Donald Ekman's PC port to David M.
Baggett's excellent TADS version (1993), to this.

"
S590: "This port is fairly close to the original. The puzzles, items and places
of Woods's original 350-point version are exactly those here.

"
S591: "I have added a few helpful messages, such as "This is a dead end.", here
and there: and restored some "initial position" messages from objects, such as
the (rather lame) 

  There is tasty food here.

from source files which are certainly early but of doubtful provenance. They
seem to sit well with the rest of the text.

"
S592: "The scoring system is the original, except that you no longer lose 4
points for quitting (since you don't get the score if you quit an Inform game,
this makes no difference) and, controversially, I award 5 points for currently
carrying a treasure, as some early 1980s ports did. The rank names are tidied
up a little. The only significant rule change is that one cannot use magic
words until their destinations have been visited.

"
S593: "The dwarves are simpler in their movements, but on the other hand I have
added a very few messages to make them interact better with the rest of the
game. The probabilities are as in the original game.

"
S594: "In the original one could type the name of a room to visit it: for the
sake of keeping the code small, I have omitted this feature, but with some
regrets. [RF: this feature incorporated into Release 9.]

"
S595: "The text itself is almost everywhere preserved intact, but I've
corrected some spelling and grammatical mistakes (and altered a couple of
utterly misleading and gnomic remarks). The instructions have been slightly
altered (for obvious reasons) but are basically as written.

"
S596: "A good source for details is David Baggett's source code, which is
circulated on the Internet."
S597: "The five dwarves have a 96% chance of following you, except into light,
down pits or when admiring themselves: and the nasty little knives are 9.5%
accurate.

"
S598: "Dragons burn up dwarves (perhaps because dwarves eat only coal).

"
S599: "The bear (who likes the volcano) is too heavy for the bridge... and you
can go back to the scene after being resurrected.

"
S600: "You can slip past the snake into the secret E/W canyon, 35% of the time
at any rate. And walking about in the dark is not all that gruesome: it carries
only a 25% risk of falling down a pit.

"
S601: "The vase does not like being immersed.

"
S602: "Shadowy figures can wave to each other.

"
S603: "Watering the hinges of the door rusts them up again.

"
S604: "When the cave closes, the grate is locked and the keys are thrown away,
creatures run off and the crystal bridge vanishes...

"
S605: "...and a completely useless hint is written on the giant oyster's shell
in the end game. (To make this hint slightly fairer, I've altered one word and
placed suggestions elsewhere in the game.)

"
S606: "The last lousy point can be won by... but no. That would be telling."
S607: "There is information provided on the following:

     Instructions for playing 
     A historical preface 
     How authentic is this edition?
"
S608: "There is information provided on the following:

     Instructions for playing 
     A historical preface 
     How authentic is this edition? 
     Did you know...
"
S609: "There is a loud explosion, and a twenty-foot hole appears in the far
wall, burying the dwarves in the rubble. You march through the hole and find
yourself in the main office, where a cheering band of friendly elves carry the
conquering adventurer off into the sunset."
S610: "There is a loud explosion, and a twenty-foot hole appears in the far
wall, burying the snakes in the rubble. A river of molten lava pours in through
the hole, destroying everything in its path, including you!"
S611: "There is a loud explosion, and you are suddenly splashed across the
walls of the room."
S612: "Been eating those funny brownies again?"
S613: "The nest of golden eggs has vanished!
"
S614: "

A large nest full of golden eggs suddenly appears out of nowhere!"
S615: "Good try, but that is an old worn-out magic word."
S616: "You'll have to be a bit more explicit than that."
S617: "write to"
S618: "read"
S619: "read"
S620: "send message"
S621: "increment"
S622: "decrement"
S623: "apply 'ofclass' for"
S624: ": 'create' can have 0 to 3 parameters only **]"
S625: "objectloop broken because the object "
S626: " was moved while the loop passed through it **]"
S627: ", which is not a valid ZSCII character code for output **]"
S628: "tried to print (address) on something not the "
S629: "tried to print (string) on something not a "
S630: "tried to print (object) on something not an "
S631: "give" or test "has" or "hasnt" with a non-attribute on the object "
S632: ", but it is longer than 2 bytes so you cannot use ".""
S633: "recreate"
S634: "destroy"
S635: "copy"
S636: "copy"
S637: "set"
S638: "read"
S639: "<unknown attribute>"
S640: "name"
S641: "create"
S642: "recreate"
S643: "destroy"
S644: "remaining"
S645: "copy"
S646: "call"
S647: "print"
S648: "print_to_array"
S649: "animate"
S650: "absent"
S651: "clothing"
S652: "concealed"
S653: "container"
S654: "door"
S655: "edible"
S656: "enterable"
S657: "general"
S658: "light"
S659: "lockable"
S660: "locked"
S661: "moved"
S662: "on"
S663: "open"
S664: "openable"
S665: "proper"
S666: "scenery"
S667: "scored"
S668: "static"
S669: "supporter"
S670: "switchable"
S671: "talkable"
S672: "transparent"
S673: "visited"
S674: "workflag"
S675: "worn"
S676: "male"
S677: "female"
S678: "neuter"
S679: "pluralname"
S680: "before"
S681: "after"
S682: "life"
S683: "n_to"
S684: "s_to"
S685: "e_to"
S686: "w_to"
S687: "ne_to"
S688: "nw_to"
S689: "se_to"
S690: "sw_to"
S691: "u_to"
S692: "d_to"
S693: "in_to"
S694: "out_to"
S695: "door_to"
S696: "with_key"
S697: "door_dir"
S698: "invent"
S699: "plural"
S700: "add_to_scope"
S701: "list_together"
S702: "react_before"
S703: "react_after"
S704: "grammar"
S705: "orders"
S706: "initial"
S707: "when_open"
S708: "when_closed"
S709: "when_on"
S710: "when_off"
S711: "description"
S712: "describe"
S713: "article"
S714: "cant_go"
S715: "found_in"
S716: "time_left"
S717: "number"
S718: "time_out"
S719: "daemon"
S720: "each_turn"
S721: "capacity"
S722: "short_name"
S723: "short_name_indef"
S724: "parse_name"
S725: "articles"
S726: "inside_description"
S727: "play"
S728: "compass_look"
S729: "Look"
S730: "Answer"
S731: "Ask"
S732: "Attack"
S733: "Blow"
S734: "Burn"
S735: "Buy"
S736: "Climb"
S737: "Close"
S738: "CommandsOff"
S739: "CommandsOn"
S740: "CommandsRead"
S741: "Consult"
S742: "Cut"
S743: "Dig"
S744: "Disrobe"
S745: "Drink"
S746: "Drop"
S747: "Eat"
S748: "EmptyT"
S749: "Enter"
S750: "Examine"
S751: "Exit"
S752: "Fill"
S753: "FullScore"
S754: "GetOff"
S755: "Give"
S756: "Go"
S757: "Insert"
S758: "Inv"
S759: "Jump"
S760: "JumpOver"
S761: "Tie"
S762: "Kiss"
S763: "Listen"
S764: "LMode1"
S765: "LMode2"
S766: "LMode3"
S767: "Lock"
S768: "LookUnder"
S769: "Mild"
S770: "No"
S771: "Yes"
S772: "NotifyOff"
S773: "NotifyOn"
S774: "Objects"
S775: "Open"
S776: "Places"
S777: "Pray"
S778: "Pronouns"
S779: "Pull"
S780: "Push"
S781: "Turn"
S782: "PushDir"
S783: "PutOn"
S784: "Quit"
S785: "Remove"
S786: "Restart"
S787: "Restore"
S788: "Rub"
S789: "Save"
S790: "Score"
S791: "ScriptOff"
S792: "ScriptOn"
S793: "Search"
S794: "Set"
S795: "SetTo"
S796: "Show"
S797: "Sing"
S798: "Sleep"
S799: "Smell"
S800: "Sorry"
S801: "Squeeze"
S802: "Strong"
S803: "Swim"
S804: "Swing"
S805: "SwitchOff"
S806: "SwitchOn"
S807: "Take"
S808: "Taste"
S809: "Tell"
S810: "Think"
S811: "ThrowAt"
S812: "Touch"
S813: "Unlock"
S814: "VagueGo"
S815: "Verify"
S816: "Wait"
S817: "Wake"
S818: "WakeOther"
S819: "Wave"
S820: "WaveHands"
S821: "Wear"
S822: "before_implicit"
S823: "parse_input"
S824: "AskTo"
S825: "AskFor"
S826: "RunAll"
S827: "ext_initialise"
S828: "GiveR"
S829: "ShowR"
S830: "begin_action"
S831: "end_turn_sequence"
S832: "RunUntil"
S833: "RunWhile"
S834: "ext_messages"
S835: "Transfer"
S836: "nodwarf"
S837: "treasure_found"
S838: "multitude"
S839: "depositpoints"
S840: "Teleport"
S841: "Xyzzy"
S842: "Plugh"
S843: "Count"
S844: "power_remaining"
S845: "replace_batteries"
S846: "have_been_used"
S847: "Empty"
S848: "Release"
S849: "Catch"
S850: "Plover"
S851: "height"
S852: "Water"
S853: "Oil"
S854: "is_being_attacked"
S855: "has_been_opened"
S856: "has_caught_treasure"
S857: "is_following_you"
S858: "is_friendly"
S859: "is_near_bear"
S860: "has_thrown_axe"
S861: "Kick"
S862: "has_been_spotted"
S863: "has_stolen_something"
S864: "wake_up"
S865: "Help"
S866: "Version"
S867: "GoIn"
S868: "InvTall"
S869: "InvWide"
S870: "Off"
S871: "On"
S872: "Blast"
S873: "BlastWith"
S874: "Fee"
S875: "Fie"
S876: "Foe"
S877: "Foo"
S878: "OldMagic"
S879: "Use"
S880: "LetGo"
S881: "Receive"
S882: "ThrownAt"
S883: "Order"
S884: "TheSame"
S885: "PluralFound"
S886: "ListMiscellany"
S887: "Miscellany"
S888: "Prompt"
S889: "NotUnderstood"
S890: "UUID_ARRAY"
S891: "the_timers"
S892: "inputobjs"
S893: "multiple_object"
S894: "kept_results"
S895: "pattern"
S896: "pattern2"
S897: "line_ttype"
S898: "line_tdata"
S899: "line_token"
S900: "match_list"
S901: "match_classes"
S902: "match_scores"
S903: "buffer"
S904: "parse"
S905: "parse2"
S906: "buffer2"
S907: "buffer3"
S908: "oops_workspace"
S909: "PowersOfTwo_TB"
S910: "LanguagePronouns"
S911: "LanguageDescriptors"
S912: "LanguageNumbers"
S913: "LanguageArticles"
S914: "LanguageGNAsToArticles"
S915: "StorageForShortName"
S916: "task_scores"
S917: "task_done"

[End of text]

[End of file]
